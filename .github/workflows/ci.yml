name: CI - Run Scraper Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    env:
      GH_API_TOKEN: ${{ secrets.GH_API_TOKEN }}
      JIRA_SERVER: https://issues.redhat.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Install and start Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          if [ "$(ollama list | wc -l)" -gt 1 ]; then
              echo "Models are available."
          else
              ollama pull ${{ env.LLM_MODEL }}
          fi
          fuser -k 11434/tcp || true
          nohup ollama serve &

          # Wait for Ollama to be ready
          for i in {1..10}; do
            curl -s http://localhost:11434/api/tags && break
            echo "Waiting for Ollama to start..."
            sleep 3
          done

      - name: Create .env file
        run: |
          echo "DATA_DIR=${{ env.DATA_DIR }}" >> .env
          echo "DEBUG=${{ env.DEBUG }}" >> .env
          echo "SOURCE_PAGE=${{ env.SOURCE_PAGE }}" >> .env
          echo "GITHUB_API_URL=${{ env.GITHUB_API_URL }}" >> .env
          echo "GITHUB_SERVER=${{ env.GITHUB_SERVER }}" >> .env
          echo "JIRA_SERVER=${{ env.JIRA_SERVER }}" >> .env
          echo "LLM_API_URL=${{ env.LLM_API_URL }}" >> .env
          echo "CONFIG_FILE_PATH=${{ env.CONFIG_FILE_PATH }}" >> .env
          echo 'SOURCES="[\"JIRA\", \"GITHUB\"]"' >> .env
          echo "GH_API_TOKEN=${{ env.GH_API_TOKEN }}" >> .env


      - name: Run tests
        run: |
          python -m unittest discover -s tests
