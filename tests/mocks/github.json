[
  {
    "id": "0ae129b4768d2e10e0ca215d272e207bfae963a3",
    "type": "commit",
    "message": "Merge pull request 8 from openshift-bot/art-consistency-openshift-4.19-ose-azure-service-operator OCPBUGS-55334: Updating ose-azure-service-operator-container image to be consistent with ART for 4.19"
  },
  {
    "id": "088dcaf73f980b977ef4f5d2f99e2a93deb87eef",
    "type": "commit",
    "message": "Merge pull request 24 from sjenning/output-diff hack: display diff on verify-mod-tidy failure"
  },
  {
    "id": "3f4542ecd17fb0e47da4c6d9bceb076b98fb314b",
    "type": "commit",
    "message": "Merge pull request 43 from openshift-bot/art-consistency-openshift-4.17-ose-kubevirt-cloud-controller-manager OCPBUGS-34157: Updating ose-kubevirt-cloud-controller-manager-container image to be consistent with ART for 4.17"
  },
  {
    "id": "a336f0b5f7ee99c418aaab3d511707bd0064bd56",
    "type": "commit",
    "message": "Merge pull request 281 from praveenkumar/geniso OCPBUGS-26046: Replace genisoimage with xorriso in 4.15 to allow rhel9 bump"
  },
  {
    "id": "391c1b0361e17c5718508810f0bdb6ff66ae6e81",
    "type": "commit",
    "message": "Merge pull request 57 from bpickard22/update-owners NP-1041:Update owners"
  },
  {
    "id": "1db726a940d5ec150fd185a215f1368990653082",
    "type": "commit",
    "message": "Merge pull request 132 from openshift-bot/art-consistency-openshift-4.16-ose-ovirt-csi-driver OCPBUGS-24868: Updating ose-ovirt-csi-driver-container image to be consistent with ART"
  },
  {
    "id": "be084e2ed8e668592fd6b084a87b5183b0aa546a",
    "type": "commit",
    "message": "Merge pull request 1815 from openshift-cherrypick-robot/cherry-pick-1814-to-release-4.19 release-4.19 NO-JIRA: Remove kernel-rt-kvm for cs9 and cs10"
  },
  {
    "id": "7527",
    "type": "pullRequest",
    "title": "MGMT-20324: Fix day2 add hosts with P/Z CPU architectures",
    "body": "Disable feature validation when creating and updating assisted objects due to an error when user is trying to add hosts on day2 with P/Z arch List all the issues related to this PR - New Feature !-- new functionality -- - Enhancement !-- refactor, code changes, improvement, that won't add new features -- - x Bug fix - Tests - Documentation - CI/CD !-- Notice that changes for Dockerfiles/Jenkinsfiles aren't tested in CI due to a known bug. -- What environments does this code impact? - Automation (CI, tools, etc) - x Cloud - Operator Managed Deployments - None How was this code tested? !-- Please, select one or more if needed: -- - assisted-test-infra environment - dev-scripts environment - Reviewer's test appreciated - Waiting for CI to do a full test run - x Manual (Elaborate on how it was tested) - No tests needed /cc @gamli75"
  },
  {
    "id": "7448",
    "type": "pullRequest",
    "title": "MGMT-20207: avoid adding system CA bundle to AdditionalTrustBundle",
    "body": "When generating the install config, it should not include the entire system CA bundle. I.e. when setting the AdditionalTrustBundle1. However, when using a mirror regsitry (e.g. with MirrorRegistryRef2 in ASC), the installConfigBuilder is adding the content of tls-ca-bundle.pem3. This pem file is created4 by ASC controller, and includes the full system CA bundle since the bundle5 is injected into 'cluster-trusted-ca-bundle'. Therefore, the suggested solution is to create a separate pem file just for the certificates specified in MirrorRegistryRef. I.e. generate a new 'user-registry-ca-bundle.pem' file, that will be included as part of AdditionalTrustBundle. These certificates will propagate into the 'user-ca-bundle' CM during cluster installation. This will ensure that 'user-ca-bundle' CM indeed includes only custom certificates mandatory for the user, instead of the system CA bundle. Note: as backwards compatibility, for flows like ABI, we keep a fallback to the current behaviour (i.e. include 'tls-ca-bundle.pem' only when 'user-registry-ca-bundle.pem' doesn't exist). 1 2 3 4 5 !-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. You can refer to Kubernetes community documentation on writing good commit messages, which provides good tips and ideas. Some PRs address specific issues. Please, refer to the CONTRIBUTING documentation for more information on how to link a PR to an existing issue. It's recommended to take a few extra minutes to provide more information about how this code was tested. Here are some questions that may be worth answering: - Should this PR be tested by the reviewer? - Is this PR relying on CI for an e2e test run? - Should this PR be tested in a specific environment? - Any logs, screenshots, etc that can help with the review process? -- List all the issues related to this PR - New Feature !-- new functionality -- - Enhancement !-- refactor, code changes, improvement, that won't add new features -- - x Bug fix - Tests - Documentation - CI/CD !-- Notice that changes for Dockerfiles/Jenkinsfiles aren't tested in CI due to a known bug. -- What environments does this code impact? - Automation (CI, tools, etc) - Cloud - x Operator Managed Deployments - None How was this code tested? !-- Please, select one or more if needed: -- - assisted-test-infra environment - x dev-scripts environment - Reviewer's test appreciated - Waiting for CI to do a full test run - Manual (Elaborate on how it was tested) - No tests needed Checklist - x Title and description added to both, commit and PR. - x Relevant issues have been associated (see CONTRIBUTING guide) - x This change does not require a documentation update (docstring, `docs`, README, etc) - x Does this change include unit-tests (note that code changes require unit-tests) Reviewers Checklist - Are the title and description (in both PR and commit) meaningful and clear? - Is there a bug required (and linked) for this change? - Should this PR be backported? Kubernetes community documentation: CONTRIBUTING:"
  },
  {
    "id": "7506",
    "type": "pullRequest",
    "title": "MGMT-20009: Change OCP 4.19 to the default version",
    "body": "!-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. You can refer to Kubernetes community documentation on writing good commit messages, which provides good tips and ideas. Some PRs address specific issues. Please, refer to the CONTRIBUTING documentation for more information on how to link a PR to an existing issue. It's recommended to take a few extra minutes to provide more information about how this code was tested. Here are some questions that may be worth answering: - Should this PR be tested by the reviewer? - Is this PR relying on CI for an e2e test run? - Should this PR be tested in a specific environment? - Any logs, screenshots, etc that can help with the review process? -- List all the issues related to this PR - New Feature !-- new functionality -- - Enhancement !-- refactor, code changes, improvement, that won't add new features -- - Bug fix - Tests - Documentation - x CI/CD !-- Notice that changes for Dockerfiles/Jenkinsfiles aren't tested in CI due to a known bug. -- What environments does this code impact? - x Automation (CI, tools, etc) - Cloud - Operator Managed Deployments - None How was this code tested? !-- Please, select one or more if needed: -- - assisted-test-infra environment - dev-scripts environment - Reviewer's test appreciated - x Waiting for CI to do a full test run - Manual (Elaborate on how it was tested) - No tests needed Checklist - x Title and description added to both, commit and PR. - x Relevant issues have been associated (see CONTRIBUTING guide) - x This change does not require a documentation update (docstring, `docs`, README, etc) - Does this change include unit-tests (note that code changes require unit-tests) Reviewers Checklist - Are the title and description (in both PR and commit) meaningful and clear? - Is there a bug required (and linked) for this change? - Should this PR be backported? Kubernetes community documentation: CONTRIBUTING:"
  },
  {
    "id": "7491",
    "type": "pullRequest",
    "title": "NO-ISSUE: Change node-maintenance operator namespace to avoid conflict with node-healthcheck operator",
    "body": "Fix ignition creation conflict between `node-maintenance` operator and `node-healthcheck` operator by changing `node-maintenance` namespace ``` Mar 31 13:13:04 master-0 service2580: time=\"2025-03-31T13:13:04Z\" level=error msg=\"error running openshift-install create ignition-configs, stdout: level=info msg=Consuming Certificate (admin-kubeconfig-signer) from target directory level=info msg=Consuming Certificate (kube-apiserver-localhost-signer) from target directory level=info msg=Consuming Certificate (kube-apiserver-service-network-signer) from target directory level=info msg=Consuming Certificate (kube-apiserver-lb-signer) from target directory level=fatal msg=failed to fetch Bootstrap Ignition Config: failed to fetch dependency of \\\"Bootstrap Ignition Config\\\": failed to generate asset \\\"CVO Ignore\\\": multiple manifests for group kind Namespace namespace name openshift-workload-availability: openshift/50_node_healthcheck_namespace.yaml, openshift/50_node_maintenance_namespace.yaml \" func=\"github.com/openshift/assisted-service/internal/ignition.(installerGenerator).runCreateCommand\" file=\"/src/internal/ignition/installmanifests.go:1238\" cluster_id=c548807c-3044-4e44-a392-8697629e79a5 error=\"exit status 1\" go-id=521 request_id= ``` !-- Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. You can refer to Kubernetes community documentation on writing good commit messages, which provides good tips and ideas. Some PRs address specific issues. Please, refer to the CONTRIBUTING documentation for more information on how to link a PR to an existing issue. It's recommended to take a few extra minutes to provide more information about how this code was tested. Here are some questions that may be worth answering: - Should this PR be tested by the reviewer? - Is this PR relying on CI for an e2e test run? - Should this PR be tested in a specific environment? - Any logs, screenshots, etc that can help with the review process? -- List all the issues related to this PR - New Feature !-- new functionality -- - Enhancement !-- refactor, code changes, improvement, that won't add new features -- - x Bug fix - Tests - Documentation - CI/CD !-- Notice that changes for Dockerfiles/Jenkinsfiles aren't tested in CI due to a known bug. -- What environments does this code impact? - Automation (CI, tools, etc) - x Cloud - x Operator Managed Deployments - None How was this code tested? !-- Please, select one or more if needed: -- - x assisted-test-infra environment - dev-scripts environment - Reviewer's test appreciated - x Waiting for CI to do a full test run - Manual (Elaborate on how it was tested) - No tests needed Checklist - x Title and description added to both, commit and PR. - x Relevant issues have been associated (see CONTRIBUTING guide) - x This change does not require a documentation update (docstring, `docs`, README, etc) - Does this change include unit-tests (note that code changes require unit-tests) Reviewers Checklist - Are the title and description (in both PR and commit) meaningful and clear? - Is there a bug required (and linked) for this change? - Should this PR be backported? Kubernetes community documentation: CONTRIBUTING:"
  },
  {
    "id": "7070",
    "type": "pullRequest",
    "title": "NO-ISSUE: fixing late binding",
    "body": "- removing `wait` which cause early failures List all the issues related to this PR - New Feature !-- new functionality -- - Enhancement !-- refactor, code changes, improvement, that won't add new features -- - x Bug fix - Tests - Documentation - CI/CD !-- Notice that changes for Dockerfiles/Jenkinsfiles aren't tested in CI due to a known bug. -- What environments does this code impact? - Automation (CI, tools, etc) - Cloud - Operator Managed Deployments - x None How was this code tested? !-- Please, select one or more if needed: -- - assisted-test-infra environment - dev-scripts environment - Reviewer's test appreciated - Waiting for CI to do a full test run - Manual (Elaborate on how it was tested) - x No tests needed Checklist - Title and description added to both, commit and PR. - Relevant issues have been associated (see CONTRIBUTING guide) - This change does not require a documentation update (docstring, `docs`, README, etc) - Does this change include unit-tests (note that code changes require unit-tests) Reviewers Checklist - Are the title and description (in both PR and commit) meaningful and clear? - Is there a bug required (and linked) for this change? - Should this PR be backported? Kubernetes community documentation: CONTRIBUTING:"
  },
  {
    "id": "1113",
    "type": "pullRequest",
    "title": "MGMT-20534: Move getting Node replicas into waitForNodes",
    "body": "Originally, GetControlPlaneReplicas and GetArbiterReplicas were called once outside a retry. These functions can fail since they call the spoke cluster's kube api server, which most likely is not ready by the time the installer is checking for these Nodes. This leads to the cluster prematurely failing because of the error returned from these functions. This moves the functions into the retry block that waitForNodes already uses so that the whole install doesn't fail when the spoke's kube apiserver is not ready yet. --- Failures encountered in slack thread: Original code added here"
  },
  {
    "id": "1106",
    "type": "pullRequest",
    "title": "MGMT-20479: Update assisted-installer to allow TNA Clusters",
    "body": "Currently the assisted-installer running on the bootstrap waits for 2 control plane nodes to be ready, but with TNA it's possible that there will only be 1 control plane node (without the bootstrap). On clusters like that we need to wait for only 1 control plane node to be ready, and then wait for at least 1 arbiter node to be ready. Closes MGMT-20479("
  },
  {
    "id": "1112",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `b9e9209` - `19a7c95` quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks `153ef03` - `3a1b328` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `c00535e` - `d5e2a69` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1105",
    "type": "pullRequest",
    "title": "NO-ISSUE: Apply konflux migration"
  },
  {
    "id": "1103",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `4d5ab47` - `70f2fe8` `57a4a8b` - `b9e9209` `712afcf` - `7c73e2b` `62c835a` - `11b1684` `aeb4ecc` - `8b58c4f` `5d63b92` - `eb8136b` `88367f7` - `0761f97` `38660e6` - `aac8127` `6ad0ae8` - `c4f87c4` `0.2` - `0.3` `0.1` - `0.2` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1095",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `61c90b1` - `4973fa4` quay.io/konflux-ci/tekton-catalog/task-build-image-index `1d26a89` - `57a4a8b` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check `9709088` - `88367f7` quay.io/konflux-ci/tekton-catalog/task-init `55a4ff2` - `6ad0ae8` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `0444128` - `07cb092` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "957",
    "type": "pullRequest",
    "title": "OCPBUGS-45584: Updating ose-agent-installer-csr-approver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-agent-installer-csr-approver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-agent-installer-csr-approver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1090",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `468708e` - `1d26a89` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `c0798ff` - `7b80f5a` quay.io/konflux-ci/tekton-catalog/task-sast-coverity-check-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1076",
    "type": "pullRequest",
    "title": "MGMT-20153: Fix ostree race between node-image-pull and installing to rootfs",
    "body": "`ostree container unencapsulate` panics if the image passed to it is already present in the repo. Use `ostree container image pull` instead. Additionally attempting to pull the same os image as the `node-image-pull` service at the same time also can lead to errors writing to the repo. So make `startBootstrap` run synchronously with the rest of `InstallNode` to ensure we are done applying the node image before attempting to pull the image for install. Resolves"
  },
  {
    "id": "1080",
    "type": "pullRequest",
    "title": "OCPBUGS-53720: Bump jwt to 4.5.2",
    "body": "Upgrading to github.com/golang-jwt/jwt/v4 v4.5.2. Commands Run : go get github.com/golang-jwt/jwt/v4 go mod tidy && go mod vendor"
  },
  {
    "id": "1082",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `e1d365c` - `61c90b1` quay.io/konflux-ci/tekton-catalog/task-build-image-index `58fb95e` - `468708e` quay.io/konflux-ci/tekton-catalog/task-clair-scan `c30c126` - `62c835a` quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks `2f59e9a` - `737682d` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `f9e6e6a` - `55a4ff2` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `b874e49` - `e88c8eb` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `540f585` - `a1cb59e` quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta `ea2316b` - `9fe82c9` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1081",
    "type": "pullRequest",
    "title": "MGMT-19421: remove all references of HighAvailabilityMode and the command line argument --high-availability-mode",
    "body": "MGMT-19421( remove all references of HighAvailabilityMode and the command line argument --high-availability-mode"
  },
  {
    "id": "1064",
    "type": "pullRequest",
    "title": "MGMT-20149: Add required SAST tasks for Konflux",
    "body": "Tasks will become mandatory the 1st of April"
  },
  {
    "id": "1073",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove Paul account from OWNERS",
    "body": "Paul has left Assisted Installer team"
  },
  {
    "id": "1066",
    "type": "pullRequest",
    "title": "master MGMT-20198: CVE-2025-27144 Bump github.com/go-jose/go-jose/v4 to v4.0.5",
    "body": "MGMT-20198( CVE-2025-27144 Bump github.com/go-jose/go-jose/v4 to v4.0.5"
  },
  {
    "id": "1057",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/golang/glog from 1.2.0 to 1.2.4",
    "body": "Bumps github.com/golang/glog( from 1.2.0 to 1.2.4. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v1.2.4/h2 h2What's Changed/h2 ul liFail if log file already exists by a href=\" in a href=\" ul liglog: Don't try to create/rotate a given syncBuffer twice in the same second/li liglog: introduce createInDir function as in internal version/li liglog: have createInDir fail if the file already exists/li /ul /li /ul pstrongFull Changelog/strong: a href=\" h2v1.2.3/h2 h2What's Changed/h2 ul liglog: check that stderr is valid before using it by default by a href=\" in a href=\" liglog: fix typo by a href=\" in a href=\" /ul pstrongFull Changelog/strong: a href=\" h2v1.2.2/h2 h2What's Changed/h2 ul liglog: avoid calling user.Current() on windows by a href=\" in a href=\" /ul pstrongFull Changelog/strong: a href=\" h2v1.2.1/h2 h2What's Changed/h2 ul liglog: don't hold mutex when sync'ing by a href=\" in a href=\" /ul pstrongFull Changelog/strong: a href=\" /blockquote /details details summaryCommits/summary ul lia href=\" glog: have createInDir fail if the file already exists/li lia href=\" glog: introduce createInDir function as in internal version/li lia href=\" glog: Don't try to create/rotate a given syncBuffer twice in the same second/li lia href=\" glog: fix typo (a href=\" lia href=\" glog: check that stderr is valid before using it by default (a href=\" lia href=\" glog: avoid calling user.Current() on windows (a href=\" lia href=\" glog: don't hold mutex when sync'ing (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "1053",
    "type": "pullRequest",
    "title": "OCPBUGS-52704: Bump crpto to v0.33.openshift.1",
    "body": "Replace x/crypto with the openshift fork containing the fix. (The upstream fix in 0.27.0 requires golang 1.23, and bumping in this release would be Hard\u2122. Using tag named v0.33.openshift.1"
  },
  {
    "id": "1051",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `5e5f290` - `e1d365c` quay.io/konflux-ci/tekton-catalog/task-build-image-index `3e01d38` - `58fb95e` quay.io/konflux-ci/tekton-catalog/task-clair-scan `7595ba0` - `c30c126` quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check `944e769` - `9709088` quay.io/konflux-ci/tekton-catalog/task-init `752230a` - `786a660` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `5bc6129` - `d00d159` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `183b28f` - `ea2316b` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1049",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fix Konflux configuration for ocm-2.14"
  },
  {
    "id": "1048",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `0c2270d` - `24feb32` quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta `f636f2c` - `c45aae9` quay.io/konflux-ci/tekton-catalog/task-clamav-scan `ced089b` - `a0a5b05` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `b78123a` - `5bc6129` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `945a7c9` - `04f15cb` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1042",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `68a4491` - `a3f3a4d` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1027",
    "type": "pullRequest",
    "title": "MGMT-19421: phase 1 of replacing the refference HighAvailabilityMode with ControlPlaneCount",
    "body": "phase 1 of replacing the refference HighAvailabilityMode with ControlPlaneCount in the first stage it still accepst --high-availability-mode as a command line argument, but it is being converted to ControlPlaneCount in the following maner: - ControlPlaneCount is being set to 3 if --high-availability-mode is set to full - ControlPlaneCount is being set ot 1 if --high-availability-mode is set to none After the phase 1 of assisted-installer-agent is being merged --high-availability-mode will be fully removed from the valid parameters."
  },
  {
    "id": "1034",
    "type": "pullRequest",
    "title": "MGMT-19950: Modify Konflux YAMLs to ocm-2.14",
    "body": "Now downstream images are built with Kofnflux, therefore we change the references in the master branch to ocm-2.14."
  },
  {
    "id": "1031",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `5b8e825` - `68a4491` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `546e0a9` - `752230a` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `3bf6d1b` - `e603b3d` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1025",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `fa7aa88` - `5e5f290` `09344e6` - `0c2270d` `0.3` - `0.4` `0.4` - `0.5` `f72fcca` - `36d98ab` `4c6712d` - `63eb4a4` `0.1` - `0.2` `9b0138a` - `ee189dd` `b15a199` - `ed77784` `0.1` - `0.2` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1024",
    "type": "pullRequest",
    "title": "MGMT-19819: Add the commit reference from which the image is built to the image",
    "body": "Currently, in most of assisted installer components CI images we don't have a way to tell from which commit reference the image was built. Since We use an image stream for each component, and we import these streams from one CI component configuration to another, we might end up with images to are not up-to-date. In this case, we would like to have the ability to check if this is actually the case."
  },
  {
    "id": "1023",
    "type": "pullRequest",
    "title": "MGMT-19815: Update tekton pipelines to point to new components",
    "body": "In order to simplify the release process in konflux for our product, we want related components to share a single application. To make that change as simple as possible, this PR changes the existing pipelines to point to the new components while keeping everything we already configured. Part-of MGMT-19815("
  },
  {
    "id": "1018",
    "type": "pullRequest",
    "title": "MGMT-19101: Respect installer args",
    "body": "This PR adds support to the existing rootfs install strategy for some of the `coreos-installer` args that we allow users to specify. Specifically `--append-karg`, `--remove-karg`, and `--copy-network`. For the karg ones, the corresponding arg is added to the ostree command args which handles editing the boot loader configs. For the copy network, the network manager keyfiles are copied into `/boot/coreos-firstboot-network` which is the same thing `coreos-installer` does when provided `--copy-network` Resolves"
  },
  {
    "id": "1017",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `46f4471` - `fa7aa88` quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta `907f11c` - `4584647` quay.io/konflux-ci/tekton-catalog/task-clamav-scan `18c1c26` - `b4e6d38` quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check `b76b563` - `4c6712d` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `6cfb72a` - `fcd9016` quay.io/konflux-ci/tekton-catalog/task-sast-coverity-check-oci-ta `7553ec6` - `9b0138a` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `bd191e5` - `18241f9` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1014",
    "type": "pullRequest",
    "title": "MGMT-19621: Fix Race condition between the OLM operators monitor to the cluster installation monitor",
    "body": "Introduction The purpose of this PR is to resolve a bug caused by a race condition between the main thread of assisted installer controller and a goroutine responsible for monitoring the status of OLM operators. When the main thread reaches the stage where cluster installation has been deemed complete it will cancel the contexts of any Go routines it spawned, including the OLM operator monitor. We use cache upon the status of monitored OLM operators and this is relevant to this bug. Upon shutdown, this monitor thread performs final checks of the installed operators, this final check depends on a cached result, which, coupled with a bug that causes the operator installation status to be inconsistent with cache content, leads to a scenario where the installer will report a complete installation while also reporting incomplete operator installation. The solution is twofold, Firstly to fix the bug that causes the inconsistent installation status Secondly, as a precaution, anywhere we are taking our 'last chance' to obtain the status of the operators, this call should not depend upon the cache. This will ensure that we make an 'up to date' assessment of the situation. More Details The controller flow runs in parallel Go routines executing different actions. Two key routines are: - Cluster Installation Monitor: Every minute, it queries assisted-service to check if the cluster installation is finished by evaluating its status - - OLM Operators Monitor: Every 30 seconds, it checks the current status of each monitored operator resource. When any operator status changes, it updates assisted-service - and It is important to note that the controller uses a cache for querying cluster's monitored operators, with 20 seconds TTL. The issue lies in the predicate logic - This causes a scenario where there is always a 30-second delay between the time all operators are ready (and the assisted-service is updated accordingly) and when the function acknowledges the update. This leads to the possibility of the following sequence: 1. The operators monitor updates assisted-service to indicate all operators are available, but it won't exit until the next cycle (30 seconds later). 2. Before the cache data becomes stale (20 seconds), the cluster installation monitor runs, querying assisted-service, which has changed its status from finalizing to installed (this happens when all hosts and operators are installed, and the state machine progresses). 3. The cluster monitor detects the installation as complete and cancels the controller context across all threads - 4. The operators monitor receiving the cancel context, and attempts to update all operators which are still in `progressing` status as `failed` in assisted-service - and 5. The controller is getting the last updated operator back in the list of `progressing` operators as the cache contains data from the last query - 6. The controller updates assisted-service with the operator status as failed - 7. The result is a cluster marked as installed with failed operators. This PR resolves the issue by several steps: 1. Avoid using cache in queries which are not part of waiting predicates, as they occur once and stale data might have irreversible impact. 2. moving the check for non-ready operators inside the predicate after the list reduction, thereby eliminating the 30-second delay. This change ensures that the moment the cluster is ready in assisted-service, the operators monitor acknowledges it immediately. 3. Adds a log to increase observability."
  },
  {
    "id": "1003",
    "type": "pullRequest",
    "title": "MGMT-19100: Install to the current boot device when CoreosImage is set",
    "body": "This indicates the container image that should be installed and booted for the installed host. It also indicates that we should install to the currently booted disk, in a new stateroot, rather than expecting a device path. cc @tsorya @rccrdpccl @eranco74"
  },
  {
    "id": "899",
    "type": "pullRequest",
    "title": "COS-3013: overlay node image before bootstrapping if necessary",
    "body": "As per we're trying to get rid of all OpenShift-versioned components from the bootimages. This means that there will no longer be oc, kubelet, or crio binaries for example, which bootstrapping obviously relies on. To adapt to this, the OpenShift installer now ships a new `node-image-overlay.service` in its bootstrap Ignition config. This service takes care of pulling down the node image and overlaying it, effectively updating the system to the node image version. Here, we accordingly also adapt assisted-installer so that we run `node-image-overlay.service` before starting e.g. `kubelet.service` and `bootkube.service`. See also:"
  },
  {
    "id": "1013",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update buildah image to fix a bug with SBOM",
    "body": "The current buildah images in the tekton pipelines accidentally create the SBOM with CycloneDX 1.6 which causes a violation in the ECP check. These new images set the CycloneDX to 1.5 as the ECP check expects."
  },
  {
    "id": "1010",
    "type": "pullRequest",
    "title": "MGMT-19748: Configure snyk ignore",
    "body": "In our konflux build pipelines, there is a task to check snyk to warn us on potential code vulnerabilities. However there are some issues it find that we don't care about, so we need to add the problematic files as a list for snyk to ignore. Part-of MGMT-19748("
  },
  {
    "id": "991",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `0767c11` - `46f4471` `37328a4` - `09344e6` `0.2` - `0.3` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "1009",
    "type": "pullRequest",
    "title": "MGMT-19734: Add renovate config to limit number of PRs",
    "body": "Add renovate config to limiot number of konflux PR With that config, PR should be automerged when tests succeeded"
  },
  {
    "id": "1008",
    "type": "pullRequest",
    "title": "NO-ISSUE: Make konflux builds for downstream images to be multi-arch",
    "body": "Currently downstream images are only built for x64, but we need to build for arm, s390x and ppc64le as well. These downstream images are going to be used by SaaS."
  },
  {
    "id": "1004",
    "type": "pullRequest",
    "title": "MGMT-19645: Configure a few things for releasing in konflux",
    "body": "Configure the following things for releasing in konflux: - Hermetic builds - Pushing source image. - Adding label io.openshift.tags. - Setting up snyk Part-of MGMT-19645("
  },
  {
    "id": "1002",
    "type": "pullRequest",
    "title": "MGMT-19381: Change downstream base images to rhel9.4 instead of ubi9",
    "body": "Currently our base images use ubi9 and MintMaker wants to upgrade it to 9.5, because MintMaker looks at the repo and tries to upgrade to the newest tag. This changes the base image to use a repo that is just for rhel9.4. Part-of MGMT-19381("
  },
  {
    "id": "1001",
    "type": "pullRequest",
    "title": "MGMT-19595: Push latest tag for downstream images after merge to konflux int repo",
    "body": "Our integration environment uses latest tags, so we need the push-event pipelines to also push latest tag. Part-of MGMT-19595("
  },
  {
    "id": "956",
    "type": "pullRequest",
    "title": "OCPBUGS-45770: Updating ose-agent-installer-orchestrator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-agent-installer-orchestrator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-agent-installer-orchestrator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "997",
    "type": "pullRequest",
    "title": "NO-ISSUE: update gin version",
    "body": "Update github.com/gin-gonic/gin package version to v1.9.1 for usage in indirect dependencies."
  },
  {
    "id": "981",
    "type": "pullRequest",
    "title": "OCPBUGS-47488: MGMT-19537: Bump golang.org/x/net to 0.33.0"
  },
  {
    "id": "976",
    "type": "pullRequest",
    "title": "MGMT-19506: Bump golang.org/x/crypto from 0.25.0 to 0.31.0"
  },
  {
    "id": "972",
    "type": "pullRequest",
    "title": "NO-ISSUE: chore(deps): update konflux references (master)",
    "body": "This PR contains the following updates: Change --- `87fd7fc` - `0767c11` quay.io/konflux-ci/tekton-catalog/task-build-image-index `f6c2a95` - `df6bd6b` quay.io/konflux-ci/tekton-catalog/task-clair-scan `6e08cf6` - `d782218` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check-oci-ta `5a1a165` - `f8efb0b` quay.io/konflux-ci/tekton-catalog/task-init `ce43e45` - `3e51d7c` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `194bf60` - `a2a504f` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `1119722` - `6d23234` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOltdfQ==--"
  },
  {
    "id": "971",
    "type": "pullRequest",
    "title": "MGMT-19507: Stop using multi-arch builds in konflux",
    "body": "A lot of time our pipelines as well as other teams' pipelines are stuck because they are unable to provision hosts with different architectures to build the images. Because we currently don't use the multi-arch images we build with konflux, we will stop building multi-arch for now and readd those architectures when we need them. Part-of MGMT-19507("
  },
  {
    "id": "958",
    "type": "pullRequest",
    "title": "NO-ISSUE: chore(deps): update konflux references (master)",
    "body": "This PR contains the following updates: Change --- `ebc17bb` - `a89c141` `52a1a93` - `f6c2a95` `0.1` - `0.2` `bd786bc` - `26278e5` --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test` !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOltdfQ==--"
  },
  {
    "id": "965",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-controller-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "966",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "960",
    "type": "pullRequest",
    "title": "MGMT-19453: Add downstream dockerfile",
    "body": "Add downstream dockerfile to upstream repo for konflux migration from cpaas. Part-of MGMT-19453("
  },
  {
    "id": "954",
    "type": "pullRequest",
    "title": "MGMT-19408: Create tekton pipelines for acm 2.13",
    "body": "This will finish the onboarding process for acm 2.13 Part-of MGMT-19408("
  },
  {
    "id": "948",
    "type": "pullRequest",
    "title": "MGMT-19390: Update mce's tekton pipelines to be multi-arch",
    "body": "Update the tekton pipelines used to build mce downstream images to be multi-arch. Part-of MGMT-19390("
  },
  {
    "id": "947",
    "type": "pullRequest",
    "title": "OCPBUGS-45116: Add retry to mount efi device",
    "body": "There is a race condition between the mount and setting the boot order, this pr adds a retry to the mount operation."
  },
  {
    "id": "946",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-controller-mce-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "945",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-mce-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "943",
    "type": "pullRequest",
    "title": "MGMT-19371: Add downstream dockerfiles for mce",
    "body": "As part of migrating to konflux, we need to update our downstream dockerfiles for mce and put them in our upstream repos. Part-of MGMT-19371("
  },
  {
    "id": "944",
    "type": "pullRequest",
    "title": "NO-ISSUE: Add giladravid16 and pastequo to approvers list"
  },
  {
    "id": "997",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update assisted-service's version"
  },
  {
    "id": "990",
    "type": "pullRequest",
    "title": "MGMT-20296: Modify RegisterHostConflict case log in RegisterHostWithRetry",
    "body": "Following the changes introduced in assisted-service PR 7604( when an installed host attempts to register, it triggers the RegisterHostWithRetry method in the agent. The returned error code has been updated to 409 Conflict, which now requires updating the corresponding log message in the agent to be more informative. The expected log after both fixes: `Host will stop trying to register; cluster cannot accept new hosts in its current state: 409 Host is trying to register after the cluster has already been installed. That most probably means that the host is booting from the installation ISO, and therefore not effectively joining the cluster. The request will be ignored. Fix the boot order and reboot the host.` This also resolves the issue where the agent would enter an infinite registration loop when a 403 was returned. Previously, the error would fall into the default case in the switch statement and keep retrying. Now, with the 409 response, it matches the conflict case, causing the agent to wait forever instead of continuing to retry."
  },
  {
    "id": "976",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `61c90b1` - `4973fa4` quay.io/konflux-ci/tekton-catalog/task-build-image-index `1d26a89` - `57a4a8b` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check `9709088` - `88367f7` quay.io/konflux-ci/tekton-catalog/task-init `55a4ff2` - `6ad0ae8` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `0444128` - `07cb092` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "956",
    "type": "pullRequest",
    "title": "OCPBUGS-53712: Bump golang-jwt/jwt/v4 to 4.5.2",
    "body": "Upgrading to github.com/golang-jwt/jwt/v4 v4.5.2. Commands Run : go get github.com/golang-jwt/jwt/v4 go mod tidy && go mod vendor"
  },
  {
    "id": "959",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `e1d365c` - `61c90b1` quay.io/konflux-ci/tekton-catalog/task-build-image-index `58fb95e` - `468708e` quay.io/konflux-ci/tekton-catalog/task-clair-scan `c30c126` - `62c835a` quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks `2f59e9a` - `737682d` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `f9e6e6a` - `55a4ff2` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `b874e49` - `e88c8eb` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `540f585` - `a1cb59e` quay.io/konflux-ci/tekton-catalog/task-sast-unicode-check-oci-ta `ea2316b` - `9fe82c9` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "936",
    "type": "pullRequest",
    "title": "OCPBUGS-52994: Update to latest ghw version",
    "body": "Update to latest ghw version `v0.16.0`"
  },
  {
    "id": "955",
    "type": "pullRequest",
    "title": "MGMT-20227: Skip Motherboard serial if set to \"-\"",
    "body": "Certain hardware sets the Motherboard serial number to \"-\" if not configured. This should be skipped when generating the host UUID to prevent all hosts generating the same UUID."
  },
  {
    "id": "942",
    "type": "pullRequest",
    "title": "MGMT-20149: Add required sast tasks for Konflux",
    "body": "Tasks will become mandatory the 1st of April"
  },
  {
    "id": "947",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove Eran and Paul from OWNERS",
    "body": "Eran and Paul have left Assisted Installer team"
  },
  {
    "id": "943",
    "type": "pullRequest",
    "title": "master MGMT-20199: CVE-2025-27144 Bump github.com/go-jose/go-jose/v4 to v4.0.5",
    "body": "MGMT-20199( CVE-2025-27144 Bump github.com/go-jose/go-jose/v4 to v4.0.5"
  },
  {
    "id": "929",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `5e5f290` - `e1d365c` quay.io/konflux-ci/tekton-catalog/task-build-image-index `3e01d38` - `58fb95e` quay.io/konflux-ci/tekton-catalog/task-clair-scan `7595ba0` - `c30c126` quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check `944e769` - `9709088` quay.io/konflux-ci/tekton-catalog/task-init `752230a` - `786a660` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `5bc6129` - `d00d159` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `183b28f` - `ea2316b` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "926",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fix Konflux configuration for ocm-2.14"
  },
  {
    "id": "924",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `0c2270d` - `24feb32` quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta `f636f2c` - `c45aae9` quay.io/konflux-ci/tekton-catalog/task-clamav-scan `ced089b` - `a0a5b05` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `b78123a` - `5bc6129` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `945a7c9` - `04f15cb` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "912",
    "type": "pullRequest",
    "title": "MGMT-19950: Modify Konflux YAMLs to ocm-2.14",
    "body": "Now downstream images are built with Kofnflux, therefore we change the references in the master branch to ocm-2.14."
  },
  {
    "id": "921",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `5b8e825` - `a3f3a4d` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `546e0a9` - `752230a` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `3bf6d1b` - `b78123a` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "910",
    "type": "pullRequest",
    "title": "MGMT-19927: Modify MTU Check to Only MTUs != 1500",
    "body": "This PR updates the MTU check to apply only to MTUs != 1500. Additionally, it adjusts the header subtraction to account only for IPv4/IPv6 headers. /cc @zaneb @AlonaKaplan"
  },
  {
    "id": "920",
    "type": "pullRequest",
    "title": "MGMT-19588: Also use bond interface for hostname workaround",
    "body": "Tested with libvirt by creating a VM with 2 network interfaces. Then inside the VM, the bond was created manually with nmcli following this( I only tried the `active-backup` mode, not sure if it could have an impact"
  },
  {
    "id": "914",
    "type": "pullRequest",
    "title": "MGMT-19819: Add the commit reference from which the image is built to the image",
    "body": "Currently, in most of assisted installer components CI images we don't have a way to tell from which commit reference the image was built. Since We use an image stream for each component, and we import these streams from one CI component configuration to another, we might end up with images to are not up-to-date. In this case, we would like to have the ability to check if this is actually the case."
  },
  {
    "id": "903",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `fa7aa88` - `5e5f290` `09344e6` - `0c2270d` `0.3` - `0.4` `0.4` - `0.5` `f72fcca` - `36d98ab` `4c6712d` - `63eb4a4` `0.1` - `0.2` `9b0138a` - `ee189dd` `b15a199` - `ed77784` `0.1` - `0.2` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "904",
    "type": "pullRequest",
    "title": "OCPBUGS-50655: Increase image pull timeout during install",
    "body": "Previously, there was a timeout of 30 seconds when pulling the installer image. This is not enough time to pull the image and to mark the installation as failed. This change increases the timeout to 600 seconds (10 minutes), which is more accurate for a failed image pull. The error message from failing to pull has also been updated to reflect the actual failure. /cc @omertuc"
  },
  {
    "id": "902",
    "type": "pullRequest",
    "title": "MGMT-19815: Update tekton pipelines to point to new components",
    "body": "In order to simplify the release process in konflux for our product, we want related components to share a single application. To make that change as simple as possible, this PR changes the existing pipelines to point to the new components while keeping everything we already configured. Part-of MGMT-19815("
  },
  {
    "id": "899",
    "type": "pullRequest",
    "title": "MGMT-19102: Add boot device info to inventory",
    "body": "Ephemeral devices are those backed by a loop device. This indicates that the system is not booted from a \"real\" disk. Otherwise the boot device is considered \"persistent\" This indicates to assisted service how it should install this host. For ephemerally booted systems it will install directly to an entire device, but for persistently booted systems it will install to the existing root filesystem ~~WIP until is merged and the new APIs are properly included here.~~ Done"
  },
  {
    "id": "900",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `46f4471` - `fa7aa88` quay.io/konflux-ci/tekton-catalog/task-buildah-remote-oci-ta `907f11c` - `4584647` quay.io/konflux-ci/tekton-catalog/task-clamav-scan `18c1c26` - `b4e6d38` quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check `b76b563` - `4c6712d` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `6cfb72a` - `fcd9016` quay.io/konflux-ci/tekton-catalog/task-sast-coverity-check-oci-ta `7553ec6` - `9b0138a` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `bd191e5` - `18241f9` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOlsiYXBwcm92ZWQiLCJrb25mbHV4IiwibGd0bSJdfQ==--"
  },
  {
    "id": "897",
    "type": "pullRequest",
    "title": "MGMT-19100: Allow install to the existing root filesystem",
    "body": "This PR allows for installing coreos content to the existing root filesystem instead of only to an entire device. When the install command contains the coreos image field it will be passed through to the installer. Additionally the validation on eligible disks for iso type partitions is dropped. This was done because it is not a valid way to detect installation media, but it is a way that config data can be provided to the host during a CAPI install. For a full ISO the current install media partitions look like this: ``` root@localhost core fdisk -l /dev/sr0 Disk /dev/sr0: 1.16 GiB, 1244659712 bytes, 607744 sectors Disk model: QEMU DVD-ROM Units: sectors of 1 2048 = 2048 bytes Sector size (logical/physical): 2048 bytes / 2048 bytes I/O size (minimum/optimal): 2048 bytes / 2048 bytes Disklabel type: dos Disk identifier: 0x47ad035f Device Boot Start End Sectors Size Id Type /dev/sr0p1 0 2430975 2430976 4.6G 0 Empty /dev/sr0p2 180 10139 9960 19.5M ef EFI (FAT-12/16/32) ``` Neither of these partitions are of type iso9660 so this check is doing nothing but making CAPI installs more difficult. ~~Leaving this as WIP until and are merged~~ Merged"
  },
  {
    "id": "895",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update docker pkg to fix CVE-2024-41110 and CVE-2023-2253",
    "body": "Konflux reported 2 packages to update - github.com/docker/docker to 25.0.6 - github.com/docker/distribution to 2.8.2-beta.1 to fix: - CVE-2024-41110( - CVE-2023-2253( cc @giladravid16"
  },
  {
    "id": "898",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update buildah image to fix a bug with SBOM",
    "body": "The current buildah images in the tekton pipelines accidentally create the SBOM with CycloneDX 1.6 which causes a violation in the ECP check. These new images set the CycloneDX to 1.5 as the ECP check expects."
  },
  {
    "id": "875",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `0767c11` - `46f4471` `37328a4` - `09344e6` `0.2` - `0.3` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOltdfQ==--"
  },
  {
    "id": "896",
    "type": "pullRequest",
    "title": "MGMT-19734: Add renovate config to limit number of PRs",
    "body": "Add renovate config to limiot number of konflux PR With that config, PR should be automerged when tests succeeded"
  },
  {
    "id": "893",
    "type": "pullRequest",
    "title": "NO-ISSUE: Stop removing stuff from the downstream image that are needed for preflight-check to succeed",
    "body": "We remove a lot of things from the final image, because they are not needed by our app. But those things are needed for the preflight check to validate our image, so we should stop deleting them."
  },
  {
    "id": "892",
    "type": "pullRequest",
    "title": "NO-ISSUE: Make konflux builds for downstream images to be multi-arch",
    "body": "Currently downstream images are only built for x64, but we need to build for arm, s390x and ppc64le as well. These downstream images are going to be used by SaaS."
  },
  {
    "id": "889",
    "type": "pullRequest",
    "title": "MGMT-19645: Configure a few things for releasing in konflux",
    "body": "Configure the following things for releasing in konflux: - Hermetic builds - Pushing source image. - Adding label io.openshift.tags. - Setting up snyk Part-of MGMT-19645("
  },
  {
    "id": "857",
    "type": "pullRequest",
    "title": "OCPBUGS-45910: Fix cpu clockspeed for s390x",
    "body": "For s390x architectures lscpu does not return the clock speed by \"CPU MHz\" or \"CPU max MHz\" field but have two fields (CPU static MHz and CPU dynamic MHz). \"CPU static MHz\" is the field representing the designed clock speed whereas the \"CPU dynamic MHz\" is representing the current CPU speed (throttled or energy saving). New test case for s390x architecture was added. In addition the machine type was fixed, too. The fix was tested using unit tests: JUnit path was configured: ./junit_unit_test.xml JUnit report was created: /root/code/Assisted_Installer/latest/assisted-installer-agent/src/inventory/junit_unit_test.xml Ran 121 of 121 Specs in 0.268 seconds SUCCESS! -- 121 Passed 0 Pending | 0 Skipped --- PASS: TestInventory (0.30s)"
  },
  {
    "id": "883",
    "type": "pullRequest",
    "title": "MGMT-19381: Change downstream base images to rhel9.4 instead of ubi9",
    "body": "Currently our base images use ubi9 and MintMaker wants to upgrade it to 9.5, because MintMaker looks at the repo and tries to upgrade to the newest tag. This changes the base image to use a repo that is just for rhel9.4. Part-of MGMT-19381("
  },
  {
    "id": "882",
    "type": "pullRequest",
    "title": "MGMT-19595: Push latest tag for downstream image after merge to konflux int repo",
    "body": "Our integration environment uses latest tags, so we need the push-event pipelines to also push latest tag. Part-of MGMT-19595("
  },
  {
    "id": "877",
    "type": "pullRequest",
    "title": "NO-ISSUE: OCPBUGS-43352 calculate outgoing interface for arping",
    "body": "- arping is running on interfaces that are not in the same address range as the remote IP. In some proxy-arp enabled networks this causes false-positive IP duplication error. This PR will validate the remote IP is in the same network as the outgoing interface"
  },
  {
    "id": "868",
    "type": "pullRequest",
    "title": "MGMT-19537: Bump golang.org/x/net to 0.33.0",
    "body": "Remove pin on golang.org/x/net has version is already set in required section"
  },
  {
    "id": "862",
    "type": "pullRequest",
    "title": "OCPBUGS-47488: MGMT-19537: Bump golang.org/x/net to 0.33.0"
  },
  {
    "id": "856",
    "type": "pullRequest",
    "title": "MGMT-19506: Bump golang.org/x/crypto from 0.25.0 to 0.31.0"
  },
  {
    "id": "852",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references (master)",
    "body": "This PR contains the following updates: Change --- `87fd7fc` - `0767c11` quay.io/konflux-ci/tekton-catalog/task-build-image-index `f6c2a95` - `df6bd6b` quay.io/konflux-ci/tekton-catalog/task-clair-scan `6e08cf6` - `d782218` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check-oci-ta `5a1a165` - `f8efb0b` quay.io/konflux-ci/tekton-catalog/task-init `ce43e45` - `3e51d7c` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `194bf60` - `a2a504f` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `1119722` - `6d23234` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOltdfQ==--"
  },
  {
    "id": "850",
    "type": "pullRequest",
    "title": "OCPBUGS-35716: expand unknown mb serials with \"(none)\"",
    "body": "As mentioned in the bug, it seems it was reported for System x3850 X5 / x3950 X5 model 71455RG"
  },
  {
    "id": "851",
    "type": "pullRequest",
    "title": "MGMT-19507: Stop using multi-arch builds in konflux",
    "body": "A lot of time our pipelines as well as other teams' pipelines are stuck because they are unable to provision hosts with different architectures to build the images. Because we currently don't use the multi-arch images we build with konflux, we will stop building multi-arch for now and readd those architectures when we need them. Part-of MGMT-19507("
  },
  {
    "id": "839",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update Konflux references (master)",
    "body": "This PR contains the following updates: Change --- `ebc17bb` - `a89c141` `52a1a93` - `f6c2a95` `0.1` - `0.2` `bd786bc` - `26278e5` --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test` !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYXN0ZXIiLCJsYWJlbHMiOltdfQ==--"
  },
  {
    "id": "846",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-agent-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "841",
    "type": "pullRequest",
    "title": "MGMT-19453: Add downstream dockerfile",
    "body": "Add downstream dockerfile to upstream repo for konflux migration from cpaas. Part-of MGMT-19453("
  },
  {
    "id": "838",
    "type": "pullRequest",
    "title": "OCPBUGS-45572: Updating ose-agent-installer-node-agent-container image to be consistent with ART for 4.19",
    "body": "Updating ose-agent-installer-node-agent-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-agent-installer-node-agent.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "835",
    "type": "pullRequest",
    "title": "MGMT-19408: Create tekton pipelines for acm 2.13",
    "body": "This will finish the onboarding process for acm 2.13 Part-of MGMT-19408("
  },
  {
    "id": "821",
    "type": "pullRequest",
    "title": "MGMT-19166: Implement MTU checker",
    "body": "As part of the MTU validation implementation, the agent will include the MTU checker in the connectivity check. It will send reports to the service if a ping with the specified MTU size fails."
  },
  {
    "id": "828",
    "type": "pullRequest",
    "title": "MGMT-19390: Update mce's tekton pipelines to be multi-arch",
    "body": "Update the tekton pipelines used to build mce downstream images to be multi-arch. Part-of MGMT-19390("
  },
  {
    "id": "827",
    "type": "pullRequest",
    "title": "NO-ISSUE: Red Hat Konflux update assisted-installer-agent-mce-downstream-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "822",
    "type": "pullRequest",
    "title": "MGMT-19331: Add `secure_boot_state` to inventory",
    "body": "This patch changes the agent so that it checks if secure boot is enabled and adds that to the inventory. To do the check it uses reads the state from the `/sys/firmware/efi/efivars/SecureBoot-...` file. Related: Related:"
  },
  {
    "id": "825",
    "type": "pullRequest",
    "title": "MGMT-19371: Add downstream dockerfile for mce",
    "body": "As part of migrating to konflux, we need to update our downstream dockerfiles for mce and put them in our upstream repos. Part-of MGMT-19371("
  },
  {
    "id": "826",
    "type": "pullRequest",
    "title": "NO-ISSUE: Add giladravid16 and pastequo to approvers list"
  },
  {
    "id": "87",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55793: Use internal image registry",
    "body": "This is an automated cherry-pick of 78 /assign pawanpinjarkar"
  },
  {
    "id": "85",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55761: Include RHEL 9 guest image to support VM launches via ...",
    "body": "This is an automated cherry-pick of 84 /assign andfasano"
  },
  {
    "id": "83",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update ISOBuilder appliance image SHA",
    "body": "The recent merge of PR 79 introduced a new `useDefaultSourceNames` field in `appliance-config.yaml,` which the current ISOBuilder appliance image doesn't recognize. This causes appliance to fail with the error: `FATAL failed to load asset 'Appliance Config': can't parse appliance-config.yaml. Ensure the config file is configured correctly (error in field 'useDefaultSourceNames'.` This commit updates the appliance image SHA to a version that includes support for this new field."
  },
  {
    "id": "79",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Add support for default CatalogSource naming",
    "body": "- Adds support for a new useDefaultSourceNames: true field in appliance-config.yaml. - When enabled, the appliance will name CatalogSources using standard names like redhat-operators, allowing compatibility with assisted-service. - Example: For catalog image registry.redhat.io/redhat/redhat-operator-index:v4.19, the generated CatalogSource will be: ``` apiVersion: operators.coreos.com/v1alpha1 kind: CatalogSource metadata: name: redhat-operators namespace: openshift-marketplace spec: image: registry.appliance.com:5000/redhat/redhat-operator-index:v4.19 sourceType: grpc ``` Cc @andfasano"
  },
  {
    "id": "80",
    "type": "pullRequest",
    "title": "OCPBUGS-55515: Include cnv operator in ISO builder script",
    "body": "Include the cnv operator using the name from the operator list."
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "OCPBUGS-55623: update to go.mod"
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder-Add support-tools image for oc debug",
    "body": "Adds `registry.redhat.io/rhel9/support-tools` under `additionalImages` in appliance-config.yaml. This image is required by `oc debug` to launch a debug pod with diagnostic tools for troubleshooting networking, file system, and process issues across nodes and pods."
  },
  {
    "id": "76",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder- Update README.md"
  },
  {
    "id": "69",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Add Clean targets.",
    "body": "Unmount appliance mount directory Add new targets - `make cleanall` : Cleans default ISOBuilder tmp directory ( /tmp/iso_builder) - `make clean-appliance-temp-dir`: Invokes appliance container to clean appliance temp directory ( /tmp/iso_builder/OCP_VERSION/appliance/temp) - `make build-ove-iso`: Validates required inputs and creates OVE ISO in default location ( /tmp/iso_builder)"
  },
  {
    "id": "75",
    "type": "pullRequest",
    "title": "AGENT-1161: Update ISOBuilder dependencies"
  },
  {
    "id": "74",
    "type": "pullRequest",
    "title": "AGENT-1154: Dev docs for ISOBuilder"
  },
  {
    "id": "73",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove extra doneFunc() call",
    "body": "The doneFunc() is only called when there is an error executing ShowNMTUI and doesn't need to be called at the end of showNMTUIWithErrorDialog."
  },
  {
    "id": "72",
    "type": "pullRequest",
    "title": "AGENT-1188: Add MBR to El Torito ISO to support USB boot alongside VM",
    "body": "The release ISO includes the entire release image and is often large, so many users could prefer writing it to a USB drive instead of mounting it via BMC virtual media. While optical drives can boot El Torito ISOs directly, USB mass storage devices require a Master Boot Record (MBR) to be bootable. This change makes the ISO hybrid-bootable by appending an MBR, allowing it to boot via both USB and virtual media without requiring separate ISO builds or formats."
  },
  {
    "id": "71",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Use libpod registry"
  },
  {
    "id": "64",
    "type": "pullRequest",
    "title": "AGENT-1114: Check connectivity to rendezvous node and improvements",
    "body": "Adds connectivity checks from current host to rendezvous node. Add a blank line between IP addresses and Back and Configure Network buttons. Update the select IP address list navigation, so that the blank line is not selectable. Made invalid_ip_address_modal generic so that it can be reused in multiple situations."
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Appliance tweaks",
    "body": "- Use sha digest instead of latest tag for appliance image - Add log-level debug to appliance"
  },
  {
    "id": "52",
    "type": "pullRequest",
    "title": "AGENT-1138: Skip release image checks for interactive disconnected"
  },
  {
    "id": "66",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: idempotency and efficiency",
    "body": "Restructured the script to make it idempotent, significantly reducing execution time for subsequent runs. Since the appliance tool is the most time-consuming step, this change ensures that the script reuses the cache from the appliance when rerun with the same version. - Initial run: ~30 minutes - Subsequent runs (same version): ~1 second or less Additionally, standardized variable names to use consistent lowercase formatting for better readability and maintainability."
  },
  {
    "id": "68",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Support --dir param",
    "body": "Support optional `--dir path` param."
  },
  {
    "id": "67",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Update operators list",
    "body": "Adds new operators."
  },
  {
    "id": "65",
    "type": "pullRequest",
    "title": "AGENT-1155: Support release image url with sha digst",
    "body": "Adds support for release image with sha digest format. Example: ``` cd tools/iso_builder ./hack/build-ove-image.sh \\ --pull-secret-file /run/user/0/containers/auth.json \\ --release-image-url registry.ci.openshift.org/ocp/release@sha256:44d6937c4e4f61ed141f8d6d37eaedc051773cd88907c306cc5d2f177afb7f33 ```"
  },
  {
    "id": "63",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Make sudo optional"
  },
  {
    "id": "62",
    "type": "pullRequest",
    "title": "NO-ISSUE: ISOBuilder: Restructured to resolve right image ref"
  },
  {
    "id": "59",
    "type": "pullRequest",
    "title": "AGENT-1150: Move setup-agent-tui.sh into ignition file",
    "body": "Move setup-agent-tui.sh into ignition file. Also, log time taken to generate the ISO."
  },
  {
    "id": "53",
    "type": "pullRequest",
    "title": "NO-ISSUE: iso_builder: add ssh key file flag"
  },
  {
    "id": "58",
    "type": "pullRequest",
    "title": "AGENT-1151: Use internal appliance registry",
    "body": "Appliance allows using an internal registry (see Use that (instead of the external one)."
  },
  {
    "id": "61",
    "type": "pullRequest",
    "title": "NO-ISSUE: iso_builder: Remove support for rendezvousIP"
  },
  {
    "id": "60",
    "type": "pullRequest",
    "title": "NO-ISSUE: iso_builder: Revert \"Merge pull request 54 from pawanpinjarkar/run-appliance-with...",
    "body": "...out-sudo\" This reverts commit e54daf547c9a55634af7fe96449a71eff986d3e9, reversing changes made to ecec66ac6c285455df8df2826f4ed2e89f7710ad."
  },
  {
    "id": "54",
    "type": "pullRequest",
    "title": "NO-ISSUE: iso_builder: Run appliance without sudo"
  },
  {
    "id": "50",
    "type": "pullRequest",
    "title": "AGENT-1087: Add logging",
    "body": "Adds logging."
  },
  {
    "id": "49",
    "type": "pullRequest",
    "title": "AGENT-1137: Support both --ocp-version and --release-image-url",
    "body": "Added support to specify OCP version via --ocp-version or extract version from --release-image-url. - --release-image-url is mainly for testing/debugging non-released version - Updated input validation to ensure only one of --ocp-version or --release-image-url is provided. - Adds channel and cpuArchitecture in appliance-config only if --ocp-version is provided. - Modified appliance config creation to dynamically include the OCP version based on inputs. - Improved error handling and default architecture handling. - Enhanced usage instructions to reflect new input options and examples."
  },
  {
    "id": "57",
    "type": "pullRequest",
    "title": "AGENT-1118: Ensure the correct selinux labels are applied to agent tui files",
    "body": "This also avoids modifying the original /usr/local/bin labels, since it could have an impact in a later stage during the installation"
  },
  {
    "id": "37",
    "type": "pullRequest",
    "title": "OCPBUGS-45505: Updating ose-agent-installer-utils-container image to be consistent with ART for 4.19",
    "body": "Updating ose-agent-installer-utils-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-agent-installer-utils.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "51",
    "type": "pullRequest",
    "title": "AGENT-1147: Update operators",
    "body": "Adds a new operator `kubernetes-nmstate-operator`"
  },
  {
    "id": "47",
    "type": "pullRequest",
    "title": "AGENT-1087: Support url in appliance-config.yaml",
    "body": "Add `url` field in appliance-config.yaml"
  },
  {
    "id": "48",
    "type": "pullRequest",
    "title": "AGENT-1119: agent-setup-tui.service typo fix"
  },
  {
    "id": "46",
    "type": "pullRequest",
    "title": "AGENT-1087: Enable agent installer interactive flow"
  },
  {
    "id": "42",
    "type": "pullRequest",
    "title": "AGENT-464: Refactor UI for Rendezvous node IP entry",
    "body": "Added confirmation screens after the Rendezvous node IP is saved. Instead of a checkbox to \"randomly\" choose of the Node's IP as the Rendezvous node IP, a list of all of this node's IP addresses is presented which allows the user to choose the exact one they want. Added additional descriptions on the form to make the process more understandable. Depends-on:"
  },
  {
    "id": "44",
    "type": "pullRequest",
    "title": "AGENT-1087: load agent tui",
    "body": "quick fix to load the assisted ui image on boot Required by:"
  },
  {
    "id": "40",
    "type": "pullRequest",
    "title": "AGENT-1087: OVE ISO Builder script improvements",
    "body": "e.g. `OCP_RELEASE_IMAGE=quay.io/openshift-release-dev/ocp-release:4.18.4-x86_64 PULL_SECRET=/home/test/dev-scripts/pull_secret.json make build-ove-iso` - Added a new Makefile for iso-builder. New targets: `make clean`, `make cleanall`, `make build-ove-iso` - Calculate boot load size - Fixes file path, vars, tmp and work dir management. Cache appliance artifacts. - Always pull the latest appliance image - Pass pullsecret to image oc commands - `x86_64` is the default architecture"
  },
  {
    "id": "38",
    "type": "pullRequest",
    "title": "AGENT-464: Adds form to agent-tui to enter rendezvous IP address",
    "body": "This change supports a new user scenario whereby the rendezvous IP address may not be written into the agent ISO. In this case, the agent-tui should detect if the NODE_ZERO_IP is specified in /etc/assisted/rendezvous-host.env. If it is unspecified, the tui should display a form to allow the user to enter the rendezvous host IP. There will be a supporting change in the installer repo to pass the NODE_ZERO_IP from /etc/assisted/rendezvous-host.env to the agent-interactive-console.service which executes agent-tui during boot. If NODE_ZERO_IP is not set in the environment, agent_tui reads /etc/assisted/rendezvous_host.env for the value."
  },
  {
    "id": "39",
    "type": "pullRequest",
    "title": "AGENT-1087 AGENT-1118: Add script to generate agent-based installer OVE ISO",
    "body": "This PR introduces a script to streamline the creation of an agent-based installer ISO for Open Virtualization Environment (OVE). The script generates an ISO named `agent-ove-arch.iso` in the `ove-assets` directory, creating the directory if it doesn\u2019t already exist. The script handles the entire process, from cloning the necessary repositories to building and updating the ISO with essential artifacts like `agent-tui`, `nmstate` libraries, and `assisted-install-ui` image as a tarball within the `/images` directory in the OVE ISO Usage: `./hack/build-ove-iso.sh --release-image openshift-release --arch architecture --pull-secret pull-secret --rendezvousIP rendezvousIP` Examples: `./hack/build-ove-iso.sh --release-image registry.ci.openshift.org/ocp/release:4.19.0-0.ci-2025-02-26-035445 --arch x86_64 --pull-secret ~/pull_secret.json` Output: `Generated agent-based installer OVE ISO at: $AGENT_OVE_ISO` --- Script Workflow: 1. Input Parsing & Validation: - Collects inputs for OpenShift version, architecture, pull secret, and optional rendezvous IP. - Validates the provided inputs to ensure a smooth build process. 2. Appliance Build: - Creates the `appliance-config.yaml` and builds an appliance image for the specified architecture, release version, and currently `mtv-operator`. 3. ISO Customization & Artifact Injection: - Prepares agent-tui and nmstate artifacts by extracting and copying them to the appropriate locations within the ISO. - Also embeds `assisted-install-ui` image as a tarball in the container storage using `scopeo` 4. Ignition Update & ISO Rebuild: - Extracts the original ignition configuration. - Updates the ignition to embed a new systemd unit for setting up the agent TUI and libraries. - Rebuilds the ISO with the updated ignition and necessary systemd services. 5. Cleanup & Final Output: - Cleans up temporary files and intermediate directories. - Outputs the path to the final ISO."
  },
  {
    "id": "74",
    "type": "pullRequest",
    "title": "OCPBUGS-52573: Updating ose-apiserver-network-proxy-container image to be consistent with ART for 4.19",
    "body": "Updating ose-apiserver-network-proxy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-apiserver-network-proxy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "104",
    "type": "pullRequest",
    "title": "OCPCLOUD-2843: Update cloud-provider-aws to K8s 1.32, attempt 3",
    "body": "This reverts commit 6122e9929f7ed09aaff4eba45b40faea21948700. /payload-aggregate periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-upgrade 10"
  },
  {
    "id": "103",
    "type": "pullRequest",
    "title": "TRT-2005: Revert 102 \"OCPCLOUD-2843: Merge (b1f753a) into master\"",
    "body": "Reverts 102 ; tracked by TRT-2005( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple payload failures due to aws disruption To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-aggregate periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-upgrade 10 ``` CC: @cloud-team-rebase-botbot div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "102",
    "type": "pullRequest",
    "title": "OCPCLOUD-2843: Merge (b1f753a) into master"
  },
  {
    "id": "100",
    "type": "pullRequest",
    "title": "TRT-2003: Revert 98 \"OCPCLOUD-2843: Merge (c9d7595) into master\"",
    "body": "Reverts 98 ; tracked by TRT-2003( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple payload failures due to aws disruption To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-aggregate periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-upgrade 10 ``` CC: @cloud-team-rebase-botbot div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "98",
    "type": "pullRequest",
    "title": "OCPCLOUD-2843: Merge (c9d7595) into master"
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "OCPBUGS-45516: Updating ose-aws-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-aws-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-aws-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "548",
    "type": "pullRequest",
    "title": "OCPBUGS-54567: UPSTREAM: 5374: add marketType field validation",
    "body": "- If only MarketType=Spot is specified but spotMarketType is not provided, then we must explicitly add spotMarketType to the API configuration. - Webhook validation for the marketType field value Ref:"
  },
  {
    "id": "545",
    "type": "pullRequest",
    "title": "ART-12521: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-04-04 17:30:46,824 ERROR vendor directory changed after vendoring: A vendor/github.com/sagikazarmark/locafero/.envrc A vendor/github.com/sagikazarmark/slog-shim/.envrc A vendor/github.com/spf13/viper/.envrc A vendor/github.com/subosito/gotenv/.env ``` Konflux ignores .gitignore files since its a possible security gap."
  },
  {
    "id": "544",
    "type": "pullRequest",
    "title": "OCPBUGS-53728: Merge (79ae3d0) into master"
  },
  {
    "id": "542",
    "type": "pullRequest",
    "title": "OCPCLOUD-2855: Merge (49c75ac) into master"
  },
  {
    "id": "538",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that updates the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "536",
    "type": "pullRequest",
    "title": "OCPBUGS-49400: UPSTREAM: 5339: Bump glog for recent fixes",
    "body": "Bump glog for recent fixes"
  },
  {
    "id": "534",
    "type": "pullRequest",
    "title": "OCPBUGS-45734: Updating ose-aws-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-aws-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-aws-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "283",
    "type": "pullRequest",
    "title": "STOR-2253: Rebase to upstream v1.39.0 for OCP 4.19",
    "body": "Issue link: Diff to upstream v1.39.0: Important changes between v1.34.0 (OCP 4.18) and v1.39.0 (OCP 4.19): - Breaking Metrics Changes Node plugin metrics have been renamed to follow Prometheus best practices: Added aws_ebs_csi_ prefix Added _total suffix for counters Changed time units from microseconds to seconds for all counters The controller plugin metrics now use the prefix aws_ebs_csi_ instead of cloudprovider_aws_. The old metric names will still be emitted, but can be disabled via the CLI parameter --deprecated-metrics=false on the controller. This will default to true in a future version of the EBS CSI Driver. The old metric names (cloudprovider_aws_) are deprecated and will be removed in a future version of the EBS CSI Driver. - ACTION REQUIRED Update to the EBS CSI Driver IAM Policy Due to an upcoming change in handling of IAM polices for the CreateVolume API when creating a volume from an EBS snapshot, a change to your EBS CSI Driver policy may be needed. For more information and remediation steps, see This change affects all versions of the EBS CSI Driver and action may be required even on clusters where the driver is not upgraded. - - - Full changelogs: @openshift/storage"
  },
  {
    "id": "284",
    "type": "pullRequest",
    "title": "OCPBUGS-51722: bump golang.org/x/crypto to v0.35.0"
  },
  {
    "id": "282",
    "type": "pullRequest",
    "title": "OCPBUGS-46994: CVE-2024-45338: bump golang.org/x/net to v0.33.0"
  },
  {
    "id": "281",
    "type": "pullRequest",
    "title": "OCPBUGS-46197: CVE-2024-45337: bump golang.org/x/crypto from v0.30.0 to v0.31.0"
  },
  {
    "id": "280",
    "type": "pullRequest",
    "title": "OCPBUGS-45562: Updating ose-aws-ebs-csi-driver-container image to be consistent with ART for 4.19",
    "body": "This is from the ART bot + `make update` to add the header back to `.ci-operator.yaml` to get past the verify failure. /cc @openshift/storage"
  },
  {
    "id": "364",
    "type": "pullRequest",
    "title": "OCPBUGS-50493: Use 127.0.0.1 for healtz http-endpoints",
    "body": "Those ports are used only for internal communication inside CSI driver pods. No need to expose them for the world."
  },
  {
    "id": "329",
    "type": "pullRequest",
    "title": "NO-JIRA: build only needed cmd in container image"
  },
  {
    "id": "376",
    "type": "pullRequest",
    "title": "OCPBUGS-55052: Correct ASH driver inject env config",
    "body": "Correct ASH driver inject env config - We made a mistake when migrate the azure disk driver operator from `azure-disk-csi-driver-operator` to `csi-operator`, the `injectEnvAndMounts` which used for ASH the `endpoints` Subpath expected read the `endpoints` value from the cloud configmap key `endpoints` while we use the incorrect volume name for injecting. ref - ```console ... 2025-03-27T21:07:32.105160383Z W0327 21:07:32.105102 1 azure_disk_utils.go:236 InitializeCloudFromConfig failed with error: read /etc/azure/azurestackcloud.json: is a directory ... ```"
  },
  {
    "id": "345",
    "type": "pullRequest",
    "title": "OSASINFRA-3652: openstack-cinder: Use new --with-topology flag",
    "body": "Rather than relying on the soon-to-be-removed feature gate. /hold ~This requires EDIT: This is now available on the `release-4.18` and `release-4.19` branches"
  },
  {
    "id": "370",
    "type": "pullRequest",
    "title": "STOR-2126: Enable readOnlyFileSystem",
    "body": "Enable readOnlyFileSystem in the operator for security concerns. Recommended for all containers running in kubernetes."
  },
  {
    "id": "369",
    "type": "pullRequest",
    "title": "OCPBUGS-54447: Enable required driver services",
    "body": "The Manila CSI driver, like Cinder, uses a single binary for both the controller and node (worker) services. This can result in services running on unintended hosts. A similar issue was addressed in Cinder in version 4.18, and we should now apply the same fix to Manila."
  },
  {
    "id": "371",
    "type": "pullRequest",
    "title": "OCPBUGS-54180: Disable remove-not-ready-taint for azure disk csi driver",
    "body": "- Disable the remove-not-ready-taint feature, as it is not implemented in ocp, avoid the unnecessary remove taint actions and logs. (Try to make it opt-in on upstream but unfortunately the maintainer is not happy with it, so we could go head disable it from our operator side."
  },
  {
    "id": "372",
    "type": "pullRequest",
    "title": "OCPBUGS-54230: Bump library-go"
  },
  {
    "id": "368",
    "type": "pullRequest",
    "title": "STOR-1877: Run operators without root user control",
    "body": "/cc @openshift/storage"
  },
  {
    "id": "367",
    "type": "pullRequest",
    "title": "STOR-1880: Role and ClusterRole with too wide permissions",
    "body": "/cc @openshift/storage"
  },
  {
    "id": "357",
    "type": "pullRequest",
    "title": "OCPBUGS-41827: update injector to use a secret rather than an environment variable",
    "body": "Based on discussion pr will keep both the secret and environment variables methods, then this pr can be merged, then remove environment variables in pr Built image build 4.18,openshift/cluster-cloud-controller-manager-operator385( and installed cluster on azure and ash, cluster install succeed. Built image build 4.18,openshift/cluster-cloud-controller-manager-operator385, openshift/csi-operator357( and installed cluster on azure and ash, cluster install succeed. Now ASH install is blocked by bug once this bug is fixed, I will check this pr again."
  },
  {
    "id": "348",
    "type": "pullRequest",
    "title": "NO-JIRA: Fixed typo in README.md",
    "body": "fixed typo"
  },
  {
    "id": "361",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 cc @openshift/storage"
  },
  {
    "id": "363",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "313",
    "type": "pullRequest",
    "title": "CFE-1132: EFS Access Point Tags Update DAY2",
    "body": "This PR introduces a custom EFSAccessPointsTagController that monitors the OpenShift Infrastructure resource for changes in AWS ResourceTags. When tags are updated, the controller automatically fetches all AWS EFS-backed PersistentVolumes (PVs) in the cluster, retrieves their volume IDs, and updates the associated EFS Access Points tags in AWS. Key Changes: Monitors Infrastructure resource for AWS ResourceTags updates. Directly fetches all PVs using the AWS EFS CSI driver (efs.csi.aws.com). Updates AWS EFS AccessPoint tags by merging new and existing tags using the AWS SDK."
  },
  {
    "id": "297",
    "type": "pullRequest",
    "title": "CFE-1131: AWS Tags DAY2 Update",
    "body": "This PR introduces a custom EBSVolumeTagController that monitors the OpenShift Infrastructure resource for changes in AWS ResourceTags. When tags are updated, the controller automatically fetches all AWS EBS-backed PersistentVolumes (PVs) in the cluster, retrieves their volume IDs, and updates the associated EBS tags in AWS. Key Changes: Monitors Infrastructure resource for AWS ResourceTags updates. Directly fetches all PVs using the AWS EBS CSI driver (ebs.csi.aws.com). Updates AWS EBS tags by merging new and existing tags using the AWS SDK."
  },
  {
    "id": "360",
    "type": "pullRequest",
    "title": "STOR-2263: correct smb csi driver test manifest",
    "body": "- Upstream fix - - Correct the smb csi driver test manifest(actually the driver does not support `nodeExpansion `), follow up of ."
  },
  {
    "id": "308",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove `inject-proxy` annotations for aws-ebs, aws-efs node daemonsets",
    "body": "There is no proxy hook configured for either driver making this a no-op. Remove it."
  },
  {
    "id": "353",
    "type": "pullRequest",
    "title": "OCPBUGS-48507: openstack-manila: update PodDisruptionBudget name",
    "body": "In previous releases the PodDisruptionBudget is named openstack-manila-csi-controllerplugin-pdb instead of manila-csi-driver-controller-pdb, which is the name currently generated by csi-operator. This prevents upgrades from being successful. To fix the issue the asset is renamed with the same name as used in previous releases."
  },
  {
    "id": "314",
    "type": "pullRequest",
    "title": "STOR-2078: Enable VolumeAttributesClass on AWS EBS for resizer + provisioner",
    "body": "Add RBAC ClusterRoleBinding for resizer + provisioner"
  },
  {
    "id": "352",
    "type": "pullRequest",
    "title": "NO-JIRA: Update golang.org/x/net to v0.34.0",
    "body": "as a preemptive measure against CVE-2024-45338(GHSA-w32m-9786-jp63)."
  },
  {
    "id": "332",
    "type": "pullRequest",
    "title": "OCPBUGS-45073: Support HCP labels",
    "body": "HCP is adding a new API field to allow users creating HCP clusters to set custom labels on all HCP pods The CSI needs to integrate this feature in the same way it integrated the NodeSelector feature for HCP."
  },
  {
    "id": "351",
    "type": "pullRequest",
    "title": "STOR-2260: Bump OLM metadata to 4.19"
  },
  {
    "id": "342",
    "type": "pullRequest",
    "title": "OCPBUGS-45591: Updating ose-openstack-cinder-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-openstack-cinder-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-openstack-cinder-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "330",
    "type": "pullRequest",
    "title": "OCPBUGS-44723: remove EFS driver metrics",
    "body": "EFS driver does not support metrics, this was added by mistake when migrating code to this repo. Before patch: ``` $ oc -n openshift-cluster-csi-drivers logs pod/aws-efs-csi-driver-controller-664d67f4d8-44lqg -c kube-rbac-proxy-8211 W1121 14:42:17.000703 1 deprecated.go:66 ==== Removed Flag Warning ====================== logtostderr is removed in the k8s upstream and has no effect any more. =============================================== I1121 14:42:17.001127 1 kube-rbac-proxy.go:233 Valid token audiences: I1121 14:42:17.001183 1 kube-rbac-proxy.go:347 Reading certificate files I1121 14:42:17.001379 1 kube-rbac-proxy.go:395 Starting TCP socket on 0.0.0.0:9211 I1121 14:42:17.001613 1 kube-rbac-proxy.go:402 Listening securely on 0.0.0.0:9211 I1121 14:42:23.493167 1 log.go:245 http: proxy error: dial tcp 127.0.0.1:8211: connect: connection refused I1121 14:42:33.744653 1 log.go:245 http: proxy error: dial tcp 127.0.0.1:8211: connect: connection refused ``` After patch: ``` $ oc -n openshift-cluster-csi-drivers logs pod/aws-efs-csi-driver-controller-547797bd4d-56djb Defaulted container \"csi-driver\" out of: csi-driver, csi-provisioner, provisioner-kube-rbac-proxy, csi-liveness-probe, init-aws-credentials-file (init) I1125 11:49:29.823515 1 config_dir.go:63 Mounted directories do not exist, creating directory at '/etc/amazon/efs' I1125 11:49:29.824107 1 metadata.go:65 getting MetadataService... I1125 11:49:29.826001 1 metadata.go:70 retrieving metadata from EC2 metadata service I1125 11:49:29.828572 1 driver.go:116 Registering Node Server I1125 11:49:29.828584 1 driver.go:118 Registering Controller Server I1125 11:49:29.828592 1 driver.go:121 Starting efs-utils watchdog I1125 11:49:29.828643 1 efs_watch_dog.go:216 Copying /etc/amazon/efs/efs-utils.conf since it doesn't exist I1125 11:49:29.829548 1 efs_watch_dog.go:216 Copying /etc/amazon/efs/efs-utils.crt since it doesn't exist I1125 11:49:29.830365 1 driver.go:127 Starting reaper I1125 11:49:29.830394 1 driver.go:137 Listening for connections on address: &net.UnixAddr{Name:\"/var/lib/csi/sockets/pluginproxy/csi.sock\", Net:\"unix\"} rbednar-mac:~ rbednar$ oc -n openshift-cluster-csi-drivers logs pod/aws-efs-csi-driver-controller-547797bd4d-56djb -c kube-rbac-proxy-8211 error: container kube-rbac-proxy-8211 is not valid for pod aws-efs-csi-driver-controller-547797bd4d-56djb rbednar-mac:~ rbednar$ oc -n openshift-cluster-csi-drivers logs pod/aws-efs-csi-driver-controller-547797bd4d-56djb Defaulted container \"csi-driver\" out of: csi-driver, csi-provisioner, provisioner-kube-rbac-proxy, csi-liveness-probe, init-aws-credentials-file (init) I1125 11:49:29.823515 1 config_dir.go:63 Mounted directories do not exist, creating directory at '/etc/amazon/efs' I1125 11:49:29.824107 1 metadata.go:65 getting MetadataService... I1125 11:49:29.826001 1 metadata.go:70 retrieving metadata from EC2 metadata service I1125 11:49:29.828572 1 driver.go:116 Registering Node Server I1125 11:49:29.828584 1 driver.go:118 Registering Controller Server I1125 11:49:29.828592 1 driver.go:121 Starting efs-utils watchdog I1125 11:49:29.828643 1 efs_watch_dog.go:216 Copying /etc/amazon/efs/efs-utils.conf since it doesn't exist I1125 11:49:29.829548 1 efs_watch_dog.go:216 Copying /etc/amazon/efs/efs-utils.crt since it doesn't exist I1125 11:49:29.830365 1 driver.go:127 Starting reaper I1125 11:49:29.830394 1 driver.go:137 Listening for connections on address: &net.UnixAddr{Name:\"/var/lib/csi/sockets/pluginproxy/csi.sock\", Net:\"unix\"} ``` ``` oc -n openshift-cluster-csi-drivers logs pod/aws-efs-csi-driver-controller-547797bd4d-56djb -c kube-rbac-proxy-8211 error: container kube-rbac-proxy-8211 is not valid for pod aws-efs-csi-driver-controller-547797bd4d-56djb ``` cc @openshift/storage"
  },
  {
    "id": "337",
    "type": "pullRequest",
    "title": "OCPBUGS-45374: Updating ose-smb-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-smb-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-smb-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "343",
    "type": "pullRequest",
    "title": "OCPBUGS-45622: Updating ose-azure-disk-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-disk-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-azure-disk-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "341",
    "type": "pullRequest",
    "title": "Updating ose-azure-file-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-file-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: azure-file-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "340",
    "type": "pullRequest",
    "title": "OCPBUGS-45508: Updating ose-aws-ebs-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-aws-ebs-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-aws-ebs-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "339",
    "type": "pullRequest",
    "title": "OCPBUGS-45395: Updating csi-driver-manila-operator-container image to be consistent with ART for 4.19",
    "body": "Updating csi-driver-manila-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-driver-manila-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "336",
    "type": "pullRequest",
    "title": "OCPBUGS-45352: Updating ose-aws-efs-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-aws-efs-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-aws-efs-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "335",
    "type": "pullRequest",
    "title": "OCPBUGS-45267: openstack-manila: modify assets selectors",
    "body": "This commit updates the selectors used in the controller Deployment, PodDisruptionBudget and the controller metrics Service to actually use the labels that are enforced in the controller."
  },
  {
    "id": "326",
    "type": "pullRequest",
    "title": "OCPBUGS-43357: support hcp tolerations",
    "body": "missed as part of"
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55706: Update machine-api-operator pkg with fixes",
    "body": "Manual backport of"
  },
  {
    "id": "126",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-52454: Add spotMarketRequest on marketType spot",
    "body": "If only MarketType=Spot is specified but spotMarketType is not provided, then we must explicitly add spotMarketType to the API config."
  },
  {
    "id": "125",
    "type": "pullRequest",
    "title": "OCPCLOUD-2780: select instance 'MarketType' option",
    "body": "This PR added the support for selecting the Instance MarketType option i.e. OnDemand, CapacityBlock, and Spot. By choosing option CapacityBlock, instance support capacity blocks for ML provided by AWS."
  },
  {
    "id": "123",
    "type": "pullRequest",
    "title": "OCPCLOUD-2836: Update dependencies to k8s 1.32",
    "body": "Updates dependencies to k8s 1.32 to align with OpenShift 4.19 release. There were no breaking changes for this update."
  },
  {
    "id": "119",
    "type": "pullRequest",
    "title": "OCPBUGS-45578: Updating ose-machine-api-provider-aws-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-api-provider-aws-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-api-provider-aws.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "200",
    "type": "pullRequest",
    "title": "OCPBUGS-52509: github.com/go-jose/go-jose/v4 v4.0.5"
  },
  {
    "id": "199",
    "type": "pullRequest",
    "title": "OCPBUGS-45443: Updating ose-aws-pod-identity-webhook-container image to be consistent with ART for 4.19",
    "body": "Updating ose-aws-pod-identity-webhook-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-aws-pod-identity-webhook.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "142",
    "type": "pullRequest",
    "title": "OCPBUGS-55162: UPSTREAM: 8920: Fix azure stack hub volume detach failed",
    "body": "- Correct the AzureStackCloud condition check, fixed the volume detach failed issue on azure stack hub."
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "OCPBUGS-51090: Fix panic for GetZoneByNodeName on Azure Stack",
    "body": "Azure Stack does not support the API Version, 2020-12-01, for PlatformFaultDomain, and therefore panics when we run the cloud provider on Azure Stack. This avoids the panic, but we cannot get the correct PlatformFaultDomain (which may not be an issue)."
  },
  {
    "id": "139",
    "type": "pullRequest",
    "title": "OCPBUGS-50969: UPSTREAM: 8504: Fix GovCloud Config",
    "body": "This change uses the parsed `config` currently being reconciled to initialise the controller."
  },
  {
    "id": "136",
    "type": "pullRequest",
    "title": "CNTRLPLANE-106: Merge (78638bd) into main"
  },
  {
    "id": "127",
    "type": "pullRequest",
    "title": "OCPCLOUD-2844: Merge (dfca04a) into master"
  },
  {
    "id": "129",
    "type": "pullRequest",
    "title": "OCPBUGS-45694: Updating ose-azure-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-azure-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "130",
    "type": "pullRequest",
    "title": "OCPBUGS-45859: Prevent panic when informer receives cache.DeletedFinalStateUnknown",
    "body": "When the informer connection to the API server is temporarily disconnected, the informer may miss events. In that case, the informer will return a `cache.DeletedFinalStateUnknown` object that shows that the object was deleted, but the state it shows may have been stale, and not the final state. This PR updates the logic to correctly handle the final object state, and avoid panicking when the type is not as expected."
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "OCPBUGS-45574: Updating ose-azure-cloud-node-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-cloud-node-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-azure-cloud-node-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "334",
    "type": "pullRequest",
    "title": "ART-12521: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-04-04 17:29:55,704 INFO Vendoring the gomod dependencies 2025-04-04 17:30:10,676 ERROR vendor directory changed after vendoring: A vendor/github.com/subosito/gotenv/.env 2025-04-04 17:30:13,836 ERROR PackageRejected: The content of the vendor directory is not consistent with go.mod. Please check the logs for more details. ``` Konflux ignores .gitignore files since its a possible security gap."
  },
  {
    "id": "333",
    "type": "pullRequest",
    "title": "CNTRLPLANE-105: Add new authentication type UserAssignedIdentityCredentials",
    "body": "This pull request pulls down for ARO HCP."
  },
  {
    "id": "332",
    "type": "pullRequest",
    "title": "OCPCLOUD-2854: Merge (1957fc6) into master"
  },
  {
    "id": "331",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that updates the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "328",
    "type": "pullRequest",
    "title": "OCPBUGS-45570: Updating ose-azure-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-azure-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "105",
    "type": "pullRequest",
    "title": "OCPBUGS-55494: Correct max data disk count table for L family v4",
    "body": "- cherry-pick upstream update max data disk count table to correct max data disk count table for L family v4"
  },
  {
    "id": "104",
    "type": "pullRequest",
    "title": "OCPBUGS-54382 OCPBUGS-55162: Fix ASH azure disk regression issues",
    "body": "Fix ASH azure disk regression issues - Bump `cloud-provider-azure` which conatins the 2 fix commits needed by csi driver."
  },
  {
    "id": "102",
    "type": "pullRequest",
    "title": "OCPBUGS-51376: Rebase against v1.32.0",
    "body": "Fixes OCPBUGS-51376"
  },
  {
    "id": "101",
    "type": "pullRequest",
    "title": "OCPBUGS-51768: UPSTREAM: 2903: CVE-2025-22869: bump golang.org/x/crypto to v0.35.0"
  },
  {
    "id": "100",
    "type": "pullRequest",
    "title": "OCPBUGS-51169: UPSTREAM: 2900: chore: update max data disk count table for D family v6",
    "body": "- update max data disk count table for D family v6 series(upstream fix PR - The Dlsv6, Dldsv6, Dsv6, Ddsv6 series instances are GA recently while their max data disk count are incorrect. ```console $ /bin/azurediskplugin --version Build Date: \"2025-02-20T00:28:56Z\" Compiler: gc Driver Name: disk.csi.azure.com Driver Version: v1.31.1 Git Commit: 20f616920a1c1d4ca11008bf6f117d2079bd781f Go Version: go1.23.4 (Red Hat 1.23.4-1.el9) X:strictfipsruntime Platform: linux/amd64 Topology Key: N/A $ kubectl get no/pewang-dxv6-a-qf9ck-worker-eastus2-l49ft -oyamlyq .spec drivers: - name: file.csi.azure.com nodeID: pewang-dxv6-a-qf9ck-worker-eastus2-l49ft topologyKeys: null - allocatable: count: 16 name: disk.csi.azure.com nodeID: pewang-dxv6-a-qf9ck-worker-eastus2-l49ft topologyKeys: - topology.disk.csi.azure.com/zone - topology.kubernetes.io/zone $ az vm list-sizes -l eastus -o tsv sort grep 'Standard_D8lds_v6' \"Standard_D8lds_v6\":24, ``` The update refer to ```console $ cat vmsizelist.finalStandard_D\\d{1,3}ds_v6Standard_D\\d{1,3}lds_v6' \"STANDARD_D128DS_V6\":64, \"STANDARD_D128LDS_V6\":64, \"STANDARD_D128LS_V6\":64, \"STANDARD_D128S_V6\":64, \"STANDARD_D16DS_V6\":48, \"STANDARD_D16LDS_V6\":48, \"STANDARD_D16LS_V6\":48, \"STANDARD_D16S_V6\":48, \"STANDARD_D192DS_V6\":64, \"STANDARD_D2DS_V6\":8, \"STANDARD_D2LDS_V6\":8, \"STANDARD_D2LS_V6\":8, \"STANDARD_D2S_V6\":8, \"STANDARD_D32DS_V6\":64, \"STANDARD_D32LDS_V6\":64, \"STANDARD_D32LS_V6\":64, \"STANDARD_D32S_V6\":64, \"STANDARD_D48DS_V6\":64, \"STANDARD_D48LDS_V6\":64, \"STANDARD_D48LS_V6\":64, \"STANDARD_D48S_V6\":64, \"STANDARD_D4DS_V6\":12, \"STANDARD_D4LDS_V6\":12, \"STANDARD_D4LS_V6\":12, \"STANDARD_D4S_V6\":12, \"STANDARD_D64DS_V6\":64, \"STANDARD_D64LDS_V6\":64, \"STANDARD_D64LS_V6\":64, \"STANDARD_D64S_V6\":64, \"STANDARD_D8DS_V6\":24, \"STANDARD_D8LDS_V6\":24, \"STANDARD_D8LS_V6\":24, \"STANDARD_D8S_V6\":24, \"STANDARD_D96DS_V6\":64, \"STANDARD_D96LDS_V6\":64, \"STANDARD_D96LS_V6\":64, \"STANDARD_D96S_V6\":64, ```"
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "STOR-2256: Rebase v1.314 upstream",
    "body": "Fixes STOR-2256( Also for unblocking hypershift team. Diff with v1.31.4"
  },
  {
    "id": "91",
    "type": "pullRequest",
    "title": "OCPBUGS-47036: CVE-2024-45338: bump golang.org/x/net to v0.33.0"
  },
  {
    "id": "94",
    "type": "pullRequest",
    "title": "OCPBUGS-46575, STOR-2256: Rebase to upstream v1.31.1 for OCP 4.19",
    "body": "Diff to upstream v1.31.1: Cherry-picked commits: ``` $ git log $( git merge-base openshift/master v1.29.11 )..openshift/master --reverse --ancestry-path --no-merges commit 097e72ef138e7276752147d64dc367739741ae25 Author: Daniel Fajmon dfajmon@redhat.com Date: Mon Jul 8 13:05:21 2024 +0200 UPSTREAM: carry: Add OpenShift files remove .github go mod vendor && go mod tidy commit c1bd78fa24edf6019eb174522a8eb8407154b95d Author: AOS Automation Release Team noreply@redhat.com Date: Wed Dec 4 03:13:43 2024 +0000 UPSTREAM: carry: Updating ose-azure-disk-csi-driver-container image to be consistent with ART for 4.19 Reconciling with commit 473d56fd68a1eac7b5b2b0844ed1eb018c17d7a0 Author: Shannon Poole spoole@redhat.com Date: Tue Dec 17 10:27:46 2024 -0500 UPSTREAM: 2723: CVE-2024-45337: bump golang.org/x/crypto to v0.31.0 commit 6da29df46a6c76241403f2dea5fcb226ab09ba9e Author: andyzhangx xiazhang@microsoft.com Date: Thu Nov 28 07:04:14 2024 +0000 UPSTREAM: 2682: fix: update max data disk count table with v6 VM sku commit bf6fd80f19e7b5e4cd12c667f551dd99b9cd6b0b Author: andyzhangx xiazhang@microsoft.com Date: Sun Jan 5 13:08:22 2025 +0000 UPSTREAM: 2800: chore: update max data disk count table ``` /cc @openshift/storage"
  },
  {
    "id": "93",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55831: UPSTREAM: 2515: allow deleting cross-subscription snapshots",
    "body": "This is an automated cherry-pick of 92 /assign RomanBednar"
  },
  {
    "id": "90",
    "type": "pullRequest",
    "title": "OCPBUGS-52654: Rebase to v1.32.0",
    "body": "fixes OCPBUGS-52654"
  },
  {
    "id": "88",
    "type": "pullRequest",
    "title": "OCPBUGS-51782: UPSTREAM: 2395: CVE-2025-22869: bump golang.org/x/crypto to v0.35.0"
  },
  {
    "id": "85",
    "type": "pullRequest",
    "title": "OCPBUGS-47043: CVE-2024-45338: bump golang.org/x/net to v0.33.0"
  },
  {
    "id": "84",
    "type": "pullRequest",
    "title": "OCPBUGS-46218: CVE-2024-45337: bump golang.org/x/crypto to v0.31.0"
  },
  {
    "id": "83",
    "type": "pullRequest",
    "title": "OCPBUGS-45753: Updating ose-azure-file-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-file-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: azure-file-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "15",
    "type": "pullRequest",
    "title": "NO-JIRA: Add OCP engineers to OWNERS for KMS",
    "body": "Add myself and @swghosh to the OWNERS as this repo will be used in OCP for KMS support. This is needed if we want to find a central place to maintain and distribute the plugins for HCP and OCP. This would also prevent changes that would impact OCP such as to be merged without our awareness."
  },
  {
    "id": "14",
    "type": "pullRequest",
    "title": "CNTRLPLANE-373: Add Support for UserAssignedIdentityCredential for Kubernetes-KMS",
    "body": "Reason for Change: This PR: - updates the repo to use the latest Azure SDKs for authenticating to Azure Cloud; this is in the first commit and entirely provided by @stevekuznetsov, with only some minor fixes added by me - bumps the Dockerfile to the upstream version - bumps the Go to v1.23 - adds the new authentication method, UserAssignedIdentityCredentials (UAMI), also know as MIv3 for the ARO HCP project. Issue Fixed: CNTRLPLANE-373( Notes for Reviewers: - I did not change Steve's commit message or description in the first commit. Happy to do that if we want."
  },
  {
    "id": "9",
    "type": "pullRequest",
    "title": "OCPBUGS-45592: Updating azure-kms-encryption-provider-container image to be consistent with ART for 4.19",
    "body": "Updating azure-kms-encryption-provider-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: azure-kms-encryption-provider.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "10",
    "type": "pullRequest",
    "title": "OCPBUGS-53496: bump golang-jwt v4",
    "body": "Reason for Change: Need to bump the version due to OCPBUGS-53496"
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "OCPBUGS-54617: Update eviction policy for Spot VMs from Deallocate to Delete",
    "body": "This fixes a bug where the spot machine was stuck in provisioned if it got deallocated before it was able to schedule the interruption handler. Now the machine will be deleted by Azure and go failed as expected. It no longer says in the docs that Deallocate policy is not supported. I think that it is supported now. I am able to select delete policy in the Azure portal. Therefore, I think we should switch to delete policy as this is preferred for our usecase."
  },
  {
    "id": "132",
    "type": "pullRequest",
    "title": "OCPBUGS-31515: Re-reconcile machine on NIC provisioning failure",
    "body": "Azure allows resources to enter a \"ProvisioningFailed\" state without returning an error from asynchronous operations. This can result in a cascading failure of dependent resources. According to to remedy this, the resource itself could be operational, but the last API action was a failure. Getting then re-submitting the resource should reset the provisioning state in such a case. For our usage, we will re-queue a `Machine` until the NICs provision successfully, expecting subsequent reconciliations to correct the NIC's state."
  },
  {
    "id": "133",
    "type": "pullRequest",
    "title": "CORS-3883: Allow managed identity from other resource groups",
    "body": "Prior to this commit, MAPI only supports specifying a managed identity by name, and assumes that identity exists in the same resource group as the machine. This commit relaxes that requirement to allow a fully-specified id, to allow a managed identity from any resource group. For background context openshift/installer9538 removes the default managed-identity creation the installer has been creating since the beginning to authenticate cloud-provider-azure. With the move to out-of-tree, we have found that identity is no longer required as cloud-provider-azure is authenticated by credentials requests. Removing this automatic & unnecessary identity creation is a win for users, because they no longer need the Service Account Admin permission, which is a powerful permission. On the other hand, it is possible that there may be a use case for having identities attached to a machine, so openshift/installer9538 also exposes CAPZ's API to allow fuller control of VM identities, in case users need to manage it. Users can bring their own identity to attach to the VMs. We planned on limiting this to control-plane nodes due to the limitation in MAPI addressed by this PR, but @jinyunma pointed out( that control-plane nodes also depend on MAPI for the control-plane machineset operator. So I want to float this PR to see if we can expand the set of values accepted by MAPI. If this PR is unacceptable, we may consider other alternatives: - currently the installer requires that any existing resource group is empty before using it for install. This is to protect against unintended deletion of resources when using `destroy cluster`. We could rework that validation to allow a managed identity to exist in that resource group AND enforce a user-assigned identity belong to the cluster resource group. - we could also just not expose an identity API and simply remove the installer-created identity, but I think that leaves users with worse options, in the case they do need an identity This PR would be my first choice though, as it is most beneficial to users."
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "OCPCLOUD-2839: Bump k8s 1.32",
    "body": "Hello! This is a PR to bump the dependencies to 1.32. Thanks"
  },
  {
    "id": "126",
    "type": "pullRequest",
    "title": "OCPBUGS-38570: Fallback to PlatformFaultDomain when Zones is otherwise unset",
    "body": "When the CCM populates the Zone label, if the zone is not populated in the VM properties, it falls back to the PlatformFaultDomain. This happens when using availability sets as availability sets are not compatible with availability zones. See This updates our zone fetching logic to implement the same fallback."
  },
  {
    "id": "124",
    "type": "pullRequest",
    "title": "OCPBUGS-45663: dynamically setting the amount of fault domains",
    "body": "I tried to dynamically set the amount of fault domains, install cluster with this pr on region \"northcentralus\", after installation scale up machineset, I can see the amount of fault domains is 3 instead of 2."
  },
  {
    "id": "123",
    "type": "pullRequest",
    "title": "OCPBUGS-45481: Updating ose-machine-api-provider-azure-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-api-provider-azure-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-api-provider-azure.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "30",
    "type": "pullRequest",
    "title": "OCPBUGS-53800: github.com/golang-jwt/jwt/v4 v4.5.2"
  },
  {
    "id": "26",
    "type": "pullRequest",
    "title": "OCPBUGS-52508: github.com/go-jose/go-jose/v4 v4.0.5"
  },
  {
    "id": "25",
    "type": "pullRequest",
    "title": "OCPBUGS-45531: Updating ose-azure-workload-identity-webhook-container image to be consistent with ART for 4.19",
    "body": "Updating ose-azure-workload-identity-webhook-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-azure-workload-identity-webhook.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "43",
    "type": "pullRequest",
    "title": "Remove ipam-controller-manager deployment"
  },
  {
    "id": "42",
    "type": "pullRequest",
    "title": "Add metal3 infra group to IPAM manager RBAC"
  },
  {
    "id": "39",
    "type": "pullRequest",
    "title": "Remove IPAM deployment",
    "body": "It's crash looping in CI and we don't use it."
  },
  {
    "id": "38",
    "type": "pullRequest",
    "title": "Find Nodes by hostname"
  },
  {
    "id": "37",
    "type": "pullRequest",
    "title": "downstream: regenerate manifests",
    "body": "Leftover from 36"
  },
  {
    "id": "36",
    "type": "pullRequest",
    "title": "Merge upstream",
    "body": "In this PR, we first re-apply (i.e. revert a revert) an upgrade to capi 1.9.0 and then we merge upstream as usual. Without the double revert, we run into all kinds of nasty merge conflicts. We had to revert the capi 1.9 change because openshift didn't have golang 1.23 at the time. Now it does. This brings us more inline with upstream."
  },
  {
    "id": "30",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-47538: Bump x/net to 0.33.0",
    "body": "Steps used: $ go get golang.org/x/net@v0.33.0 $ go mod tidy $ go mod vendor"
  },
  {
    "id": "29",
    "type": "pullRequest",
    "title": "OCPBUGS-45382: Updating ose-baremetal-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-baremetal-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-baremetal-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "9698",
    "type": "pullRequest",
    "title": "OCPBUGS-55957: Remove Terraform & Altinfra Build Artifacts",
    "body": "Terraform was removed in 4.19, this removes unused build artifacts. Manual cherry-pick of 9667"
  },
  {
    "id": "9695",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55909: Apply defaults then validate confidentialCompute",
    "body": "This is an automated cherry-pick of 9637 /assign patrickdillon"
  },
  {
    "id": "9690",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55731: azure stack: switch cloud provider to standard lb",
    "body": "This is an automated cherry-pick of 9686 /assign patrickdillon"
  },
  {
    "id": "9225",
    "type": "pullRequest",
    "title": "CORS-3633: Fail the install when there are expired certs",
    "body": "When the user creates the ignition configs and a failure or some time goes by before cluster creation occurs, the certs could go bad/expire. The installer can warn of expired certs, but it does not fail. These warnings are often overlooked and pass by too quickly during the installation process. The changes here will cause an immediate failure."
  },
  {
    "id": "9673",
    "type": "pullRequest",
    "title": "CORS-3960: Remove Terraform from Dockerfiles",
    "body": "Removes all dependencies for the Terraform providers image from the Dockerfiles. We want to do this separately from removing all the build artifacts, so that the image can stop being built by ART without breaking anything, then remove the build artifacts."
  },
  {
    "id": "9662",
    "type": "pullRequest",
    "title": "OCPBUGS-55492: sort zone slices extracted from map of byo subnets",
    "body": "Previously, since zones are extracted from map keys, order is not guaranteed. This can lead to an issue where master CAPI machine manifest is configured with a different subnet ID than MAPI machine manifest as they are handled separately. Thist PR ensures the zones are sorted by lexical order before processing CAPI/MAP machine manifests so that zones are distributed in the same order."
  },
  {
    "id": "9680",
    "type": "pullRequest",
    "title": "no-jira: IBI nmstate unit test fix",
    "body": "It appears that nmstatectl version 2.44 has additional error output which causes the unit test string compare to fail. Use a string subset to ensure the error is captured."
  },
  {
    "id": "9676",
    "type": "pullRequest",
    "title": "OCPBUGS-55324: fix nil field access when describing security groups",
    "body": "Previously, call to DescribeSecurityGroups accesses the session field from metadata, which depends on call to VPC to populate that field. However, function VPC, which internally call populateSubnets is now constructing the ec2 client differently so session is field not initialized there, causing nil access. The PR ensures the session field is initialized by using getting func Session instead."
  },
  {
    "id": "9597",
    "type": "pullRequest",
    "title": "OCPBUGS-52203: Find GCP KMS keys",
    "body": "The gcp validation and client in the installconfig asset was not able to find the KMS key ring. This was including keys with global and regional locations. The key rings should be serachable via the GetKeyRingRequest struct, but the resource name projects//locations//keyRings/ was not finding any key rings. The user must have the cloudkms.keyRings.list permission to list the key rings."
  },
  {
    "id": "9124",
    "type": "pullRequest",
    "title": "CORS-3855: Remove ARO build flag from installer",
    "body": "Removing the ARO build flag from the installer to achieve the goal of moving ARO installs closer to the installer. Ideally, these ARO specific changes to the installs/installer need to be done either in the wrapper or hive."
  },
  {
    "id": "9656",
    "type": "pullRequest",
    "title": "OCPBUGS-54902: Custom-DNS: Update Kubeconfig and Infra CR based on private or public cluster",
    "body": "Update Kubeconfig with API or API-Int LB IP based on whether the cluster is public or private respectively. This updated Kubeconfig can be used to reach API server from the install host when cutsom-DNS is enabled and there is no external DNS yet."
  },
  {
    "id": "9657",
    "type": "pullRequest",
    "title": "NO-JIRA: Update SCOS 4.19 bootimage metadata to 9.0.20250411-0",
    "body": "Update to a newer bootimage before we release OKD for 4.19. This change was generated using: ``` plume cosa2stream --target data/data/coreos/scos.json \\ --distro rhcos --no-signatures --name c9s \\ --url \\ x86_64=9.0.20250411-0 \\ aarch64=9.0.20250411-0 \\ s390x=9.0.20250411-0 \\ ppc64le=9.0.20250411-0 ```"
  },
  {
    "id": "9663",
    "type": "pullRequest",
    "title": "CORS-3870: validate duplicate AZs if no subnet roles at all or only for subnets of the same role",
    "body": "We should only validate duplicate AZs for provided subnets if no roles are explicitly specified. This allows us to support the following user stories (see EP 0( - Dedicated Load Balancer Subnets User Story - Cluster Nodes on Different Private Subnets User Story However, we will still validation the duplicate AZs for subnets of the same roles."
  },
  {
    "id": "9666",
    "type": "pullRequest",
    "title": "CORS-3959, CORS-3864: CAPI AzureStack Support, Take II",
    "body": "9645 accidentally broke baremetal installs and was reverted in 9655, per TRT policy. Accordingly, this PR reverts the revert and introduces the fix for baremetal IPI 25aebd22655411c7fe1dd8f0b41be6e303a39b5d"
  },
  {
    "id": "9661",
    "type": "pullRequest",
    "title": "OCPEDGE-1749: TNF Updated bare-metal init sequence to detach control-plane nodes in Two Node OpenShift.",
    "body": "Two Node OpenShift (TNF) is DevPreview in 4.19. In order to ensure that ironic doesn't try to manage the power state of the nodes, we add a check for the DualReplica topology after the control-plane nodes are provisioned during bootstrapping and detach them from ironic. In a future release, when fencing is enabled, it will be important to enforce that this remains an invariant for the DualReplica control-plane topology. There is currently nothing preventing the annotation that detaches these nodes from being removed. See"
  },
  {
    "id": "9665",
    "type": "pullRequest",
    "title": "Revert \"Merge pull request 9645 from patrickdillon/azurestack-mark-iii\"",
    "body": "This reverts commit 63e0c358e0cd31b97d935b827975a748f9bc2360, reversing changes made to d9c19b45176c3d04ac688e35e8f569585a3a39aa."
  },
  {
    "id": "9645",
    "type": "pullRequest",
    "title": "CORS-3959, CORS-3864: CAPI-based AzureStack Installs",
    "body": "Adds support for installing to Azure Stack using CAPZ. Utilizes an openshift fork: openshift/cluster-api-provider-azurestack based on It is simple enough to build the controller from the fork, but in order to pick up the API changes I introduced the forked API (adds a single `ARMEnvironment` field to the ClusterClass) as a subpackage. See 7352698b375c2858ed3b21db3d35141a4126eccc and 3ab4bebcc01eca3e9c9aa8b00da472d7175749d4. The other commits handle the azure stack specifics and are described in the commit messages. Particularly, API Versions need to be updated to compatible versions, older SDKs need to be used to upload blobs, and we need a process for creating managed images, as Azure Stack does not support image galleries."
  },
  {
    "id": "9599",
    "type": "pullRequest",
    "title": "CORS-3870: add validations for subnets field with AWS API",
    "body": "Description This include validations for the vpc.subnets field with AWS API to conform to the specifications for subnet role assignment in the case of BYO subnets. The validation criteria can be found at jira ticket 0 and enhancement proposal 1. For automatic role selection (i.e. no subnets have roles assigned), the installer rejects BYO VPC with untagged subnets (i.e. those without tag `kubernetes.io/cluster/cluster-id`) and suggests users to add a tag `kubernetes.io/cluster/unmanaged` to those subnets. Other changes Other related changes include: - Refactored AWS API helper to be reusable without different query input (i.e. by vpcID, or subnetIDs) and migrated them to sdk v2 if possible. - Refactored and improved test structures. References 0 1"
  },
  {
    "id": "9633",
    "type": "pullRequest",
    "title": "CORS-3871 CORS-3872 CORS-3873: place the cluster components on the assigned byo subnets if any",
    "body": "Descriptions Place the cluster components on the assigned subnets (i.e. via subnet roles). If managed vpc or subnets without roles, fall back to existing logics. Notes There are additional related changes: - Introduce type `SubnetsByZone` in `pkg/asset/installconfig/aws/subnet.go` to avoid confusion with `Subnets` (i.e. should be indexed by subnet ID). - Introduce `SubnetByID` in `pkg/asset/installconfig/aws/metadata.go` for resuable/easy retrieval of subnet metadata from ID. - Unit tests: I only added unit tests for the `default` ingress controller manifest. Other tests require a lot of refactoring + mock support for AWS metadata. To avoid making this PR too large, I defer it to another time and just locally tested manually."
  },
  {
    "id": "9649",
    "type": "pullRequest",
    "title": "CORS-3278: IBMCloud: Remove IBM Cloud TF provider",
    "body": "Now that IBM Cloud CAPI is the default for IPI, remove the IBM Cloud TF provider to prevent it being built, as it is no longer being used."
  },
  {
    "id": "9653",
    "type": "pullRequest",
    "title": "OCPBUGS-54606: convert OVNKubernetes networkType to correct format",
    "body": "The installer is quite lenient about case sensitivity of networkType values. We do have existing logic to convert this field value to the correct format 0( That only applies to OpenShiftSDN. This PR extends that logic to handle OVNKubernetes."
  },
  {
    "id": "9544",
    "type": "pullRequest",
    "title": "CORS-3936: Add support for public-only networking",
    "body": "Add support for public-only networking (i.e., a cluster deployed with managed-VPC while has only public subnets) Ref: Ref:"
  },
  {
    "id": "9636",
    "type": "pullRequest",
    "title": "CORS-3278: IBMCloud: Add DestroyBootstrap for leftover CAPI resources",
    "body": "Add DestroyBootstrap support for IBM Cloud VPC, to cleanup the remaining resources used during bootstrapping during CAPI deployment. Attach a floating IP to bootstrap node for public clusters during post provision."
  },
  {
    "id": "9125",
    "type": "pullRequest",
    "title": "CORS-3854: Enable option to set boot diagnostics",
    "body": "Enabling the option for the users to set the type of boot diagnostics for the bootstrap and control plane machines for log collection."
  },
  {
    "id": "9652",
    "type": "pullRequest",
    "title": "CORS-3278: Switch IBMCloud to CAPI",
    "body": "Sets IBMCloud to default to using CAPI--not Terraform for installs."
  },
  {
    "id": "9655",
    "type": "pullRequest",
    "title": "CORS-3867: fix CRD descriptor to mention required BootstrapNode role",
    "body": "This is a follow-up to In manual role selection, BootstrapNode role is required. This should be reflected in the CRD descriptor (i.e. `openshift-install explain`)."
  },
  {
    "id": "9648",
    "type": "pullRequest",
    "title": "CORS-3886: azure: Set use managed identity to false",
    "body": "Setting the use managed identity extension to false considering installer does not rely on this for now."
  },
  {
    "id": "9608",
    "type": "pullRequest",
    "title": "OCPBUGS-54319: oci-eval-user-data uses dmidecode which is not supported on ppc64le or s390x",
    "body": "added a short-circuit"
  },
  {
    "id": "9627",
    "type": "pullRequest",
    "title": "AGENT-1159: agent docs update",
    "body": "This patch describes the new interactive workflow and updated accordingly the existing ones"
  },
  {
    "id": "9650",
    "type": "pullRequest",
    "title": "OCPBUGS-53439: fix inconsistent subnet role name for bootstrap node",
    "body": "Previously, the installer supports role BootstrapNode but the CRD descriptor says Bootstrap."
  },
  {
    "id": "9639",
    "type": "pullRequest",
    "title": "NO-JIRA: fix the platform test assertions to check expected err message",
    "body": "Descriptions The PR fixed the platform test assertions to compare expected err message. Previously, it is using the incorrect field (i.e. `credMode`). I think it causes actually failed unit tests to pass. This is a also follow-up PR to CORS-3867, CORS-3868( and CORS-3869( with the following changes: - Fix a typo in the err message for static validations of the `aws.vpc.subnets` field. It should have failed previously but due to the issue above, it passed :sweat: - Handled empty `vpc.subnets` value case (i.e. same as nil). - Reworded CRD marker description about untagged subnets to be clearer."
  },
  {
    "id": "9641",
    "type": "pullRequest",
    "title": "OCPBUGS-43990: Filter out excess CA certs when adding node",
    "body": "Ignore CoreOS's CA root certificates that were erroneously added to the user-ca-bundle by the agent-based installer in 4.15.0 - 4.15.26 (OCPBUGS-34721)."
  },
  {
    "id": "9642",
    "type": "pullRequest",
    "title": "NO-JIRA: add Roshan-R to CoreOS approvers and reviewers"
  },
  {
    "id": "9624",
    "type": "pullRequest",
    "title": "OCPEDGE-1506: Add Platform based validation to fencing credentials",
    "body": "This PR adds some necessary platform based validations to TNF fencing credentials: - making sure that the fencing credentials are only allowed in platform `baremetal` or `none` - making sure that fencing credentials are mutually exclusive with baremetal's hosts"
  },
  {
    "id": "9600",
    "type": "pullRequest",
    "title": "CORS-3908: Update gcp cloud provider config map to include new endpoints",
    "body": "manifests/gcp/cloudproviderconfig: The GCP cloud provider config will now be supplied with the api-endpoint and container-api-endpoint. The GCP Cloud provider (and upstream) can accept a config with the api-endpoint (compute) and container-api-endpoint (container) values to override the endpoints for the services. See and"
  },
  {
    "id": "9638",
    "type": "pullRequest",
    "title": "SPLAT-2121: vsphere - if no host group found, append not found",
    "body": "This commit adds the missing error if the group loop does not find a host group with the defined failure domain hostGroup param."
  },
  {
    "id": "9632",
    "type": "pullRequest",
    "title": "OCPBUGS-54541: Update RHCOS 4.19 bootimage metadata to 9.6.20250402-0",
    "body": "The changes done here will update the RHCOS 4.19 bootimage metadata. Notable changes in the boot image are: - Add pkey_cca kernel module to detect CEX domain for LUKS encryption This change was generated using: ``` plume cosa2stream --target data/data/coreos/rhcos.json \\ --distro rhcos --no-signatures --name rhel-9.6 \\ --url \\ x86_64=9.6.20250402-0 \\ aarch64=9.6.20250402-0 \\ s390x=9.6.20250402-0 \\ ppc64le=9.6.20250402-0 ```"
  },
  {
    "id": "9623",
    "type": "pullRequest",
    "title": "OCPBUGS-46601: IBM Cloud Bump IBM Cloud CAPI",
    "body": "Bump the IBM Cloud CAPI commit, bumping Cluster-API, and updating some DNS Services new options calls. - OCPBUGS-46601: IBMCloud: Bump IBM Cloud CAPI - Bump IBM Cloud CAPI commit - Bump Cluster-API patch version to 1.9.5"
  },
  {
    "id": "9144",
    "type": "pullRequest",
    "title": "OCPBUGS-43724: Fix Load balancer IP setup",
    "body": "Fixing the issue where the load balancer IP was not set in the range of the machine network CIDRs by setting it to the first IP in the CIDR range. Also extending this logic to non-existing vnet installs since the problem can happen even during normal installs."
  },
  {
    "id": "9615",
    "type": "pullRequest",
    "title": "OCPBUGS-54407: Use correct case in path error messages",
    "body": "Users care about the key names in YAML, not in the golang structs."
  },
  {
    "id": "9603",
    "type": "pullRequest",
    "title": "OCPBUGS-54232: Azure Move BYO VNET SG creation to InfraReady",
    "body": "Moves the dummy SG created for BYO vnet installs to the InfraReady hook, rather than preprovision. A previous commit, moved resource group creation to be handled by CAPZ. So the SG creation needs to be done after CAPZ has created the resource group. Fixes: OCPBUGS-54232"
  },
  {
    "id": "9629",
    "type": "pullRequest",
    "title": "OCPEDGE-1701: fix: update tnf validation to account for tna install config"
  },
  {
    "id": "9617",
    "type": "pullRequest",
    "title": "OCPBUGS-52473: aarch64 kernel is no longer zipped"
  },
  {
    "id": "9631",
    "type": "pullRequest",
    "title": "NO-JIRA: Add jcapiitao to CoreOS approvers and reviewers"
  },
  {
    "id": "9586",
    "type": "pullRequest",
    "title": "OCPBUGS-53067: Updating the file names in generic.ins file for s390x ABI for pxe Artifacts",
    "body": "This PR addresses an issue in agentpxefiles.go where incorrect filename handling caused missing or misnamed PXE artifacts in generic.ins. The fix ensures that filenames are correctly processed and used when generating PXE boot artifacts. Changes: Fixed string handling in agentpxefiles.go to correctly generate PXE filenames in generic.ins. Ensured consistency in naming boot artifacts. Improved logging for better debugging. Testing: Successfully generated PXE boot files with the correct filenames. Verified that the changes do not break existing functionality."
  },
  {
    "id": "9628",
    "type": "pullRequest",
    "title": "NO-JIRA: OWNERS_ALIASES - Add user as coreos-approvers / coreos-reviewers",
    "body": "Add a new team member user as coreos-approvers / coreos-reviwers in the OWNERS_ALIASES file"
  },
  {
    "id": "9625",
    "type": "pullRequest",
    "title": "CORS-3883: Remove user-assigned identity from ARM template",
    "body": "For UPI, user-assigned identity attached on each node is also not required, remove it."
  },
  {
    "id": "9577",
    "type": "pullRequest",
    "title": "OCPBUGS-53303: Revert: Power VS: Disallow platform.powervs.clusterOSImage in install-config",
    "body": "Reverts"
  },
  {
    "id": "9596",
    "type": "pullRequest",
    "title": "OCPBUGS-42241: Update to cluster-api-provider-azure release-v1.17.5",
    "body": "Update cluster-api-provider-azure to release-1.17.5 to bring in the fix"
  },
  {
    "id": "9571",
    "type": "pullRequest",
    "title": "OCPBUGS-53140: Validation for API and Ingress VIPs when using user-managed load balancer",
    "body": "- Currently when no API and Ingress VIPs are provided defaults are generated based on the available machine network CIDR. - The change skips the above step if a user-managed load balancer is provided."
  },
  {
    "id": "9556",
    "type": "pullRequest",
    "title": "no-jira: Add Johan-Liebert1 to coreos-reviewers and coreos-approvers"
  },
  {
    "id": "9395",
    "type": "pullRequest",
    "title": "CORS-3923, CORS-3927: Support confidential cluster installation on SEV-SNP and TDX nodes on GCP",
    "body": "This patch series aims to support installing a cluster on AMD SEV SNP or TDX confidential nodes on GCP. Previously, only AMD SEV nodes were supported, which were configured through the `confidentialCompute: Enabled` configuration flag. Now that GCP supports specifying the confidential instance type, we are letting users specify which node type (SEV/SEV-SNP/TDX) they would like to deploy the cluster on. This can be done by using any of the new available values in `condidentialCompute` such as `AMDEncryptedVirtualization` (similar to `Enabled`), `AMDEncryptedVirtualizationNestedPaging` (AMD SEV-SNP) or `IntelTrustedDomainExtensions` (Intel TDX). This series depend on the following patches: - - - - Which have been merged now and and vendored in this patch. A new cluster-api-provider-gcp release containing the changes I submitted isn't available yet. I created the `data/data/cluster-api/gcp-infrastructure-components.yaml` myself. I'm not sure if that's a valid approach, or if we should rather wait until a new version is out."
  },
  {
    "id": "9537",
    "type": "pullRequest",
    "title": "AGENT-587: Support Nutanix in Agent-based Installer",
    "body": "AGENT-587( Add Nutanix platform integration OCPSTRAT-367( Support Nutanix in Agent-based Installer"
  },
  {
    "id": "9439",
    "type": "pullRequest",
    "title": "SPLAT-2000: Added vSphere provisioning mode support for data disks",
    "body": "SPLAT-2000( Changes - Updated installer to contain new provisioning mode field in install-config for vSphere data disks - Updated installer to use new CAPV and openshift/API for data disk provisioning mode - Updated installer to generate CAPV and MAPI machines with provisioning fields populated Dependencies -"
  },
  {
    "id": "9546",
    "type": "pullRequest",
    "title": "OCPEDGE-1496: TNF Collect pacemaker, pcsd, and corosync logs and journals in installer-masters-gather.sh",
    "body": "This took several iterations to get right. I've combined the extra services into the existing journal gather logic, and then collected the complete pacemaker log files into a separate directory and compressed each of the files. The only one that needs compression is the pacemaker log, but it felt cleaner to do it this way. Finally, the pacemaker log had an issue where it couldn't be copied to the bootstrap host because the read flag wasn't set in the other permission group. Fixing this addressed the copy-over issue."
  },
  {
    "id": "9540",
    "type": "pullRequest",
    "title": "OCPBUGS-52356: IBMCloud: Fix CAPI endpoint overrides",
    "body": "Fix the endpoint override support for IBM Cloud CAPI and the Ignition URL for bootstrap node during CAPI deployment. Related:"
  },
  {
    "id": "9521",
    "type": "pullRequest",
    "title": "OCPEDGE-1505: Enhance Platform none with Fencing Credentials",
    "body": "As part of the TNF( (Two Nodes Fencing) project we are looking to enhance platform none with fencing credentials. This is required so users can provide the fencing details as they are mandatory for a TNF cluster. This change is described in more details in the TNF Enhancement Proposal( and is tracked by OCPEDGE-1505( Jira ticket."
  },
  {
    "id": "9194",
    "type": "pullRequest",
    "title": "OSASINFRA-3730: Add support for storing OpenStack CA bundles",
    "body": "If a CA bundle is required to talk to your OpenStack then obviously all services that talk to the cloud need to have both credentials and said bundle. Currently, these users can get their credentials via cloud credential operator, but they need to source their CA bundle from elsewhere (typically by extracting it from the cloud controller manager's configuration). This makes configuration of services more complicated than necessary. Continue the resolution of the issue by storing the CA bundle, if any, in the root secret on OpenStack. When coupled with the changes introduced in openshift/cloud-credential-operator780, this allows us to dole out the bundle to anyone who asks for it via a `CredentialsRequest`. ~While we're here, we also tweak the configuration for the cloud provider to (a) start generating the configuration file in the new format expected by `cluster-cloud-controller-manager-operator` and (b) stop generating an old secret that only the old, now-removed in-tree OpenStack cloud provider needed and used.~ EDIT: I have deferred the above changes to a different PR."
  },
  {
    "id": "9589",
    "type": "pullRequest",
    "title": "OCPBUGS-53258: IBMCloud: Bump TF provider for CIS fix",
    "body": "Bump the IBM Cloud Terraform provider to pick up the fix for CIS API changes. This bump cannot be directly backported due to golang version requirements by the TF provider. Related:"
  },
  {
    "id": "9598",
    "type": "pullRequest",
    "title": "NO-JIRA: update OWNER_ALIASES for azure and aws",
    "body": "AWS updates: - add tthvo Azure updates: - remove mtulio - add rna-afk and sadasu /assign patrickdillon"
  },
  {
    "id": "9563",
    "type": "pullRequest",
    "title": "OCPBUGS-53106: Create ConfigMap to reference baremetal-installer image"
  },
  {
    "id": "9569",
    "type": "pullRequest",
    "title": "NO-JIRA: CVE-2025-22868 bump oauth2 pkg to v0.27.0",
    "body": "we didn't find any traces of using the function `Verify` of outh2 pkg as mentioned in the in installer. So, installer is not affected by CVE-2025-22868, but we have decided to bump the oauth2 pkg version v0.27.0 to avoid any potential confusion from scanners. we will fix this in main, but won't plan any backports as it is not vulnerable to installer. below is the utility we have used to verify if the installer is affected with the CVE `callgraph -format=digraph cmd/openshift-install/.go grep jws.Verify`"
  },
  {
    "id": "9528",
    "type": "pullRequest",
    "title": "CORS-3918: Send service endpoint overrides to CAPG through cluster spec",
    "body": "Vendoring updates for CAPG upgrades to latest commit. Vendor updates for CAPG provider in cluster-api providers Match the required set in the CAPG go.mod file to the CAPG required section in their go.mod. This is due to some issues with the CEL library. Without the update the CEL library causes the build to fail on the previous locked version. Generated and added the infrastructure components yaml (CRD) for CAPG. Set the service endpoints in the CAPG cluster spec. Setting the values here will trigger CAPG to use overridden endpoints when creating the clients for gcp APIs."
  },
  {
    "id": "9593",
    "type": "pullRequest",
    "title": "OCPBUGS-53465: Update RHCOS 4.19 bootimage metadata to 9.6.20250321-0",
    "body": "The changes done here will update the RHCOS 4.19 bootimage metadata. Notable changes in the boot image are: OCPBUGS-49394 - afterburn-hostname service fails on openstack cluster This change was generated using: ``` plume cosa2stream --target data/data/coreos/rhcos.json \\ --distro rhcos --no-signatures --name rhel-9.6 \\ --url \\ x86_64=9.6.20250321-0 \\ aarch64=9.6.20250321-0 \\ s390x=9.6.20250321-0 \\ ppc64le=9.6.20250321-0 ```"
  },
  {
    "id": "9579",
    "type": "pullRequest",
    "title": "OCPEDGE-1513: Fixed topology logic for 2-node installs and added unit tests",
    "body": "infraTopology for Arbiter and DualReplica needs to be HA, as it currently stands the infraTopology value does not have the same enums as controlPlaneTopology so the validation will fail during install if infraTopology is not a valid enum of either HA or Single, for Arbiter and DualReplica we use HA."
  },
  {
    "id": "9582",
    "type": "pullRequest",
    "title": "OCPBUGS-53379: Update RHCOS 4.19 bootimage metadata to 9.6.20250319-0",
    "body": "The changes done here will update the RHCOS 4.19 bootimage metadata. Notable changes in the boot image are: - Add AWS support in mx-central1, ap-southeast-5, and ap-southeast-7 - OCPBUGS-48614 - Allow Kubelet Credential Provider to run on Node ignition This change was generated using: ``` plume cosa2stream --target data/data/coreos/rhcos.json \\ --distro rhcos --no-signatures --name rhel-9.6 \\ --url \\ x86_64=9.6.20250319-0 \\ aarch64=9.6.20250319-0 \\ s390x=9.6.20250319-0 \\ ppc64le=9.6.20250319-0 ```"
  },
  {
    "id": "9584",
    "type": "pullRequest",
    "title": "AGENT-467: show the agent ui url when available",
    "body": "This patch shows the UI url in the rendezvous node console when available."
  },
  {
    "id": "9538",
    "type": "pullRequest",
    "title": "CORS-3883, CORS-3861, CORS-3937: Azure Machine Identity API",
    "body": "Most significantly, this PR removes the automatic creation of the cluster identity which was attached to control-plane and compute nodes. This identity was originally created in order to authenticate the in-tree cloud-provider-azure. When cloud-provider-azure moved out-of-tree and under the management of the CCMO, it began to use credentials requests to authenticate. The identity we create for that purpose is now unused. By removing the creation of the identity, we can reduce the permissions required to run an Azure install, particularly the User Access Administrator role, which is a significant role. This PR also extends CAPZ's identity API into the install config machine pool to allow users to customize the identities attached to VMs. The identity will default to `None`, but we also allow users to BYO `UserAssigned` identities or to have Azure create a `SystemAssigned` identity. For example: ```yaml controlPlane: platform: azure: identity: type: UserAssigned userAssignedIdentities: - name: test-capi-id resourceGroup: os4-common subscription: 433715e6-37fe-4328-af75-3661e13b15fc ``` uses an existing identity called `test-capi-id` from the `os4-common` resource group. ```yaml controlPlane: platform: azure: identity: type: SystemAssigned ``` Will create a system-assigned identity and attach it to the VM. It defaults to a contributor role. The system-assigned identity role can also be customized: ```yaml controlPlane: platform: azure: identity: type: SystemAssigned systemAssignedIdentityRole: definitionID: /providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635 ``` Will give the system-assigned identity the Owner role (the value for `definitionID` corresponds to the owner role). This will also work for custom roles. 008926c614933a1eb6e6b25af7ce6785ff729d32 removes any identity from being attached to compute nodes. To configure an identity in MAPI, MAPI expects a user-assigned identity in the machine's resource group. That would only be possible when installing to an existing resource group, but the installer enforces that resource group to be empty. This can be addressed in future work, particularly the MAPI-CAPI transition will allow us to extend this API directly to compute nodes."
  },
  {
    "id": "9574",
    "type": "pullRequest",
    "title": "AGENT-537: Run agent installer command to create certificates",
    "body": "If the agent tls certificates have not been created yet, i.e. when using the agent UI, use the installer command to create the certs prior to running the assisted-service. Requires"
  },
  {
    "id": "8784",
    "type": "pullRequest",
    "title": "OCPBUGS-52959: Issue short lived certificates if ShortCertRotation featuregate is enabled",
    "body": "Implements"
  },
  {
    "id": "9568",
    "type": "pullRequest",
    "title": "OCPBUGS-53173: PowerVS: remove TF code",
    "body": "Remove the PowerVS Terraform code path as we no longer support it."
  },
  {
    "id": "9567",
    "type": "pullRequest",
    "title": "no-jira: add dev docs for bumping CAPI provider version",
    "body": "Bumping CAPI provider version is currently a manual step with little documentation to follow. This commit gathers all knowledge of such steps for other contributors."
  },
  {
    "id": "9573",
    "type": "pullRequest",
    "title": "OCPBUGS-53183: Avoid adding duplicate entries to NO_PROXY",
    "body": "The agent installer adds an entry to NO_PROXY for the machine network CIDR when a proxy is defined. This entry should not be added if it already exists in order to prevent duplicate entries. An assisted-service validation now checks this, see"
  },
  {
    "id": "9560",
    "type": "pullRequest",
    "title": "SPLAT-2078: Removed VSphereStaticIPs feature gate",
    "body": "SPLAT-2078( Changes - Removed references to VSphereStaticIPs feature gate Notes After a feature gate has been GA in an OCP release, we are supposed to clean up feature gate usage in the next release. VSphere static IP support GA'd in 4.16, so the intention is to remove the feature gate as part of 4.19."
  },
  {
    "id": "9551",
    "type": "pullRequest",
    "title": "OCPBUGS-53280: PowerVS: Re-enable disconnected installs",
    "body": "With the Disconnected install all worked out with CAPI, it is time to revert and drop the check that has been blocking \"direct disconnected install\" on PowerVS (8798) Signed-off-by: Hiro Miyamoto miyamotoh@us.ibm.com"
  },
  {
    "id": "9557",
    "type": "pullRequest",
    "title": "AGENT-537: Add agent command to generate certificates",
    "body": "Add a new hidden agent-based-installer command to generate tls certificates. This will be used by the agent UI. ``` $ ./bin/openshift-install agent create certificates INFO Certificates created in: tls $ ls tls admin-kubeconfig-signer.crt kube-apiserver-lb-signer.crt kube-apiserver-localhost-signer.crt kube-apiserver-service-network-signer.crt admin-kubeconfig-signer.key kube-apiserver-lb-signer.key kube-apiserver-localhost-signer.key kube-apiserver-service-network-signer.key ```"
  },
  {
    "id": "9541",
    "type": "pullRequest",
    "title": "OCPBUGS-39146: Validate sgdisk partition start in image based installer config",
    "body": "This change adds a validation for the sgdisk( partition start sector in the image based installer config. According to sgdisk's man page: Both start and end sectors can be specified in absolute terms as sector numbers or as positions measured in kibibytes (K), mebibytes (M), gibibytes (G), tebibytes (T), or pebibytes (P); for instance, 40M specifies a position 40MiB from the start of the disk. You can specify locations relative to the start or end of the specified default range by preceding the number by a '+' or '-' symbol, as in +2G to specify a point 2GiB after the default start sector, or -200M to specify a point 200MiB before the last available sector. A start or end value of 0 specifies the default value, which is the start of the largest available block for the start sector and the end of the same block for the end sector."
  },
  {
    "id": "9565",
    "type": "pullRequest",
    "title": "AGENT-1113: additional refinement for loading the agent UI",
    "body": "This patch is refiniment followup on"
  },
  {
    "id": "9553",
    "type": "pullRequest",
    "title": "SPLAT-2072: Removed VSphereMultiVCenters feature gate",
    "body": "SPLAT-2072( Changes - Removed usage of feature gate VSphereMultiVCenter for multiple vCenter configurations since its now GA. - Removed legacy ini configuration from installer now that multi vCenter is GA. Notes After a feature gate has been GA in an OCP release, we are supposed to clean up feature gate usage in the next release. Multi vCenter support GA'd in 4.18, so the intention is to remove the feature gate as part of 4.19."
  },
  {
    "id": "9534",
    "type": "pullRequest",
    "title": "OCPEDGE-1513: feat(topologies): add DualReplica topology mode",
    "body": "Add support for new DualReplica topology mode"
  },
  {
    "id": "9300",
    "type": "pullRequest",
    "title": "OCPBUGS-45692: Modified ova template name to use failure domain name",
    "body": "OCPBUGS-45692 Changes - Modified importRhcosOva() to check for max length - Modified importRhcosOva() to use failure domain name as part of OVA filename instead of region and zone."
  },
  {
    "id": "9417",
    "type": "pullRequest",
    "title": "OCPBUGS-50552: Power VS: Disallow clusterOSImage install-configuration parameter",
    "body": "platform.powervs.clusterOSImage was used to override the default RHCOS image being installed on cluster nodes. This parameter is no longer supported. This PR removes it."
  },
  {
    "id": "9555",
    "type": "pullRequest",
    "title": "NO-JIRA: OWNERS: add thuan",
    "body": "cc @tthvo"
  },
  {
    "id": "9533",
    "type": "pullRequest",
    "title": "OCPBUGS-51209: Changed kernelFileType name from kernel.img to vmlinuz for s390x",
    "body": "- Changed kernelFileType name from kernel.img to vmlinuz for s390x - As with rhcos 9.6 there will be no kernel.img in the ISO images under /images/pxeboot and to maintain the same name across all architectures , renaming kernelFiletype from kernel.img to vmlinuz for s390x as well."
  },
  {
    "id": "9532",
    "type": "pullRequest",
    "title": "OCPBUGS-6271: Adding VIPs Validation for agent based vsphere installation",
    "body": "VIPs are required for baremetal in IPI, while they are optional for vSphere. As a result, if an install-config is supplied that does not set `platform.vsphere.apiVIP` or `platform.vsphere.ingressVIP`, there is presently no validation that verifies that the VIPs are provided on vSphere. Below are the test results after adding the validations, Test Case1: Generate agent installer iso file with out providing the APIVIPs and INGRESSVIPs in install-config.yaml for vsphere Result: ISO didnt generate instead it said ``` ERROR failed to write asset (Agent Installer ISO) to disk: cannot generate ISO image due to configuration errors FATAL failed to fetch Agent Installer ISO: failed to load asset \"Install Config\": invalid install-config configuration: platform.vsphere.apiVIPs: Required value: must specify at least one VIP for the API, platform.vsphere.ingressVIPs: Required value: must specify at least one VIP for the Ingress ``` Test Case2: Generate agent installer iso file with APIVIPs and INGRESSVIPs in install-config.yaml for vsphere Result: ISO file generated successfully"
  },
  {
    "id": "9529",
    "type": "pullRequest",
    "title": "AGENT-1113: enhance the unconfigured-ignition command to support the interactive workflow",
    "body": "This patch adds a new flag `--interactive` to the `unconfigured-ignition` command to support the interactive disconnected workflow. It is possible to specify the rendezvous IP via the agent-config.yaml file. The interactive workflow spins up the assisted-ui after the assisted-service (and it's mutually exclusive with the automatic workflow services). Required by: Related to:"
  },
  {
    "id": "9120",
    "type": "pullRequest",
    "title": "OCPBUGS-33370: Improve baremetal gather error message",
    "body": "masters.json is only written when bootstrap runs. Provide a hint that if the file is missing, perhaps there were errors that prevented bootstrap from starting."
  },
  {
    "id": "9526",
    "type": "pullRequest",
    "title": "OCPBUGS-36553: VSphere: add vips to machinenetwork",
    "body": "Appends the ingress and api vips to the machinenetworks in the cluster infrastructure object, because the cluster network operator checks to ensure that the machinenetwork contains those vips. In some edge cases we have seen valid configurations fail when the VIPs appear to be outside the valid range. Here are some dumps of what the infrastructure manifest looks like (these were captured during unit tests): Single Stack Spec: ``` APIServerInternalIPs: (v1.IP) (len=1 cap=1) { (v1.IP) (len=11) \"192.168.1.0\" }, IngressIPs: (v1.IP) (len=1 cap=1) { (v1.IP) (len=13) \"192.168.222.4\" }, MachineNetworks: (v1.CIDR) (len=3 cap=4) { (v1.CIDR) (len=11) \"10.0.0.0/16\", (v1.CIDR) (len=14) \"192.168.1.0/32\", (v1.CIDR) (len=16) \"192.168.222.4/32\" } ``` Status: ``` APIServerInternalIP: (string) (len=11) \"192.168.1.0\", APIServerInternalIPs: (string) (len=1 cap=1) { (string) (len=11) \"192.168.1.0\" }, IngressIP: (string) (len=13) \"192.168.222.4\", IngressIPs: (string) (len=1 cap=1) { (string) (len=13) \"192.168.222.4\" }, NodeDNSIP: (string) \"\", LoadBalancer: (v1.VSpherePlatformLoadBalancer)(nil), MachineNetworks: (v1.CIDR) (len=3 cap=4) { (v1.CIDR) (len=11) \"10.0.0.0/16\", (v1.CIDR) (len=14) \"192.168.1.0/32\", (v1.CIDR) (len=16) \"192.168.222.4/32\" } ``` Dual Stack Spec ``` APIServerInternalIPs: (v1.IP) (len=2 cap=2) { (v1.IP) (len=11) \"192.168.1.0\", (v1.IP) (len=7) \"fe80:1\" }, IngressIPs: (v1.IP) (len=2 cap=2) { (v1.IP) (len=13) \"192.168.222.4\", (v1.IP) (len=7) \"fe80:2\" }, MachineNetworks: (v1.CIDR) (len=6 cap=8) { (v1.CIDR) (len=11) \"10.0.0.0/16\", (v1.CIDR) (len=9) \"fe80:/10\", (v1.CIDR) (len=14) \"192.168.1.0/32\", (v1.CIDR) (len=10) \"fe80:1/64\", (v1.CIDR) (len=16) \"192.168.222.4/32\", (v1.CIDR) (len=10) \"fe80:2/64\" } ``` Status ``` APIServerInternalIP: (string) (len=11) \"192.168.1.0\", APIServerInternalIPs: (string) (len=2 cap=2) { (string) (len=11) \"192.168.1.0\", (string) (len=7) \"fe80:1\" }, IngressIP: (string) (len=13) \"192.168.222.4\", IngressIPs: (string) (len=2 cap=2) { (string) (len=13) \"192.168.222.4\", (string) (len=7) \"fe80:2\" }, NodeDNSIP: (string) \"\", LoadBalancer: (v1.VSpherePlatformLoadBalancer)(nil), MachineNetworks: (v1.CIDR) (len=6 cap=8) { (v1.CIDR) (len=11) \"10.0.0.0/16\", (v1.CIDR) (len=9) \"fe80:/10\", (v1.CIDR) (len=14) \"192.168.1.0/32\", (v1.CIDR) (len=10) \"fe80:1/64\", (v1.CIDR) (len=16) \"192.168.222.4/32\", (v1.CIDR) (len=10) \"fe80:2/64\" } ``` /cc @mkowalski @jcpowermac @rvanderp3"
  },
  {
    "id": "9451",
    "type": "pullRequest",
    "title": "OCPBUGS-49737: Custom-DNS: Update master and worker user data secrets",
    "body": "When the master and worker pointer ignitions are updated, also update the user data secret for each of these roles with their respective pointer ignition contents. Update Bootstrap ignition with updated user data secret files for master and worker."
  },
  {
    "id": "9223",
    "type": "pullRequest",
    "title": "CORS-2508: aws: remove unused autoscaling:DescribeAutoScalingGroups perm",
    "body": "With the analysis from the permission is required by the installer but never used."
  },
  {
    "id": "9524",
    "type": "pullRequest",
    "title": "OCPBUGS-51378: Change vsphere conversion govmomi err to be clear",
    "body": "This commit changes the govmomi error to be more clear in scenarios of UPI, AI and Assisted."
  },
  {
    "id": "9523",
    "type": "pullRequest",
    "title": "CORS-3278: Bump IBM Cloud CAPI to v0.10.0",
    "body": "Bump IBM Cloud CAPI to v0.10.0 to pick up fixes for Infrastructure."
  },
  {
    "id": "9227",
    "type": "pullRequest",
    "title": "OCPBUGS-44840: Mount the user-ca-bundle into ICC",
    "body": "The ICC will then add it to the custom image in order to pull down the IPA image."
  },
  {
    "id": "9531",
    "type": "pullRequest",
    "title": "OCPBUGS-50637: Remove error logging when determining image arch",
    "body": "In a disconnected environment the check for image architecture generates an error message since the icsp info is not checked, even though the image create succeeds. This has caused multiple customer cases to be generated."
  },
  {
    "id": "9525",
    "type": "pullRequest",
    "title": "OCPBUGS-51171: aws: add ec2:ReplaceRoute permission",
    "body": "When the installer manages/creates VPC, it might need to update outdated routes in the route table. For example, see issue 0. Note: in the case of byo (unmanaged) VPC, CAPA does not reconcile the route table, thus not requiring the permissions 1. References 0 1"
  },
  {
    "id": "9489",
    "type": "pullRequest",
    "title": "OCPBUGS-47724: AWS: Copy static MCO resources needed for custom-dns",
    "body": "Copy AWS static resources for the bootstrap instance of MCO."
  },
  {
    "id": "9421",
    "type": "pullRequest",
    "title": "OCPBUGS-49623: IBMCloud: Missing ca-mon region due to static region list",
    "body": "Dynamically lookup the available IBM Cloud Regions, using Global Catalog, rather than maintaining a hardcoded list."
  },
  {
    "id": "9383",
    "type": "pullRequest",
    "title": "OCPBUGS-47681: Support regions only available in v2 of the aws sdk",
    "body": "update vendor Use the sdk-v2 to get the regions Note: this will drop the survey to only use the region name, the description is not available."
  },
  {
    "id": "9520",
    "type": "pullRequest",
    "title": "OKD-235: Add stream metadata for scos to be used by OKD",
    "body": "OKD will now use centos pure os bootimages This change was generated using: ``` plume cosa2stream \\ --distro rhcos --no-signatures --name c9s \\ --url \\ x86_64=9.0.20250222-0 \\ aarch64=9.0.20250222-0 \\ ppc64le=9.0.20250222-0 \\ s390x=9.0.20250222-0 ```"
  },
  {
    "id": "9530",
    "type": "pullRequest",
    "title": "OCPEDGE-1635: Set default values for arbiter",
    "body": "If arbiter is set in the install config, then we want to set it's default values."
  },
  {
    "id": "9527",
    "type": "pullRequest",
    "title": "OCPBUGS-39583: Remove tmp directory used for agent pxe files",
    "body": "Remove the tmp directory that is created when running the command: 'openshift-install agent create pxe-files'"
  },
  {
    "id": "9522",
    "type": "pullRequest",
    "title": "No-ISSUE: (dep) Bump openshift/api",
    "body": "Bumping openshift/api because the operator-framework team is interested in pulling in two commits: 1. featuregate for catalogd metas web api( 2. (Follow up to 1) Fix FeatureGateNewOLMCatalogdAPIV1Metas spelling error( This is motivated by the failure seen in which ran into the issue of the cluster failing to come up because the new featuregate was not being registered( Steps taken: 1. go get github.com/openshift/api@e8e096a21cb3dbeb93f1dc5138bf42ec766fc407 2. go mod tidy 3. go mod vendor"
  },
  {
    "id": "9517",
    "type": "pullRequest",
    "title": "CORS-3917: Add install config validation for service endpoints",
    "body": "check whether the user provided endpoints are reachable or not."
  },
  {
    "id": "9515",
    "type": "pullRequest",
    "title": "NO-ISSUE: Deduplicate shared IDS to IDMS conversion in installer manifests and imagebased installer",
    "body": "This change deduplicates the conversion of the `installconfig.Config.ImageDigestSources` to an `ImageDigestMirrorSet` that is shared between the installer's `manifests` and the `imagebased` installer. Related PR:"
  },
  {
    "id": "9510",
    "type": "pullRequest",
    "title": "OCPBUGS-51350: PowerVS: Extra network routes for disconnected install",
    "body": "When SNAT is disabled (for disconnected setup), there must be some extra routes set up on the VMs for them to be able to reach private API endpoints (eg. PowerVS, NTP) for the installer itself and other runtime components to work as intended. This PR proposes an additional ignition manifest (`99-master-routes`) to do just that on PowerVS. Rebooting a master and a worker of the installed cluster has also been tested, and CO's get degrated temporarily (as expected), but it's been verified that they all recover once the rebooted node is back to `Ready` state."
  },
  {
    "id": "9508",
    "type": "pullRequest",
    "title": "NO-JIRA: bootstrap: add CLUSTER_PROFILE_ANNOTATION variable to auth-api bootstrapping stage",
    "body": "This should resolve I haven't been able to identify any permafailing nightlies to signal that this variable definition being missing is causing nightly failures, but I do have a slack thread open with TRT here:"
  },
  {
    "id": "9497",
    "type": "pullRequest",
    "title": "OCPBUGS-50961: Power VS: Log accurate error when deploying Internal with no vpcName",
    "body": "When deploying a cluster with an internal publishing strategy with no `vpcName` key in the install-configuration, manifest files cannot be generated, and the following error is shown: `failed to find VPC`. Given that no `vpcName` key was specified in the first place, this error is inaccurate. Correct the error message to reflect the actual requirement in this case, which is to specify a `vpcName: name` key-value pair."
  },
  {
    "id": "9425",
    "type": "pullRequest",
    "title": "SPLAT-1995: vsphere on destroy remove cns volumes",
    "body": "This pr does the following: - Add vSphere CNS client - Returns a slice of CNS volumes associated with the infraid via `GetCnsVolumes()` - Destroys all CNS volumes via `DeleteCnsVolumes()` based on slice provide by `GetCnsVolumes()` - Updates the generated mock for the new methods"
  },
  {
    "id": "9397",
    "type": "pullRequest",
    "title": "OCPBUGS-47459: IBMCloud: CAPI add permitted network",
    "body": "For Internal/Private clusters deployed using CAPI, we must make sure the VPC is a Permitted Network in the DNS Services Zone. Related:"
  },
  {
    "id": "9385",
    "type": "pullRequest",
    "title": "OCPBUGS-47652: IBMCloud: Set CAPI boot volumes",
    "body": "IBM Cloud CAPI machine boot volumes must have a size set, for now default to 100 GB, until an option is available to configure the size is available via the machinepool. Related:"
  },
  {
    "id": "9505",
    "type": "pullRequest",
    "title": "CORS-3869: static validation for new vpc.subnets field",
    "body": "This include static validations for the vpc.subnets field (no call to AWS API is performed). The validation criteria can be found at jira ticket 0 and enhancement proposal 1. Summary of validation criteria: - The subnet IDs must not include duplicates - There can only be maximum 10 subnets assigned IngressControllerLB role. - Either all subnets must have roles assigned or none at all. - For a subnet that has defined roles - Roles must be of supported types (i.e. from a set of defined roles) - Roles must not be duplicate. This and check naturally validates that a subnet can only have max 5 roles - EdgeNode cannot be combined with any other roles - ClusterNode, IngressControllerLB, ControlPlaneExternalLB (if cluster is external), and ControlPlaneInternalLB must be assigned to at least 1 subnet - A subnet cannot have both role ControlPlaneExternalLB and ControlPlaneInternalLB - If the cluster is internal, ControlPlaneExternalLB must not be assigned to any subnets. References: 0 1"
  },
  {
    "id": "9042",
    "type": "pullRequest",
    "title": "OSASINFRA-3695: openstack: Create security group rules in batches",
    "body": "Create security group rules in batches to reduce the number of calls to the OpenStack API. This is a performance improvement that is not expected to result in any functional change. This change requires a dependency bump of Gophercloud to v2.4.0."
  },
  {
    "id": "9415",
    "type": "pullRequest",
    "title": "OCPBUGS-46051: IBMCloud: Fix CAPI AZ handling",
    "body": "Use AZ's provided for controlPlane or compute nodes, if provided in those blocks. Also, check defaultMachinePlatform for zones before defaulting to all AZ's in IBM Cloud Region. Related:"
  },
  {
    "id": "9503",
    "type": "pullRequest",
    "title": "OCPBUGS-50534: Fix error messages in available IP code",
    "body": "Fixing the error messages in the check for available IPs. The error message is always empty since there was no error but there are no IPs available."
  },
  {
    "id": "9516",
    "type": "pullRequest",
    "title": "OCPBUGS-51204: bootstrap/node-image-pull.sh: handle PXE boots as well",
    "body": "For the live logic, we were checking for the `coreos.liveiso` karg but that doesn't handle the PXE case. Instead, use the CoreOS API `/run/ostree-live`, which exists in both the ISO and PXE case. Fixes OCPBUGS-51204."
  },
  {
    "id": "9159",
    "type": "pullRequest",
    "title": "OCPEDGE-1310: feat: add arbiter node support to installer",
    "body": "Added initial support for the arbiter node installation path for baremetal. The arbiter node is similar to the master node and is part of the control plane but will be used for smaller hardware sizes. Currently this is a TechPreview feature and only supported on baremetal. For more details see EP:"
  },
  {
    "id": "9518",
    "type": "pullRequest",
    "title": "CORS-3919: Add GCP service endpoints to the infrastructure manifest",
    "body": "The manifest will contain the service endpoints originally in the install config. Validation for these service endpoint additions to the manifests will occur."
  },
  {
    "id": "9500",
    "type": "pullRequest",
    "title": "OCPBUGS-51084: PowerVS: Specify chrony config for Disconnected deploy",
    "body": "In Disconnected scenario, the VMs won't have free access to the standard NTP server/pool. Therefore, they need a custom NTP server that PowerVS specifically permits access to via special routing for disconnected VMs/workspace. This PR introduces an ability to lay down `/etc/chrony.conf` with the provided NTP server name, which has been verified working as intended on PowerVS."
  },
  {
    "id": "9411",
    "type": "pullRequest",
    "title": "no-jira: Bump cluster-api to v1.9.4",
    "body": "Bump the cluster-api version to v1.9.4 to pick up latest support changes, if cloud providers are ready."
  },
  {
    "id": "9419",
    "type": "pullRequest",
    "title": "OCPBUGS-49351: Add vSphere logic to check for max network count",
    "body": "OCPBUGS-49351 Changes - Added checks for max network count for vSphere failure domains"
  },
  {
    "id": "9501",
    "type": "pullRequest",
    "title": "CORS-3843: Add Tech Preview Feature gate to Installer for GCP Custom API Endpoints",
    "body": "Vendor updates: Add the api changes from Add the featuregate to the installer Add validation for the feature gate."
  },
  {
    "id": "9495",
    "type": "pullRequest",
    "title": "OCPBUGS-50919: Fixes panic during GCP tags fetch due to unstable network",
    "body": "PR fixes the panic observed when fetching the GCP tags during `create` stage of installation. The issue was happening because of referencing the empty google API error, which could be because of the unstable network and since the call was not reaching the server. /cc @jianli-wei @barbacbd"
  },
  {
    "id": "9442",
    "type": "pullRequest",
    "title": "OCPBUGS-49940: PowerVS: datacenter supported systems",
    "body": "Use an API to query the datacenter what supported machine types are available."
  },
  {
    "id": "9403",
    "type": "pullRequest",
    "title": "OCPBUGS-49953: PowerVS: support destroy tag 1",
    "body": "Rewrite the destroy code to support by destroying resources via name matching or via tag matching."
  },
  {
    "id": "9453",
    "type": "pullRequest",
    "title": "OCPBUGS-50574: Check for vmgroup when create capv machine fd name",
    "body": "This commit adds an additional check for the providerSpec workspace vmgroup if its not empty. If it is non-empty then add the failure domain name to the VSphereMachineSpec otherwise do not define and leave empty. This solves two problems: - Excessive alerting from capv that the failure domain doesn't exist - capv unable to delete bootstrap node"
  },
  {
    "id": "9424",
    "type": "pullRequest",
    "title": "CNTRLPLANE-194: add auth-api-bootstrap stage to bootkube.sh template",
    "body": "Description Adds a new bootstrapping stage for the cluster-authentication-operator to render the `RoleBindingRestriction` CRD to the set of bootstrap manifests. Motivation We are working on moving the management of the `RoleBindingRestriction` CRD to the cluster-authentication-operator instead of it being managed by CVO as outlined in The `RoleBindingRestriction` CRD is required in the bootstrapping manifests as the `authorization.openshift.io/RestrictSubjectBindings` admission plugin will reject creation of `system:` RoleBinding resources during the installation process if the `RoleBindingRestriction` API does not exist. I did some testing to ensure that we can gradually transition ownership without clashing with CVO by merging, in order: - - This PR -"
  },
  {
    "id": "9443",
    "type": "pullRequest",
    "title": "CORS-3867 CORS-3868: deprecate platform.subnets and introduce platform.vpc.subnets field in install-config",
    "body": "Following proposal for selecting LB subnets, the field platform.vpc.subnets will be introduced for more flexible configurations. This enhancement proposal is available reference 0. There are some adjustments to the API markers and descriptions in comparison to the proposal. - Organize field description for easier read. - Correct kubebuilder:validation:MaxItems on array field This field is dropped in place of the deprecated `platform.subnets` field. Part of CORS-3440( References: 0"
  },
  {
    "id": "9490",
    "type": "pullRequest",
    "title": "OCPBUGS-50899: PowerVS: COS eu-es hack",
    "body": "If the COS location to use is different than the VPC region, then we need to rename the bucket name to correctly download the image."
  },
  {
    "id": "9491",
    "type": "pullRequest",
    "title": "OCPBUGS-50920: Rely on path declaration of base image",
    "body": "Starting with 4.19, the PATH environment variable is actively used in CI to manage idempotent repositories that work both in CI as locally. By overriding the PATH environment variable, machine-os-images gets unfortunate repositories as a result. I suspect this path override can just disappear."
  },
  {
    "id": "9487",
    "type": "pullRequest",
    "title": "OCPBUGS-45429: Set the right resource group in bootstrap destroy",
    "body": "Setting the right resource group by checking if the user has provided an existing resource group for installation and have the bootstrap destroy use it to clean resources properly."
  },
  {
    "id": "9363",
    "type": "pullRequest",
    "title": "CORS-3835: Add gcp endpoints to the installer config",
    "body": "Added the endpoints including the name and url to the install config. Added Specific endpoint names that able to be used/customized. Added validation for the GCP Service Endpoints."
  },
  {
    "id": "9328",
    "type": "pullRequest",
    "title": "OCPBUGS-46488: Validate Encryption Keys for GCP",
    "body": "Validate install config information for GCP KMS Encryption keys. Update Vendor Add KMS Google Module"
  },
  {
    "id": "9365",
    "type": "pullRequest",
    "title": "OCPBUGS-44507: Check public zone for stray record set",
    "body": "The azure destroyer checks for all the record sets present in the resource group and deletes them. But in the case where the resource group is destroyed before the destroy cluster is called, there will be stray record sets that don't get cleaned up. This frequently occurs in the azure test environment where the reaper deletes the resource group after sometime but fails to clean up these stray record sets. Adding the fix in the off chance this scenario happens in the customer world."
  },
  {
    "id": "9480",
    "type": "pullRequest",
    "title": "OCPBUGS-50839: correct typo",
    "body": "Follow up to correct a typo"
  },
  {
    "id": "9458",
    "type": "pullRequest",
    "title": "OCPBUGS-50657: PowerVS: destroy dhcp hack",
    "body": "We are changing the destroy cluster slightly when deleting DHCP networks to also wait for the subnet to no longer exist."
  },
  {
    "id": "9444",
    "type": "pullRequest",
    "title": "OCPBUGS-50534: Fix panic when there are no available IPs",
    "body": "Adding a fix to check if ips are available to prevent a panic."
  },
  {
    "id": "9456",
    "type": "pullRequest",
    "title": "OCPBUGS-50649: vsphere - check if host is powered down or on standby before uploading template",
    "body": "We have intermittent issues with IPI Installations because it seems that the Installer does not check if a Host is in an unsuitable state (in this case Powered Off or StandBy, caused by VMware DPM). This PR fixes that problem by checking for both states and including them in the decision. When using the unpatched installer the following happens: ``` snip level=info msg=Creating infrastructure resources... level=debug msg=Obtaining RHCOS image file from ' level=debug msg=image download content length: 1305047040 level=debug msg=Unpacking file into \"/root/.cache/openshift-installer/image_cache/rhcos-416.94.202410211619-0-vmware.x86_64.ova\"... level=debug msg=no known archive format detected for image, assuming no decompression necessary level=debug msg=writing the RHCOS image was 1305047040 bytes level=debug msg=Checksum validation is complete... level=info msg=Importing OVA dev-cluster-5qj4d-rhcos-region_1-zone_1 into failure domain failure_domain_1. level=debug msg=using ESXi d000-esx003.dev.io to import the OVA image level=error msg=failed to fetch Cluster: failed to generate asset \"Cluster\": failed to create cluster: failed during pre-provisioning: unable to initialize folders and templates: failed to import ova: failed to lease wait: The operation is not allowed in the current connection state of the host. End Of Pipeline ``` This then continues to happen, no matter how often you retry. With the patched installer it looks like this: ``` snip level=info msg=Creating infrastructure resources... level=debug msg=Obtaining RHCOS image file from ' level=debug msg=image download content length: 1305047040 level=debug msg=Unpacking file into \"/root/.cache/openshift-installer/image_cache/rhcos-416.94.202410211619-0-vmware.x86_64.ova\"... level=debug msg=no known archive format detected for image, assuming no decompression necessary level=debug msg=writing the RHCOS image was 1305047040 bytes level=debug msg=Checksum validation is complete... level=info msg=Importing OVA dev-cluster-mdjds-rhcos-region_1-zone_1 into failure domain failure_domain_1. level=debug msg=using ESXi d000-esx001.dev.io to import the OVA image level=debug msg=Creating cluster_install/cluster-api directory level=debug msg=Extracting cluster_install/cluster-api/cluster-api file level=debug msg=Creating cluster_install/cluster-api directory level=debug msg=Extracting cluster_install/cluster-api/etcd file level=debug msg=Extracting cluster_install/cluster-api/kube-apiserver file level=warning msg=Received interrupt signal level=info msg=Started local control plane with envtest level=info msg=Stored kubeconfig for envtest in: /builds/cluster-installer/cluster_install/.clusterapi_output/envtest.kubeconfig level=info msg=Running process: Cluster API with args -v=2 --diagnostics-address=0 --health-addr=127.0.0.1:40129 --webhook-port=45765 --webhook-cert-dir=/tmp/envtest-serving-certs-3653338967 --kubeconfig= /builds/cluster-installer/cluster_install/.clusterapi_output/envtest.kubeconfig.clusterapi_output/envtest.kubeconfig level=debug msg=I0212 14:29:42.197455 110 cluster_cache_tracker.go:165 \"Couldn't find controller pod metadata, the ClusterCacheTracker will always access clusters using the regular apiserver endpoint\" component=\"remote/clustercachetracker\" level=debug msg=I0212 14:29:42.198227 110 webhook.go:158 \"Registering a mutating webhook\" logger=\"controller-runtime.builder\" GVK=\"cluster.x-k8s.io/v1beta1, Kind=ClusterClass\" path=\"/mutate-cluster-x-k8s-io-v1beta1-clusterclass\" level=debug msg=I0212 14:29:42.198335 110 server.go:183 \"Registering webhook\" logger=\"controller-runtime.webhook\" path=\"/mutate-cluster-x-k8s-io-v1beta1-clusterclass\" level=debug msg=I0212 14:29:42.198440 110 webhook.go:189 \"Registering a validating webhook\" logger=\"controller-runtime.builder\" GVK=\"cluster.x-k8s.io/v1beta1, Kind=ClusterClass\" path=\"/validate-cluster-x-k8s-io-v1beta1-clusterclass\" snip ```"
  },
  {
    "id": "9422",
    "type": "pullRequest",
    "title": "no-jira: Switch to go.uber.org/mock/gomock",
    "body": "github.com/golang/mock/mockgen is deprecated and now go.uber.org/mock/gomock is the official fork. Now that we've switched go 1.23 we're seeing some issues with the mixed usage of the two packages, so let's just make the switch entirely over to go.uber.org/mock/gomock."
  },
  {
    "id": "9401",
    "type": "pullRequest",
    "title": "OCPBUGS-49319: IBMCloud: Drop CAPI metrics-bind-addr",
    "body": "Drop the metrics-bind-addr flag for the IBM Cloud CAPI deployment, as it does not appear to be supported in newer cluster-api releases. Related:"
  },
  {
    "id": "9416",
    "type": "pullRequest",
    "title": "no-jira: Relax serviceEndpoint URL validation for IBMCloud platform",
    "body": "Relax endpoint regex validation to accept new endpoints from IBM services matching /api/v or /v"
  },
  {
    "id": "9447",
    "type": "pullRequest",
    "title": "OCPBUGS-50004: Add cluster:master_nodes metric retrieval in docs",
    "body": "The `cluster:master_nodes` metric needs to be added to the scrapeconfig match query so it can be scraped from the shift-on-stack cluster. It's required for running the correlated query defined at 1. 1"
  },
  {
    "id": "9232",
    "type": "pullRequest",
    "title": "OCPBUGS-52658: pkg/infrastructure/azure: support nvme",
    "body": "Updates the installer-generated image definition to indicate support for NVME (and SCSI) disk controllers. Without this feature on the image definition, certain VM families will fail to provision with a message such as: The VM size 'Standard_D8ds_v6' cannot boot with OS image or disk. Please check that disk controller types supported by the OS image or disk is one of the supported disk controller types for the VM size 'Standard_D8ds_v6'. With the change in this commit, the VM will successfully provision."
  },
  {
    "id": "9431",
    "type": "pullRequest",
    "title": "OCPBUGS-49737: Custom-DNS: GCP, AWS: Update worker pointer Ignition",
    "body": "Update the worker pointer ignition with the api-int LB IP in place of the api-int URL when userProvisionedDNS is enabled."
  },
  {
    "id": "9428",
    "type": "pullRequest",
    "title": "OCPBUGS-46656: validate configured networks to not overlap with OVNKubernetes default subnets",
    "body": "Description Machine, Service and Cluster networks must not overlap with any of the default OVNKubernetes subnets (i.e. join, transit and masquerade). If any type of subnets are defined by users in the install-config, validate networks against those values instead. Notes: - I included some code refactoring to make the changes cleaner. Some of them are not directly related to the bug, but nice to clean up along the way. Please let me know if you need me exclude them. - I think we might also need to validate proxy IP( I will follow up with another PR for that if it is confirmed that its neeed."
  },
  {
    "id": "9394",
    "type": "pullRequest",
    "title": "MGMT-19545: add optional release registry field to the IBI installation config",
    "body": "This change adds the optional `ReleaseRegistry` field in the IBI installation config. This field is used as a replacement for the seed release registry in the seed cluster's image pull-specs, when the seed container image is generated in a disconnected SNO (i.e. with mirror registries configured). It is related to:"
  },
  {
    "id": "9376",
    "type": "pullRequest",
    "title": "OCPBUGS-48044: Nutanix Install multi-NICs cluster failed with failureDomains",
    "body": "OCPBUGS-48044: Nutanix Install multi-NICs cluster failed with failureDomains"
  },
  {
    "id": "9432",
    "type": "pullRequest",
    "title": "OCPBUGS-49784: handle runtime panic when validating ovnKubernetesConfig",
    "body": "When a clusternetwork entry has an invalid hostPrefix, which is = CIDR mask and the custom IPv4 join subnet is provided in the install-config, the installer gives a runtime panic error: negative shift amount. This introduces a check to return a more user-friendly and descriptive error message instead of runtime panic."
  },
  {
    "id": "9413",
    "type": "pullRequest",
    "title": "OCPBUGS-48827: aws/edge/byovpc: subnets tag kube cluster tag to shared",
    "body": "Previously the subnets created by user (BYO VPC) on edge zones (Local or Wavelength zones) were not tagged with kubernetes.io/cluster/InfraID:shared. This change ensures installer is also setting the same cluster tag as regular zones."
  },
  {
    "id": "9420",
    "type": "pullRequest",
    "title": "OCPBUGS-49594: aws/byo-ip added required permission ec2:ReleaseAddress",
    "body": "Previously clusters created with minimum permissions in existing VPC (unmanaged VPC or BYO VPC) and BYO Public IPv4 Pool address (BYO IP) on AWS failed to de-provision cluster without permissions to release EIP address (ec2:ReleaseAddress). This change ensures ec2:ReleaseAddress permission is exported to the install-generated IAM policy when deploying a cluster on AWS with BYO VPC and BYO Public IPv4 Pool. Blocks"
  },
  {
    "id": "9392",
    "type": "pullRequest",
    "title": "OCPBUGS-46549: Update RHCOS 4.19 bootimage metadata to 9.6.20250121-0",
    "body": "The changes done here will update the RHCOS 4.19 bootimage metadata. Notable changes in the boot image are: COS-3014( - Move OpenShift installer to use pure RHEL bootimages This change was generated using: ``` plume cosa2stream --target data/data/coreos/rhcos.json \\ --distro rhcos --no-signatures --name rhel-9.6 \\ --url \\ x86_64=9.6.20250121-0 \\ aarch64=9.6.20250121-0 \\ s390x=9.6.20250121-0 \\ ppc64le=9.6.20250121-0 ```"
  },
  {
    "id": "9398",
    "type": "pullRequest",
    "title": "OCPBUGS-48089: validate hostPrefix to be the same when multiple clusternetwork CIDRs are present",
    "body": "Description When multiple clusternetwork CIDRs are present, hostPrefix fields must be specified with the same value. If not, it can impact traffic between pods in different subnets. The patch applies validation for IPv4 CIDR. For IPv6, the only option for hostPrefix is 64, thus naturally satisfying the requirement. Other related changes: - Only validate for negative host prefix when the prefix is actually used. - Added a test case for negative host prefix. References - (debug steps and explanation for root cause) - (temporary solution for existing cluster)"
  },
  {
    "id": "9035",
    "type": "pullRequest",
    "title": "SPLAT-1809: Added vSphere multi disk support",
    "body": "SPLAT-1809( Changes - Enhance install-config.yaml to allow for creating of additional vSphere disks - Leverage post-provision hook to add disks to masters after they have been created Prerequisites -"
  },
  {
    "id": "9326",
    "type": "pullRequest",
    "title": "OSASINFRA-2571: Add quota validation for server group"
  },
  {
    "id": "9361",
    "type": "pullRequest",
    "title": "OCPBUGS-48228: Envtest: Configure IPv6 service network for API Service",
    "body": "When the host that runs the OpenShift install is configured with IPv6 only, the kube-apiserver created with envtest would fail as the service-cluster-ip-range would be configured with a default IPv4 CIDR and the public address family, which is the host address, would be configured with an IPv6. This commit fixes the issue by setting a default IPv6 CIDR to service-cluster-ip-range, in case the host has no IPv4 available."
  },
  {
    "id": "9396",
    "type": "pullRequest",
    "title": "CORS-3724: bump go v1.23 and k8s dependencies",
    "body": "Release checklist: bump go v1.23 and update k8s deps (i.e. `v0.32.1`) Note: `k8s.io/api@v0.32.1` requires bumps go version to `1.23`. Commands: ``` go mod edit --require=k8s.io/api@v0.32.1 go mod edit --require=k8s.io/apimachinery@v0.32.1 go mod edit --require=k8s.io/apiextensions-apiserver@v0.32.1 go mod edit --require=k8s.io/cloud-provider-vsphere@v0.32.1 go mod tidy go mod vendor ```"
  },
  {
    "id": "9407",
    "type": "pullRequest",
    "title": "CORS-3637: OWNERS files for platform provider subdirectories",
    "body": "The files use aliases defined in OWNERS_ALIASES. Some files are only formatted (i.e. removing blank spaces & ending newline)."
  },
  {
    "id": "9384",
    "type": "pullRequest",
    "title": "OCPBUGS-47489: pkg/gcp/destroy: add waits to prevent leaks during heavy load",
    "body": "We're slowly leaking backend services. This PR adds waits to make sure the operation is done before proceeding. This refactors the destroy code to add a central operation handling function to facilitate this change."
  },
  {
    "id": "9391",
    "type": "pullRequest",
    "title": "MGMT-19771: Convert IDS to proper IDMS manifest",
    "body": "Updates current ImageDigestSources struct in image-based installer to convert array of ImageDigestSources into an ImageDigestMirrorSet. This is needed in order to generate a manifest that can be applied by the installer. Closes: Closes:"
  },
  {
    "id": "9333",
    "type": "pullRequest",
    "title": "OCPBUGS-47477: aws: skip dead zones on us-east-1 when discovering AZs",
    "body": "This PR introduce zone skip when installer discover the zones from metadata/AWS API. The `us-east-1e` is a dead zone in US Virginia, create network resources on that zone is useless as it does not offers supported instance types. That zone was causing the `WARNING`/failure when installing a cluster without setting the zone in IC: ``` WARNING failed to find default instance type for worker pool: no instance type found for the zone constraint WARNING failed to find default instance type: no instance type found for the zone constraint ```"
  },
  {
    "id": "9377",
    "type": "pullRequest",
    "title": "OCPBUGS-48570:Nutanix Installation failed with timeout when uploading images to PC",
    "body": "OCPBUGS-48570 Nutanix Installation failed with timeout when uploading images to PC Fix this customer hit issue by making the prism-api call timeout value a configurable parameter in the install-config.yaml as platform.nutanix.prismAPICallTimeout (with the default value of 5 minutes)."
  },
  {
    "id": "9275",
    "type": "pullRequest",
    "title": "OCPBUGS-45551: Updating ose-installer-altinfra-container image to be consistent with ART for 4.19",
    "body": "Updating ose-installer-altinfra-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-installer-altinfra.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "9292",
    "type": "pullRequest",
    "title": "no-jira: docs(user): fix grammer in upi install step"
  },
  {
    "id": "9387",
    "type": "pullRequest",
    "title": "OCPBUGS-48719: Add new tested azure arm instance type to doc",
    "body": "Following arm instance type families are detected during 4.18 full function test, and verified by QE, append them into azure arm doc. StandardDpdsv6Family StandardDpldsv6Family StandardDplsv6Family StandardDpsv6Family StandardEpdsv6Family StandardEpsv6Family"
  },
  {
    "id": "9341",
    "type": "pullRequest",
    "title": "OCPBUGS-46596: aws/permissions - defaults ec2:DescribeInstanceTypeOfferings",
    "body": "Added AWS permission ec2:DescribeInstanceTypeOfferings to the default list to create cluster / PermissionCreateBase group."
  },
  {
    "id": "8742",
    "type": "pullRequest",
    "title": "COS-3013: overlay node image before bootstrapping if necessary",
    "body": "As per we're trying to get rid of all OpenShift-versioned components from the bootimages. This means that there will no longer be `oc`, `kubelet`, or `crio` binaries for example, which bootstrapping obviously relies on. Instead, now we change things up so that early on when booting the bootstrap node, we pull down the node image, unencapsulate it (this just means convert it back to an OSTree commit), then mount over its `/usr`, and import new `/etc` content. This is done by isolating to a different systemd target to only bring up the minimum number of services to do the pivot and then carry on with bootstrapping. This does not incur additional reboots and should be compatible with AI/ABI/SNO. But it is of course, a huge conceptual shift in how bootstrapping works. With this, we would now always be sure that we're using the same binaries as the target version as part of bootstrapping, which should alleviate some issues such as AI late-binding (see e.g. The big exception of course being the kernel. Relatedly, note we do persist `/usr/lib/modules` from the booted system so that loading kernel modules still works. To be conservative, the new logic only kicks in when using bootimages which do not have `oc`. This will allow us to ratchet this in more easily. Down the line, we should be able to replace some of this with `bootc apply-live` once that's available (and also works in a live environment). (See For full context, see the linked enhancement and discussions there."
  },
  {
    "id": "9356",
    "type": "pullRequest",
    "title": "OCPBUGS-48256: Run iscsiadm for agent-based iSCSI installations",
    "body": "The agent-based installer currently runs iscsistart to ensure it can boot off of an iSCSI target. However, in order to access the final rhcos image written to the the target by coreos-installer, iscsiadm must be run which will start iscsid. See iSCSI initiator reference( for more info."
  },
  {
    "id": "8873",
    "type": "pullRequest",
    "title": "SPLAT-1742: vSphere - enable host group based zonal",
    "body": "Changes - Migrated to - Updated validations to include vm-host group of type Host and tagging. Also associated tests. - Create capv FailureDomain and DeploymentZone - Delete vm-host group of type VirtualMachine and vm-host rule created by installer - Create an associated vm-host group of type virtual machine and a affinity vm-host rule. - Update platform spec topology to include `hostGroup` which needs to be created day 0, prior to installation. Additional PRs - - - - - - - -"
  },
  {
    "id": "9375",
    "type": "pullRequest",
    "title": "CORS-3722: bump default channel to stable-4.19",
    "body": "cvo: bump default channel to stable-4.19"
  },
  {
    "id": "9374",
    "type": "pullRequest",
    "title": "CORS-3721: bump default release image to 4.19",
    "body": "Branching checklist: bumps default release image to 4.19"
  },
  {
    "id": "9359",
    "type": "pullRequest",
    "title": "OCPBUGS-48437: PowerVS: limit by resourceGroupID",
    "body": "Limit searching for resources to destroy to a specific resource group."
  },
  {
    "id": "9302",
    "type": "pullRequest",
    "title": "OCPBUGS-46010: wait for at least 3 kube-apiserver instances"
  },
  {
    "id": "9358",
    "type": "pullRequest",
    "title": "no-jira: Remove myself from reviewers list"
  },
  {
    "id": "9360",
    "type": "pullRequest",
    "title": "no-jira: images: UPI: use ART repo dir",
    "body": "Updates UPI image to install gcloud repos in correct dir based on"
  },
  {
    "id": "9343",
    "type": "pullRequest",
    "title": "OCPBUGS-47156: Bump golang.org/x/net to 0.33.0",
    "body": "The installer is not affected by the vulnerability CVE-2024-45338 and only use the golang.org/x/net indirectly and do not use golang.org/x/net/html at all. Fixing this at main branch as a good measure and will not be backported."
  },
  {
    "id": "9353",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fix owning component name in machine config templates",
    "body": "Minor follow-up to The string used for owning component name wasn't accurate and is fixed now."
  },
  {
    "id": "9337",
    "type": "pullRequest",
    "title": "OCPBUGS-48239: remove the types which failed by RHEL-59521 and add the new gpu vm type",
    "body": "RHEL-59521( RHEL 9.4: kernel hang after attaching new virtio disk with SGX enabled blocked the bx3dc and cx3dc add gx3d-160x1792x8h100"
  },
  {
    "id": "9238",
    "type": "pullRequest",
    "title": "OCPBUGS-29067: Update MCS Cert and Key files within bootstrap Ignition with UserProvisionedDNS",
    "body": "When UserProvisineDNS is enabled, the machine-config-server cert is regenerated to respond to both the API-Int URL and API-Int LB IPs. This updated cert and key are added to `machine-config-server-tls-secret.yaml` within the bootstrap Ignition (as part of This PR updates the individual machine-config-server cert and key files generated also in the bootstrap ignition."
  },
  {
    "id": "9304",
    "type": "pullRequest",
    "title": "NO-ISSUE: Deprecate node-joiner scripts",
    "body": "The scripts should only be used with OpenShift 4.16 and as a dev preview. They have been replaced by the \"oc adm node-image\" command."
  },
  {
    "id": "9309",
    "type": "pullRequest",
    "title": "MCO-1457: Clean up MCS CA & TLS cert objects for management",
    "body": "This PR adds and fixes up a few templates related to the MCS CA/TLS, so that it matches the format expected by the cert controller being added to the MCO in With these template changes in place, the cert controller of the MCO should no longer cause an immediate rotation when it comes up, preventing issues such as"
  },
  {
    "id": "9322",
    "type": "pullRequest",
    "title": "OCPBUGS-45995: Always set AllowCrossTenantReplication parameter to false",
    "body": "force set AllowCrossTenantReplication to false during azure service account creation. This security voilation blocks using and scaling Clusters in Public cloud environments for the Banking and Financial industry which need to comply to BAFIN and PCI-DSS regulations."
  },
  {
    "id": "9332",
    "type": "pullRequest",
    "title": "OCPBUGS-46571: Disable IP Forwarding for CAPG Machines",
    "body": "IP Forwarding is not supported for GCP. The default for IP forwarding is set to enabled for CAPG machines, this change sets the value to disabled all of the time."
  },
  {
    "id": "9314",
    "type": "pullRequest",
    "title": "OCPBUGS-46260: CVE-2024-45337 bump crypto pkg to v0.31.0",
    "body": "The installer does not run any ssh servers or use ServerConfig.PublicKeyCallback, so is not affected by CVE-2024-45337 , but we might as well upgrade to the safe version to avoid any potential confusion from scanners. We will fix this at main, but don't plan any backports (as we are not actually vulnerable)."
  },
  {
    "id": "9336",
    "type": "pullRequest",
    "title": "OCPBUGS-46605: Find instances by label GCP",
    "body": "Regeression to fix finding instance by label. In order to do this the labels must be requested when querying for information about instances."
  },
  {
    "id": "9335",
    "type": "pullRequest",
    "title": "OCPBUGS-47504: Power VS: Private DNS service endpoint URL must end with /v1",
    "body": "What we set as `DNSServices` URL (for PowerVS) in the installer gets used in `ingress-operator` as base URL that must include `/v1` at the end. See; - - Signed-off-by: Hiro Miyamoto miyamotoh@us.ibm.com"
  },
  {
    "id": "9189",
    "type": "pullRequest",
    "title": "METAL-1137: Enable TLS for ironic API in the bootstrap VM"
  },
  {
    "id": "9310",
    "type": "pullRequest",
    "title": "OCPBUGS-46144: azure: use separate /var to avoid growfs timeouts",
    "body": "Using the workaround of a separate /var partition until the issue is fixed in RHCOS."
  },
  {
    "id": "9256",
    "type": "pullRequest",
    "title": "OCPBUGS-45218: aws: fix perm requirement for edge nodes",
    "body": "If an edge machine pool is specified without an instance type, the installer needs the `ec2:DescribeInstanceTypeOfferings` permission to derive the correct instance type available according to the local/wavelength zones being used. Before this change, the permission was optional and its absence would result in the installer picking a hard-coded non-edge pool instance type which can cause unsupported configuration issues in mapi's output: ``` providerStatus: conditions: - lastTransitionTime: \"2024-11-28T15:32:09Z\" message: 'error launching instance: The requested configuration is currently not supported. Please check the documentation for supported configurations.' reason: MachineCreationFailed status: \"False\" type: MachineCreation ```"
  },
  {
    "id": "9317",
    "type": "pullRequest",
    "title": "OCPBUGS-46470: Power VS: ResourceManager also to override for Internal deploy",
    "body": "Further debugging revealed `ResourceManager` endpoint must also be overridden for Disconnected deploy on PowerVS with CAPI. Like 9143, this PR starts setting/passing `ResourceManager` override to CCM. One thing that's perhaps noteworthy is that we are adding logic of those endpoint overrides to be in `platformStatus` as well (as in `platformSpec`) in `pkg/asset/manifests/infrastructure.go`, which should be the way, rather than `machine-controller` container in `machine-api-controllers` pod trying to update `platformStatus` which RBAC blocks."
  },
  {
    "id": "9307",
    "type": "pullRequest",
    "title": "OCPBUGS-46035: fix skew support for node-joiner",
    "body": "This patch allows to run the `oc adm node-image` commands using oc 4.17.x against a cluster 4.18"
  },
  {
    "id": "9323",
    "type": "pullRequest",
    "title": "OCPBUGS-44560: Add note about additional networks using IPv6",
    "body": "When using a network as an additional network in the OCP cluster that has an IPv6 Subnet, that subnet must be included in the router to provide router advertisements, otherwise the interface wouldn't get an address configured. This happens because the network manager is configured with method=auto."
  },
  {
    "id": "9299",
    "type": "pullRequest",
    "title": "OCPBUGS-45280: Allow more time for Service Account Creation",
    "body": "GCP Service accounts were created correctly (and they could be found in the api), but Google states ( that it could take up to 60 seconds before the service account is able to be used. The exponential backoff is adjusted to actually increase in time each iteration. The context was also adjusted to ensure that we give the backoff enough time to finish. Google sends a 400 Error when the service account policies could NOT be applied, if this happens DURING the policy setting attempt again as long as we have time left in the context."
  },
  {
    "id": "9295",
    "type": "pullRequest",
    "title": "OCPBUGS-46363: Remove narrow timeout from etcd bootstrap member removal gate.",
    "body": "Waiting for the etcd bootstrap member to be removed from the etcd cluster has a timeout of five minutes, unless the overall timeout is reached first. This was apparently sufficient for most cases when the check was only in effect for single-node clusters, but it occasionally times out on HA clusters. Enforcing a timeout for this step alone is fragile. It is important to guarantee that the bootstrap resources are not torn before the etcd bootstrap member has been removed from the etcd cluster. The time spent waiting for it to happen will fluctuate based on how long it takes for the etcd operator to observe that it is safe to proceed without losing quorum."
  },
  {
    "id": "9230",
    "type": "pullRequest",
    "title": "OCPBUGS-44834: aws: include permissions for edge compute",
    "body": "When the installer has to create edge machinepools, extra permissions are needed regarding Carrier Gateways."
  },
  {
    "id": "9301",
    "type": "pullRequest",
    "title": "OCPBUGS-45984: IBMCloud Fix VPC-COS IAM Auth",
    "body": "Fix the IAM Authorization between IBM Cloud VPC and IBM Cloud COS, to allow for VPC Custom Image creation as part of CAPI Infrastructure support. Related:"
  },
  {
    "id": "9280",
    "type": "pullRequest",
    "title": "OCPBUGS-45317: node-joiner PXE artifacts should be prefixed \"node\"",
    "body": "instead of \"agent\". The \"agent\" prefix is used for the day 1 agent ISO. The \"node\" prefix is used for day-2 artifacts, both ISO and PXE."
  },
  {
    "id": "9284",
    "type": "pullRequest",
    "title": "OCPBUGS-45727: Updating ose-installer-artifacts-container image to be consistent with ART for 4.19",
    "body": "Updating ose-installer-artifacts-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-installer-artifacts.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "9216",
    "type": "pullRequest",
    "title": "OCPBUGS-44641: GCP placing .apps record in wrong managed zone",
    "body": "The .apps record is not being placed in the correct DNS Managed Zone. The existing managed zone should be used only during xpn installs. The ingress operator was supplied with the incorrect managed zone information."
  },
  {
    "id": "9291",
    "type": "pullRequest",
    "title": "OCPBUGS-45855: If vCenter cluster has no esxi hosts fail with sane msg",
    "body": "Currently if a cluster doesn't have any ESXi hosts assigned the import fails with a non-specific error. This commit adds a proper error message."
  },
  {
    "id": "9287",
    "type": "pullRequest",
    "title": "OCPBUGS-45807: aws: fix sts:AssumeRole perm requirement",
    "body": "If a custom IAM role is specified, the installer needs the `sts:AssumeRole` to be able to use that role. This fixes the following error: ``` level=fatal msg=failed to fetch Cluster Infrastructure Variables: failed to fetch dependency of \"Cluster Infrastructure Variables\": failed to generate asset \"Platform Provisioning Check\": aws.hostedZone: Invalid value: \"Z01991651G3UXC4ZFDNDU\": unable to retrieve hosted zone: could not get hosted zone: Z01991651G3UXC4ZFDNDU: AccessDenied: User: arn:aws:iam:redacted:user/ci-op-1c2w7jv2-ef4fe-minimal-perm-installer is not authorized to perform: sts:AssumeRole on resource: arn:aws:iam:redacted:role/ci-op-1c2w7jv2-ef4fe-shared-role level=fatal msg= status code: 403, request id: ab7160fa-ade9-4afe-aacd-782495dc9978 Installer exit with code 1 ```"
  },
  {
    "id": "9270",
    "type": "pullRequest",
    "title": "OCPBUGS-43779: Destroy all private cluster backend service resources",
    "body": "When a private cluster was created, the destroy process would not find and destroy the backend services. This was happening specifically when no backends were created/found. The backend service could not be 100% associated with the cluster so it was skipped. Now, when the backend service is found, check the associated resources (for example the health checks or forwarding rules) for their tags/labels. If the resource(s) have tags that contain the cluster ID then the group of resources is considered part of the cluster and should be deleted."
  },
  {
    "id": "9274",
    "type": "pullRequest",
    "title": "OCPBUGS-45162: Delete tagged disks",
    "body": "When querying for disk information, the labels need to be grabbed from the api. The installer was searching for the label information, but the information was blank when returned by the API so it would never find the correct label (to be used during cluster resource deletion)."
  },
  {
    "id": "9261",
    "type": "pullRequest",
    "title": "OCPBUGS-45482: Wait for etcd bootstrap member removal",
    "body": "There was an existing check for this, but it was only performed on SNO. This is also a problem for HA clusters because deleting the bootstrap machine without removing the bootstrap etcd member makes the etcd cluster unable to tolerate the unavailability of a single permanent (non-bootstrap) member."
  },
  {
    "id": "9245",
    "type": "pullRequest",
    "title": "OCPBUGS-45685: Power VS: Create region-zone-sysType hierarchy",
    "body": "Currently, every region is assigned a set of system types. However, system types can be different for different zones within a region. Hence, move sysTypes as children of zones rather than siblings of zones."
  },
  {
    "id": "9263",
    "type": "pullRequest",
    "title": "OCPBUGS-45289: capi/aws: use LB name when finding Hosted Zone ID",
    "body": "We should use the LB name, not its DNS name, when listing load balancers with the AWS SDK otherwise the following error will happen: ``` failed to fetch Cluster: failed to generate asset \\\"Cluster\\\": failed to create cluster: failed provisioning resources after infrastructure ready: failed to find HostedZone ID for NLB: failed to list load balancers: ValidationError: The load balancer name 'yunjiang-ap55-sk6jl-ext-a6aae262b13b0580.elb.ap-southeast-5.amazonaws.com' cannot be longer than '32' characters \\tstatus code: 400, request id: f8adce67-d844-4088-9289-4950ce4d0c83 ```"
  },
  {
    "id": "9282",
    "type": "pullRequest",
    "title": "OCPBUGS-45678: Updating ose-baremetal-installer-container image to be consistent with ART for 4.19",
    "body": "Updating ose-baremetal-installer-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-baremetal-installer.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "9279",
    "type": "pullRequest",
    "title": "OCPBUGS-45656: Updating ose-installer-container image to be consistent with ART for 4.19",
    "body": "Updating ose-installer-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-installer.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "9234",
    "type": "pullRequest",
    "title": "OCPBUGS-44925: aws: add ec2:AllocateAddress perm requirement.",
    "body": "It's needed by CAPA when Ipv4Pools are supplied."
  },
  {
    "id": "9204",
    "type": "pullRequest",
    "title": "OCPBUGS-44523: Remove unused variable from ASH arm template 06_workers.json",
    "body": "The content of arm template 06_workers.json in installer repo is shown in official azure stack hub upi installation doc( variables `identityName` is not being used, remove it to avoid confusion from user when creating UPI cluster on azure stack hub."
  },
  {
    "id": "9273",
    "type": "pullRequest",
    "title": "OCPBUGS-45491: Align vSphere UPI haproxy config with IPI",
    "body": "We are experiencing the following test failure: API LBs follow /readyz of kube-apiserver and stop sending requests before server shutdowns for external clients Updating haproxy configuration to match IPI in the hopes of resolving the issue"
  },
  {
    "id": "9266",
    "type": "pullRequest",
    "title": "OCPBUGS-44938: Handle multiple mirror entries for source",
    "body": "If a mirror source contains multiple mirror entries, the tmp icsp file created for the agent-based installer 'oc' commands would only contain the first entry. This could cause a failure of the 'oc' command in a disconnected environment with multiple entries. Fix to handle multiple mirrors properly."
  },
  {
    "id": "9254",
    "type": "pullRequest",
    "title": "OCPBUGS-45286: PowerVS: Listen to machineNetwork",
    "body": "In CAPI, we use a random machineNetwork instead of using the one passed in by the user."
  },
  {
    "id": "9248",
    "type": "pullRequest",
    "title": "ARO-12457: Include bootstrap docker config file in go module",
    "body": "The /root/.docker/config.json.template file was not included because there was an invisible directory in the path. Without this file there will be no pull secret in the bootstrap node."
  },
  {
    "id": "9249",
    "type": "pullRequest",
    "title": "OCPBUGS-45175: Ironic external url port should change based on protocol",
    "body": "Default port for ironic is 6180 but it's not configured for TLS The secure port for ironic TLS connection is 6183 Change the port value based on the protocol used"
  },
  {
    "id": "9136",
    "type": "pullRequest",
    "title": "NO-ISSUE: imagebasedinstaller: support json files in extramanifests directory",
    "body": "Added support for `.json` files in the extra-manifests directory when creating a config-image using the \"image-based\" installer. Updated test cases as well to test added functionality. Fixes 9134"
  },
  {
    "id": "9233",
    "type": "pullRequest",
    "title": "OCPBUGS-44924: aws: add missing ec2:GetConsoleOutput perm requirement",
    "body": "The permission is needed when bootstrapping fails and the installer tries to gather the VM console logs."
  },
  {
    "id": "9169",
    "type": "pullRequest",
    "title": "OCPBUGS-44193: move GCP zone filtering client-side",
    "body": "This commit removes GCP server-side filtering when listing zones. GCP imposes a \"filtered list cost overhead quota\" which limits the amount of server-side filtering we can utilize. More information can be found here: We have seen CI jobs failing due to: level=fatal msg=failed to fetch Cluster API Machine Manifests: failed to generate asset \"Cluster API Machine Manifests\": failed to fetch availability zones: failed to get zones for project: failed to get zones from project XXXXXXXXXXXXXXXXXXXXXXXX: googleapi: Error 403: Quota exceeded for quota metric 'Filtered list cost overhead' and limit 'Filtered list cost overhead per minute' of service 'compute.googleapis.com' for consumer 'project_number:711936183532'. GCP recommends utilizing client-side filters to resolve this:"
  },
  {
    "id": "9116",
    "type": "pullRequest",
    "title": "OCPBUGS-43561: add zsh completion",
    "body": "openshift-install-completion-zsh.txt( Fixes 9115 Seems to work ```zsh ~/git/installer zshcompletion \u276f openshift-install create i completions ignition-configs -- Generates the Ignition Config asset install-config -- Generates the Install Config asset ``` Signed-off-by: Tiger Kaovilai tkaovila@redhat.com"
  },
  {
    "id": "235",
    "type": "pullRequest",
    "title": "METAL-1300: Update CAPB to support disablePowerOff"
  },
  {
    "id": "233",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update OWNERS"
  },
  {
    "id": "232",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update BMO and MAO",
    "body": "Steps: 1- Manually edit the version in the go.mod under the replace part. Changing v0.0.0-20240529071230-cd4bde824066 to v0.0.0-20250312171020-d2db5009930f 2- Update MAO to the commit before bumping the controller-runtime to 0.20.1. go get github.com/openshift/machine-api-operator@b397e885dafbf69f641757fea2c946fb693ae949 3- Run go mod tidy and go mod vendor We didn't update the MAO to the latest version because it's using controller-runtime 0.20.1 and this breaks the webhooks for the `ip-address-manager` ``` github.com/metal3-io/ip-address-manager/api/v1alpha1 vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ipaddress_webhook.go:35:15: undefined: webhook.Defaulter vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ipaddress_webhook.go:36:15: undefined: webhook.Validator vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ipclaim_webhook.go:35:15: undefined: webhook.Defaulter vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ipclaim_webhook.go:36:15: undefined: webhook.Validator vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ippool_webhook.go:39:15: undefined: webhook.Defaulter vendor/github.com/metal3-io/ip-address-manager/api/v1alpha1/ippool_webhook.go:40:15: undefined: webhook.Validator FAIL github.com/openshift/cluster-api-provider-baremetal/pkg/baremetal build failed FAIL github.com/openshift/cluster-api-provider-baremetal/pkg/baremetal/mocks build failed github.com/openshift/cluster-api-provider-baremetal/pkg/controller coverage: 0.0% of statements FAIL github.com/openshift/cluster-api-provider-baremetal/pkg/controller/metal3remediation build failed FAIL github.com/openshift/cluster-api-provider-baremetal/cmd/manager build failed ``` `controller-runtime` diff 0.19 vs 0.20"
  },
  {
    "id": "223",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-47536: Bump x/net to 0.33.0",
    "body": "Steps used: $ go get golang.org/x/net@v0.33.0 $ go mod tidy $ go mod vendor"
  },
  {
    "id": "222",
    "type": "pullRequest",
    "title": "OCPBUGS-45534: Updating baremetal-machine-controller-container image to be consistent with ART for 4.19",
    "body": "Updating baremetal-machine-controller-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: baremetal-machine-controller.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "413",
    "type": "pullRequest",
    "title": "METAL-998: Merge upstream"
  },
  {
    "id": "410",
    "type": "pullRequest",
    "title": "OCPBUGS-54582: Sync apr 2"
  },
  {
    "id": "403",
    "type": "pullRequest",
    "title": "OCPBUGS-53233: Sync mar 18"
  },
  {
    "id": "401",
    "type": "pullRequest",
    "title": "NO-ISSUE: Upstream Sync Mar 10"
  },
  {
    "id": "400",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-52215: Bump x/oauth2 to 0.27.0",
    "body": "First we bumped golang to 1.23.0 since it's required for oauth2 0.27.0 Then we bumped the version $ go get golang.org/x/oauth2@v0.27.0 $ go mod tidy $ go mod vendor"
  },
  {
    "id": "398",
    "type": "pullRequest",
    "title": "OCPBUGS-51294: Merge upstream"
  },
  {
    "id": "397",
    "type": "pullRequest",
    "title": "OCPBUGS-45252: Merge upstream"
  },
  {
    "id": "394",
    "type": "pullRequest",
    "title": "OCPBUGS-44949: Merge upstream"
  },
  {
    "id": "392",
    "type": "pullRequest",
    "title": "NO-ISSUE: Merge upstream"
  },
  {
    "id": "391",
    "type": "pullRequest",
    "title": "NO-ISSUE: Sync dec 16"
  },
  {
    "id": "387",
    "type": "pullRequest",
    "title": "OCPBUGS-45668: Updating ose-baremetal-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-baremetal-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-baremetal-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "386",
    "type": "pullRequest",
    "title": "OCPBUGS-45252: Merge upstream"
  },
  {
    "id": "343",
    "type": "pullRequest",
    "title": "OPNET-629: Use HAProxy monitor endpoint instead of API",
    "body": "Same as 336 which was reverted because it merged before a dependency in MCO."
  },
  {
    "id": "345",
    "type": "pullRequest",
    "title": "OCPBUGS-48469: Pass in platform as a optional parameter to runtimecfg cmds",
    "body": "When running on master nodes, cluster-config.yaml is not available to lookup the platform and determine if it is an on-prem or cloud platform. Fixing this by adding platform as an optional parameter. When platform and cluster-config.yaml are both not present, we will assume on-prem platform to preserve backwards compatibility."
  },
  {
    "id": "344",
    "type": "pullRequest",
    "title": "OCPEDGE-1689: Include Arbiter nodes in the API backends if there is only one master",
    "body": "Following the enhancement( for TNA clusters, we want to install this new type of cluster using Assisted-Service. Currently there is a problem when installing TNA clusters using Assisted-Service, because in Assisted-Service one of the master nodes acts as the bootstrap. So during the installation there will only be one master node, but we need two in order for keepalived-monitor to configure keepalived. We cannot wait until the bootstrap finishes and becomes a master, because then no node will have the API vip. To circumvent that we will add the arbiter node to the list of nodes."
  },
  {
    "id": "341",
    "type": "pullRequest",
    "title": "OCPBUGS-48469: Include cloud platform specific parameters to argument list for corednsmonitor",
    "body": "Include cloud platform specific parameters to argument list for corednsmonitor"
  },
  {
    "id": "342",
    "type": "pullRequest",
    "title": "Revert \"OPNET-629: Use HAProxy monitor endpoint instead of API\"",
    "body": "Reverts openshift/baremetal-runtimecfg336"
  },
  {
    "id": "336",
    "type": "pullRequest",
    "title": "OPNET-629: Use HAProxy monitor endpoint instead of API",
    "body": "This is the runtimecfg change corresponding to which switches the monitor call to the HAProxy endpoing rather than call through to the API. I also included a commit to bump the Dockerfile image to golang 1.22 to match the current state of the code."
  },
  {
    "id": "338",
    "type": "pullRequest",
    "title": "OCPBUGS-48194: Bump logrus version",
    "body": "The old one is failing the security check. 1.9.3 should be new enough to pass."
  },
  {
    "id": "335",
    "type": "pullRequest",
    "title": "OCPBUGS-45431: Updating ose-baremetal-runtimecfg-container image to be consistent with ART for 4.19",
    "body": "Updating ose-baremetal-runtimecfg-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: baremetal-runtimecfg.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "334",
    "type": "pullRequest",
    "title": "OCPBUGS-44694: Extend haproxy-monitor fall time",
    "body": "Once the HAProxy firewall rule has been created we do not expect it to need to be removed in normal functioning of the cluster. The more important part of this check is to ensure that we don't insert the rule before HAProxy is fully configured and ready to accept API traffic. Removing the rule due to health check failures is more of an escape hatch in case of an unexpected failure of HAProxy. This increases the required failure count to 11. That should ensure we never fail the check in less than 60 seconds, which is important now that the HAProxy health checks may take up to 15 seconds to detect a failure in a backend. The previous value of 3 meant we might trigger a failure in as little as 12 seconds, which is shorter than the 15 second worst case to detect a backend outage."
  },
  {
    "id": "2005",
    "type": "pullRequest",
    "title": "OCPBUGS-53106: Get installer image from configMap for node-image command",
    "body": "In order to handle disconnected environments for the node-image command, get the installer image from the configMap created by the installer instead of extracting it from the releaseImage."
  },
  {
    "id": "2007",
    "type": "pullRequest",
    "title": "OCPBUGS-52164: Add the generation of initrd.addrsize and generic.ins file for ABI Day2 Artifacts",
    "body": "This PR introduces a conditional filter to include .ins and .addrsize PXE artifacts only when the target CPU architecture is s390x during ABI-based Day-2 node image creation using oc adm node-image create. Changes: Updated the create.go logic to check for s390x CPU architecture before including: .ins .addrsize Testing Tested by: Running the oc adm node-image create for s390x and verified only s390x-relevant PXE files are generated. Ensured no regression on other platforms - .ins and .addrsize are excluded when architecture is not s390x."
  },
  {
    "id": "2008",
    "type": "pullRequest",
    "title": "NO-JIRA: `adm release new`: simplify `writePayload`",
    "body": "Reverts openshift/oc2000 The change was reverted during investigation of a release building regression in Konflux, which timewise correlated to when the original change was merged. It was found to be unrelated to the regression (details in Slack( so I would like to merge it again."
  },
  {
    "id": "2006",
    "type": "pullRequest",
    "title": "COS-3023: Fixing rpmdiff permissions when running in container",
    "body": "When the original PR (1966) merged, we started to get the following error: ``` I0407 12:45:14.563409 1 release_info.go:369 Failed to generate RPM diff: exit status 1 $ /usr/bin/oc adm release info --rpmdb-cache=/tmp/rpmdb/ --output=json --rpmdb-diff quay.io/openshift-release-dev/ocp-release@sha256:3c7decd8e09329d5206a96bcc19838d25bdc3af9c9565f249aa91494c7beb7db quay.io/openshift-release-dev/ocp-release@sha256:1e9baecce90105b4c0aa695dadc2fac7e4b9fd54e0d2ede90e143e57df8e424a error: fetching rpmdb for from image: downloading quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fac1110def727105bd11bbf49fef58072b970d40e9e55e5a645fcc54e00610a: unable to extract layer sha256:92aa75b30536c7a6425569a089281f13e3a280359eca40c2ed0cfa33c5a24134 from quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8fac1110def727105bd11bbf49fef58072b970d40e9e55e5a645fcc54e00610a: lsetxattr security.capability /tmp/rpmdb/sha256_8fac1110def727105bd11bbf49fef58072b970d40e9e55e5a645fcc54e00610a.work/sysroot/ostree/repo/objects/11/cc090cce85c1508d0f575003cba646f3eea42638697f3b79c6a00910d3c3f6.file: operation not permitted ``` @jlebon recommended a potential fix for the problem. I was able to make the changes, build, and verify that they work in the exact same environment that produced the failure above. Output from my updated container: ``` sh-5.2 /usr/bin/oc adm release info --rpmdb-cache=/tmp/rpmdb/ --output=json --rpmdb-diff quay.io/openshift-release-dev/ocp-release:4.19.0-ec.4-x86_64 quay.io/openshift-release-dev/ocp-release:4.19.0-ec.3-x86_64 { \"changed\": { \"NetworkManager\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"NetworkManager-cloud-setup\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"NetworkManager-libnm\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"NetworkManager-ovs\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"NetworkManager-team\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"NetworkManager-tui\": { \"old\": \"1:1.52.0-1.el9_6\", \"new\": \"1:1.51.90-2.el9\" }, \"binutils\": { \"old\": \"2.35.2-63.el9\", \"new\": \"2.35.2-60.el9\" }, \"binutils-gold\": { \"old\": \"2.35.2-63.el9\", \"new\": \"2.35.2-60.el9\" }, \"bootc\": { \"old\": \"1.1.6-3.el9_6\", \"new\": \"1.1.5-1.el9\" }, \"containers-common\": { \"old\": \"2:1-117.el9_6\", \"new\": \"2:1-114.el9\" }, \"cri-o\": { \"old\": \"1.32.2-6.rhaos4.19.gitf7c1f5b.el9\", \"new\": \"1.32.2-2.rhaos4.19.git318db72.el9\" }, \"dracut\": { \"old\": \"057-87.git20250311.el9_6\", \"new\": \"057-86.git20250217.el9\" }, \"dracut-network\": { \"old\": \"057-87.git20250311.el9_6\", \"new\": \"057-86.git20250217.el9\" }, \"dracut-squash\": { \"old\": \"057-87.git20250311.el9_6\", \"new\": \"057-86.git20250217.el9\" }, \"grub2-common\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"grub2-efi-x64\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"grub2-pc\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"grub2-pc-modules\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"grub2-tools\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"grub2-tools-minimal\": { \"old\": \"1:2.06-101.el9_6\", \"new\": \"1:2.06-94.el9\" }, \"kernel\": { \"old\": \"5.14.0-570.9.1.el9_6\", \"new\": \"5.14.0-570.el9\" }, \"kernel-core\": { \"old\": \"5.14.0-570.9.1.el9_6\", \"new\": \"5.14.0-570.el9\" }, \"kernel-modules\": { \"old\": \"5.14.0-570.9.1.el9_6\", \"new\": \"5.14.0-570.el9\" }, \"kernel-modules-core\": { \"old\": \"5.14.0-570.9.1.el9_6\", \"new\": \"5.14.0-570.el9\" }, \"kernel-modules-extra\": { \"old\": \"5.14.0-570.9.1.el9_6\", \"new\": \"5.14.0-570.el9\" }, \"libxslt\": { \"old\": \"1.1.34-10.el9_6\", \"new\": \"1.1.34-9.el9\" }, \"linux-firmware\": { \"old\": \"20250314-151.el9_6\", \"new\": \"20250212-150.el9\" }, \"linux-firmware-whence\": { \"old\": \"20250314-151.el9_6\", \"new\": \"20250212-150.el9\" }, \"nmstate\": { \"old\": \"2.2.41-1.el9_6\", \"new\": \"2.2.40-1.el9\" }, \"openshift-clients\": { \"old\": \"4.19.0-202503211410.p0.g33cbfe1.assembly.stream.el9\", \"new\": \"4.19.0-202503032209.p0.ge7e738c.assembly.stream.el9\" }, \"openshift-kubelet\": { \"old\": \"4.19.0-202503250607.p0.gd365efd.assembly.stream.el9\", \"new\": \"4.19.0-202502280209.p0.gc3a6a36.assembly.stream.el9\" }, \"ose-aws-ecr-image-credential-provider\": { \"old\": \"4.19.0-202503041513.p0.g425c1c5.assembly.stream.el9\", \"new\": \"4.19.0-202502260909.p0.g425c1c5.assembly.stream.el9\" }, \"ose-azure-acr-image-credential-provider\": { \"old\": \"4.19.0-202503051509.p0.gcc04736.assembly.stream.el9\", \"new\": \"4.19.0-202502261109.p0.g2e732f8.assembly.stream.el9\" }, \"ose-gcp-gcr-image-credential-provider\": { \"old\": \"4.19.0-202503041513.p0.gd8d3aeb.assembly.stream.el9\", \"new\": \"4.19.0-202502260909.p0.gd8d3aeb.assembly.stream.el9\" }, \"redhat-release\": { \"old\": \"9.6-0.1.el9\", \"new\": \"9.6-0.0.el9\" }, \"redhat-release-eula\": { \"old\": \"9.6-0.1.el9\", \"new\": \"9.6-0.0.el9\" }, \"selinux-policy\": { \"old\": \"38.1.53-4.el9_6\", \"new\": \"38.1.53-2.el9\" }, \"selinux-policy-targeted\": { \"old\": \"38.1.53-4.el9_6\", \"new\": \"38.1.53-2.el9\" } } } ``` This PR contains the recommended changes"
  },
  {
    "id": "1966",
    "type": "pullRequest",
    "title": "COS-3023: pkg/cli/admin/release/info: support generating RPM diffs",
    "body": "It's often useful when looking up release images to know the list of RPM packages that shipped in the node image. Add new switches for this: - `oc adm release info --rpmdb $IMG` will list all the packages in the node image for the given release image payload - `oc adm release info --rpmdb-diff $IMG1 $IMG2` will diff the set of packages in the node image for the given release image payloads The code is generic over the actual target image. By default, the node image is used, but `--rpmdb-image` can be used to select a different one. The primary motivation for this is in which the node image will no longer be built within the CoreOS pipeline as a base image. Instead, it will be a layered image built in OpenShift CI/Konflux. As a result, all layered packages will not show up in the CoreOS release browser differ. With this functionality, the release controller will be able to render RPM diffs in the web UI, greatly de-emphasize the CoreOS differ and effectively dropping the requirement for having VPN access. Some notes on the implementation: - The rpmdb for a given image is cached, keyed by the image digest. - We don't try to be smart here and e.g. only download some layers. There are some issues with doing that. We literally do download the full image, _but_ we only cache the rpmdb content and throw away the rest. That said, the high cost isn't an issue in practice because the release controller can nicely represent operations which take time so it didn't feel worth the effort of trying to optimize this further. Once we have SBOMs available for all our images, this should be a much cheaper way to query its RPM contents. Additionally/alternatively, for the node image specifically, if we ever end up with lockfiles in the git repo, this would effectively mean that the git changelog _is_ the RPM changelog also, meshing nicely with the existing infrastructure around that."
  },
  {
    "id": "1997",
    "type": "pullRequest",
    "title": "NO-JIRA: `adm release new`: simplify `writePayload`",
    "body": "There was code that was supposed to handle potentially nested path, but this path (parts) is hardcoded to be a single top-level directory, so none of the complexity is necessary and can be removed, including the special `writeNestedTarHeader` method. Some declarations can be moved closer to where they are used, improving readability."
  },
  {
    "id": "1999",
    "type": "pullRequest",
    "title": "NO-JIRA: `adm release new`: simplify no operator error condition",
    "body": "The actual `operators` content is never used, so it does not need to be sorted, and treating `nil` as a silent good case and `len()==0` as an error case does not look right (`writePayload` never produces an empty non-nil `operators`)."
  },
  {
    "id": "1995",
    "type": "pullRequest",
    "title": "OCPBUGS-54168: Use ProxyFromEnvironment when creating HTTP transport",
    "body": "Add proxy support for pvc filesystem usage percentage CLI - Go\u2019s net/http client resolves DNS before proxying the request - proxies are only used after DNS resolution. So we'd better init Go HTTP Client with Standard HTTP Proxy if the proxy environment variables set. Local test wroked ```console before the fix patch after export proxy $ export http_proxy= $ export https_proxy= $ oc adm top pvc --insecure-skip-tls-verify=true --v=8 I0324 22:52:59.943468 40954 loader.go:402 Config loaded from file: /Users/wangpenghao/hc.kubeconfig I0324 22:52:59.943835 40954 envvar.go:172 \"Feature gate default state\" feature=\"InformerResourceVersion\" enabled=false I0324 22:52:59.943855 40954 envvar.go:172 \"Feature gate default state\" feature=\"WatchListClient\" enabled=false I0324 22:52:59.943860 40954 envvar.go:172 \"Feature gate default state\" feature=\"ClientsAllowCBOR\" enabled=false I0324 22:52:59.943865 40954 envvar.go:172 \"Feature gate default state\" feature=\"ClientsPreferCBOR\" enabled=false I0324 22:52:59.944331 40954 type.go:168 \"Request Body\" body=\"\" I0324 22:52:59.944429 40954 round_trippers.go:470 GET I0324 22:52:59.944435 40954 round_trippers.go:476 Request Headers: I0324 22:52:59.944443 40954 round_trippers.go:480 Accept: application/json, / I0324 22:52:59.944447 40954 round_trippers.go:480 User-Agent: oc/4.19.0 (darwin/amd64) kubernetes/e7e738c I0324 22:52:59.944452 40954 round_trippers.go:480 Authorization: Bearer masked I0324 22:53:01.000163 40954 round_trippers.go:581 Response Status: 200 OK in 1055 milliseconds I0324 22:53:01.000252 40954 round_trippers.go:584 Response Headers: I0324 22:53:01.000270 40954 round_trippers.go:587 Cache-Control: no-cache, private I0324 22:53:01.000280 40954 round_trippers.go:587 Cache-Control: no-store I0324 22:53:01.000291 40954 round_trippers.go:587 Date: Mon, 24 Mar 2025 14:53:00 GMT I0324 22:53:01.000301 40954 round_trippers.go:587 X-Kubernetes-Pf-Flowschema-Uid: 5af774f2-4560-49d4-a68e-414d1eac5fa4 I0324 22:53:01.000312 40954 round_trippers.go:587 Content-Length: 1707 I0324 22:53:01.000320 40954 round_trippers.go:587 Audit-Id: e7f9cf7a-0e2a-46f3-94b4-bbfbcc50c422 I0324 22:53:01.000330 40954 round_trippers.go:587 Audit-Id: e7f9cf7a-0e2a-46f3-94b4-bbfbcc50c422 I0324 22:53:01.000341 40954 round_trippers.go:587 Content-Type: application/json I0324 22:53:01.000351 40954 round_trippers.go:587 Strict-Transport-Security: max-age=31536000; includeSubDomains; preload I0324 22:53:01.000364 40954 round_trippers.go:587 X-Kubernetes-Pf-Prioritylevel-Uid: 0a76752a-7742-4c20-8588-a5d863f93cd1 I0324 22:53:01.000700 40954 type.go:168 \"Response Body\" body=\"{\\\"kind\\\":\\\"Route\\\",\\\"apiVersion\\\":\\\"route.openshift.io/v1\\\",\\\"metadata\\\":{\\\"name\\\":\\\"prometheus-k8s\\\",\\\"namespace\\\":\\\"openshift-monitoring\\\",\\\"uid\\\":\\\"44db6991-09ed-45c4-9b75-f4eb77a70b71\\\",\\\"resourceVersion\\\":\\\"29427\\\",\\\"creationTimestamp\\\":\\\"2025-03-24T06:36:58Z\\\",\\\"labels\\\":{\\\"app.kubernetes.io/managed-by\\\":\\\"cluster-monitoring-operator\\\",\\\"app.kubernetes.io/part-of\\\":\\\"openshift-monitoring\\\"},\\\"annotations\\\":{\\\"openshift.io/description\\\":\\\"Expose the `/api` endpoints of the `prometheus-k8s` service via a router.\\\",\\\"openshift.io/host.generated\\\":\\\"true\\\"},\\\"managedFields\\\":{\\\"manager\\\":\\\"operator\\\",\\\"operation\\\":\\\"Update\\\",\\\"apiVersion\\\":\\\"route.openshift.io/v1\\\",\\\"time\\\":\\\"2025-03-24T06:36:58Z\\\",\\\"fieldsType\\\":\\\"FieldsV1\\\",\\\"fieldsV1\\\":{\\\"f:metadata\\\":{\\\"f:annotations\\\":{\\\".\\\":{},\\\"f:openshift.io/description\\\":{}},\\\"f:labels\\\":{\\\".\\\":{},\\\"f:app.kubernetes.io/managed-by\\\":{},\\\"f:app.kubernetes.io/part-of\\\":{}}},\\\"f:spec\\\":{\\\"f:path\\\":{},\\\"f:port\\\":{\\\".\\\":{},\\\"f:targetPort\\\":{}},\\\"f:tls\\\":{\\\".\\\":{},\\\"f:insecureEdgeTerminationPolicy\\\":{},\\\"f:termination\\\":{}},\\\"f:to\\\":{\\\"f:kind\\\":{},\\\"f:name\\\":{},\\\"f:weight\\\":{}},\\\"f:wi truncated 683 chars\" I0324 22:53:01.002184 40954 round_trippers.go:470 GET I0324 22:53:01.002278 40954 round_trippers.go:476 Request Headers: I0324 22:53:01.002327 40954 round_trippers.go:480 User-Agent: oc/4.19.0 (darwin/amd64) kubernetes/e7e738c(top persistentvolumeclaims) I0324 22:53:01.002345 40954 round_trippers.go:480 Authorization: Bearer masked I0324 22:53:01.458489 40954 round_trippers.go:581 Response Status: in 456 milliseconds I0324 22:53:01.458526 40954 round_trippers.go:584 Response Headers: error: failed to get persistentvolumeclaims from Prometheus: unable to get /api/v1/query from URI in the openshift-monitoring/prometheus-k8s Route: prometheus-k8s-openshift-monitoring.apps.ropatil-324aws1.qe.devcluster.openshift.com, Get \" dial tcp: lookup prometheus-k8s-openshift-monitoring.apps.ropatil-324aws1.qe.devcluster.openshift.com: no such host After the fix patch $ make oc go build -mod=vendor -tags 'include_gcs include_oss containers_image_openpgp gssapi' -ldflags \"-X github.com/openshift/oc/pkg/version.versionFromGit=\"v4.2.0-alpha.0-2624-g33cbfe1\" -X github.com/openshift/oc/pkg/version.commitFromGit=\"33cbfe154\" -X github.com/openshift/oc/pkg/version.gitTreeState=\"dirty\" -X github.com/openshift/oc/pkg/version.buildDate=\"2025-03-24T14:39:37Z\" -X k8s.io/component-base/version.gitMajor=\"1\" -X k8s.io/component-base/version.gitMinor=\"32\" -X k8s.io/component-base/version.gitVersion=\"v1.32.1\" -X k8s.io/component-base/version.gitCommit=\"33cbfe154\" -X k8s.io/component-base/version.buildDate=\"2025-03-24T14:39:34Z\" -X k8s.io/component-base/version.gitTreeState=\"clean\" -X k8s.io/client-go/pkg/version.gitVersion=\"v4.2.0-alpha.0-2624-g33cbfe1\" -X k8s.io/client-go/pkg/version.gitCommit=\"33cbfe154\" -X k8s.io/client-go/pkg/version.buildDate=\"2025-03-24T14:39:34Z\" -X k8s.io/client-go/pkg/version.gitTreeState=\"dirty\"\" github.com/openshift/oc/cmd/oc $./oc version Client Version: v4.2.0-alpha.0-2624-g33cbfe1 Kustomize Version: v5.5.0 $ ./oc adm top pvc --insecure-skip-tls-verify=true NAMESPACE NAME USAGE(%) default mypvc 0.00% ```"
  },
  {
    "id": "1991",
    "type": "pullRequest",
    "title": "NO-JIRA: debug: suggest nsenter instead of chroot",
    "body": "`chroot /host` does not change the namespaces for the current process. In particular not joining the mount namespace is a continuous source of confusion for mounts not being propagated to the containers. Suggest `nsenter` as a better alternative."
  },
  {
    "id": "1992",
    "type": "pullRequest",
    "title": "OCPBUGS-53389: Use fedora image in unit tests instead of centos",
    "body": "It seems that centos is entirely removed and unit tests in oc are permanently failing. This PR uses `fedora` image instead of removed `centos` image to fix this failure. sample failure:"
  },
  {
    "id": "1989",
    "type": "pullRequest",
    "title": "OCPBUGS-23514: status: Adjust impact summary for Failing=Unknown",
    "body": "cvo1165( introduced uncertainty of the Failing condition (`Failing=Unknown`). This PR adjusts the impact summary in updateInsight accordingly."
  },
  {
    "id": "1987",
    "type": "pullRequest",
    "title": "OCPBUGS-52504: pkg/cli/admin/upgrade/recommend: Populate RESTConfig",
    "body": "Avoid crashing with pre-checks enabled: ```console $ export OC_ENABLE_CMD_UPGRADE_RECOMMEND=true overall 'recommend' command still tech-preview $ export OC_ENABLE_CMD_UPGRADE_RECOMMEND_PRECHECK=true pre-check functionality even more tech-preview $ ./oc adm upgrade recommend --version 4.17.18 panic: runtime error: invalid memory address or nil pointer dereference signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x3bd3cdd goroutine 1 running: github.com/openshift/client-go/route/clientset/versioned/typed/route/v1.NewForConfig(0x24ec35c?) /go/src/github.com/openshift/oc/vendor/github.com/openshift/client-go/route/clientset/versioned/typed/route/v1/route_client.go:31 +0x1d github.com/openshift/oc/pkg/cli/admin/upgrade/recommend.(options).alerts(0xc000663130, {0x5ed4828, 0x8350a80}) /go/src/github.com/openshift/oc/pkg/cli/admin/upgrade/recommend/alerts.go:34 +0x170 github.com/openshift/oc/pkg/cli/admin/upgrade/recommend.(options).precheck(0x0?, {0x5ed4828, 0x8350a80}) ... ``` I'd added the `RESTConfig` option to feed the Route lookup in e11b84dab2 (1970), but forgotten to populate it, and the bugged path is outside of what the unit test fixtures excercise."
  },
  {
    "id": "1984",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump x/oauth2 and x/crypto",
    "body": "We know that oc is not affected by (CVE-2025-22869) and (CVE-2025-22868). Nevertheless, this PR bumps x/oauth2 and x/crypto to silence scanners."
  },
  {
    "id": "1983",
    "type": "pullRequest",
    "title": "OCPBUGS-51254: Bump indirect dependency go-jose to 4.0.5 version",
    "body": "This PR bumps indirect go-jose dependency to 4.0.5 version."
  },
  {
    "id": "1981",
    "type": "pullRequest",
    "title": "NO-ISSUE: pkg/cli/admin/upgrade/recommend: Configureable version for test fixtures",
    "body": "Always testing 4.12.51 was easy, but is less interesting once we have one `no updates to 4.12 available` example. Make the target version for each ClusterVersion dump configurable, so we can see what `--version VERSION` with working versions expands too on more recent dumps as well."
  },
  {
    "id": "1964",
    "type": "pullRequest",
    "title": "NO-ISSUE: Test case for lowercase Jira ticket names",
    "body": "We had a scenario come up where the release-controller did not take the expected action, on a JIRA ticket, when it was included in a nightly build. After some digging, it turned out that the commit message contained the ticket id in lowercase. Jira ticket: PR: First Accepted nightly, post merge: Corresponding Release-controller changelog: !image( This PR adds a test case that illustrates the expected behavior if/when a commit message comes in that doesn't match the expected regex here( The result is that there is no associated reference to a valid Bug."
  },
  {
    "id": "1980",
    "type": "pullRequest",
    "title": "NO-ISSUE: pkg/cli/admin/upgrade/recommend: \"Upstream\" - \"Upstream update service\"",
    "body": "The ClusterVersion spec property is `spec.upstream`, and that's a v1 API we cannot easily change. But in freeform text here, we can get closer to the \"OpenShift Update Service\" wording we use in docs1. I haven't included \"OpenShift\", because hopefully that context is obvious to folks running `oc ....`. I haven't Title Cased, because I'm not listing a particular product/implementation; it's possible that the customer has pointed their cluster at a custom update service like a raw GitHub file3. I've kept \"Upstream\" to make it easier for folks to associate with spec.upstream. And I've left the GA `oc adm upgrade` alone on this, because it's been using \"Upstream:\" for years now, and this seems minor enough that I don't think it's worth disrupting things there. 1: 3:"
  },
  {
    "id": "1979",
    "type": "pullRequest",
    "title": "trt-1995: Update Unconditional Feature Gate Notation",
    "body": "This pr bumps library-go to pull in an enhancement request from TRT-1995( to change Feature Gate `Unconditional` - `Unconditionally Enabled` That change came in via library-go1933("
  },
  {
    "id": "1974",
    "type": "pullRequest",
    "title": "OCPBUGS-50682: OCPBUGS-50683: Correct oc adm top pvc messages",
    "body": "Hi Team, PTAL for the issue: Output Verification after fix: oc adm top pvc --insecure-skip-tls-verify=true -n testropatil error: no persistentvolumeclaims found or mounted in testropatil namespace. oc adm top pvc --insecure-skip-tls-verify=true -n testropatil NAMESPACE NAME USAGE(%) testropatil mypvc-fs-gp2 0.00% testropatil mypvc-fs-gp3 0.00%"
  },
  {
    "id": "1971",
    "type": "pullRequest",
    "title": "WRKLDS-1653: Update k8s dependencies to 1.32",
    "body": "This PR; updates k8s dependencies to 1.32.1. reacts to the changes in k8s"
  },
  {
    "id": "1970",
    "type": "pullRequest",
    "title": "OTA-1426: pkg/cli/admin/upgrade: Check and display interesting alerts",
    "body": "Retrieving alerts and rendering the interesting ones, as described in OTA-1426( See the individual commit messages for me trying to walk through building this in steps, and the new `pkg/cli/admin/upgrade/recommend/examples/4.16.27-degraded-monitoring.output` for the most direct example of the new logic."
  },
  {
    "id": "1969",
    "type": "pullRequest",
    "title": "NO-JIRA: Sanitize tar header name as it is used in path",
    "body": "Security jobs are failing by warning us about unsanitized tar file. This PR sanitizes tar header file."
  },
  {
    "id": "1960",
    "type": "pullRequest",
    "title": "OCPBUGS-49450: Address `github.com/docker/docker` CVE",
    "body": "- CVE-2024-41110 Closes 1950"
  },
  {
    "id": "1959",
    "type": "pullRequest",
    "title": "NO-ISSUE: admin/upgrade/status/examples/README: Document -alerts.json",
    "body": "Catching the docs up with 10c41f5262 (1740). Also drop the enumeration that started when the file was created in 57e984491c (1595). Folks who care how many inputs and outputs there currently are can count for themselves, and this content is easier to maintain without having to bump later entry numbers when inserting an earlier entry."
  },
  {
    "id": "1949",
    "type": "pullRequest",
    "title": "OCPBUGS-38975: monitor should not exit for temp api disconnect",
    "body": "This commit updates the isMonitoringDone function to retry and not exit if the error from reading the node-joiner pod is Get \" EOF This happens if the oc client is temporarily disconnected from the api server. The error returned is type net/url/Error."
  },
  {
    "id": "1956",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove experimental tag for --report and --pxe",
    "body": "The experimental tag can be removed before next release. It was added to master for a backport to the release-4.18 branch."
  },
  {
    "id": "1955",
    "type": "pullRequest",
    "title": "OCPBUGS-46361: Mark adm pod-network command as hidden and depcated",
    "body": "`oc adm pod-network` command only works on OpenShift SDN which has been deprecated long time ago. So still advertising this command in help output is misleading. This PR marks this command as hidden, so `oc adm --help` will not print it. Besides, this PR marks this command as deprecated, so there will be a deprecation message during its usage. ```sh $ ./oc adm pod-network Command \"pod-network\" is deprecated, pod-network command only works on OpenShift SDN which has been deprecated. Manage pod network in the cluster ``` Other than that, users still rely on the functionality of this command will continue using it as is (just an additional deprecation message that should not cause any issues)."
  },
  {
    "id": "1933",
    "type": "pullRequest",
    "title": "OTA-1393: status: recognize multi-arch in node phase (2)",
    "body": "It turns out that MCO annotates( a node and updates it and only then moves on the next node. This means for example, the worker pool with 3 nodes has always `COMPLETION=67% (2/3)` during migration. I thought about use `mcp.status.updatedMachineCount/mcp.status.machineCount` for the migration case. With the mcp in our example( `COMPLETION=33% (1/3)` instead of `COMPLETION=67% (2/3)`. It would work ONLY for the case without the customized pools. To fix it properly, we might have to resort to the changes on MCO. `N/A` does not sound ideal but an admin might not be interested in the progress of existing worker nodes restarts as it is irrelevant to the goal of migrating a cluster to multi-arch: create a new pool of nodes with a secondary arch. As soon as the control planes upgrade completes, the cluster is ready for that. --- With the idea of we fixed the node phase, assessment, and the completion. --- We found a limitation that the status command claims \"not updating\" while the data plane update is still running (after the control plane update is complete). See the discussion( /cc @petr-muller @DavidHurta"
  },
  {
    "id": "1945",
    "type": "pullRequest",
    "title": "OCPBUGS-19824: release new: replace 0.0.1-snapshot in all manifests",
    "body": "Previously the substitution was performed only on manifests extracted from images that supplied `image-references`. It should be possible to perform the basic version (but not component versions like 0.0.1-snapshot-component or things like pullspecs) substitution on such manifests safely."
  },
  {
    "id": "1539",
    "type": "pullRequest",
    "title": "OCPBUGS-18961: pkg/cli/admin/release/extract_tools: Enable ImageRegistry, etc. on 4.13-to-4.14",
    "body": "Catching up with additional 4.14 capabilities1. As with `MachineAPI`, all of the new capabilities were enabled in all 4.13 clusters, and because capabilities cannot be uninstalled2, that means they'll be enabled, possibly implicitly, after an update to 4.14. Including them here ensures that we extract the `ImageRegistry` CredentialsRequest in: ```console $ oc adm release extract --included --credentials-requests --to credentials-requests quay.io/openshift-release-dev/ocp-release:4.14.0... ``` when connecting to a currently-4.13 cluster. OTA-10103 is tracking a more sustainable long-term approach. 1: 2: 3:"
  },
  {
    "id": "1951",
    "type": "pullRequest",
    "title": "OCPBUGS-45991: Mark --report and --pxe flags as experimental",
    "body": "They were introduced recently for \"oc adm node-image create\" and should be marked as experimental until next release."
  },
  {
    "id": "1931",
    "type": "pullRequest",
    "title": "OCPBUGS-45311: fix oc adm node-image create --pxe command to copy the correct artifacts",
    "body": "This patch takes care of copying only the required artifacts from the node-joiner pod when the --pxe command flag is used (instead the copy the whole folder)"
  },
  {
    "id": "1946",
    "type": "pullRequest",
    "title": "OCPBUGS-45754: Updating openshift-enterprise-deployer-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-deployer-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-deployer.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel. Depends on PullRequest(title=\"OCPBUGS-45454: Updating openshift-enterprise-cli-container image to be consistent with ART for 4.19\", number=1935) . Allow it to merge and then run `/test all` on this PR."
  },
  {
    "id": "1942",
    "type": "pullRequest",
    "title": "NO-JIRA: adm release: simplify safe manifests mappers",
    "body": "Most ManifestMappers never return errors which makes related code unnecessarily complicated: signatures imply there may be errors, but there are none, plus there needs to be more error handling. Instead, introduce a `SafeManifestMapper` with simpler signature, and use it internally. /cc @DavidHurta @hongkailiu @wking"
  },
  {
    "id": "1938",
    "type": "pullRequest",
    "title": "OCPBUGS-45454: Update to 4.19 and Go 1.23.0",
    "body": "This PR is proposed as a replacement of and the others that will be opened automatically."
  },
  {
    "id": "1936",
    "type": "pullRequest",
    "title": "NO-JIRA: adm release: clarify manifest processing",
    "body": "Rename variables to use `src` and `dst` more clearly /cc @DavidHurta @wking @hongkailiu"
  },
  {
    "id": "1934",
    "type": "pullRequest",
    "title": "OCPBUGS-45363: adm node-logs: Also parse logs when encountered with standard html header",
    "body": "@rphillips found that from Go 1.23 and upwards, `FileServer` starts serving the files with extra html headers by this commit. Contrarily, `oc adm node-logs` parses with the assumption that data should have `pre` prefix, otherwise it simply prints the plain data. This results in unexpected output and failures in CI. So this PR adds the standard html header into the accepted prefix list to parse the data as html."
  },
  {
    "id": "1930",
    "type": "pullRequest",
    "title": "NO-JIRA: adm release: simplify `image-references` check",
    "body": "Previously the check for `image-references` file presence was done by a `takeFileByName` (not a very good name) function which also removed the corresponding `FileInfo` from `contents` as a sideeffect,, so it is not iterated later when the manifests are processed. The file existence can be checked directly, and the file can be easily skipped when doing substitution. While I believe the code is clearer this way, I still added a comment saying why the presence of the file is checked. /cc @DavidHurta @hongkailiu @wking"
  },
  {
    "id": "1928",
    "type": "pullRequest",
    "title": "OTA-1393: status: recognize multi-arch in node phase",
    "body": "Address I thought we would need something from the MCO side to recognize the transactions between node phases (as the operator image pull spec is a new thing). While thinking about it again, MCO must have known if it needs to update the nodes without the pull spec and found the annotations. I checked the machine configs for multi-arch migration (see the following bash output): `master` (`worker` respectively) has two with `4.18.0-ec.3` and each of them should be for before-and-after the update. The `status` command does not need to use these annotations as the version annotation( is enough until the multi-arch migration is under consideration because the version stays the same. ``` $ cat pkg/cli/admin/upgrade/status/examples/to-multi-arch-mc.yaml |select(.metadata.annotations\"machineconfiguration.openshift.io/release-image-version\"==\"4.18.0-ec.3\")' \"rendered-master-1f718b5bc3667e49797e9a47d9f48725\", \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f135a14056f31c9c21782ac194f527e358d59a67e20ccf75f08706cc68c8c980\", \"2024-11-20T23:24:40Z\" \"rendered-master-909adc791f502a35c20ba70158c4c582\", \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c3a4fec8e58e41a24e4bc15de9c1261b917448246d62b37dc83e4871837e3fbb\", \"2024-11-20T22:36:32Z\" \"rendered-worker-869799cd72c887a5da8248efd58bb2a9\", \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c3a4fec8e58e41a24e4bc15de9c1261b917448246d62b37dc83e4871837e3fbb\", \"2024-11-20T22:36:32Z\" \"rendered-worker-a079988a31206987bed827f0242d7b3f\", \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f135a14056f31c9c21782ac194f527e358d59a67e20ccf75f08706cc68c8c980\", \"2024-11-20T23:24:40Z\" ``` /cc @petr-muller @DavidHurta"
  },
  {
    "id": "1929",
    "type": "pullRequest",
    "title": "OCPBUGS-45022: Obfuscate sensitive data in Proxy resource while inspection",
    "body": "Proxy resource can contain sensitive information and inspect command should obfuscate all these fields. This PR achieves this."
  },
  {
    "id": "1926",
    "type": "pullRequest",
    "title": "OTA-1393: status: recognize multi-arch in target version",
    "body": "Address and /cc @petr-muller @DavidHurta"
  },
  {
    "id": "1911",
    "type": "pullRequest",
    "title": "no-jira: Documentation fix: add missing whitespace character",
    "body": "This change adds a missing whitespace character in the help description for the 'oc set data --from-file' parameter."
  },
  {
    "id": "1917",
    "type": "pullRequest",
    "title": "NO-JIRA: adm release: simplify manifest iteration",
    "body": "Full `imageData` was passed to the callback but existing callbacks only needed the containing directory. Therefore the callback signature can be simplified to `func(directory, content, operator)` /cc @wking @DavidHurta"
  },
  {
    "id": "1924",
    "type": "pullRequest",
    "title": "OTA-1393: status: compute mcoImagePullSpec only once",
    "body": "To address /cc @petr-muller @DavidHurta"
  },
  {
    "id": "854",
    "type": "pullRequest",
    "title": "OCPBUGS-55204: Revert \"Merge pull request 848 from jstuever/OCPBUGS-53429\"",
    "body": "This reverts commit 8ff60a024ed9b9889d80ad2745181a1e4bc5c281, reversing changes made to d66761c098427c1a700d984c78d03f785d233d83."
  },
  {
    "id": "848",
    "type": "pullRequest",
    "title": "OCPBUGS-53429: Render: configure proxy on bootstrap static pod",
    "body": "Previously, the static pod on the bootstrap machine was not aware of the cluster-wide proxy configuration. This caused the static pod to be unable to reach sites that were not allowed directly from the bootstrap host. This caused installation failure in Mint and Passthrough mode as the bootstrap process depends on some credentials being populated. This change injects the proxy env variables into the static pod manifest when rendered. It also mounts the ca-trust from the bootstrap host into the pod. This enables the cloud-credential-operator binary to use the proxy as configured in the environment variables on the static pod. Previously, the render command used string templates to generate some manifests. This made it difficult to modify the values, forcing all changes to adhere to the template structure. This change migrates those templates to the relevant object structs and uses yaml marshal to generate the manifests. This enables the values to be changed easily on the objects. It purposefully uses the sigs yaml module because it is capable of adhering to the json structure tags producing concise yaml manifests as a result."
  },
  {
    "id": "836",
    "type": "pullRequest",
    "title": "OCPBUGS-53824: update github.com/golang-jwt/jwt",
    "body": "github.com/golang-jwt/jwt/v4 v4.5.2 github.com/golang-jwt/jwt/v5 v5.2.2"
  },
  {
    "id": "827",
    "type": "pullRequest",
    "title": "NO-JIRA: Report the error when syncing STS secrets",
    "body": "When the controller fails to create an STS secret, it doesn't surface the error generated by the k8s client. The error message is instead quite generic and difficult to troubleshoot: ``` time=\"2025-03-10T08:58:38Z\" level=error msg=\"error syncing credentials: error syncing creds in mint-mode: error processing secret\" controller=credreq cr=openshift-cloud-credential-operator/cluster-init secret=ci/cluster-init-cloud-credentials ```"
  },
  {
    "id": "780",
    "type": "pullRequest",
    "title": "OSASINFRA-3657: Add support for storing OpenStack CA bundles",
    "body": "If a CA bundle is required to talk to your OpenStack then obviously all services that talk to the cloud need to have both credentials and said bundle. Currently, these users can get their credentials via cloud credential operator, but they need to source their CA bundle from elsewhere (typically by extracting it from the cloud controller manager's configuration). This makes configuration of services more complicated than necessary. Begin the resolution of the issue by allowing users (i.e. the Installer) to store the CA bundle in their root secret and dole this out to anyone who asks for it via a `CredentialsRequest`. Follow-up changes will be needed in places like the Installer and csi-operator to start setting/consuming this."
  },
  {
    "id": "821",
    "type": "pullRequest",
    "title": "OCPBUGS-52505: golang.org/x/oauth2 v0.28.0"
  },
  {
    "id": "819",
    "type": "pullRequest",
    "title": "CCO-647: Enable readOnlyRootFilesystem on all containers",
    "body": "The readOnlyRootFilesystem is now explicitly set to True on all containers. In order to for this to work on the cloud-credential-operator container, the tls-ca-bundle.pem mount being reverted to the default location."
  },
  {
    "id": "823",
    "type": "pullRequest",
    "title": "OCPBUGS-52507: github.com/go-jose/go-jose/v4 v4.0.5"
  },
  {
    "id": "818",
    "type": "pullRequest",
    "title": "NO-JIRA: Add dry-run on aws create-all command",
    "body": "As per title, enable `--dry-run` when generating all AWS assets by running `ccoctl aws create-all`. The change should be quite straightforward as the vast majority of the code is there, already implemented. The sole relevant change is in `func getIssuerURLFromIdentityProvider`."
  },
  {
    "id": "820",
    "type": "pullRequest",
    "title": "NO-JIRA: add example of how to build from source",
    "body": "for users who want to build from source."
  },
  {
    "id": "817",
    "type": "pullRequest",
    "title": "CCO-629: Update modules to latest"
  },
  {
    "id": "816",
    "type": "pullRequest",
    "title": "NO-JIRA: docs: rotate oidc key to use less opinionated CLUSTER_NAME",
    "body": "Previously, the rotate oidc key documentation assumed the CLUSTER_ID has exactly 6 random characters appended to the end, including the hyphen. This change modifies it to instead use glob to remove any number of characters."
  },
  {
    "id": "814",
    "type": "pullRequest",
    "title": "CCO-631: Upgrade to k8s v0.32.0"
  },
  {
    "id": "811",
    "type": "pullRequest",
    "title": "CCO-626: pkg/operator/utils: Log diff on CredentialsRequest status change",
    "body": "`status has changed, updating` shows that something is changing. But without a diff, it's hard to figure out what. For example in this recent CI run1: ```console $ curl -s :"
  },
  {
    "id": "803",
    "type": "pullRequest",
    "title": "OCPBUGS-47466: golang.org/x/net v0.33.0"
  },
  {
    "id": "796",
    "type": "pullRequest",
    "title": "OCPBUGS-45699: Updating ose-cloud-credential-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cloud-credential-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cloud-credential-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "789",
    "type": "pullRequest",
    "title": "OCPBUGS-41727: Add AWS region to aws-pod-identity-webhook",
    "body": "AWS SDK Go Client v2 (v1 approaching EOL soon) does not allow STS sessions to authenticate without a valid AWS region set in the environment due to STS regional endpoints. The pod identity webhook binary injects the region only when the `--aws-default-region` flag is added. This is required for clients to continue authenticating with STS and avoid errors: ``` get identity: get credentials: failed to refresh cached credentials, failed to retrieve credentials, operation error STS: AssumeRoleWithWebIdentity, failed to resolve service endpoint, endpoint rule error, Invalid Configuration: Missing Region ```"
  },
  {
    "id": "797",
    "type": "pullRequest",
    "title": "NO-JIRA: docs: rotate azure key to use more accurate variable commands"
  },
  {
    "id": "762",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix JSON for 07-block-public-access-to-oidc-bucket.json",
    "body": "Proposed fix for"
  },
  {
    "id": "781",
    "type": "pullRequest",
    "title": "OCPBUGS-44933: Add retry to ccoctl gcp create functions",
    "body": "The ccoct gcp create functions occassionaly fail when recently created resources have not yet replicated in the cloud. This change adds retry functionality to increase success rate when this happens."
  },
  {
    "id": "790",
    "type": "pullRequest",
    "title": "NO-JIRA: docs: rotate oidc key to specify azure storage account variables"
  },
  {
    "id": "782",
    "type": "pullRequest",
    "title": "OCPBUGS-44999: github.com/golang-jwt/jwt/v4 v4.5.1"
  },
  {
    "id": "168",
    "type": "pullRequest",
    "title": "OCPBUGS-45891: Increase API call timeout to 30 second",
    "body": "This PR is to increase client timeout for any API call to 30 second. A warning message gets logged if response from API is not received before previously set timeout period gets over."
  },
  {
    "id": "169",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Remove ARO HCP MIv2 authentication from CNCC",
    "body": "This PR: - removes the ARO HCP managed identity version 2 authentication as a way to authenticate with Azure cloud. Only user assigned identity credentials should be used to authenticate for ARO HCP. - removes filewatcher.go. This file was only needed for ARO HCP MIv2 authentication. - updates go.mod after removing the filewatcher.go file."
  },
  {
    "id": "166",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Add new Azure authentication type for managed Azure HCP for cloud-network-config-controller",
    "body": "This PR: - adds the new Azure authentication for managed Azure HCP called UserAssignedIdentityCredentials. - refactors several items to use new Azure SDK for go libraries See Persisting MSI Credentials( for more info."
  },
  {
    "id": "167",
    "type": "pullRequest",
    "title": "OSASINFRA-3755: Prefer CA cert from credentials secret",
    "body": "In openshift/cloud-credential-operator/pull/780, we have added the ability for `cloud-credential-operator` to consume a CA cert from the root credentials secret and to include in the credentials secrets it provisions. In openshift/installer/pull/9194, we have modified the Installer to start setting this field where necessary. Adapt `cloud-network-config-operator` to allow it to start consuming the CA cert from this place. We maintain fallbacks for the previous locations of the cert for now, but these can be removed in the next release."
  },
  {
    "id": "164",
    "type": "pullRequest",
    "title": "OCPBUGS-53201: Revert \"CNTRLPLANE-112: Add new Azure authentication type for managed Azure HCP for cloud-network-config-controller\"",
    "body": "Reverts openshift/cloud-network-config-controller161 Testing if this is related to the recent azure egressIP failures( As a followup we need to add the azure serial job to this repo."
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Add new Azure authentication type for managed Azure HCP for cloud-network-config-controller",
    "body": "This PR adds the new Azure authentication for managed Azure HCP called UserAssignedIdentityCredentials. See Persisting MSI Credentials( for more info."
  },
  {
    "id": "163",
    "type": "pullRequest",
    "title": "SDN-5690:Rebase k8s to 1.32",
    "body": "go get -u github.com/openshift/api go get -u github.com/openshift/client-go go get -u github.com/openshift/library-go go get -u k8s.io/api go get -u k8s.io/apimachinery go get -u k8s.io/client-go go get -u k8s.io/cloud-provider go get -u k8s.io/klog/v2 go get -u k8s.io/utils go get -u sigs.k8s.io/controller-runtime go mod tidy; go mod vendor /cc @jluhrsen Fix the build error in main.go to pass in passiveClock argument of type \"k8s.io/utils/clock\".PassiveClock"
  },
  {
    "id": "160",
    "type": "pullRequest",
    "title": "OCPBUGS-45631: Updating ose-cloud-network-config-controller-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cloud-network-config-controller-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cloud-network-config-controller.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "758",
    "type": "pullRequest",
    "title": "OCPBUGS-51203: fix logo not being correctly aligned in Webkit",
    "body": "Fixes regression found by @yapei in also bumps PatternFly to 6.2.0 on gnome epiphany (webkit-based): before: !image( after: !image( related to"
  },
  {
    "id": "757",
    "type": "pullRequest",
    "title": "OCPBUGS-48176: Avoid duplicate OAuth client creation",
    "body": "What OCPBUGS-48176( Changing the way we create OAuth clients - now the code first checks if the OAuth client already exists. If it exists, it updates the client only when needed. This stops the repeated \"AlreadyExists\" (409) errors in the logs. Verification Steps - Review the changes - Provision a cluster for this pr - Check the audit logs and confirm that you do not see repeated 409 errors for OAuth clients ``` oc adm node-logs ip-10-0-108-43.us-east-2.compute.internal --path=oauth-apiserver/audit.log grep 'openshift-authentication-operator' ``` - Confirm that scaling the operator deployment does not trigger extra 409 errors"
  },
  {
    "id": "761",
    "type": "pullRequest",
    "title": "OCPEDGE-1510: feat: add minimum count for DualReplica",
    "body": "bumped ocp/api to pull in DualReplica control plane topology type, minimum count for masters is 2 under DualReplica"
  },
  {
    "id": "759",
    "type": "pullRequest",
    "title": "OCPEDGE-1610: bump(kube,library-go,ocp/api):",
    "body": "bumping kubernetes v0.32.2, library-go and ocp/api to latest we will need to update the openshift/api soon which will include additional API needed for DualReplica topology, bumping needed dependencies to avoid too many changes in a single PR"
  },
  {
    "id": "714",
    "type": "pullRequest",
    "title": "NO-JIRA: Keycloak e2e test improvements",
    "body": "This PR investigates improvements that can be done to the Keycloak deployment to fix intermittent issues we have been having. Improvements - start Keycloak in development mode, which uses a local cache instead of a distributed one (see here( for more details)"
  },
  {
    "id": "760",
    "type": "pullRequest",
    "title": "OCPBUGS-51981: fix: update starter path to account for mom integration",
    "body": "updatedinitialization to parameterize feature gate accessor to allow mom to call the binary in CI updated test to include OIDC check"
  },
  {
    "id": "748",
    "type": "pullRequest",
    "title": "CNTRLPLANE-71: update cao to manage rolebindingrestriction crd",
    "body": "Description Updates the cluster-authentication-operator to manage the `RoleBindingRestriction` CRD. More specifically, this PR: - Vendors the `authorization.openshift.io/RoleBindingRestriction` CRD manifest from - Adds targets to the Makefile to: - Copy the `RoleBindingRestriction` CRD manifests to the `bindata/` directory so the manifest can be embedded into the binary using the embed FS. - Verify the `bindata/` directory is up to date - Verify the `RoleBindingRestriction` CRD manifest in `bindata/` is up to date based on the latest vendored manifest. - Adds the `oauth-openshift/authorization.openshift.io_rolebindingrestrictions.yaml` file to the list of manifest files managed by the static resource controller - Adds an apiextensions client to support the management of CustomResourceDefinition resources using the static resource controller. - Adds a `render` subcommand to be used by the openshift installer during bootstrapping because the `RoleBindingRestriction` CRD is required during bootstrapping. Without it, the `authorization.openshift.io/RestrictSubjectBindings` admission plugin will reject creation of `system:` RoleBindings during the installation process. Motivation Update the cluster-authentication-operator to manage the `RoleBindingRestriction` CRD, as outlined in to allow for this CRD to be removed from the cluster when the oauth stack is no longer desired."
  },
  {
    "id": "713",
    "type": "pullRequest",
    "title": "AUTH-541: OIDC structured auth config",
    "body": "This PR adds a controller behind the `ExternalOIDC` feature gate that tracks the auth CR, and when auth type is configured to be OIDC, it: - creates a structured auth config object based on the auth CR and validates it - serializes it into JSON and stores it into a configmap - syncs that configmap into `openshift-config-managed`, where it will be picked up by the KAS-o and synced into a static file and passed on to the KAS pods KAS-o counterpart PR: Enhancement:"
  },
  {
    "id": "751",
    "type": "pullRequest",
    "title": "OCPBUGS-43610,CONSOLE-4434: update login templates to use PF6 and add validation",
    "body": "Related PRs: Brief description of changes: - Updated templates to use PF6 - Update Red Hat font to 4.0.3( - Minified HTML output and removed unused CSS, this reduces bits sent through the wire by ~26% - Disabled login button after \"log in\" is pressed or if there is no username/password in the input box Deployment preview:"
  },
  {
    "id": "756",
    "type": "pullRequest",
    "title": "NO-JIRA: OWNERS: update approvers",
    "body": "Adds @liouk as approver, removes @deads2k."
  },
  {
    "id": "752",
    "type": "pullRequest",
    "title": "MON-4129: adjust Prometheus classic histograms 'le' related selectors in relabel config to accommodate the update to Prometheus v3"
  },
  {
    "id": "753",
    "type": "pullRequest",
    "title": "OCPBUGS-48177: Exclude etcd readiness checks from /readyz to ignore temporary etcd hiccups",
    "body": "Explicitly exclude etcd and etcd-readiness checks (OCPBUGS-48177) and have etcd operator take responsibility for properly reporting etcd readiness. Justification: kube-apiserver instances get removed from a load balancer when etcd starts to report not ready (as will KA's /readyz). Client connections can withstand etcd unreadiness longer than the readiness timeout is. Thus, it is not necessary to drop connections in case etcd resumes its readiness before a client connection times out naturally. Follow up for"
  },
  {
    "id": "734",
    "type": "pullRequest",
    "title": "OCPEDGE-1306: feat: change minimum for arbiter ha deployments",
    "body": "Per EP: The EP supports a new cluster topology called `HighlyAvailableArbiter`, this topology means that there will be 2 regular nodes and 1 arbiter less powerful node to help maintain HA. This PR updates the minimum pod count to 2 for `HighlyAvailableArbiter` topologies since the pods will only be running on the full sized master nodes and not in the arbiter node."
  },
  {
    "id": "750",
    "type": "pullRequest",
    "title": "NO-JIRA: fix: resolve some integration tests",
    "body": "There are three issues that are currently the reason for the integration tests failing 1. errors do not come back in lexical order so the match fails 2. status controller does not use mom timestamp to timestamps do not match 3. certs get generated differently between runs so certs do not match This PR pulls in the a latest from library-go and resolves number 1 and number 2. /hold We'll need to wait for to be merged in."
  },
  {
    "id": "744",
    "type": "pullRequest",
    "title": "API-1835: bring MOM up to date for testing and the like",
    "body": "Now using the latest library-go and MOM."
  },
  {
    "id": "739",
    "type": "pullRequest",
    "title": "OCPBUGS-23435: bump library-go to bring in workload-conditions fix",
    "body": "bring in"
  },
  {
    "id": "355",
    "type": "pullRequest",
    "title": "OCPBUGS-54231: Fix cool down status condition to trigger scale down",
    "body": "this is a carry of the upstream 7954 PR."
  },
  {
    "id": "340",
    "type": "pullRequest",
    "title": "OCPCLOUD-2835: rebase on upstream 1.32.0 release",
    "body": "This commit rebases the autoscaler on top of the Kubernetes/Autoscaler 1.32.0 release. There are several commits that we carry on top of the upstream autoscaler and the rebase process allows us to preserve those. Here is a description of the process I used to create this PR. (inspired by the commit description for the 1.18 rebase. pr 139( Process First we need to identify the carry commits that we currently have, this is done against our previous rebase to catch new changes. Once identified we will drop commits which have merged upstream and only carry unique commits. (see below for the carried and dropped commits). Identify carry commits (run from the openshift/master branch), these are the commits that begin with `UPSTREAM: ` up until the merge commit for the previous rebase commit (`merge upstream/cluster-autoscaler-1.31.0`) ``` git log -n 30 --oneline --no-merges ``` Important Note for next rebase: due to an error in the upstream `cluster-autoscaler-1.32.0` tag, this rebase uses the `cluster-autoscaler-1.32` branch as the starting point. After identifying the carry commits, the next step is to create the new commit-tree that will be used for the rebase and then cherry pick the carry commits into the new branch. The following commands cover these steps: ``` $ git remote update make sure we update our refs $ git checkout cluster-autoscaler-release-1.32 $ git checkout -b merge-tmp create a temporary branch for our merge commit $ git checkout openshift/master we want to be at the tip of the openshift master branch when we run the next command $ echo 'merge upstream/cluster-autoscaler-release-1.32' | git commit-tree merge-tmp^{tree} -p HEAD -p merge-tmp -F - create a new merge commit for our history deadbeef12345678 id of new merge commit $ git branch merge-1.32 deadbeef12345678 create a new branch for the cherry-pick work $ git checkout merge-1.32 $ git cherry-pick carry commits cherry pick the needed commits into the new branch ``` With the `merge-1.32` branch in place, I cherry picked the carry commits which applied, resolved merge conflicts, and finally tested the resulting tree against the unit test and end-to-end suite. Carried Commits These commits are for features which have not yet been accepted upstream, are integral to our CI platform, or are specific to the releases we create for OpenShift. ``` f42d15b60 UPSTREAM: carry: Update unit tests using upstream annotations new values d90f8b39d UPSTREAM: carry: Add unit tests for upstream annotations d1fdf4c97 UPSTREAM: carry: Update to prefer upstream annotations if present 1409aa59f UPSTREAM: carry: Fix unstructured taint parsing in Cluster API provider 43224a99b UPSTREAM: carry: revert capacity annotations 646212363 UPSTREAM: carry: add machine api label and taint functionality 15d127772 UPSTREAM: carry: Have VPA ignore phantom containers named \"POD\" 4dd4b0916 UPSTREAM: carry: Handle old Machine API specific machine delete annotation c80d1386c UPSTREAM: carry: Rename FailureMessage to ErrorMessage 512dc15a9 UPSTREAM: carry: configure repository for OpenShift releases ``` Squashed Commits These commits were squashed into the carried commits to help reduce the length of our history. All these commits have been squashed into their topically related commits. ``` 958747fa3 UPSTREAM: carry: Update VPA dockerfile to 4.19 1ed6c1547 UPSTREAM: carry: Updating atomic-openshift-cluster-autoscaler-container image to be consistent with ART for 4.19 Reconciling with 018c6237c UPSTREAM: carry: Updating ose-vertical-pod-autoscaler-container image to be consistent with ART for 4.19 Reconciling with 3a27e72c0 UPSTREAM: carry: VPA OWNERS: Remove John Kyros, et al., add Max Cao 33194fb53 UPSTREAM: carry: Update VPA dockerfiles ``` Dropped Commits These commits were dropped. ``` 91e89f91e UPSTREAM: carry: :bug:(metrics) Initialize metrics for autoscaler errors, scale events, and pod evictions a1f51718a UPSTREAM: 7388: cleanup clusterapi imports ``` Of special note in this rebase is this commit ``` 43224a99b UPSTREAM: carry: revert capacity annotations ``` due to the scale from zero changes being accepted upstream we can now drop our carried patch. but, the upstream implementation has differed slightly from our's (mainly around annotation names). we will need to carry this patch until we can fix all the providers to properly use the new annotations. This patch can be dropped once the epic contained in is completed."
  },
  {
    "id": "354",
    "type": "pullRequest",
    "title": "NO-JIRA: improve nodes listing in ClusterAPI provider",
    "body": "Add improved error handling for machines phase in the ClusterAPI node group implementation. When a machine is in Deleting/Failed/Pending phase, mark the cloudprovider.Instance with a status for cluster-autoscaler recovery actions. The changes: - Enhance Nodes listing to allow reporting the machine phase in Instance status - Add error status reporting for failed machines This change helps identify and manage failed machines more effectively, allowing the autoscaler to make better scaling decisions."
  },
  {
    "id": "349",
    "type": "pullRequest",
    "title": "OCPBUGS-11115: refactor findScalableResourceProviderIDs",
    "body": "this change bring in the upstream kubernetes/autoscaler7952 and kubernetes/autoscaler7977"
  },
  {
    "id": "347",
    "type": "pullRequest",
    "title": "OCPBUGS-11115: improve failed machine detection in clusterapi",
    "body": "This change makes it so that when a failed machine is found during the `findScalableResourceProviderIDs` it will always gain a normalized provider ID with failure guard prepended. This is to ensure that machines which have gained a provider ID from the infrastructure and then later go into a failed state can be properly removed by the autoscaler when it wants to correct the size of a node group."
  },
  {
    "id": "343",
    "type": "pullRequest",
    "title": "OCPBUGS-11115: make DecreaseTargetSize more accurate",
    "body": "this change ensures that when DecreaseTargetSize is counting the nodes that it does not include any instances which are considered to be pending (i.e. not having a node ref) or are failed. this change will allow the core autoscaler to then decrease the size of the node group accordingly, instead of raising an error. this commit can be removed once the upstream is in place."
  },
  {
    "id": "278",
    "type": "pullRequest",
    "title": "OCPBUGS-11115: improve replica counting on openshift",
    "body": "This change adds logic to count the number of owned machines by each machineset when calculating the replica count to the core autoscaler. It is needed because the machine-api controllers do not include machines in deleting phase when updating their replica field. This causes a problem with the core autoscaler as the count of nodes will not match the resources from the cloud provider. This can be removed when the machine-api controllers have been fully removed from openshift."
  },
  {
    "id": "335",
    "type": "pullRequest",
    "title": "OCPCLOUD-2500: Update to recognize both upstream and openshift ScaleFromZero annotations",
    "body": "What type of PR is this? !-- /kind feature -- What this PR does / why we need it: Hello! This is a PR to update the autoscaler to recognize both the upstream and openshift ScaleFromZero annotations, while favouring the upstream annotations if they exist. Thanks! Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "334",
    "type": "pullRequest",
    "title": "PODAUTO-266: Update VPA dockerfile to 4.19",
    "body": "Just updates the `vertical-pod-autoscaler/Dockerfile.openshift` file to `go1.23/ocp4.19` that is used by CI."
  },
  {
    "id": "332",
    "type": "pullRequest",
    "title": "OCPBUGS-25852: UPSTREAM: carry: \ud83d\udc1b(metrics) Initialize metrics for autoscaler errors, scale events, and pod evictions",
    "body": "Carry - Set initial count to zero for various autoscaler error types (e.g., CloudProviderError, ApiCallError) - Define failed scale-up reasons and initialize metrics (e.g., CloudProviderError, APIError) - Initialize pod eviction result counters for success and failure cases - Initialize skipped scale events for CPU and memory resource limits in both scale-up and scale-down directions"
  },
  {
    "id": "331",
    "type": "pullRequest",
    "title": "OCPBUGS-45686: Updating atomic-openshift-cluster-autoscaler-container image to be consistent with ART for 4.19",
    "body": "Updating atomic-openshift-cluster-autoscaler-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: atomic-openshift-cluster-autoscaler.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "330",
    "type": "pullRequest",
    "title": "OCPBUGS-45565: Updating ose-vertical-pod-autoscaler-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vertical-pod-autoscaler-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: vertical-pod-autoscaler.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "322",
    "type": "pullRequest",
    "title": "OCPBUGS-45075: VPA OWNERS: Remove John Kyros, et al., add Max Cao"
  },
  {
    "id": "339",
    "type": "pullRequest",
    "title": "OCPCLOUD-2829: Bump k8s 1.32",
    "body": "Hello! This is a PR to bump the dependencies to 1.32. Thanks!"
  },
  {
    "id": "336",
    "type": "pullRequest",
    "title": "OCPBUGS-45451: Updating ose-cluster-autoscaler-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-autoscaler-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-autoscaler-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "468",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-53330: Update BMO to latest"
  },
  {
    "id": "463",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-52216: Bump x/oauth2 to 0.27.0",
    "body": "Steps used: $ go get golang.org/x/oauth2@v0.27.0 $ go mod tidy $ go mod vendor"
  },
  {
    "id": "465",
    "type": "pullRequest",
    "title": "OCPBUGS-51275: Add new resources to controller relatedObjects",
    "body": "Fixing what @honza mentioned in 461"
  },
  {
    "id": "455",
    "type": "pullRequest",
    "title": "OCPBUGS-44839: Mount the user-ca-bundle into ICC",
    "body": "The ICC will then add it to the custom image in order to pull down the IPA image."
  },
  {
    "id": "461",
    "type": "pullRequest",
    "title": "4.19 OCPBUGS-51275: add missing relatedObjects",
    "body": "This commit adds the missing relatedObjects to CBO"
  },
  {
    "id": "462",
    "type": "pullRequest",
    "title": "METAL-1286: Remove legacy unused annotation exclude.release.openshift.io/internal-openshift-hosted",
    "body": "This annotation is no longer used"
  },
  {
    "id": "460",
    "type": "pullRequest",
    "title": "OCPEDGE-1607: feat: add arbiter node selector",
    "body": "Per Arbiter EP: Adding a label or check for arbiter as well as master when the provisioning controller is looking to update the mac address for the machines."
  },
  {
    "id": "452",
    "type": "pullRequest",
    "title": "OCPBUGS-36357: Replace watches with actual Watches",
    "body": "Replace the watches for CO and Proxy with actual Watches Remove watches for machines for the time being Readd watches for secrets Readd the function to allow triggering reconciliation of the provisioning CR as mapToProvisioningSingleton."
  },
  {
    "id": "457",
    "type": "pullRequest",
    "title": "OCPBUGS-45418: Use go version 1.23 and OCP 4.19 base image"
  },
  {
    "id": "116",
    "type": "pullRequest",
    "title": "OCPEDGE-1683: feat: add support for arbiter and dual replica:",
    "body": "added logic to handle HA availability count for deploying arbiter and two node clusters"
  },
  {
    "id": "111",
    "type": "pullRequest",
    "title": "OCPBUGS-48821: bootstrap API server should terminate only after API is HA",
    "body": "bootstrap API server should be terminated only after API is HA, we should wait for API to be available on at least 2 master nodes, these are the steps: - 1) API is HA (api is available on 2+ master nodes) - 2) delete the bootstrap kube-apiserver manifests - 3) wait for the bootstrap API to be down - 4) delete all other static manifests - 5) mark the bootstrap process done We should note the difference between a) the bootstrap node itself existing, and b) API being available on the bootstrap node. Today inside the cluster bootstrap, we remove the bootstrap API (b) as soon as two master nodes appear. This is what happens today on the bootstrap node: a) create the static assets b) wait for 2 master nodes to appear c) remove the kube-apiserver from the bootstrap node d) mark the bootstrap process as completed But we already might have a time window where API is not available starting from c, and until api is available on a master node. cluster bootstrap executable is invoked here: ``` start --tear-down-early=false --asset-dir=/assets --required-pods=\"${REQUIRED_PODS}\" ``` Then, cluster bootstrap removes the bootstrap API here: but the wait for API to be HA is done here: The wait should happen from within cluster-bootstrap, this PR moves the wait before cluster bootstrap tears down the bootstrap API/control plane"
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "OCPBUGS-45351: Updating ose-cluster-bootstrap-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-bootstrap-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-bootstrap.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "233",
    "type": "pullRequest",
    "title": "OCPCLOUD-2860: Enable propagation of Machine annotations to Nodes",
    "body": "Includes a cherry pick of the upstream release-1.9 backport PR."
  },
  {
    "id": "229",
    "type": "pullRequest",
    "title": "OCPCLOUD-2680: Enable machine to node propagation",
    "body": "This change contains two commits: - Enable label syncing from Machines to Nodes. Maps to and - ~~Enable annotation syncing from Machines to Nodes. Maps to & this will be handled in a separate PR so as to unblock OCPCLOUD-2680( ~~As of this writing, OCPCLOUD-2680( is merged upstream, but is not yet in a released version. It should be in v1.9.5 when that is out.~~ We now have the necessary commit in our downstream fork. ~~If someone takes over this PR or has to split it up, you can get the same generated manifests with an updated version of CAPI with these commands (you'll need to include the updated `Makefile` and the two new kustomize files):~~ ``` cd openshift PROVIDER_VERSION=v1.9.4 make ocp-manifests ```"
  },
  {
    "id": "232",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that updates the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "231",
    "type": "pullRequest",
    "title": "OCPCLOUD-2680: Merge (068c0f3) into master"
  },
  {
    "id": "230",
    "type": "pullRequest",
    "title": "OCPCLOUD-2857: Merge (79e6731) into master"
  },
  {
    "id": "228",
    "type": "pullRequest",
    "title": "OCPBUGS-45428: Updating ose-cluster-api-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-api-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-api.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "291",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55998: Should not use v1beta1 of the AdmissionRegistration API group",
    "body": "This is an automated cherry-pick of 289 /assign JoelSpeed"
  },
  {
    "id": "288",
    "type": "pullRequest",
    "title": "OCPBUGS-55349,OCPBUGS-54970: Ensure CAPI machine when machine authority is CAPI",
    "body": "When we have a machine with authoritativeAPI of CAPI, but no CAPI machine exists we want to run an initial MAPI - CAPI sync. This updates the logic in the machinesync controller to do this, starting the newly created CAPI machine unpaused."
  },
  {
    "id": "285",
    "type": "pullRequest",
    "title": "NO-JIRA: Prevent caching CAPI objects across namespaces",
    "body": "We have seen lots of caching (Watches) being established on namespaces we don't actually care about. By default, controller runtime will cache all objects we fetch for all of the default namespaces. For our controllers, we typically care about the managed namespace, and only want to fetch certain objects from other namespaces. This PR splits out the specific objects that we watch from other namespaces so that we only cache those objects in the other namespaces and not every object we care about"
  },
  {
    "id": "284",
    "type": "pullRequest",
    "title": "METAL-966: Reapply \"Merge pull request 175 from honza/add-metal3\"",
    "body": "This reverts commit 2418d7eabd90ed27df0bd72f96619967234784d8. This PR was reverted because the periodic-ci-openshift-release-master-nightly-4.19-e2e-metal-ipi-ovn-dualstack-techpreview( was permafailing. The error was a cluster capi pod crash looping. This was the IPAM pod which our upstream runs by default and which we don't need/use. We disabled the deployment here: I was able to test the combination of this PR (284) and the fix on my lab machine: - e2e tests pass as before - zero restarts of cluster capi pods in 40h ``` $ oc get pods -n openshift-cluster-api NAME READY STATUS RESTARTS AGE capi-controller-manager-5586bbc874-w4dhw 1/1 Running 0 41h capm3-controller-manager-7c7d6c77f-xgz9z 1/1 Running 0 41h cluster-capi-operator-5dc4cc8d54-nq59c 2/2 Running 0 41h ```"
  },
  {
    "id": "278",
    "type": "pullRequest",
    "title": "OCPCLOUD-2648: Machine sync controller deletion logic",
    "body": "This change adds deletion logic for Machines. It introduces a sync finalizer to coordinate synchronization of mirrored resources. If we are reconciling deletions MAPI - CAPI, we ensure the MAPI specific finalizers are removed before removing our sync finalizer. If we are reconciling deletions CAPI - MAPI, we ensure that the CAPI InfraMachine has it's specific (per provider) finalizer removed by the CAPI controllers, before removing our sync finalizer. This must happen before the CAPI Machine controller will remove the CAPI machine deletion finalizer. Once we observe this, we remove our sync finalizer allowing deletion of mirrored objects. This has been tested in both directions on a live cluster."
  },
  {
    "id": "282",
    "type": "pullRequest",
    "title": "OCPCLOUD-2713: Handle credential fields in both mapi2capi and capi2mapi",
    "body": "See individual commits for each piece of work. Also modified the test.sh script so that I didn't have to run all test suites every time."
  },
  {
    "id": "268",
    "type": "pullRequest",
    "title": "OCPCLOUD-2564: add migration controllers",
    "body": "This PR adds the MAPI-CAPI migration controllers, resposible for handling the authoritativeness switching between MAPI and CAPI."
  },
  {
    "id": "283",
    "type": "pullRequest",
    "title": "OCPBUGS-54972: Revert 175 \"METAL-966: Add metal3 provider\"",
    "body": "Reverts 175 ; tracked by OCPBUGS-54972 Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple regressions for dualstack techpreview job To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-job periodic-ci-openshift-release-master-nightly-4.19-e2e-metal-ipi-ovn-dualstack-techpreview ``` CC: @honza div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "281",
    "type": "pullRequest",
    "title": "OCPCLOUD-2880: label selector and labels conversion, fixes to sync controllers and conversions",
    "body": "This PR contains: - assorted fixes to the sync controllers and the conversion libraries that I picked up while running the migration controllers doing full, real, back and forth MAPI-CAPI-MAPI migrations of machines and machine sets. - full labels and annotations syncing between MAPI and CAPI, while also adding node labels and annotations propagation from CAPI machines down to their nodes - machine sets selector bidirectional conversion - improved diffing and diffs readability for machines and machine sets - temporary hardcoded credentials secret conversion support for the default case to allow for migrations to momentarily work - adds several `TODO(docs)` for lossy conversions that we might need to document (cc. @jeana-redhat)"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "METAL-966: Add metal3 provider"
  },
  {
    "id": "280",
    "type": "pullRequest",
    "title": "OCPCLOUD-2895: Add AWS networkInterfaceType to conversion",
    "body": "This PR enables the conversion of networkInterfaceType that was added to CAPI for feature parity."
  },
  {
    "id": "279",
    "type": "pullRequest",
    "title": "OCPCLOUD-2712: Update comments based on Security Group Investigation",
    "body": "Hello! This is a PR to update some of the comments left behind during the conversion work. The investigation discovered that the current behaviour is what we want, so I just updated some comments to leave information for future reference. Thanks!"
  },
  {
    "id": "271",
    "type": "pullRequest",
    "title": "OCPCLOUD-2716: Handle Machine owner references translation between MAPI and CAPI",
    "body": "This PR adds support to MachineSync and MachineSetSync controller for converting OwnerReferences in mirrored MachineSets, Machines and InfraMachines have correct ownerReferences."
  },
  {
    "id": "275",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/golang-jwt/jwt to v5.2.2",
    "body": "Bump github.com/golang-jwt/jwt to v5.2.2"
  },
  {
    "id": "265",
    "type": "pullRequest",
    "title": "OCPCLOUD-2647: CAPI to MAPI Machine Synchronisation"
  },
  {
    "id": "277",
    "type": "pullRequest",
    "title": "NO-JIRA: Update version variable in generate-ocp-manifests hook script",
    "body": "When writing this script, I thought the version should be passed without the leading 'v'. This was a mistake introduced in Azure provider manifest-gen tooling. All other platforms use the version directly with the leading 'v'. This change is safe as there is nothing using the version tag, and we are on tech preview."
  },
  {
    "id": "276",
    "type": "pullRequest",
    "title": "NO-JIRA: fix: e2e: azure conditionally set identity",
    "body": "introduced some changes in how MAPZ machines get generated. So we need to account for it when we generate the CAPZ machine from those. Discussion context here:"
  },
  {
    "id": "273",
    "type": "pullRequest",
    "title": "TRT-2048: Revert \"OCPCLOUD-2792: corecluster: set controller level conditions + tests\"",
    "body": "Reverts openshift/cluster-capi-operator256; tracked by Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. This PR has caused samples operator to fail during installation starting from this payload: Slack thread: To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of (job/X or job/X, test/Y tuple) to confirm the fix has corrected the problem: /payload-job periodic-ci-openshift-release-master-ci-4.19-e2e-gcp-ovn-techpreview-serial CC: @damdo"
  },
  {
    "id": "266",
    "type": "pullRequest",
    "title": "OCPBUGS-53057: Fix misspelled CAPI IBMPowerVSCluster kind name in corecluster generation logic",
    "body": "Fixed an issue where PowerVSPlatformType was using incorrect CAPI CRD name. Now, it correctly returns `ibmpowervscluster` as per the Cluster API Provider for IBM Cloud("
  },
  {
    "id": "270",
    "type": "pullRequest",
    "title": "OCPCLOUD-2858: Bump dependencies to CAPI v1.9.z",
    "body": "Bump dependencies to CAPI v1.9.z, add new conversion for new CAPI fields."
  },
  {
    "id": "269",
    "type": "pullRequest",
    "title": "NO-JIRA: Update TODOs with new Jira issues",
    "body": "Metadata propagation was split into multiple issues."
  },
  {
    "id": "260",
    "type": "pullRequest",
    "title": "OCPCLOUD-2718: Add default VolumeSize for MAPI to CAPI conversion",
    "body": "Hello! This is a draft PR to get feedback for the default VolumeSize for the MAPI to CAPI conversion for AWS. Thanks!"
  },
  {
    "id": "256",
    "type": "pullRequest",
    "title": "OCPCLOUD-2792: corecluster: set controller level conditions + tests",
    "body": "This PR is part of a wider effort to try and rework the controller/operator level condition setting and aggregation for the cluster-capi-operator (see: This PR specifically, builds on top of 254 and: - defines controller level conditions for the CoreCluster controller, setting them accordingly - tests that the conditions have been set under different scenarios More PRs will follow for each controller once the approach proposed in this one is agreed upon."
  },
  {
    "id": "258",
    "type": "pullRequest",
    "title": "OCPCLOUD-2645: MAPI to CAPI Machine synchronization",
    "body": "Follow up on to perform the machine synchronisation."
  },
  {
    "id": "264",
    "type": "pullRequest",
    "title": "NO-JIRA: Add lifecyclehook script that updates manifests-gen",
    "body": "Adds lifecyclehook script that will run make update-manifests-gen in openshift folder in the rebased repository. This is meant to run before running generate-ocp-manifests.sh hook to ensure manifests-gen is present and up-to-date. I considered these two scripts being combined, but having the option to quickly disable one is preferred."
  },
  {
    "id": "255",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove unused Dockerfile",
    "body": "ART uses the `Dockerfile.rhel` file 1. You cannot use the `Dockerfile` file currently due to missing libraries. 1"
  },
  {
    "id": "257",
    "type": "pullRequest",
    "title": "OCPCLOUD-2824: Add manifest generation script for rebasebot",
    "body": "This script will be run by rebasebot during rebase of the CAPI repositories. The location is specified as parameter to it. It is downloaded from this repo and executed on the repo that is being rebased."
  },
  {
    "id": "254",
    "type": "pullRequest",
    "title": "OCPCLOUD-2792: Repurpose unsupported controller to a broader clusteroperator one",
    "body": "Repurpose unsupported controller to a broader clusteroperator one. - remove the usupported controller - create the new clusteroperator controller - always run the new clusteroperator controller and behave differently depending on whether the controller is running on a supported vs unsupported platform - add improved testing on the supported vs unsupported situation, starting a full manager rather than solely running the reconcile function This is the first step of a series of PRs meant to work towards a unified controller responsible for aggregating all controllers conditions into centrailsed Available, Progressing, Upgradeable, and Degraded operator conditions under the ClusterOperator object."
  },
  {
    "id": "216",
    "type": "pullRequest",
    "title": "MULTIARCH-5043: Add Powervs support for CAPI-MAPI conversion"
  },
  {
    "id": "248",
    "type": "pullRequest",
    "title": "OCPBUGS-29815: fix: always update clusteroperator status versions when differing",
    "body": "For manual testing of this fix, see: Problem: Prior to this change, the operator's controller responsible for keeping the ClusterObject up to date had an issue when invoking r.SetStatusAvailable(...) with a non-empty availableConditionMsg string. Specifically: - The condition NewClusterOperatorStatusCondition(configv1.OperatorAvailable, configv1.ConditionTrue, ReasonAsExpected, availableConditionMsg) would remain unchanged. - This left the conds configv1.ClusterOperatorStatusCondition unmodified compared to the current ClusterObject.Status.Conditions. - As a result, the ClusterObject.Status was not resynced. This behavior caused a critical issue during cluster version upgrades: - The operator failed to propagate changes to ClusterObject.Status.Versions, as the logic did not detect any updates requiring a resync. - This prevented the cluster version upgrade process from progressing, effectively blocking the upgrade, since the Cluster Version Operator awaited the cluster-api operator to sync the new ClusterObject.Status.Versions. Solution: With this change, the criteria for resyncing the ClusterObject.Status have been updated. The resync logic now also triggers when only the desired operandVersions are modified, ensuring that: - The ClusterObject.Status is correctly updated even if no other conditions change. - Cluster version upgrades can proceed without unnecessary blockages."
  },
  {
    "id": "235",
    "type": "pullRequest",
    "title": "OCPCLOUD-2642: Reference ASO image for installation",
    "body": "Draft until merges and the image is actually built."
  },
  {
    "id": "241",
    "type": "pullRequest",
    "title": "OCPBUGS-45392: Updating ose-cluster-capi-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-capi-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-capi-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "236",
    "type": "pullRequest",
    "title": "OCPCLOUD-2202: Create and manage core cluster object",
    "body": "Hello! This is a PR to ensure that each cluster should have a cluster object in the `openshift-cluster-api` namespace, as well as updating the unit/e2e tests to reflect this. Thank you!"
  },
  {
    "id": "244",
    "type": "pullRequest",
    "title": "OCPCLOUD-2787: Add missing CustomNoUpgrade to manifests",
    "body": "Oops.."
  },
  {
    "id": "237",
    "type": "pullRequest",
    "title": "OCPCLOUD-2644: MAPI to CAPI MachineSet synchronization",
    "body": "These change: - Implements MAPI to CAPI sync - Builds out test suite"
  },
  {
    "id": "243",
    "type": "pullRequest",
    "title": "OCPCLOUD-2787: Updates migration controller cmd",
    "body": "Fixes broken import of capa v1beta2, removes capav1beta1."
  },
  {
    "id": "242",
    "type": "pullRequest",
    "title": "OCPCLOUD-2787: Updates migration cmd to change metrics port",
    "body": "This change: Removes the defaulting in the code where we set DiagnosticsAddress. It was being overwritten by --diagnostics-address in capiflags.AddManagerOptions() and setting the default value to :8443. Updates the deployment manifests to pass --diagnostics-address to the migration controller with a value of :8442, so we don't clash with the cluster-capi-operator container running in the pod."
  },
  {
    "id": "238",
    "type": "pullRequest",
    "title": "OCPCLOUD-2787: Deploy manifests for CustomNoUpgrade feature-set",
    "body": "We will need the CAPI manifests in the `CustomNoUpgrade` featureset in order to properly test the MAPI2CAPI Migration work. This adds them."
  },
  {
    "id": "239",
    "type": "pullRequest",
    "title": "OCPCLOUD-2647: Updates machine-api-migration cmd",
    "body": "Updates the machine-api-migration cmd to: - No longer crash, due to using a client from an uninitialised manager - Have the appropriate schemes registered (so far) - Stop using MetricsBindAddr, which is removed in 1.9 and use DiagnosticsAddress instead. This avoids a port clash when starting the manager. Now the command runs without crashing, we won't cause the `cluster-capi-operator` deployment to crashloop. ```bash I1127 13:42:59.722330 35247 main.go:201 MachineAPIMigration: starting AWS controllers I1127 13:42:59.722605 35247 main.go:245 Starting manager I1127 13:42:59.722849 35247 server.go:208 \"Starting metrics server\" logger=\"controller-runtime.metrics\" I1127 13:42:59.722874 35247 server.go:83 \"starting server\" name=\"health probe\" addr=\":9441\" I1127 13:42:59.723277 35247 leaderelection.go:254 attempting to acquire leader lease openshift-cluster-api/machine-api-migration-leader... I1127 13:42:59.898958 35247 server.go:247 \"Serving metrics server\" logger=\"controller-runtime.metrics\" bindAddress=\":8443\" secure=true ```"
  },
  {
    "id": "233",
    "type": "pullRequest",
    "title": "MULTIARCH-5151 MULTIARCH-5152: Generate IBMPowerVSCluster resource for CAPI clusters",
    "body": "Generate IBMPowerVSCluster resource"
  },
  {
    "id": "387",
    "type": "pullRequest",
    "title": "OCPBUGS-54427: Add rbac leases rbac for cloud-provider on Azure stack hub",
    "body": "This role was only added to Azure as a result cloud provider on AzureStackHub started failing due to not being able to acquire the lease. This PR copies the role to be included on ASH as well."
  },
  {
    "id": "380",
    "type": "pullRequest",
    "title": "OCPBUGS-41827: update injector to use a secret rather than an environment variable"
  },
  {
    "id": "385",
    "type": "pullRequest",
    "title": "OCPBUGS-41827: update injector to support secret as well",
    "body": "Based on discussion this pr will keep both the secret and environment variables methods, this pr need to be merged first, then openshift/csi-operator357, then remove environment variables Built image build 4.18,openshift/cluster-cloud-controller-manager-operator385( and installed cluster on azure and ash, cluster install succeed. Built image build 4.18,openshift/cluster-cloud-controller-manager-operator385, openshift/csi-operator357( and installed cluster on azure and ash, cluster install succeed."
  },
  {
    "id": "379",
    "type": "pullRequest",
    "title": "OCPBUGS-48481: annotation validation policy",
    "body": "if the annotation `cloud.google.com/network-tier` was used in service resource and it is left without value or incorrect value(say xyz) , the service goes to `Pending` status with only warning ` Warning SyncLoadBalancerFailed 1s (x3 over 17s) service-controller Error syncing load balancer: failed to ensure load balancer: unsupported network tier: \"xyz\"` , to avoid that , added the VAP ."
  },
  {
    "id": "384",
    "type": "pullRequest",
    "title": "OCPCLOUD-2843: AWS CCM should be configured with the AWS cloud provider config",
    "body": "I recently update the AWS CCM to set the load balancer, cluster scoped health checks to port 10256 and /healthz. It turns out, that even though the tests looked good, this config change was not being consumed by the CCM. We did not even pass the configmap into the AWS CCM. I've tested this manually and when configuring the below, I can now see that the configmap options are honoured, and the health checks appear as expected."
  },
  {
    "id": "382",
    "type": "pullRequest",
    "title": "OCPCLOUD-2831: Bump k8s 1.32"
  },
  {
    "id": "383",
    "type": "pullRequest",
    "title": "OCPCLOUD-2843: Add AWS Cloud Config Transformer to set Shared config for AWS LB health probes",
    "body": "Until recently, we were carrying a patch in the CCM that changed the LB behaviour to use the OVN kube shared health check endpoints. A PR has now landed upstream that allows this configuration, if you configure the Shared option for the load balancer health checks. This PR adds an initial config transformer to inject this configuration. It does not tackle handling service endpoints, which are currently injected by the cluster-config-operator. We have some todos across the code base to fix these up. We now have both AWS and Azure config transformers, we should really get to that, but it's not required for this specific fix. I have included a test case to make sure service overrides are kept."
  },
  {
    "id": "381",
    "type": "pullRequest",
    "title": "OCPCLOUD-2844: Add role/binding for new Azure AKS lease",
    "body": "The current rebase is failing on a lack of permission( for a new lease that the Azure CCM is trying to leverage. This role/rolebinding fills the gap in permissions."
  },
  {
    "id": "376",
    "type": "pullRequest",
    "title": "OCPBUGS-44126: update azure permissions",
    "body": "this change adds some of the linked action permissions that are needed to ensure proper operation."
  },
  {
    "id": "377",
    "type": "pullRequest",
    "title": "OCPBUGS-45439: Updating ose-cluster-cloud-controller-manager-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-cloud-controller-manager-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-cloud-controller-manager-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "378",
    "type": "pullRequest",
    "title": "OCPBUGS-45439: Update golangci-lint to v1.62.2",
    "body": "The old version is not compatible with Go 1.23, so this updates it to the latest version which is compatible and unblocks the auto-art bump that is currently failing on linting"
  },
  {
    "id": "2297",
    "type": "pullRequest",
    "title": "Move from JoelSpeed/kal to kubernetes-sigs/kube-api-linter",
    "body": "The project was migrated from my repo through to the kubernetes-sigs org. So we need to update the configuration to point to the new location. This also enables the nomaps linter which prevents folks from adding maps, unless they are `mapstringstring` to allow for labels/annotations"
  },
  {
    "id": "2139",
    "type": "pullRequest",
    "title": "OCPBUGS-48286: feature-gates - enable ServiceAccountTokenNodeBinding",
    "body": "What Enable `ServiceAccountTokenNodeBinding`. Why It is available in Beta on Kubernetes."
  },
  {
    "id": "2264",
    "type": "pullRequest",
    "title": "OPRUN-3766: Add FeatureFlag for OLMv1 Single/OwnNamespace",
    "body": "Adds the 'NewOLMOwnSingleNamespace' cluster capability. Clones 2258"
  },
  {
    "id": "2255",
    "type": "pullRequest",
    "title": "MCO-1518: Create V1 MachineConfigNodes API & deploy V1 MCN CRDs",
    "body": "Merge Plan: This should merge simultaneously with - - Included work: - Copies over the v1alpha1 MCN api into the v1 folder. - Note that the tombstoned fields `Spec.PinnedImageSets` (tombstoned in 2256) and `Status.PinnedImageSets.LastFailedGenerationErrors` (tombstoned in 2201) are not referenced in this new v1 API. - Removes comments suggesting future changes and updates compatibility level. - Validation rule tweaks. References: - (WIP) Updated enhancement: - MCN origin tests:"
  },
  {
    "id": "2296",
    "type": "pullRequest",
    "title": "Fix broken ControlPlaneMachineSet integration tests",
    "body": "Colliding promotions for CPMSMachineNamePrefix to default and MachineAPIMigration to tech preview broke this test suite on the default feature set. For now, disable the suite in the default feature set by requiring the MachineAPIMigration gate."
  },
  {
    "id": "2254",
    "type": "pullRequest",
    "title": "OAPE-148: Promote CPMSMachineNamePrefix feature gate to default feature set",
    "body": "Promote `CPMSMachineNamePrefix` feature gate to default feature set"
  },
  {
    "id": "2270",
    "type": "pullRequest",
    "title": "features: remove ShortCertRotation from DevPreviewNoUpgrade",
    "body": "This featuregate needs to be enabled separately via CustomNoUpgrade featureset"
  },
  {
    "id": "2284",
    "type": "pullRequest",
    "title": "NE-2017: Enable GatewayAPIController featuregate in Default featureset",
    "body": "Promote the `GatewayAPIController` feature gate to GA by enabling it in the default feature set. This featuregate governs the OpenShift Gateway API controller implementation, which is currently based on Istio."
  },
  {
    "id": "2279",
    "type": "pullRequest",
    "title": "OCPCLOUD-2914: Add MAPI to CAPI migration to TechPreview",
    "body": "Enabling the MAPI to CAPI conversion in TechPreview for 4.19. Required before merging: x x x"
  },
  {
    "id": "2283",
    "type": "pullRequest",
    "title": "OCPEDGE-1775: Enable separation of conflicting enum values, and drop DualReplica to DevPreview",
    "body": "CC @eggfoobar This updates the way we apply manifests to make sure that where we have combinations (A+B), that these are applied after the constituent gates. This means that we can control the order, and, where there are multiple gates affecting a single validation (enum), we can choose how to apply for either of the gates being enabled, or both gates being enabled. This also drops the DualReplica gate to DevPreview, which is why we needed to find a solution for this"
  },
  {
    "id": "2268",
    "type": "pullRequest",
    "title": "OAPE-92: Promote RouteExternalCertificate feature gate to default feature set",
    "body": "Promote `RouteExternalCertificate` feature gate to default feature set for both SelfManaged and HyperShift."
  },
  {
    "id": "2275",
    "type": "pullRequest",
    "title": "CONSOLE-4523: Lift Featuregate for the ConsolePlugin ContentSecurityPolicy API",
    "body": "Sippy dashboard monitoring the OCPFeatureGate:ConsolePluginContentSecurityPolicy( tests /assign @joelanford FYI @spadgett"
  },
  {
    "id": "2286",
    "type": "pullRequest",
    "title": "MON-4071: GA `MetricsCollectionProfiles`",
    "body": "This pull request aims to GA the `MetricsCollectionProfiles` feature-gate, as it meets the graduation standards: see 1. Please note that the above results are from 4.19 runs, however, 4.18 results were impacted by issues fixed in a backport: see 2. We are actively looking at the % increases since the backport goes in, as well as a QE-signoff, not to override the requirements, but to add to the confidence for its 4.18 counterpart in order to GA this. 1: 2:"
  },
  {
    "id": "2234",
    "type": "pullRequest",
    "title": "CNTRLPLANE-332: Add uid and extra claim mappings for external OIDC configuration",
    "body": "Adds `uid` and `extra` fields to the `authentications.config.openshift.io` CRD's external OIDC provider claim mapping configuration options, allowing users to specify how the `uid` and `extra` `UserInfo` values should be populated from a given authentication token."
  },
  {
    "id": "2192",
    "type": "pullRequest",
    "title": "Promote OnClusterBuild featuregate to default",
    "body": "Final step to GA On Cluster Layering, after and See also updated enhancement:"
  },
  {
    "id": "2285",
    "type": "pullRequest",
    "title": "trt-2080: check devlopment start date for latest release",
    "body": "Prior to branching new releases are added with a future development start date, these should not be considered the current development branch until that date is reached. - Adds check for development start date associated with each release - Returns the first release found with a development start date before the current time.Now()"
  },
  {
    "id": "2281",
    "type": "pullRequest",
    "title": "NE-2009: Re-enable GatewayAPI featuregate in Default featureset",
    "body": "This PR re-applies which was reverted PR which fixed the missing `GatewayAPI` featuregate in `Default` on Hypershift: PR which added HyperShift conformance tests to the api presubmites:"
  },
  {
    "id": "2277",
    "type": "pullRequest",
    "title": "TRT-2081: Revert 2261 \"NE-2009: Enable GatewayAPI featuregate in Default featureset\"",
    "body": "Reverts 2261 ; tracked by TRT-2081( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Hypershift jobs are permafailing after this went ready To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` Verify periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance passes ``` CC: @alebedev87 div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "2276",
    "type": "pullRequest",
    "title": "Temporarily pin feature-gate-analyzer to 4.19",
    "body": "The 4.20 release has been enabled in sippy, which is now being picked up as the latest release branch and is therefore returning incorrect data for 4.19 promotions. I've requested ( a way to determine programatically what the development branch is, but until then, if we can carry this commit until branching (and then revert), we will have accurate feature gate analysis without putting too much pressure on TRT to fix this today. This is a temporary fix and should be reverted once branching completes on Friday 18th."
  },
  {
    "id": "2240",
    "type": "pullRequest",
    "title": "image/v1/types: improve documentation",
    "body": "Hi, Just a really small MR (my first here :) ) to improve some documentation wording. Thanks!"
  },
  {
    "id": "2261",
    "type": "pullRequest",
    "title": "NE-2009: Enable GatewayAPI featuregate in Default featureset",
    "body": "Promote `GatewayAPI` featuregate which covers the GatewayAPI CRD lifecycle management implemented in the cluster ingress operator."
  },
  {
    "id": "2232",
    "type": "pullRequest",
    "title": "SPLAT-2078: Removed VSphereStaticIPs feature gate",
    "body": "SPLAT-2078( Changes - Removed VSphereStaticIPs feature gate Dependencies - -"
  },
  {
    "id": "2242",
    "type": "pullRequest",
    "title": "OPRUN-3780: Add feature flag for NewOLMPreflightPermissionCheck"
  },
  {
    "id": "2236",
    "type": "pullRequest",
    "title": "SPLAT-2079: Removed VSphereControlPlaneMachineSet feature gate",
    "body": "SPLAT-2079( Changes - Removed VSphereControlPlaneMachineSet feature gate - Fixed CRD to have config available as default Dependencies -"
  },
  {
    "id": "2257",
    "type": "pullRequest",
    "title": "MCO-1630: Generate v1 crds for PIS",
    "body": "Update the hack/update-payload-crds.sh to generate the crds for PIS V1"
  },
  {
    "id": "2104",
    "type": "pullRequest",
    "title": "IBMCloud: Add IBM Cloud CAPI install TechPreview FG",
    "body": "Mark CAPI Install for IBM Cloud FG as TechPreview."
  },
  {
    "id": "2260",
    "type": "pullRequest",
    "title": "NO-ISSUE: tools: bump openshift controller-tools to latest commit"
  },
  {
    "id": "2256",
    "type": "pullRequest",
    "title": "NO ISSUE: Tombstone `Spec.PinnedImageSets` in MCN v1alpha1 API",
    "body": "The MCO did not implement the functionality to populate the `Spec.PinnedImageSets` field on a PIS application. This cleanup is necessary to avoid GAing the MCN API with an unpopulated field. See for more information. Work Included: - Tombstoning of `Spec.PinnedImageSets` field and corresponding `MachineConfigNodeSpecPinnedImageSet` type definition in the MCN API. - Cleanup of tests no longer applicable."
  },
  {
    "id": "2181",
    "type": "pullRequest",
    "title": "OCPNODE-2877: Remove support to configure cgroupsv1 in OCP",
    "body": "- Removing support to configure cgroupsv1 in the OCP clusters. - Removed the enum validation of \"v1\" for the `cgroupMode` field of the `nodes.config.openshift.io` object. - Also added integration tests to validate the enum removal on the `cgroupMode` field Enhancement Proposal Ref: Summary: - This PR allows to block the user from setting `cgroupMode v1` - A change would be added for 4.18 in MCO to set machine-config cluster operator's `Upgradeable=False` when the `cgroupMode` is found to be `v1` and request users to update to `v2` - All the clusters upgrading to 4.19 have to update to the minimum version of 4.18.z containing the above changes. This can be achieved through the cincinnati-graph-data repo"
  },
  {
    "id": "2251",
    "type": "pullRequest",
    "title": "Ignore partial manifests when running schemacheck",
    "body": "All partial manifests end up being generated to at least one (CustomNoUpgrade) of the merged manifests. This means that they often just duplicate errors that are otherwise represented in the merged manifests. Also, whenever we add a new feature gated field, it forks the entire resource. Because this is a new file according to the schema checker, it determines that all of the pre-existing, non-fixable issues are new and reports them, leading to false positives. This PR stops the schema check from inspecting the partial manifests to prevent the noise and false positives."
  },
  {
    "id": "2201",
    "type": "pullRequest",
    "title": "MCO-1543: Update v1alpha1 MCN API",
    "body": "This is intended to be the final update to the the v1alpha1 MCN API before the API is graduated to V1. Notable updates: - The `Status.PinnedImageSets.LastFailedGenerationErrors` list type field is being removed and a replacement `Status.PinnedImageSets.LastFailedGenerationError` string type field is being added, as a PinnedImageSet error will be a single error string. - More information on the intended use of this and the `Status.PinnedImageSets.LastFailedGeneration` field can be found in this Slack thread( - The original behavior of the fields can be seen in this comment( - Some statuses were removed as they are no longer as valuable. - A `MachineConfigNodeNodeDegraded` status was added and will alert the user of a node degraded state. Relevant information: - Original enhancement( - WIP Updated Enhancement("
  },
  {
    "id": "1776",
    "type": "pullRequest",
    "title": "Migrate DeepCopy and Compatibility gen to Gengo v2",
    "body": "Working on moving our generators to the upstream WIP gengo v2 project. Current issues I need to work through: - x Gengo v2 has no verify-only option which we rely on in deepcopy, prerelease-lifecycle generators - x OpenAPI WIP branch is not up to date with K/K PR, so cannot integrate that yet - Pre-release lifecycle gen not integrated with codegen, it would be easier to manage if it were, very black box and only working on apps API group right now - Have a WIP proto integration to codegen that wasn't working in non GOPATH, may work now - x Check if deepcopy etc works correctly in non-gopath"
  },
  {
    "id": "2195",
    "type": "pullRequest",
    "title": "CCXDEV-10455: update insightsDataGather to v1alpha2 with GathererConfig",
    "body": "This PR introduces v1alpha2 for insightsDataGather, adding GathererConfig struct to enable/disable gatherers."
  },
  {
    "id": "2035",
    "type": "pullRequest",
    "title": "API-1843: FeatureGate(d) KMS encryption",
    "body": "Adds API fields for KMS based encryption enablement via `configv1.APIServer` through it's `spec.encryptionType`, AWS KMS config added as the initial KMS encryption provider. This feature is primarily targeted for SelfManagedHA OpenShift and is considered for TechPreview. - x Feature Gate: openshift/api2071 - Enhancement:"
  },
  {
    "id": "2177",
    "type": "pullRequest",
    "title": "OCPBUGS-53412 CONSOLE-4448: Add the ability to specify a second custom logo for PatternFly 6",
    "body": "The change is to add a new `CustomLogos` field for specifying the console logos for light and dark themes, and to mark the current `CustomLogoFile` field as deprecated. cc: @jhadvig @spadgett Console Customization Logos Fields - `logos`: A list of custom logos for the console UI. - `type`: Specifies the type of logo for the console UI. Allowed values are Masthead and Favicon - `themes`: Specifies the theme mode for the console UI and source of the file reference. - `mode`: Specifies the theme mode (`Dark` or `Light`) - `source`: Specifies the file reference source for the logo - `from`: Specifies the source type of the file reference (e.g., `ConfigMap`) - `configMap`: Contains the ConfigMap name and key for the logo file - `name`: The name of the ConfigMap containing the custom logo file. - `key`: The key inside the ConfigMap that references the logo file Example Configuration ```yaml logos: - type: Masthead themes: - mode: Light source: from: ConfigMap configMap: name: custom-logos-config key: masthead-light-logo.svg - mode: Dark source: from: ConfigMap configMap: name: custom-logos-config key: masthead-dark-logo.svg - type: Favicon themes: - mode: Light source: from: ConfigMap configMap: name: custom-logos-config key: favicon-light-logo.png - mode: Dark source: from: ConfigMap configMap: name: custom-logos-config key: favicon-dark-logo.png ``` Example of how the CustomLogos map to the ConfigMap: CustomLogo ConfigMap: ``` `oc create configmap custom-logos-config-name \\ --namespace=openshift-config \\ --from-file /path/to/filename ``` CustomLogos sample structure: ``` { \"logos\": { \"type\": \"Masthead\", \"themes\": { \"mode\": \"Dark\", \"source\": { \"from\": \"ConfigMap\", \"configMap\": { \"name\": \"custom-logos-config\", \"key\": \"masthead-dark-logo.svg\" } } }, { \"mode\": \"Light\", \"source\": { \"from\": \"ConfigMap\", \"configMap\": { \"name\": \"custom-logos-config\", \"key\": \"masthead-light-logo.svg\" } } }, { \"type\": \"Favicon\", \"themes\": { \"mode\": \"Dark\", \"source\": { \"from\": \"ConfigMap\", \"configMap\": { \"name\": \"custom-logos-config\", \"key\": \"favicon-dark-logo.png\" } } }, { \"mode\": \"Light\", \"source\": { \"from\": \"ConfigMap\", \"configMap\": { \"name\": \"custom-logos-config\", \"key\": \"favicon-light-logo.png\" } } } } } ```"
  },
  {
    "id": "2198",
    "type": "pullRequest",
    "title": "MCO-1521: Promote PinnedImageSet to GA",
    "body": "Promotes machineconfiguration/v1alpha1 PinnedImageSet API to machineconfiguration/v1 PIS API"
  },
  {
    "id": "2238",
    "type": "pullRequest",
    "title": "Remove inactive reviewers and ex-Red Hatters from OWNERS, add everettraven"
  },
  {
    "id": "2241",
    "type": "pullRequest",
    "title": "Update KAL and remove patch strategy tags",
    "body": "Patch strategy tags are not supported for CRDs, so we do not need them on conditions on our CRDs. This PR updates KAL to ignore the patch strategy tags, and removes the unnecessary tags, while filling in some missing SSA tags for good measure"
  },
  {
    "id": "2190",
    "type": "pullRequest",
    "title": "STOR-2141: add MaxAllowedBlockVolumesPerNode field to VSphereCSIDriverConfigSpec"
  },
  {
    "id": "2223",
    "type": "pullRequest",
    "title": "MCO-1590: Add explicit opt-out & status field for boot image update configuration",
    "body": "This PR adds: - a new \"None\" enum to specifically exclude machine resources from boot image updates - a status field for ManagedBootImages that will reflect the spec.ManagedBootImages. If unspecified, it will display the cluster defaults Scenario: No admin configuration and the current release does not opt-in by default: ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: None ``` Scenario: No admin configuration and the current release does opt-in by default: ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: All ``` Regardless of the default-on behavior of the release, if the admin were to add a configuration, the status must reflect that in the next update. ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: managedBootImages: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: Partial partial: machineResourceSelector: matchLabels: {} status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: Partial partial: machineResourceSelector: matchLabels: {} ```"
  },
  {
    "id": "1977",
    "type": "pullRequest",
    "title": "API-1689: features: add ShortCertRotation",
    "body": "Enhancement proposal:"
  },
  {
    "id": "2219",
    "type": "pullRequest",
    "title": "NE-1954: Introduce GatewayAPIController feature gate",
    "body": "Previously, the \"GatewayAPI\" feature gate managed both the GatewayAPI CRDs and the Gateway Controller. However, with the introduction of Gateway CRD lifecycle management ( these responsibilities were separated. A dedicated feature gate now controls the Gateway Controller to distinguish its production readiness from that of the CRDs."
  },
  {
    "id": "2200",
    "type": "pullRequest",
    "title": "CCXDEV-14850: insights add storage spec",
    "body": "This PR adds fields to the `DataGather` and `InsightsDataGather` CRDs, allowing users to specify the Persistent Volume spec for on-demand gathering jobs."
  },
  {
    "id": "2165",
    "type": "pullRequest",
    "title": "Support SEV_SNP and TDX confidential instance type selection on GCP",
    "body": "GCP compute API permits not only specifying whether a machine has to be confidential or not, but also determining the technology backing that up see 0. This commit adds an api parameter into the GCPMachineProviderSpec to support that. That way, we should be able to configure SEV_SNP and TDX machines as well as SEV machines as before. 0 Upstream/CAPG PRs: - - -"
  },
  {
    "id": "2158",
    "type": "pullRequest",
    "title": "OCPBUGS-48641: config/v1/types_cluster_version: Explain image and version both set",
    "body": "Catching up with openshift/cluster-version-operator@9be6175c5f (openshift/cluster-version-operator431), which uses the `version` property as a sanity check for \"is this pullspec the version I'm expecting?\". This protects users from compromised or man-in-the-middled upstream update services who attempt downgrade and similar attacks by misrepresenting a recommended update. The text I'm adjusting landed in 354e2fb75e (1339), but version-ignoring was never implemented, so nobody can be relying on that nominal behavior. And as the man-in-the-middle use case demonstrates, version-ignoring would be less safe than the version-match-enforcing behavior that the cluster-version operator has used since 2020."
  },
  {
    "id": "2196",
    "type": "pullRequest",
    "title": "OCPEDGE-1512: feat: add dualreplica featuregate",
    "body": "add feature gate to support DualReplica control plante topology as a featuregate for two node openshift deployments"
  },
  {
    "id": "2212",
    "type": "pullRequest",
    "title": "STOR-2267: Add SELinuxMount and SELinuxChangePolicy to DevPreview",
    "body": "They're Kubernetes feature gates, both alpha in Kubernetes 1.32, adding to DevPreviewNoUpgrade, See Depending on testing results, SELinuxChangePolicy might reach TechPreviewNoUpgrade before 4.19 freeze, a separate PR will follow."
  },
  {
    "id": "2078",
    "type": "pullRequest",
    "title": "Add changes to infrastructure object to contain service endpoints and feature flag added",
    "body": "Related Jira:"
  },
  {
    "id": "2211",
    "type": "pullRequest",
    "title": "security: add annotation for validated SCC type",
    "body": "What Add annotation for validated SCC type (User / ServiceAccount). Why An SCC is being assigned to a workload based on the capabilities the ServiceAccount or user has. To distinct, against whom this was validated against, this annotation is being introduced. This is necessary to identify namespaces that might not be labeled properly by the PSA label syncer as it doesn't watch the user's SCCs and picks the wrong PodSecurityStandard for PodSecurityAdmission labels. Reference - Pod Security Admission Enforcement Config("
  },
  {
    "id": "2213",
    "type": "pullRequest",
    "title": "NO-JIRA: Add example of excluding subnets pattern",
    "body": "This adds an example of using cross-field CIDR checks to show that you can check that an \"excludeSubnets\" style field works with CEL validations validating the inclusiveness of the excluded subnets with the provided subnets"
  },
  {
    "id": "2088",
    "type": "pullRequest",
    "title": "OCPNODE-2339: Add PKI field to (cluster)imagepolicy",
    "body": "Add PKI to clusterimagepolicy with DevPreview featuregate SigstoreImageVerificationPKI. This field allows verification of image signature created by cosign BYOPKI feature. The enhancement: hold this PR before"
  },
  {
    "id": "2208",
    "type": "pullRequest",
    "title": "OCPBUGS-51272,OCPBUGS-50587: Reject new NodeStatus with revision set"
  },
  {
    "id": "2214",
    "type": "pullRequest",
    "title": "Fix FeatureGateNewOLMCatalogdAPIV1Metas spelling error",
    "body": "It was missing \"APIV1\", was named FeatureGateNewOLMCatalogdMetas before. Signed-off-by: Anik Bhattacharjee anbhatta@redhat.com"
  },
  {
    "id": "1859",
    "type": "pullRequest",
    "title": "OCPBUGS-32158: Add CEL validation for RegistrySources in Image API",
    "body": "HyperShift embeds Image config API directly, so any webhook validation will not be triggered. This adds CEL validation to the CRD directly to mitigate that. ref:"
  },
  {
    "id": "2184",
    "type": "pullRequest",
    "title": "no-jira: correct default CIDR for ipv6 join subnet in API descriptors",
    "body": "The correct default CIDR for ipv6 join subnet is `fd98:/64`. See reference 0 and 1. However, API markers is showing the incorrect `fd98:/48`. For official documentation, release version = 4.16 is correct, but 4.15 is not. See reference 2. Notes This PR only fixes the API markers to avoid confusion when official docs (correct source) and API descriptor (i.e. `oc explain`) are showing different values. References 0 (4.19) 1 (4.17 - latest) 2 (4.15)"
  },
  {
    "id": "2202",
    "type": "pullRequest",
    "title": "featuregate for catalogd metas web api"
  },
  {
    "id": "2150",
    "type": "pullRequest",
    "title": "CORS-3842: Add API Updates for GCP Custom API Endpoints",
    "body": "Add the Tech preview and No upgrade tags for the new feature GCP API Custom Endpoints. Add the ServiceEndpoint Structure that includes the api name and endpoint. Add the Service Endpoints to the GCP Spec and Status structs."
  },
  {
    "id": "2207",
    "type": "pullRequest",
    "title": "OCPBUGS-51075: bump controller-tools dependency to latest downstream commit"
  },
  {
    "id": "2154",
    "type": "pullRequest",
    "title": "SPLAT-2000: Add configuration for vSphere multi disk thinProvisioned",
    "body": "SPLAT-2000( Changes - Added thinProvisioned to VSphereDisk Blocks - - Notes - Working with upstream CAPV to add similar behavior to prevent gap - CAPV changes:"
  },
  {
    "id": "2081",
    "type": "pullRequest",
    "title": "NE-1871: Promote GatewayAPI to Tech Preview",
    "body": "Enhancement: Gateway API with Cluster Ingress Operator("
  },
  {
    "id": "2124",
    "type": "pullRequest",
    "title": "OCPBUGS-44199: Allow spaces in AWS tags",
    "body": "An incorrect regex validation prevents users from specifying AWS tag keys or values that include spaces, which are allowed by AWS's official regex: This bug is affecting users, so it would be good to backport to at least 4.17."
  },
  {
    "id": "2199",
    "type": "pullRequest",
    "title": "OCPBUGS-48542: Remove Never option from IPsec Encapsulation",
    "body": "The OVN doesn't support encapsulation=no option, so it is not appropriate to have this option in API anymore as it is not supported with underlying system. So removing it from encapsualtion option."
  },
  {
    "id": "2143",
    "type": "pullRequest",
    "title": "OCPBUGS-42701-api: Updated the disableMultiNetwork parameter description",
    "body": "Updating the disableMultiNetwork parameter description based on feedback from Issue: OCPBUGS-42701( Key updates: DAY 1 only updates. Use of a third-party CNI that is unsupported by Red Hat."
  },
  {
    "id": "2194",
    "type": "pullRequest",
    "title": "ClusterOperator Conditions should be a listType=map",
    "body": "We are building a group of controllers, and expected, like most conditions, for this list to be a map with the key as the `type` field. The patch markers suggest this was the intention, but it does not currently have the correct markers. For anyone already updating this list, it means they must currently supply the entire list when providing the update, the default behaviour is atomic. In the future, providing the whole list will continue to work, but will mean that these updates now own each condition within the list. But for those trying to use SSA, which is currently not possible, we will be able to set individual conditions within the list with different field managers, allowing multiple controllers to act upon the conditions list without conflict."
  },
  {
    "id": "2172",
    "type": "pullRequest",
    "title": "Add the field \"MarketType\" to \"AwsMachineProviderConfig\"",
    "body": "This PR adds support market type in AwsMachineProviderConfig. A new field, `MarketType`, is added. This ID is used specify the instance type i.e CapacityBlock, Spot, OnDemand."
  },
  {
    "id": "1997",
    "type": "pullRequest",
    "title": "SDN-4930: Graduate `UserDefinedNetworks` to GA",
    "body": "This PR lifts the FG for UDN feature Origin has around 62 tests that were added for this feature QE also has automated many tests for UDN."
  },
  {
    "id": "2187",
    "type": "pullRequest",
    "title": "OCPBUGS-49779: Use BASE_REF env var to pull the release version for sippy data",
    "body": "When the version is not main branch, and its a released version example, release-4.18 etc we need verify job to pick the correct release and not the latest release"
  },
  {
    "id": "2142",
    "type": "pullRequest",
    "title": "OCPBUGS-48078: Add ratcheting tests for PowerVS service endpoints",
    "body": "If we had the ability to add these tests when the PR for these changes was merged, we would have caught this earlier. This adds tests for both spec and status to show that the ratcheting validation we added for 4.18 is working. Currently blocked on waiting for to merge, and then publishing a new set of kubebuilder binaries from that."
  },
  {
    "id": "2182",
    "type": "pullRequest",
    "title": "NO-JIRA: upkeep: update component name for arbiter feature",
    "body": "Component name for arbiter changed in jira, updating reference."
  },
  {
    "id": "2185",
    "type": "pullRequest",
    "title": "NO-JIRA: Add envtest archives for K8s 1.32.1",
    "body": "They are required for testing purposes on the repositories where we bump k8s dependencies to 1.32. CC @JoelSpeed @deads2k @bertinatto"
  },
  {
    "id": "2162",
    "type": "pullRequest",
    "title": "OTA-209: operator/v1alpha1: Add the `ClusterVersionOperator` to scheme",
    "body": "operator/v1alpha1: Add the `ClusterVersionOperator` to scheme I forgot to register the new type in the scheme when adding the `ClusterVersionOperator` API in This pull request references"
  },
  {
    "id": "2118",
    "type": "pullRequest",
    "title": "OCPBUGS-45689: Updating ose-cluster-config-api-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-config-api-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-config-api.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "2176",
    "type": "pullRequest",
    "title": "OCPBUGS-48740: Remove unnecessary object-src directive",
    "body": "Based on the conversation( with @spadgett and @vojtechszocs we agreed we dont need the `object-src` directive as we thought and so we will remove it, until its need. @assign @spadgett @JoelSpeed"
  },
  {
    "id": "2168",
    "type": "pullRequest",
    "title": "OSASINFRA-3690: Fix typo",
    "body": "Cinder uses GiB, not GB. This was a source of confusion during the MAPO-CAPO work. More discussion here:"
  },
  {
    "id": "2159",
    "type": "pullRequest",
    "title": "OAPE-94: Update API doc for route externalCertificate",
    "body": "Update API godoc to document that manual intervention is required for using `.spec.tls.externalCertificate`."
  },
  {
    "id": "2175",
    "type": "pullRequest",
    "title": "Fix race in tests using CRD patches for ratcheting",
    "body": "This should fix a race between the CRD being updated, and being active and served, vs the attempt to create a resource. Seeking a flake occasionally because the initial object isn't created, because it fails the validation that the previous patch to the CRD schema was removing, as part of our ratcheting tests. Also moves the CRD schema cleanup earlier to avoid exiting before we do the cleanup"
  },
  {
    "id": "2131",
    "type": "pullRequest",
    "title": "OCPBUGS-39148: Add Feature Gate AND on NetworkLoadBalancer CEL",
    "body": "Previously, the AWSNetworkLoadBalancerParameters struct had CEL that referenced both Subnets and EIPAllocations, but only was gated on the EIPAllocations feature gate. This means if the subnets feature gate was ever disabled, then the IngressController CRD would be invalid because the CEL would still be present, causing an error when installing the CRD. We are now able to add \"AND\" logic to the FeatureGateAwareXValidation tag which enables us to feature gate the CEL on both Subnets and EIPAllocations feature gates."
  },
  {
    "id": "2174",
    "type": "pullRequest",
    "title": "Drop feature promotion from main verify check",
    "body": "This drops the feature gate promotion from the main verify check, as it has now been added as a separate check on its own /hold Must merge after and"
  },
  {
    "id": "2173",
    "type": "pullRequest",
    "title": "Add separate Make target for feature promotion",
    "body": "This adds a separate make target to run the feature promotion checks. This is intended to be used to add a separate check for feature promotion checks aside from the main verify run"
  },
  {
    "id": "2134",
    "type": "pullRequest",
    "title": "Change OCL CRD deployment to v1 from v1alpha1",
    "body": "This PR updates the payload `MachineOSConfig`/`MachineOSBuild` CRDs to v1 from v1alpha1. This should be tested along with and will have to be merged alongside the same."
  },
  {
    "id": "2147",
    "type": "pullRequest",
    "title": "OCPBUGS-48260: Update dns1123Subdomain validation message for machineNamePrefix",
    "body": "Update `dns1123Subdomain` CEL validation message for `machineNamePrefix` field. ``` message=\"a lowercase RFC 1123 subdomain must consist of lowercase alphanumeric characters, hyphens ('-'), and periods ('.'). Each block, separated by periods, must start and end with an alphanumeric character. Hyphens are not allowed at the start or end of a block, and consecutive periods are not permitted.\" ``` /assign @JoelSpeed"
  },
  {
    "id": "2096",
    "type": "pullRequest",
    "title": "CNTRLPLANE-2: Update kubernetes to 1.32",
    "body": "~~I had to cherrypick most of Joel's changes from to get the api/tools updated as upstream has moved to gengo/v2.~~"
  },
  {
    "id": "2133",
    "type": "pullRequest",
    "title": "Fix handling of validations that require multiple feature gates",
    "body": "We have a couple of examples (for example of validations that end up relying on multiple feature gates. Thus far, this has caused an issue where one gate is promoted, but the other is not, since the validation cannot be automatically handled if the gated validation is promoted prior to the ungated dependent gate. This PR updates the example API with a second Example2 feature gate, and then adds a validation that is only enabled when both the Example and Example2 feature gates are enabled (as can be seen by the fact that the validation is enabled in Custom and Dev CRDs, but not TPNU where Example2 is disabled. I need to merge and update the vendor here before we can merge this CC @gcs278 @deads2k"
  },
  {
    "id": "2160",
    "type": "pullRequest",
    "title": "Update KAL to introduce statussubresource and maxlength linters",
    "body": "This updates KAL to include two new linter rules. StatusSubresource This linter will check for objects marked as a CRD root, and, if they have a `status` field, will make sure that they have the appropriate subresource status marker. It will also report when we have objects that have the marker, but do not have a status field, which is true of several of our APIs (I assume we should drop those). MaxLength This linter will check for untyped strings and arrays and ensure that a maximum length/items is configured appropriately. Setting maximum lengths on fields is good practice to prevent folks from abusing an API (persisting large data in the database, potential DDOS), but also means that as we add CEL validations over time, their computational complexity is bound and their runtime cost is managed, by having sensible limits in place. All lists must have a maximum items marker. Authors are expected to think about the use case, and choose something sensible, that is larger (or equal to) the maximum that the use case requires. Likewise, any string that is not an enum, or has a format as date, date-time or duration, should include a maxLength. Ideally this is some small figure (sub 4kb) that is suitable for the worst case, of the use case, for the field."
  },
  {
    "id": "2163",
    "type": "pullRequest",
    "title": "OCPBUGS-48740: Add missing CSP directives",
    "body": "Adding two requested CSP directives: - ObjectSrc - ConnectSrc This PR also need to be backported to 4.18 /assign @JoelSpeed @spadgett"
  },
  {
    "id": "2161",
    "type": "pullRequest",
    "title": "SPLAT-2008: Update vSphere multi disk api size limit doc",
    "body": "SPLAT-2008( Changes - Updated api documentation regarding vSphere max disk size for data disks"
  },
  {
    "id": "2155",
    "type": "pullRequest",
    "title": "Monitoring Config should start life as v1alpha1",
    "body": "This API was merged into the v1 API group, on the 22nd of Dec. It is feature gated, and only deployed on TechPreview clusters. It should have started life as a v1alpha1 API. The API currently only has 2 fields. A spec object `userDefined` and a field within it `mode`. Moving this to v1alpha1 now gives us an opportunity later (as more fields are added, and prior to GA) to break the API, should we decide to, prior to v1. There is a lot of development work to do on this API before it can be declared GA, I definitely want the right to change the structure over time. There is however some risk. If someone vendors the API repo between the API merging and this merging AND they try to write to the real v1 object once it ships, they will be missing fields, this could cause confusion AND we change the serialisation of `userDefined` or `mode`, this could panic the deserialiser I think this change is worth the risk, as the risk is currently low We are under active development for 4.19, this error has not crossed release branches If someone wants to start using this at some point in the future, I would expect them to either start with the v1alpha1 (which will only exist after this point), or with the v1, but they are likely to vendor something newer. This API won't GA in the 4.19 time frame, so realistically anyone looking to vendor the v1 API will be looking at this in at least summer 2025, and I would expect them to try to vendor something recent We do not often change the serialisation of fields between v1alpha1 and v1, thus far in OpenShift's experience of feature gating - if we do, we _do_ run the risks of the above. We have the option to forego the name and come up with something else as a last resort if we decide `userDefined` must take a different shape Since `userDefined` is a struct, we can easily replace `mode` with an alternatively named field if we decide we need a change The CRD has already hit the payload. However, since this is only for techpreview clusters and those are not typically upgraded, this change should not cause too much toil. However, z stream upgrades may be blocked as we are removing an API version. The only cluster we know of that continually upgrades in TechPreview, is build02, we may need to help them force this change through Even though the API exists, it is unlikely anyone has created a CR yet. If no CR exists, _I believe_ the stored versions field in the CRD status will be empty. If that's the case, change the schema from v1 to v1alpha1 should not cause an error (removing a stored version is an error) Alternatives to this would be to keep the v1 version, develop in v1alpha1, and then copy over the changes later. This would make sure that we do not break the `userDefined` field, but may risk confusion, and poses questions about versions inside the CRD schema, we have to make sure only one version is in the payload"
  },
  {
    "id": "1963",
    "type": "pullRequest",
    "title": "OSASINFRA-3689: Deprecate unused MAPO fields",
    "body": "This has no real impact on end-users but it is useful flag for reviewers as we start translating from MAPO-CAPO. Some of these issues - such as `SecurityGroupFilter.TenantID` being ignored rather than \"coalesced\" with the `ProjectID` field - are likely bugs, but we're not going to fix these at this stage of MAPO's lifecycle. This was generated via manual inspection of MAPO, most significantly the file."
  },
  {
    "id": "2141",
    "type": "pullRequest",
    "title": "Update linter fixing to use golangci-lint",
    "body": "As of golangci-lint 1.63.0, it now has the ability to apply suggested fixes from custom linters correctly. This means we can do away with the separate `kal` fixing, and means that the linter fixes are applied based on our custom configuration (eg to not require protobuf when fixing conditions). This PR enables two new sets of fixes (requiredfields and conditions) that were previously disabled as I haven't got around to fixing up the historic issues. However, that doesn't matter now, as the fix target now applies based on the `--new-from-rev`, and not the whole history."
  },
  {
    "id": "2058",
    "type": "pullRequest",
    "title": "OCPBUGS-49750, CNV-47438: ipam, virt: graduate persistent ips feature gate to GA",
    "body": "This PR graduates the `PersistentIPsForVirtualization` feature gate to GA."
  },
  {
    "id": "2028",
    "type": "pullRequest",
    "title": "SPLAT-1808: Add vSphere multi disk support",
    "body": "SPLAT-1808( Changes - Create new feature gate for vSphere multi disk - Create initial CRD changes for adding additional disks to vSphere machines Blocks - - - - Notes - This is being done as part of vSphere work for this( feature - MAO Changes:"
  },
  {
    "id": "2132",
    "type": "pullRequest",
    "title": "Add the option to test ratcheting validations within integration tests",
    "body": "This adds a new field to `onUpdate` tests that allows provision of RFC6902 yaml patches to be included in a test spec. The idea here is that you can modify the CRD schema prior to applying the initial object. Once the initial object has been applied (with something that won't pass the new validation), the schema is reverted to whatever exists in the branch without the patches. With this included, we can now have integration testing for any change of validation that should be covered under ratcheting validation. While adding an example of this to the example package, I noticed we had some leftover CRDs from prior to us moving to to generated CRDs, which I've also removed here."
  },
  {
    "id": "2090",
    "type": "pullRequest",
    "title": "MCO-1443: Promote onclusterbuild to GA",
    "body": "Opened for testing. Based on guidance this is currently the first step: create new v1 API, gate remains off, v1 API is excluded from the image manifests Also adds in:"
  },
  {
    "id": "1929",
    "type": "pullRequest",
    "title": "MON-3902: add initial Monitoring CRD api",
    "body": "Initial Implementation of Configuration CRD for the Cluster Monitoring Operator Related: Enhancements Proposal link( As we have a FeatureGate, the idea is to implement component by component to verify the correct behavior and facilitate the reviews. The API comes from"
  },
  {
    "id": "2130",
    "type": "pullRequest",
    "title": "Add section about why we start APIs as v1alpha1",
    "body": "We recently changed the shape of a couple of v1alpha1 APIs in breaking ways (when moving to a new API version). We could only do this because we started the API as a v1alpha1. Had we started directly at v1, and then made these changes, generated clients prior to the change, trying to deserialize the new schema would have issues. This is added as a reminder of why we have v1alpha1, to allow us to make big changes!"
  },
  {
    "id": "2126",
    "type": "pullRequest",
    "title": "Add verify-lint-fix make target",
    "body": "This adds a new make target, which I'll add to the lint status check, that runs the lint-fixes (output to null for now as it's noisy) and then checks for a diff. Similar to other verify checks. This means we can enforce that all fixes are applied prior to passing the lint check. Eg this means we will always convert `kubeuilder:validation:Required` to `required` automatically."
  },
  {
    "id": "2129",
    "type": "pullRequest",
    "title": "Add path warning for protobuf updates",
    "body": "Some folks have been having issues recently because the protobuf generator is very, very fussy about where it is located. You must have `$GOPATH` set, and you must check out the API repo at `$GOPATH/src/github.com/openshift/api`. If you do not, it will just write the resources there anyway, and remove any proto files from your actual checkout location. Resulting in confusion as \"it deleted all the proto files\". This PR adds a check in the script, until we can work out a way to get around this weird proto generation issue (perhaps moving to gengo v2 will fix this for us)"
  },
  {
    "id": "2128",
    "type": "pullRequest",
    "title": "Update KAL with bug fixes for embedded fields",
    "body": "This includes fixes for the linter not picking up the json tags on embedded fields like objectmeta and typemeta, leading to no reports of missing comments or the optional/required tag on the metadata field"
  },
  {
    "id": "1472",
    "type": "pullRequest",
    "title": "OCPBUGS-40906: Add encapsulation flag to IPsecConfig struct",
    "body": "Add encapsulation flag to IPsecConfig struct. This flag allows UDP encapsulation of IPsec related packets for things like firewall and NAT traversal See RFC 3948 for specific uses"
  },
  {
    "id": "2102",
    "type": "pullRequest",
    "title": "OCPBUGS-43745: Add IdleCloseOnResponse field to IngressControllerSpec",
    "body": "Introduce a new knob, `IdleConnectionTerminationPolicy`, in the IngressController configuration to control how idle connections are handled during router reloads. Context In OCPBUGS-32044( the `idle-close-on-response` option was unconditionally added to the HAProxy confuguration to address issues with incoming HTTP requests failing during router reloads. This issue primarily affected Apache HTTPClient versions prior to 5.0, which do not gracefully handle connection resets. Adding the option ensured that idle connections were left open to handle one final request before being closed. Historically, HAProxy 2.2 maintained idle connections during router reloads by default, allowing requests on those connections to complete even when routing configuration changes were applied. Starting with HAProxy 2.4, the default behaviour changed to close idle connections immediately during soft reloads. To accommodate existing clients dependent on the HAProxy 2.2 behaviour, the unconditional addition of idle-close-on-response restored the previous OpenShift status quo, where customers upgrading their OpenShift clusters experienced a behaviour change due to the jump from HAProxy 2.2 to 2.6, which altered the default handling of idle connections during router reloads. However, unconditionally enabling `idle-close-on-response` has now led to issues (OCPBUGS-43745( with Route backend switching. When a Route switches its service backend, requests on persistent connections could continue being routed to the previously active backend due to HAProxy handling these connections in the old process. This behaviour occurs until the connection is closed, either by a new request, the expiration of the client keep-alive, or the expiration of the HAProxy `timeout http-keep-alive 300s`. While this behaviour is desirable in some cases (e.g., for clients sensitive to connection resets), it can lead to temporary inconsistencies and unexpected routing behaviour during backend switching. This PR addresses these regressions by making the behaviour configurable through a new knob. Changes - Add a new knob, `IdleConnectionTerminationPolicy`, to the IngressController configuration. - Provide two modes: - Immediate: Closes idle connections immediately during router reloads. - Deferred: Maintains idle connections during router reloads. Behavioural Differences - Immediate (New Default in OpenShift 4.19+): - Closes idle connections immediately during router reloads. - Ensures immediate propagation of route changes. - May reset connections for clients sensitive to connection interruptions. - Deferred (Default for backports to 4.14-4.18): - Keeps idle connections open until a terminating event, such as: - A new request on the connection (handled by the old HAProxy process). - Expiration of haproxy `timeout http-keep-alive` (300 seconds in OpenShift). - The client closing the connection. - Restores pre-2.4 HAProxy behaviour for idle connection handling. - May cause temporary inconsistencies during the first request on a persistent connection after a reload. - Can lead to resource accumulation if connections remain idle for extended periods, especially with frequent reloads. References: - Router change: openshift/router639( - Ingress Controller Operator change: openshift/cluster-ingress-operator1166("
  },
  {
    "id": "2125",
    "type": "pullRequest",
    "title": "Update KAL to introduce new linters",
    "body": "This updates KAL to the latest version, which adds a handful more linters compared with what we are running so far Conditions - Check for conditions fields and check that they have the correct tags and markers Integers - Check for usage of non `int32` or `int64` integer types, and warn against this NoBools - Bools are not allowed, use enums instead NoPhase - Phase fields are not allowed, use conditions instead RequiredFields - Make sure that required fields are not pointers, and that they do not have omitempty"
  },
  {
    "id": "2044",
    "type": "pullRequest",
    "title": "OTA-1029: Add ClusterVersionOperator API",
    "body": "This pull request will introduce the `ClusterVersionOperator` API in the `DevPreviewNoUpgrade` feature set as described in the enhancement."
  },
  {
    "id": "2123",
    "type": "pullRequest",
    "title": "OCPBUGS-46380: StaticPodOperatorStatus validation should reject downgrades and concurrent node rollouts"
  },
  {
    "id": "2122",
    "type": "pullRequest",
    "title": "alert-relabel list should not be a pointer"
  },
  {
    "id": "1918",
    "type": "pullRequest",
    "title": "OCPBUGS-35196: Insights types - fix duration validation",
    "body": "This is to unify the duration's validation pattern used in the Insights API. I noticed this problem when the operator status failed to update with having duration value as `2m0s`"
  },
  {
    "id": "2082",
    "type": "pullRequest",
    "title": "OCPEDGE-1307: feat: add HighlyAvailableArbiter control plane topology as feature for techpreview",
    "body": "Adding HighlyAvailableArbiter FeatureGate for Control Plane Topology. Per EP: This PR adds an authoritative flag to the control plane enums for HighlyAvailableArbiter which will denote a cluster that has at minimum 2 regular sized control plane nodes and 1 smaller control plane node called the arbiter"
  },
  {
    "id": "2071",
    "type": "pullRequest",
    "title": "API-1843: KMSEncryptionProvider Feature Gate",
    "body": "Feature: KMS Encryption Provider for sensitive etcd Resources A user-configurable interface to support encryption of data stored in etcd using a supported Key Management Service (KMS). OpenShift would need to align closer with KMS evolution upstream with respect to the different Kubernetes Encryption Providers available today that can encrypt resources from APIServer EncryptionConfig, User Stories: - As an OpenShift administrator, I want to encrypt secrets in my cluster at rest using KMS keys so that I can comply with my organization's security requirements. - As an OpenShift administrator, I want to let the KMS provider to manage the lifecycle of the encryption keys. xref: OCPSTRAT-108( API-1684("
  },
  {
    "id": "2087",
    "type": "pullRequest",
    "title": "ClusterNetworkOperator API: promote the additionalRoutingCapabilities gate",
    "body": "Promoting the feature gate as the deployed daemonset is being used by metallb and covered by MetalLB tests. This feature is baremetal specific. By setting this flag, CNO will deploy the frr-k8s daemonset which is used (among others) by core features of metallb. Part of this work is to move the daemonset from being deployed by the MetalLB operator to being deployed by CNO. For the time being, we have a CI lane (gating PRs) that is flipping the feature gate and it's testing MetalLB functionalities plus another one testing the FRR-K8s functionalities. Given the feature is baremetal specific, we need an exception to the regular process, as described here We added a periodic informing job here( plus we have both telco and openshift QE validating MetalLB releases (and this feature as a consequence)."
  },
  {
    "id": "2116",
    "type": "pullRequest",
    "title": "For the love of consistency... Apply linter auto-fixes",
    "body": "This PR runs `kal -fix`, which auto fixes based on several linter rules. Any usage of `+kubebuilder:validation:Required` is replaced with `+required`, all tooling now supports the latter Any usage of `+kubebuilder:validation:Optional` is replaced with `+optional`, all tooling as always supported the latter Any duplicating of upstream and kubebuilder optional/required tags is deduplicated Any comment that starts with the json tag name value, but does not match its casing, is updated (eg `Foo - foo`) This means that anyone who now sees linter errors, has a chance to run `make lint-fix` and have it fix only their issues, from their PR, rather than having it fix the who repository. I've run the generation, and checked painstakingly, that there are no functional changes to the output of the generated CRDs. All that we have updated here, are markers, and documentation, to be consistent. I hope to merge this quickly as the merge conflicts will be hell."
  },
  {
    "id": "2114",
    "type": "pullRequest",
    "title": "Introduce KAL (Kube-API-Linter) to API repo",
    "body": "KAL is a tool I've been hacking on since Kubecon, the intention is that it will implement Kube API conventions, where possible, as linters using the standard golang linting formats. Right now, it's integrated into golangci-lint as a custom linter build. This means we can take advantage of custom golangci-lint configuration to allow easily excluding issues and handle things like `--new-from-rev` for us. This PR sets up builds for both the golangci-lint version, and raw version of the KAL linter. It also adds configuration to the repository to configure VS Code, so that those using VS Code automatically get the custom linter reporting issues to them. On pull requests, `make lint` will use `--new-from-rev=${PULL_BASE_SHA}` to ensure we are only reporting new issues. If folks want to locally do something similar, they can either do `PULL_BASE_SHA=master make lint` or `make lint-since-master`. Golangci-lint doesn't support auto-fixes just yet (at least not in the way they are implemented), so we use the raw linter for this. The auto-fix PR will be separate. The linter currently supports: Checking every field has a json tag, and that the tag is camelCase Checking that the godoc for the field is present, and starts with the serialised version of the field name (this has auto-fix) Checking that every field has an optional or require tag, and consolidating on upstream versions of the tags, rather than kubebuilder specific version (again, with auto-fix) Planning to implement more linters this week, but putting this here for a demo"
  },
  {
    "id": "2113",
    "type": "pullRequest",
    "title": "Revert \"OCPBUGS-44693: Disable ResilientWatchCacheInitialization\"",
    "body": "This reverts commit 52ecd418ae879ad0872a7a0d98cdc6f827afe73f. After syncing with @deads2k , the expectation is not to disable the FG but to fix the underlying issue."
  },
  {
    "id": "1999",
    "type": "pullRequest",
    "title": "SPLAT-1743: vSphere - add host and vm based zonal",
    "body": "Changes - New feature gate `VSphereHostVMGroupZonal` - Add `RegionType` and `ZoneType` fields to `VSpherePlatformFailureDomainSpec` to specify region and zone failure domain types. - Add `VSphereFailureDomainAffinity` type that contains three fields required for vm-host zonal: `VMGroup`, `HostGroup` and `VMHostRule`. - Add `VSphereFailureDomainAffinity` to `VSpherePlatformTopology` - Create additional unit tests to cover the introduction of vm-host zonal provisioning types. - Add `VMGroup` in a machine(s) workspace. Additional PRs - - - - - - -"
  },
  {
    "id": "2086",
    "type": "pullRequest",
    "title": "CFE-1167: Feature-gated MachineNamePrefix field for CPMS",
    "body": "This PR - Introduces `MachineNamePrefix` field in `ControlPlaneMachineSet` allowing custom prefixes to be used for Control Plane Machine names. - This feature is gated behind the `CPMSMachineNamePrefix` feature gate. - Feature gate PR : - This PR fixed the feature-gate naming typo. - Implements - Part of CFE-1167("
  },
  {
    "id": "2111",
    "type": "pullRequest",
    "title": "OCPBUGS-44693: Disable ResilientWatchCacheInitialization",
    "body": "`ResilientWatchCacheInitialization` should be disabled for all API servers. At the moment we carry a patch ( kas (which will be replaced by this PR) The FG will be disabled temporarily until cause of storage error triggering cache reinitialization during bootstrap is fixed in There's a separate pre-existing issue causing storage layer errors and watch cache re-initialization during cluster bootstrap. With ResilientWatchCacheInitialization enabled, clients (reflectors in particular) are turned away with 429 responses while the watch cache is being repopulated and retry repeatedly. Without this feature, requests hang (consuming priority and fairness \"seats\") until the watch cache is initialized or they time out. We fail tests when the total number of watch requests during a job exceeds a threshold based on recent historical totals. The systemic 429/retry behavior causes this threshold to be breached. We are temporarily disabling it to reduce noise as it's a symptom and not the cause of the underlying storage errors."
  },
  {
    "id": "2110",
    "type": "pullRequest",
    "title": "Add example format validation",
    "body": "This adds an example of the new format library for validating DNS 1123 subdomains to the example API. Will be leveraging this few a through APIs so providing an example hopefully helps some folks."
  },
  {
    "id": "2074",
    "type": "pullRequest",
    "title": "SPLAT-1743: Add VMGroup to VSphere Provider workspace",
    "body": "Changes For the machine api operator to support vm-host based zonal a single new field of `vmGroup` needs to be added that will indicate the vCenter cluster group to add a newly created virtual machine into. Additional PRs - - - - - - -"
  },
  {
    "id": "2109",
    "type": "pullRequest",
    "title": "Update kubebuilder assets to include format library",
    "body": "We recently backported the format library enablement so that the current master branch can leverage format CEL validations. This PR updates the index to point to a newly published copy of the kubebuilder assets that includes this patch. Now, APIs in this repo will be able to leverage the new library ahead of the kube rebase to 1.32. Primarily I'm looking for users to be able to add ``` // +kubebuilder:validation:XValidation:rule=\"format.dns1123Subdomain().validate(self).hasValue()\",messageExpression=\"format.dns1123Subdomain().validate(self).value().join(\\\"\\ \\\")\" ``` However, it appears there's a bug in the messageExpression right now, so, will get people to use ``` // +kubebuilder:validation:XValidation:rule=\"format.dns1123Subdomain().validate(self).hasValue()\",message=\"a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.\" ```"
  },
  {
    "id": "2094",
    "type": "pullRequest",
    "title": "CFE-1168: Add CMPSMachineNamePrefix feature-gate",
    "body": "Add new `CMPSMachineNamePrefix` feature-gate to guard the implementation changes done to support customized control plane machine names. - Part of CFE-1168( - Implements"
  },
  {
    "id": "2052",
    "type": "pullRequest",
    "title": "STOR-1823: Remove CSIDriverSharedResource feature gate",
    "body": "/hold for /cc @openshift/storage @adambkaplan @sayan-biswas"
  },
  {
    "id": "439",
    "type": "pullRequest",
    "title": "OCPEDGE-1833: feat: bump api dep to pull in change in DualReplica",
    "body": "DualReplica went down to DevPreview from TechPreview, updating api dep to reflect this change"
  },
  {
    "id": "433",
    "type": "pullRequest",
    "title": "OCPBUGS-52744: Bump golang.org/x/crypto",
    "body": "Fixes OCPBUGS-52744("
  },
  {
    "id": "431",
    "type": "pullRequest",
    "title": "OCPEDGE-1643: bump: ocp/api ocp/library-go k8s",
    "body": "bumping ocp/library-go k8s and ocp/api to pull in new DualReplica enum for infra config"
  },
  {
    "id": "430",
    "type": "pullRequest",
    "title": "OCPBUGS-45477: Updating ose-cluster-config-operator-container image to be consistent with ART for 4.19",
    "body": "Continuation of 429 which has not updated the go.mod to 1.23, and therefore is failing to verify"
  },
  {
    "id": "428",
    "type": "pullRequest",
    "title": "OCPEDGE-1308: bump(api,k8s)",
    "body": "Per EP: Bumping ocp/api and k8s deps to pull in the addition of the infrastructure resource for new ControlPlaneTopology enum of `HighlyAvailableArbiter`."
  },
  {
    "id": "358",
    "type": "pullRequest",
    "title": "OCPBUGS-55017: Wait for operators to be stable for 2 minutes before accepting cluster is stable",
    "body": "We are seeing that the 1 minute period is not enough to pick up etcd operator rolling out several revisions. Increase the stabilisation period to give a 2 minute stable requirement before we accept that the cluster has stabilised"
  },
  {
    "id": "355",
    "type": "pullRequest",
    "title": "OAPE-163: Extend E2E tests for MachineNamePrefix when the field is reset",
    "body": "Extend E2E tests for MachineNamePrefix when the field is reset"
  },
  {
    "id": "354",
    "type": "pullRequest",
    "title": "SPLAT-2079: Removed VSphereControlPlaneMachineset feature gate",
    "body": "SPLAT-2079( Changes - Removed VSphereControlPlaneMachineset feature gate"
  },
  {
    "id": "353",
    "type": "pullRequest",
    "title": "OAPE-147: Add E2E tests for MachineNamePrefix with OnDelete update strategy",
    "body": "This PR adds E2E tests (both pre-submit and periodic) for `MachineNamePrefix` feature with `OnDelete` update strategy. The existing tests work only for `RollingUpdate` strategy. This PR extends the tests added through: - - Part of :"
  },
  {
    "id": "352",
    "type": "pullRequest",
    "title": "OCPBUGS-52224: Bump to golang.org/x/oauth2@v0.27.0",
    "body": "Bump to golang.org/x/oauth2@v0.27.0"
  },
  {
    "id": "351",
    "type": "pullRequest",
    "title": "OAPE-126: Include CPMSMachineNamePrefix feature-gate name in e2e tests",
    "body": "Include `CPMSMachineNamePrefix` feature gate name in e2e tests. This is required for sippy tool to filter the e2e tests specific to this featuregate. xRef:"
  },
  {
    "id": "349",
    "type": "pullRequest",
    "title": "OCPBUGS-50580: Fix MachineNamePrefix periodic on OpenStack",
    "body": "This test assumed that multiple calls to IncreaseControlPlaneMachineInstanceSize would trigger a rollout every time. However, this was not true on OpenStack, as flavor names are not predictable. The OpenStack function assumed it would only ever be called once, and set a single alternate flavor name passed as an environment variable. This meant that when called a second time, it did not trigger a rollout. In this change we rename the 3 'Increase...InstanceSize' functions to better reflect their intended function, which is to trigger a rollout. With this context, we update the OpenStack implementations to add a random tag instead. This was already the fallback behaviour if no alternate flavor was passed, and has the additional advantage that it can be called as many times as required. Merge first: - x"
  },
  {
    "id": "345",
    "type": "pullRequest",
    "title": "OCPCLOUD-2834: Update dependencies to K8s 1.32",
    "body": "This PR updates the dependencies for this project to be in-line with K8s 1.32"
  },
  {
    "id": "335",
    "type": "pullRequest",
    "title": "SPLAT-1817: Bump openshift/api to get vSphere multi disk support",
    "body": "SPLAT-1817( Changes - Bumped openshift/api version Prerequisites - -"
  },
  {
    "id": "325",
    "type": "pullRequest",
    "title": "SPLAT-1799: Add support for vSphere host and vm group based zonal",
    "body": "Changes - Modified events.NewLoggingEventRecorder adding clock.RealClock{} param - Add checks for failureDomain hostgroup vmgroup fields - Add checks for machine workspace vmgroup fields Additional PRs - - - - - - - -"
  },
  {
    "id": "339",
    "type": "pullRequest",
    "title": "NO-JIRA: Update support matrix",
    "body": "Update support matrix to include up to date information about providers support. Nutanix: - added - FDs support added: VSphere: - FDs support GAed:"
  },
  {
    "id": "338",
    "type": "pullRequest",
    "title": "OAPE-78: Add e2e periodic job for machine name prefix",
    "body": "- This is required to gather test data for feature. - Techpreview periodics job: , - Part of:"
  },
  {
    "id": "332",
    "type": "pullRequest",
    "title": "OAPE-19: Support customized control plane machine names with prefix",
    "body": "This PR introduces the ability to customize the naming format of Control Plane Machines. This is achieved through a new `machineNamePrefix` field in the ControlPlaneMachineSet spec, gated behind the `CPMSMachineNamePrefix` feature gate. When feature gate is enabled and `machineNamePrefix` field is specified, it allows users to specify a prefix that will be used in `getMachineName`. The resulting machine name will consist of the provided prefix, followed by a randomly generated string of 5 characters and the machine index. Otherwise, it will fall back to the default naming convention. - Implementes : - API PR: - Part of: OAPE-19("
  },
  {
    "id": "334",
    "type": "pullRequest",
    "title": "OCPBUGS-45449: Updating ose-cluster-control-plane-machine-set-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-control-plane-machine-set-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-control-plane-machine-set-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "333",
    "type": "pullRequest",
    "title": "OAPE-18: Bump openshift/api to vendor machineNamePrefix field",
    "body": "Bump `openshift/api` to vendor `machineNamePrefix` field and `CPMSMachineNamePrefix` feature-gate - Part of : OAPE-18( - Implementes : - API PR:"
  },
  {
    "id": "229",
    "type": "pullRequest",
    "title": "STOR-2126: Enable readOnlyFileSystem",
    "body": "Enable readOnlyFileSystem in the operator for security concerns. Recommended for all containers running in kubernetes."
  },
  {
    "id": "235",
    "type": "pullRequest",
    "title": "STOR-1880: Role and ClusterRole with too wide permissions",
    "body": "/cc @openshift/storage"
  },
  {
    "id": "234",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Update bertinatto from OWNERS"
  },
  {
    "id": "231",
    "type": "pullRequest",
    "title": "STOR-2281: Remove csi-snapshot-validation-webhook references",
    "body": "Remove csi-snapshot-validation-webhook references."
  },
  {
    "id": "233",
    "type": "pullRequest",
    "title": "OCPBUGS-24588: bump library-go",
    "body": "To pull deployment controller fix:"
  },
  {
    "id": "228",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 Notes: - Updated calls for `NewControllerCommandConfig`, `NewKubeRecorder`, `NewKubeInformersForNamespaces`"
  },
  {
    "id": "223",
    "type": "pullRequest",
    "title": "OCPBUGS-45073: Support HCP labels",
    "body": "HCP is adding a new API field to allow users creating HCP clusters to set custom labels on all HCP pods cluster-csi-snapshot-controller-operator needs to integrate this feature in the same way it integrated the NodeSelector feature for HCP."
  },
  {
    "id": "219",
    "type": "pullRequest",
    "title": "STOR-2136: Enable volume groupsnapshots APIs v1beta1 version",
    "body": "This is meant to be used with which relies on using featuregate for enabling group snapshots."
  },
  {
    "id": "220",
    "type": "pullRequest",
    "title": "OCPBUGS-45471: Updating ose-cluster-csi-snapshot-controller-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-csi-snapshot-controller-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-csi-snapshot-controller-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "426",
    "type": "pullRequest",
    "title": "OCPBUGS-51193: Add runbook_url for CoreDNSErrorsHigh",
    "body": "Issue: -"
  },
  {
    "id": "425",
    "type": "pullRequest",
    "title": "OCPBUGS-45558: Updating ose-cluster-dns-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-dns-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-dns-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1409",
    "type": "pullRequest",
    "title": "OCPEDGE-1773: Fix arbiter field in install-config",
    "body": "When using TNA clusters, the observedConfig.controlPlane.replicas needs to include the arbiter nodes. Currently it uses an incorrect field to get the number of arbiter nodes - it uses `arbiterNode` but the actual field is called `arbiter`."
  },
  {
    "id": "1412",
    "type": "pullRequest",
    "title": "OCPBUGS-53512: fix CVE-2025-30204",
    "body": "resolves"
  },
  {
    "id": "1402",
    "type": "pullRequest",
    "title": "OCPBUGS-54222: increase etcdGRPCRequestsSlow duration",
    "body": "This PR bumps the `etcdGRPCRequestsSlow` alert duration from `30m` to `60m`. fixes"
  },
  {
    "id": "1399",
    "type": "pullRequest",
    "title": "OCPEDGE-1498: support updates to external etcd",
    "body": "The _EnableEtcdContainer unsupported config override_ removes the etcd container from the static pod definition when set to FALSE. This change extends that behavior by writing a separate Pod definition containing only the etcd container, using the same source from which it was removed, but placing it in a location that does not trigger pod creation. This allows an external etcd manager to run etcd independently while ensuring it has a reliable source for updates from CEO (e.g., new image, path to certificates, etc.)."
  },
  {
    "id": "1396",
    "type": "pullRequest",
    "title": "OCPEDGE-1500: Added scaling strategies for TNF",
    "body": "This PR updates the scaling strategy options available in CEO to provide options that are compatible with TNF. This PR depends on"
  },
  {
    "id": "1392",
    "type": "pullRequest",
    "title": "OCPBUGS-48523: Bump to Kubernetes 1.32 and latest library-go.",
    "body": "This is motivated by the installer controller fix in library-go, which has already moved to Kubernetes 1.32."
  },
  {
    "id": "1391",
    "type": "pullRequest",
    "title": "OCPBUGS-48400: generate event upon successfull bootstrap member removal",
    "body": "This generates an event upon successful bootstrap member removal see"
  },
  {
    "id": "1393",
    "type": "pullRequest",
    "title": "NO-JIRA: fix schedule backup test",
    "body": "This PR fixes `TestNewBackupServer_scheduleBackup` due to changes in go1.23 `ticker` implementation. Changes that caused the issue ``` Second, the timer channel associated with a Timer or Ticker is now unbuffered, with capacity 0. The main effect of this change is that Go now guarantees that for any call to a Reset or Stop method, no stale values prepared before that call will be sent or received after the call. Earlier versions of Go used channels with a one-element buffer, making it difficult to use Reset and Stop correctly. A visible effect of this change is that len and cap of timer channels now returns 0 instead of 1, which may affect programs that poll the length to decide whether a receive on the timer channel will succeed. Such code should use a non-blocking receive instead. ```"
  },
  {
    "id": "1387",
    "type": "pullRequest",
    "title": "OCPBUGS-48523: Bump library-go for static pod controller apply migration fixes."
  },
  {
    "id": "1366",
    "type": "pullRequest",
    "title": "OCPEDGE-1195: Arbiter node support",
    "body": "Per EP: This PR adds the ability of CEO to be able to be aware of the arbiter node in order to correctly deploy an etcd member on an arbiter node. This change bumps ocp/api in order to pull in the new control plane topology of `HighlyAvailableArbiter` and bumps ocp/library-go in order to use the updated static pod builder that allows for selecting master and arbiter nodes for static pods."
  },
  {
    "id": "1378",
    "type": "pullRequest",
    "title": "OCPEDGE-1435: bump(library-go,ocp/api,ocp/client-go)",
    "body": "updating dependencies for the arbiter node feature"
  },
  {
    "id": "1372",
    "type": "pullRequest",
    "title": "OCPBUGS-42809: always ensure quorum during bootstrap",
    "body": "/hold"
  },
  {
    "id": "1352",
    "type": "pullRequest",
    "title": "ETCD-677: add unsupported config override for etcd container removal",
    "body": "/hold for testing purposes in 2NO"
  },
  {
    "id": "1364",
    "type": "pullRequest",
    "title": "OCPBUGS-43748: etcd pod containers do not start when tls min version is 1.3",
    "body": "- add ETCD_TLS_MIN_VERSION env to etcd pods - add listen-tls-min-version flag to readyz cmd - do not start etcd with --cipher-suites with tls1.3"
  },
  {
    "id": "1190",
    "type": "pullRequest",
    "title": "OSASINFRA-3747: Prefer CA cert from credentials secret",
    "body": "In openshift/cloud-credential-operator/pull/780, we have added the ability for `cloud-credential-operator` to consume a CA cert from the root credentials secret and to include in the credentials secrets it provisions. In openshift/installer/pull/9194, we have modified the Installer to start setting this field where necessary. Adapt `cluster-image-registry-operator` to allow it to start consuming the CA cert from this place. We maintain fallbacks for the previous locations of the cert for now, but these can be removed in the next release. Dependencies: - x"
  },
  {
    "id": "1196",
    "type": "pullRequest",
    "title": "OCPBUGS-45409: Updating ose-cluster-image-registry-operator-container image to be consistent with ART for 4.19",
    "body": "Trying to fix the verify job on"
  },
  {
    "id": "1194",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Authenticate to Azure only once in CPO",
    "body": "This commit changes image registry to look for a stored Azure credential to reuse to authenticate with Azure. If there is no stored Azure credential, authenticate to Azure with UAMI and store the credentials. Prior to this commit, image registry was getting new credentials every continually; this led to an issue where image registry would open too many filewatchers as NewUserAssignedIdentityCredential opens a new filewatcher on every call."
  },
  {
    "id": "1187",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Bump msi-dataplane dependency",
    "body": "This pull request bumps the msi-dataplane dependency to the latest version, which contains updated error handling around filewatcher."
  },
  {
    "id": "1186",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Remove ARO HCP MIv2 Authentication",
    "body": "This pull request: - Removes the ARO HCP managed identity version 2 authentication type since version 3 is now fully implemented in OCP 4.19.0 - Removes the filewatcher package as it is no longer needed. It was associated with ARO HCP managed identity version 2 authentication, which was removed from cluster image registry operator."
  },
  {
    "id": "1174",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Add new Azure authentication type for managed Azure HCP for cluster-image-registry",
    "body": "This PR: - adds a context function parameter to `getCreds` - adds the new Azure authentication for managed Azure HCP called UserAssignedIdentityCredentials"
  },
  {
    "id": "1178",
    "type": "pullRequest",
    "title": "NO-JIRA: update owners",
    "body": "add myself to the owners file. removes dmage and adambkaplan."
  },
  {
    "id": "1177",
    "type": "pullRequest",
    "title": "OCPBUGS-50950: ensure that storage names don't end in dashes",
    "body": "to ensure compatibility with all cloud region names, specifically the longer region names used in AWS GovCloud."
  },
  {
    "id": "1168",
    "type": "pullRequest",
    "title": "OCPBUGS-47503: Power VS: Revert 1076 to match new API validation",
    "body": "After the validation in the image registry operator for the Power VS platform does not match the API's expectations. This PR reverts 1076 which intended to work around the API's initial validation issues."
  },
  {
    "id": "1164",
    "type": "pullRequest",
    "title": "MULTIARCH-4971: Set import mode in image config based on ClusterVersion desired Architecture",
    "body": "introduces the architecture property in the desired status field which indicates the architecture of the cluster (or the architecture being reconciled to). Set import mode based on this status - if \"Multi\", set importmode to PreserveOriginal, else to Legacy."
  },
  {
    "id": "1159",
    "type": "pullRequest",
    "title": "OCPBUGS-44491: add runbook url on prometheus alert rules"
  },
  {
    "id": "1142",
    "type": "pullRequest",
    "title": "OCPBUGS-41903: operator/status: clear azure path fix job conditions on operator removal",
    "body": "there is sometimes a race condition when setting .spec.managementState back and forth between Removed and Managed where the azure path fix controller will kick off the job, but the resources needed for the job to run will get removed (as expected) before the job can finish and its controller update the operator's progressing condition to reflect that. this has been happening often in the TestLeaderElection e2e test. this test does not wait for the image registry operator to become available before removing it, and this is what triggers the race. a customer has reported a similar issue, although their error was slightly different and proved harder to reproduce. this commit should fix both problems. clearing the status is most important when users upgrade from a version of the azure path fix controller that deploys the job. OCP versions that do not deploy the job should not have the problem, and including this code in them should be harmless. in OCP = 4.17 this job is no longer deployed, though the controller is kept it can probably be safely removed in OCP = 4.18. --- Testing We need upgrade tests as well as regression tests for this one. Testing operator removal (`.spec.managementState: Removed`) would also be great."
  },
  {
    "id": "1222",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Remove ARO HCP MIv2 Authentication for Ingress Operator",
    "body": "This PR: - removes the ARO HCP MIv2 authentication method. ARO HCP only uses UserAssignedIdentityCredentials to authentication with Azure - removes the filewatcher package as it is no longer needed; it was associated with ARO HCP managed identity version 2 authentication, which was removed from the ingress operator This PR needs merged first."
  },
  {
    "id": "1191",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Add new Azure authentication type for managed Azure HCP for cluster-ingress",
    "body": "This PR a new Azure authentication for managed Azure HCP called UserAssignedIdentityCredentials"
  },
  {
    "id": "1221",
    "type": "pullRequest",
    "title": "NE-2009: Relax pod bound validating admission rule for HyperShift",
    "body": "In HyperShift, the ingress operator runs on the management cluster and communicates with the hosted cluster via a generated Kubeconfig. This setup breaks the validating admission rule that enforces requests to originate from a pod within `openshift-ingress-operator-gatewayapi-crd-admission` VAP. This commit adds a dedicated VAP manifest for HyperShift clusters, which relaxes the rule mentioned above. Slack discussion: link( Failed HyperShift conformance test: link( Ingress operator logs: logs( Error from the logs: ``` ValidatingAdmissionPolicy 'openshift-ingress-operator-gatewayapi-crd-admission' with binding 'openshift-ingress-operator-gatewayapi-crd-admission' denied request: this user must have both \\\"authentication.kubernetes.io/node-name\\\" and \\\"authentication.kubernetes.io/pod-name\\\" claims, failed to create CRD httproutes.gateway.networking.k8s.io: customresourcedefinitions.apiextensions.k8s.io \\\"httproutes.gateway.networking.k8s.io\\\" is forbidden: ValidatingAdmissionPolicy 'openshift-ingress-operator-gatewayapi-crd-admission' with binding 'openshift-ingress-operator-gatewayapi-crd-admission' denied request: this user must have both \\\"authentication.kubernetes.io/node-name\\\" and \\\"authentication.kubernetes.io/pod-name\\\" claims, ```"
  },
  {
    "id": "1205",
    "type": "pullRequest",
    "title": "NE-1969: Set Degraded=True if unmanaged Gateway API CRDs exist",
    "body": "Set the ingress cluster operator\u2019s `Degraded` status to `true` if unmanaged Gateway API CRDs exist on the cluster. An unmanaged Gateway API CRD is one with \"gateway.networking.k8s.io\" or \"gateway.networking.x-k8s.io\" in its `spec.group` field, and not managed by the gatewayapi controller. This PR uses the cluster operator\u2019s `status.extension` field to store the names of unmanaged CRDs. The gatewayapi controller writes to this field, while the status controller reads it and updates the ingress cluster operator\u2019s `Degraded` status accordingly."
  },
  {
    "id": "1213",
    "type": "pullRequest",
    "title": "NE-1957: Add Gateway API DNS Feature e2e tests",
    "body": "This PR adds basic e2e tests for the Gateway API DNS feature. The tests create gateways in different configurations and check for expected DNSRecords to be present or not existing, depending on the test case. The test cases covered are: - Multiple gateways with listeners of the same hostname. - Multiple gateways with listeners with overlapping hostnames. - Creating a gateway with multiple listeners and then updating and deleting the listeners to ensure the DNSRecords are reconciled accordingly. - Gateway with a listener with no hostname."
  },
  {
    "id": "1214",
    "type": "pullRequest",
    "title": "OCPBUGS-54650, OCPBUGS-54651, OCPBUGS-54652: desiredSubscription: Specify annotations and SCC",
    "body": "Specify the \"openshift.io/required-scc\" and \"target.workload.openshift.io/management\" annotations and as well as resource requests (but not resource limits) for the subscription in order to comply with OpenShift platform conventions, which require specifying a required SCC and prohibit specifying resource limits for platform components. Specifying annotations requires bumping the vendored operator-framework API: go get github.com/operator-framework/api go mod tidy go mod vendor Also, specify the \"target.workload.openshift.io/management\" annotation for Istiod. These changes fix OCPBUGS-54650, OCPBUGS-54651, and OCPBUGS-54652."
  },
  {
    "id": "1216",
    "type": "pullRequest",
    "title": "NE-2009: Move VAP to Default featureset",
    "body": "The `openshift-ingress-operator-gatewayapi-crd-admission` Validating Admission Policy is bound to `GatewayAPI` featuregate, which has been promoted to GA ( This PR removes the `feature-set` annotation from manifests related to VAP, this effectively makes them part of the `Default` featureset."
  },
  {
    "id": "1211",
    "type": "pullRequest",
    "title": "OCPBUGS-54568: desiredIstio: Specify priorityClassName",
    "body": "Specify the \"system-cluster-critical\" priority class for the Istio control-plane."
  },
  {
    "id": "1203",
    "type": "pullRequest",
    "title": "OCPBUGS-53424: Wait for install plans to enter the \"Requires Approval\" phase before approving them"
  },
  {
    "id": "1208",
    "type": "pullRequest",
    "title": "NE-2008: Add GRPC conformance tests",
    "body": "Add GRPCRoute to the SupportedFeatures list. Increase max time to consistency to 180s for these tests. Increase total run time of test to 20m max. Co-authored-by: Hongan Li lihongan"
  },
  {
    "id": "933",
    "type": "pullRequest",
    "title": "NE-1277: status: Add Gateway API objects to relatedObjects",
    "body": "`pkg/operator/controller/names.go` (`GlobalOperatorsNamespace`): New const for the \"openshift-operators\" namespace. (`ServiceMeshSubscriptionName`): Use `GlobalOperatorsNamespace`. `pkg/operator/controller/status/controller.go` (`New`): Add a watch for subscriptions so that the status controller updates `relatedObjects` when the OSSM subscription is added or removed. (`Config`): Add `GatewayAPIEnabled` field. (`Reconcile`): If `GatewayAPIEnabled` is true, add resources related to Gateway API to `relatedObjects`. If `haveOSSMSubscription` is true, add resources that require the subscription. (`operatorState`): Add `haveOSSMSubscription` field. (`getOperatorState`): Set `haveOSSMSubscription`. `pkg/operator/operator.go` (`New`): Watch the \"openshift-operators\" namespace, and specify `GatewayAPIEnabled` in the status controller's config."
  },
  {
    "id": "1204",
    "type": "pullRequest",
    "title": "NE-1994: Add E2E test for Istio manual deployment",
    "body": "Add a new test to verify that Istio is configured not to allow manual deployment."
  },
  {
    "id": "1202",
    "type": "pullRequest",
    "title": "NE-1969: Add \"v1\" version to OpenShift GatewayClass controller name",
    "body": "Add the \"v1\" suffix to the GatewayClass controllerName to allow for alternative OpenShift Gateway API implementations in the future."
  },
  {
    "id": "1152",
    "type": "pullRequest",
    "title": "NE-1934: Bump to OSSM 3.0 for Gateway API support",
    "body": "With OSSM 3, the Maistra Istio Operator is replaced with new operator based on the upstream Sail Operator( and the ServiceMeshControlPlane CRD is replaced by the Istio CRD. Vendor the sail-operator API: go mod edit -replace github.com/imdario/mergo=github.com/imdario/mergo@v0.3.5 go get github.com/istio-ecosystem/sail-operator/api/v1 go mod tidy go mod vendor Note that vendoring sail-operator requires the mergo override. OSSM 3.0 is based on Istio 1.24, which supports Gateway API v1.2.1. Copy in the updated Gateway API CRDs: curl --silent --output-dir pkg/manifests/assets/gateway-api/ --remote-name ' Update the conformance tests to reflect the features that Istio 1.24 supports. Update the gatewayclass controller to create a subscription for the OSSM 3 Operator (which is in a separate channel from the OSSM 2 operator) and to create an Istio CR instead of a ServiceMeshControlPlane CR. Currently, OSSM 3.0 is Tech Preview( so the subscription is actually for the latest Sail Operator nightly build. Update client initialization, RBAC, and tests that used the Maistra APIs from OSSM 2 to use the sail-operator API for OSSM 3."
  },
  {
    "id": "1197",
    "type": "pullRequest",
    "title": "CORS-3907: Update ingress operator to with custom endpoints",
    "body": "Enhancement link for the feature: Vendor update Set the endpoint information in the Config for GCP If an endpoint exists for the DNS service use the endpoint as an option when creating the new client."
  },
  {
    "id": "1200",
    "type": "pullRequest",
    "title": "NE-1953: Add experimental Gateway API group to Validating Admission Policy",
    "body": "This PR adds `gateway.networking.x-k8s.io` to the match condition of the operator's Validating Admission Policy. This change ensures that modifications to experimental Gateway API CRDs can be made only by the ingress operator."
  },
  {
    "id": "1112",
    "type": "pullRequest",
    "title": "NE-1907: Manage OSSM operator subscription manually to ensure a compatible version is installed",
    "body": "Istio and the Gateway API CRDs need to be in sync to work. The CRDs are baked into a particular openshift release, so this change updates the ingress operator to install a compatible version with the CRDs it already installs."
  },
  {
    "id": "1199",
    "type": "pullRequest",
    "title": "NE-1981: Move controller test helpers to dedicated package",
    "body": "This PR: - extracts test helpers that were used across multiple controllers into a dedicated package: `pkg/operator/controller/test/util`. This includes `FakeCache`, `FakeController`, and `FakeClientRecorder`. - allows `test` target to run specific unit tests using `-run` flag."
  },
  {
    "id": "1192",
    "type": "pullRequest",
    "title": "NE-1953: Add Validating Admission Policy for Gateway API CRDs",
    "body": "This PR introduces a validating admission policy that restricts modifications to CRDs from the \"gateway.networking.k8s.io\" group, allowing only the cluster ingress operator's service account to make changes. This ensures that the core OpenShift retains exclusive ownership of the Gateway API implementation, preventing modifications from any add-ons (whether third-party or Red Hat-owned). The policy and its corresponding binding will be managed by CVO."
  },
  {
    "id": "1198",
    "type": "pullRequest",
    "title": "NE-1954: Implement GatewayAPIController feature gate",
    "body": "This PR bumps `openshift/api` to get GatewayAPIController feature gate( and implements it by skipping the start of the gatewayclass and service-dns controllers when it's disabled."
  },
  {
    "id": "1184",
    "type": "pullRequest",
    "title": "NE-1936: Bump k8s.io dependencies to v0.32.1",
    "body": "- Upgraded k8s.io/api, k8s.io/apiextensions-apiserver, and k8s.io/client-go to v0.32.1. - Updated sigs.k8s.io/controller-runtime to v0.20.1 (compatible with k8s v0.32). - Go version was implicitly bumped to 1.23.0 as part of the dependency updates. Commands used for the upgrade: ``` go get k8s.io/api@v0.32.1 go get k8s.io/apiextensions-apiserver@v0.32.1 go mod edit -replace k8s.io/client-go=k8s.io/client-go@v0.32.1 go get sigs.k8s.io/controller-runtime@v0.20.1 go mod tidy go mod vendor ```"
  },
  {
    "id": "1115",
    "type": "pullRequest",
    "title": "OCPBUGS-31550: Gateway API - recreating SMCP which breaks Gateway API",
    "body": "Recreating the SMCP and subscription, in case the SMCP or subscriptions are deleted manually."
  },
  {
    "id": "1133",
    "type": "pullRequest",
    "title": "OCPBUGS-32776: Fix IBM Public Cloud DNS Provider Update Logic",
    "body": "The IBM Public Cloud DNS provider (`cis_provider.go`) had a bug in `createOrUpdateDNSRecord` where it checked for the existence of a DNS record by filtering both DNS name and target. If the target was updated (e.g., due to a load balancer recreation), the logic would not match the existing DNS record. As a result, the function would attempt to create a new record, but fail because a record with that name already existed, as multiple DNS records with the same name are not allowed in IBM Cloud DNS providers. The fix is to remove the filtering by target and rely solely on filtering by name, as the name is the only attribute that needs to be unique. This fix also includes a subtle fix in `createOrUpdateDNSRecord` of cis_provider.go to fall through to the create logic in the case of a not-found (404) error. Additionally, the IBM DNS logic doesn't work for multiple targets and this creates unexpected and problematic results. The logic has been refactored to only create using the first target and it warns the user when multiple targets are set. This change is low risk since the Ingress Operator will never create a DNSRecord with multiple targets in `desiredDNSRecord`. Additionally, modify TestScopeChange to check for `Available=True` after deleting the service to add test coverage for this issue. This PR also includes some unit test fix up and missing unit test coverage for the IBM CIS Provider. This resolves the same DNS issues for public PowerVS cloud as it uses the same logic."
  },
  {
    "id": "1164",
    "type": "pullRequest",
    "title": "OCPBUGS-48780: Fix IBMCloud DNS Propagation Issues in E2E",
    "body": "Fix IBMCloud DNS resolution issues in our E2E tests with two fixes: Fix 1: Extend the timeout to 10 minutes. This fix defines the timeout as a documented constant, ensuring that all DNS resolution logic is updated to reference it. Testing( showed that new IBMCloud DNS records were resolving within 7 minutes for external (e.g., test runner cluster) queries. Setting the timeout to 10 minutes provides a reasonable buffer to accommodate DNS propagation across all platforms. Fix 2: During testing, we found that IBMCloud's DNS resolution works well from outside the cluster (e.g., the test runner cluster). However, internal DNS queries within the test cluster trigger to an unchangeable ~30-minute negative caching TTL. This fix introduces an internal warmup period for IBMCloud clusters to mitigate the negative caching issue. Only one test, TestUnmanagedDNSToManagedDNSInternalIngressController, requires this workaround."
  },
  {
    "id": "1186",
    "type": "pullRequest",
    "title": "OCPBUGS-43745: Skip Test_IdleConnectionTerminationPolicyDeferred when DCM feature gate is enabled",
    "body": "The DCM enabled router returns 503 error after a service change on a route when idle-close-on-response option is enabled and the client reuses connections. Ref: This makes `Test_IdleConnectionTerminationPolicy/Deferred` test perma failing( This PR skips the test until the mentioned bug is fixed."
  },
  {
    "id": "1176",
    "type": "pullRequest",
    "title": "NE-1260: Add Makefile target to run Gateway API conformance tests",
    "body": "This PR adds new Makefile target and enables the upstream gateway-api conformance test. Once this get merged, the follow up will add optional pre-submits job to run conformance test."
  },
  {
    "id": "1182",
    "type": "pullRequest",
    "title": "OCPBUGS-43745: Add support for IdleCloseTerminationPolicy (Go http.Client)",
    "body": "Introduce logic in desiredRouterDeployment to set the environmentvariable `ROUTER_IDLE_CLOSE_ON_RESPONSE` when the `IdleConnectionTerminationPolicy` field in the IngressController spec is set to `Deferred`. This change enables configuring HAProxy with the `idle-close-on-response` option for better control over idle connection termination behaviour. Add an e2e test `Test_IdleConnectionTerminationPolicy` to verify the behaviour. Requires: - openshift/api2102 - openshift/router639"
  },
  {
    "id": "1173",
    "type": "pullRequest",
    "title": "OCPBUGS-45585: Updating ose-cluster-ingress-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-ingress-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-ingress-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1165",
    "type": "pullRequest",
    "title": "OCPBUGS-41892: Single Watch on GWAPI CRD",
    "body": "A single CRD watch was added with a predicate to filter CRDs based on the gatewayapiv1.GroupName. This ensures that only relevant CRDs are watched, reducing unnecessary logging when the Gateway API feature is not enabled."
  },
  {
    "id": "1174",
    "type": "pullRequest",
    "title": "NE-1790: Follow up to enable Dynamic Configuration Manager feature gate",
    "body": "- Ingress controller: passed reconciler config to `desiredRouterDeployment`. - TestDesiredRouterDeploymentDynamicConfigManager: added test case for invalid max servers. Follow-up to - - - - -"
  },
  {
    "id": "1111",
    "type": "pullRequest",
    "title": "SPLAT-1722: Remove alibaba",
    "body": "This PR removes support for the Alibaba cloud which is being removed from the product. Additional PRs - - - - - -"
  },
  {
    "id": "1835",
    "type": "pullRequest",
    "title": "OCPBUGS-45911: revert dev cert rotation"
  },
  {
    "id": "1830",
    "type": "pullRequest",
    "title": "Revert \"OCPBUGS-43777: certrotationcontroller: run tests which runs deployment and creates projects\"",
    "body": "Reverts openshift/cluster-kube-apiserver-operator1759"
  },
  {
    "id": "1759",
    "type": "pullRequest",
    "title": "OCPBUGS-43777: certrotationcontroller: run tests which runs deployment and creates projects",
    "body": "Tests we run after cert rotation should ensure that pod gets created from deployment, scheduled on the node and openshift-apiserver can create projects to validate that all component certificates have been regenerated. The test names are included in certificates.openshift.io/auto-regenerate-after-offline-expiry annotation"
  },
  {
    "id": "1823",
    "type": "pullRequest",
    "title": "CNTRLPLANE-347: Issue short lived certificates if ShortCertRotation featuregate is enabled",
    "body": "Implements"
  },
  {
    "id": "1829",
    "type": "pullRequest",
    "title": "MON-4161: add `cluster:controlplane_topology:info` recording rule",
    "body": "This very simple recording rule is used as a telemetry signal. This is best done via a recording rule so that non-relevant labels can be aggregated and thus reduce the cardinality in our telemetry storage. /cc @vrutkovs"
  },
  {
    "id": "1827",
    "type": "pullRequest",
    "title": "MON-4160: operator: add topology metrics",
    "body": "This commit adds two new metrics providing the two topology modes, control plane and infrastructure respectively."
  },
  {
    "id": "1824",
    "type": "pullRequest",
    "title": "OCPBUGS-35102: Bump library-go",
    "body": "Pull in the following changes:"
  },
  {
    "id": "1820",
    "type": "pullRequest",
    "title": "NO-JIRA: readme: describe mapping between operatorLogLevel and log level",
    "body": "related to"
  },
  {
    "id": "1760",
    "type": "pullRequest",
    "title": "AUTH-541: OIDC structured auth config",
    "body": "This PR does the following: - adds unit tests for the `AuthMetadata` config observer - adds a new config observer for direct OIDC; the config observer: - detects auth type `OIDC` and the structured auth config CM in `openshift-config-managed` (created by the CAO in cluster-authentication-operator713( - copies it to `openshift-kube-apiserver` where it will be used as a revisioned configmap and synced to a static file on all KAS nodes - enables OIDC config via the `--authentication-config` CLI flag of the KAS pods - modifies the `AuthMetadata` and `WebhookTokenAuthenticator` config observers to delete their respective resources when auth type `OIDC` is detected Enhancement:"
  },
  {
    "id": "1754",
    "type": "pullRequest",
    "title": "OCPNODE-2940: add support for minimumKubeletVersion"
  },
  {
    "id": "1815",
    "type": "pullRequest",
    "title": "MON-4129: slos: accomodate for Prometheus v3 \"le\" normalization",
    "body": "ensure all series involved in the different queries change during the integer-float transition so that rate calculation remains consistent across all series. If apiserver_request_sli_duration_seconds_bucket{le=\"1\"} had a last value of 15 and then apiserver_request_sli_duration_seconds_bucket{le=~\"1.0\"} reappeared with 20, the rate calculated over a range where both {le=\"1\"} and {le=\"1.0\"} overlap will not account for the 20\u221215=5 difference, as the two series are distinct. But apiserver_request_sli_duration_seconds_count's rate will still take that 5 jump into account as the series doesn't change. Replace apiserver_request_sli_duration_seconds_count with apiserver_request_sli_duration_seconds_bucket{le=~\"60(.0)?\"} since they should be equal given that the timeout is 60s and cannot be customized. This change is temporary to avoid silencing alerts or having to reset/forget historical integer buckets during the transition. Later, we'll revert back to using apiserver_request_sli_duration_seconds_count."
  },
  {
    "id": "1784",
    "type": "pullRequest",
    "title": "MON-4129: adjust Prometheus classic histograms 'le' related selectors in rules defs and relabel config to accommodate the update to Prometheus v3"
  },
  {
    "id": "1817",
    "type": "pullRequest",
    "title": "MON-4129: revert",
    "body": "this also fixes a bad `le=\"30(.0)?\"` as a result of The chosen approach is to move to float buckets one Prometheus v3 is merged forgetting about the integer historical data. That will be done in"
  },
  {
    "id": "1814",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump TraceAll log level to v=10",
    "body": "- The kube-scheduler-operator has already set the TraceAll to 10, as seen in - The kube-controller-manager-operator also set the TraceAll to 10 If we use TraceALL, we want to trace all the logs really, and some important k8s logs are v(10)"
  },
  {
    "id": "1792",
    "type": "pullRequest",
    "title": "OCPBUGS-48673: targetconfigcontroller: check live etcd endpoints",
    "body": "Compare the etcd-servers list of URLs to the list of endpoints exposed by cluster-etcd-operator to make sure that the kube-apiserver config has at least two endpoints that are not localhost and bootstrap to satisfy HA requirements."
  },
  {
    "id": "1763",
    "type": "pullRequest",
    "title": "API-1689: TLS registry: add description",
    "body": "This adds description to certificates managed by cluster-kube-apiserver-operator. These are taken from"
  },
  {
    "id": "1804",
    "type": "pullRequest",
    "title": "OCPBUGS-49980: change one sum:apiserver_request:burnrate5m to sum:apiserver_request:burnrate6h",
    "body": "see there are 2 `sum:apiserver_request:burnrate5m` recording rule for 4.19, change the rate6h one to correct recording name `sum:apiserver_request:burnrate6h`"
  },
  {
    "id": "1742",
    "type": "pullRequest",
    "title": "OCPBUGS-49763: Disregard health endpoints in the burn rate alerts",
    "body": "While investigating we noticed that some of the disruption was caused by 500 errors on health endpoints that were due to timeout, but the timeout for these endpoints is lower than it is for the other kube-apiserver endpoints. Since we can already monitor these endpoints from the probes, I'd be better to remove them from the SLO alert to reduce its scope."
  },
  {
    "id": "1789",
    "type": "pullRequest",
    "title": "OCPBUGS-50478: Increase waitForFallbackDegradedConditionTimeout",
    "body": "PR fixed: 1. It takes longer to wait for the condition \u2035StaticPodFallbackRevisionDegraded` to be true , about 15mins, The case execution time takes about 20mins, ``` $ go test -v -timeout 25m ./test/e2e-sno-disruptive; oc get co/kube-apiserver === RUN TestFallback ... Jan 24 15:20:50.867: Starting the fallback test Jan 24 15:20:51.653: Setting UnsupportedConfigOverrides to map Jan 24 15:20:52.808: Waiting 2m0s for the cluster to be in a good condition, interval = 20s, timeout 10m0s Jan 24 15:22:53.409: The cluster has been in good condition for 2m0s Jan 24 15:22:53.716: Setting UnsupportedConfigOverrides to mapapiServerArguments:mapnon-existing-flag:true Jan 24 15:22:55.866: Waiting for StaticPodFallbackRevisionDegraded condition, interval = 20s, timeout = 18m0s Jan 24 15:22:56.343: StaticPodFallbackRevisionDegraded condition hasn't been set yet ... Jan 24 15:36:56.434: Checking if a NodeStatus has been updated to report the fallback condition Jan 24 15:36:56.701: The fallback has been reported on node kewang-2418sn1-rmbfx-master-0, failed revision is 23 Jan 24 15:36:56.701: Verifying if a kube-apiserver pod has been annotated with revision: 23 on node: kewang-2418sn1-rmbfx-master-0 Jan 24 15:36:57.210: Setting UnsupportedConfigOverrides to map Jan 24 15:36:58.266: Waiting 2m0s for the cluster to be in a good condition, interval = 20s, timeout 10m0s ... --- PASS: TestFallback (1128.05s) ``` 2. After the case ran passed, checked the cluster operators, found KAS operator still was not in stable, after a few mins, it was in good state, so add to check extra conditions `StaticPodsAvailable`, `NodeInstallerProgressing` and `NodeControllerDegraded` to make sure the final KAS operator status. ``` $ oc get co/kube-apiserver NAME VERSION AVAILABLE PROGRESSING DEGRADED SINCE MESSAGE kube-apiserver 4.18.0-0.nightly-2025-01-23-202230 True True True 3h42m StaticPodFallbackRevisionDegraded: a static pod kube-apiserver-kewang-2418sn1-rmbfx-master-0 was rolled back to revision 15 due to waiting for kube-apiserver static pod to listen on port 6443: Get \" dial tcp :1:6443: connect: connection refused ```"
  },
  {
    "id": "1744",
    "type": "pullRequest",
    "title": "OCPBUGS-49764: bindata/alerts/slo: improve burnrate calculation",
    "body": "The problem that I recently noticed with the existing expression is that when we compute the overall burnrate from write and read requests, we take the ratio of successful read requests and we sum it to the one of write requests. But both of these ratios are calculated against their relevant request type, not the total number of requests. This is only correct when the proportion of write and read requests is equal. For example, let's imagine a scenario where 40% of requests are write requests and their success during a disruption is only 50%. Whilst for read requests we have 90% of success. apiserver_request:burnrate1h{verb=\"write\"} would be equal to `2/4` and apiserver_request:burnrate1h{verb=\"read\"} would be `1/6`. The sum of these as these by the alert today would be equal to `2/4+1/6=2/3` when in reality, the ratio of successful requests should be `2/101/10=3/10`. So there is quite a huge difference today when we don't account for the total number of requests."
  },
  {
    "id": "1795",
    "type": "pullRequest",
    "title": "OCPBUGS-48686: bump(library-go)",
    "body": "Bump library-go to include"
  },
  {
    "id": "1794",
    "type": "pullRequest",
    "title": "NO-JIRA: alerts: update APIRemovedInNextEUSReleaseInUse for 1.32",
    "body": "The e2e test for the alert is currently failing because Kubernetes was updated to 1.32, but the alert wasn't updated:"
  },
  {
    "id": "1791",
    "type": "pullRequest",
    "title": "CNTRLPLANE-20: Update to Kubernetes 1.32.1",
    "body": "/assign @benluddy"
  },
  {
    "id": "1786",
    "type": "pullRequest",
    "title": "OCPBUGS-45654: Updating ose-cluster-kube-apiserver-operator-container image to be consistent with ART for 4.19"
  },
  {
    "id": "1787",
    "type": "pullRequest",
    "title": "OCPBUGS-48686: Bump library-go for static pod controller apply fixes."
  },
  {
    "id": "1779",
    "type": "pullRequest",
    "title": "NO-JIRA: bump library-go",
    "body": "to pull and"
  },
  {
    "id": "1776",
    "type": "pullRequest",
    "title": "OCPBUGS-45943: skip generating certs when networkConfig.status.ServiceNetwork is nil",
    "body": "Skip when the network config status.serviceNetwork is nil related issue:"
  },
  {
    "id": "1777",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Add resource.k8s.io/v1beta1 API for Kubernetes 1.32"
  },
  {
    "id": "1771",
    "type": "pullRequest",
    "title": "NO-JIRA: Revert Disable ResilientWatchCacheInitialization",
    "body": "reverts xref:"
  },
  {
    "id": "1769",
    "type": "pullRequest",
    "title": "OCPBUGS-44693: Disable ResilientWatchCacheInitialization",
    "body": "requires:"
  },
  {
    "id": "56",
    "type": "pullRequest",
    "title": "OCPBUGS-45390: Updating ose-cluster-kube-cluster-api-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-kube-cluster-api-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-kube-cluster-api-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "55",
    "type": "pullRequest",
    "title": "ACM-14968: Modified readme for cert-manager changes.",
    "body": "Updated install documentation for Modified readme - added directions to install the cert-manager Operator from Red Hat instead of using the cert-manager directions included in the document."
  },
  {
    "id": "838",
    "type": "pullRequest",
    "title": "OCPBUGS-54945: Bump library-go"
  },
  {
    "id": "834",
    "type": "pullRequest",
    "title": "STOR-2267: Run SELinux warning controller",
    "body": "selinux-warning-controller is an optional controller in KCM that emits metrics + events about SELinux usage of persistent volumes in the cluster. Since most Kubernetes distros don't care about SELinux, this controller needs explicit opt-in on KCM cmdline. OCP needs the controller: - to explain to users why their pods may not be running. - to collect metrics about such promebatic pods, to emit alerts and telemetry. The controller is disabled by default in Kubernetes 1.32 (under SELinuxChangePolicy feature gate), which is available under `DevPreviewNoUpgrade` since yesterday( It might reach TechPreviewNoUpgrade in 4.19 if everything goes smooth. Upstream enhancement: ~WIP: manual testing~ Tested manually with DevPreviewNoUpgrade cluster."
  },
  {
    "id": "835",
    "type": "pullRequest",
    "title": "NO-JIRA: readme: describe mapping between operatorLogLevel and log level",
    "body": "related to"
  },
  {
    "id": "833",
    "type": "pullRequest",
    "title": "NO-JIRA: readme: describe mapping between logLevel and log level",
    "body": "related to"
  },
  {
    "id": "828",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump TraceAll log level to v=10",
    "body": "- and the kube-scheduler-operator has already set the TraceAll to 10, as seen in - and the microshift has also bump this TraceAll loglevel to 10 If we use TraceALL, we want to trace all the logs really, and some important k8s logs are v(10)"
  },
  {
    "id": "831",
    "type": "pullRequest",
    "title": "OCPBUGS-48701: Bump to latest library-go",
    "body": "This is motivated by the installer controller fix in library-go. cc @benluddy"
  },
  {
    "id": "830",
    "type": "pullRequest",
    "title": "CNTRLPLANE-21: Update to Kubernetes 1.32.1",
    "body": "/assign @atiratree"
  },
  {
    "id": "829",
    "type": "pullRequest",
    "title": "OCPBUGS-48701: Bump library-go for static pod controller apply fixes."
  },
  {
    "id": "826",
    "type": "pullRequest",
    "title": "OCPBUGS-45825: Updating ose-cluster-kube-controller-manager-operator-container image to be consistent with ART for 4.19 ++"
  },
  {
    "id": "560",
    "type": "pullRequest",
    "title": "OCPBUGS-54945: Bump library-go"
  },
  {
    "id": "558",
    "type": "pullRequest",
    "title": "OCPBUGS-48700: Bump to latest library-go",
    "body": "This is motivated by the installer controller fix in library-go. cc @benluddy"
  },
  {
    "id": "557",
    "type": "pullRequest",
    "title": "CNTRLPLANE-22: Update to Kubernetes 1.32.1",
    "body": "/assign @ingvagabund"
  },
  {
    "id": "556",
    "type": "pullRequest",
    "title": "OCPBUGS-48700: Bump library-go for static pod controller apply fixes."
  },
  {
    "id": "554",
    "type": "pullRequest",
    "title": "OCPBUGS-45724: Updating ose-cluster-kube-scheduler-operator-container image to be consistent with ART for 4.19",
    "body": "Reconciling with Rebasing"
  },
  {
    "id": "122",
    "type": "pullRequest",
    "title": "OCPBUGS-45640: Updating ose-cluster-kube-storage-version-migrator-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-kube-storage-version-migrator-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-kube-storage-version-migrator-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "120",
    "type": "pullRequest",
    "title": "API-1835: bump library-go",
    "body": "to pull all changes that have been made."
  },
  {
    "id": "118",
    "type": "pullRequest",
    "title": "OCPBUGS-20062: \"gracefully\" shutdown KSVM pod.",
    "body": "Add a sidecar container that, in combination with an appropriate `terminationGracePeriodSeconds` setting on the pod, keeps a terminating pod around until its replacement pod is ready."
  },
  {
    "id": "268",
    "type": "pullRequest",
    "title": "OCPCLOUD-2832: Bump k8s 1.32",
    "body": "Hello! This is a PR to bump the dependencies to 1.32. Thanks"
  },
  {
    "id": "264",
    "type": "pullRequest",
    "title": "OCPBUGS-48056: Fix race condition in CO status controller test",
    "body": "The status controller creates a ClusterOperator when one does not exist. In the test case verifying behavior with an already present ClusterOperator, it is requried to wait until the ClusterOperator created by the test is ready. Failing to do so can result in the controller attempting to create a duplicate ClusterOperator, causing the test to fail with an \"already exists\" error. This PR adds waitgroup to ensure we start the controller after existingCO is created."
  },
  {
    "id": "262",
    "type": "pullRequest",
    "title": "OCPCLOUD-2787: Deploy CAPI manifests in CustomNoUpgrade",
    "body": "We need these manfiests deployed in CustomNoUpgrade as we begin work & testing on the MAPI2CAPI Migration controllers. This will enable e2es to run."
  },
  {
    "id": "243",
    "type": "pullRequest",
    "title": "OCPBUGS-36404: Filter CSRs by signerName",
    "body": "Updates to CSR filtering to utilize signerName field using the well known certificatesv1.KubeAPIServerClientKubeletSignerName and certificatesv1.KubeletServingSignerName. Also updates the CSR query to use node selectors with signerName to be more efficient on cluster with many irrelevant CSRs"
  },
  {
    "id": "247",
    "type": "pullRequest",
    "title": "OCPBUGS-45434: Updating ose-cluster-machine-approver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-machine-approver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-machine-approver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "253",
    "type": "pullRequest",
    "title": "OCPBUGS-45306: Ensure trailing dots on DNS names do not block serving cert auth",
    "body": "This is a follow up to which fixed the issue for client certificates. However, we also need to fix this for serving certificates so that we can access things like logs or oc debug on the node."
  },
  {
    "id": "248",
    "type": "pullRequest",
    "title": "OCPBUGS-45306: Client internal DNS checks should ignore trailing dot",
    "body": "Users may desire to configure their AWS DHCP Option Set with a custom domain name, that contains a trailing dot, but a trailing dot is not permitted in a Kubernetes object name per the DNS 1123 subdomain name standard, so met the bug OCPBUGS-45306( We fixed that in the pr to ensure that we trim any trailing dot prior to passing the hostname over to kubelet. But a new issue is the client certificates cannot be approved, because we currently look for an exact match (only ignore case) between the node name and the DNS name, and in this case the node name without the trailing dot, but the DNS name with the trailing dot. So update it to ignore the trailing dot when matching."
  },
  {
    "id": "2597",
    "type": "pullRequest",
    "title": "OCPBUGS-55737: release-4.19 MON-4200: disable --auto-gomemlimit for Prometheus on SNO until we can ensure it won't result in excessive CPU usage",
    "body": "This is an automated cherry-pick of 2549 /assign openshift-ci-robot"
  },
  {
    "id": "2594",
    "type": "pullRequest",
    "title": "NO-JIRA: Synchronize versions of the downstream components",
    "body": "Description This pull request updates `jsonnet/versions.yaml` to match with the already in use downstream versions of the monitoring components. Based on that file, it regenerates the assets to update some metadata (mainly the `app.kubernetes.io/version` annotation) attached to some of the resources and update other placeholders. It is safe to merge this change (provided that the CI jobs pass). If you wish to perform this manually, execute the following commands from cluster-monitoring-operator repository: ``` make versions make generate ```"
  },
  {
    "id": "2593",
    "type": "pullRequest",
    "title": "MON-4207: Bump prometheus-operator to v0.81.0",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2589",
    "type": "pullRequest",
    "title": "NO-JIRA: bot Synchronize versions of the downstream components",
    "body": "Description This pull request updates `jsonnet/versions.yaml` to match with the already in use downstream versions of the monitoring components. Based on that file, it regenerates the assets to update some metadata (mainly the `app.kubernetes.io/version` annotation) attached to some of the resources and update other placeholders. It is safe to merge this change (provided that the CI jobs pass). If you wish to perform this manually, execute the following commands from cluster-monitoring-operator repository: ``` make versions make generate ```"
  },
  {
    "id": "2588",
    "type": "pullRequest",
    "title": "MON-4161: add topology telemetry signals",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2590",
    "type": "pullRequest",
    "title": "MON-4126: set fallbackScrapeProtocol: 'PrometheusText1.0.0' as default for all UWM Prometheus targets for backward compatibility with Prometheus v2 until a better migration process is available",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2586",
    "type": "pullRequest",
    "title": "MON-4150: chore: update prometheus-operator go dep",
    "body": "A follow-up one will be setting global fallbackScrapeProtocol for UWM Prometheus supersedes --- !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2584",
    "type": "pullRequest",
    "title": "OCPBUGS-54516: provide context-rich and case-sensitive config validation",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2587",
    "type": "pullRequest",
    "title": "MON-4149: chore: update library-go",
    "body": "some code adjustments were needed also chore: update golangci-lint !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2583",
    "type": "pullRequest",
    "title": "OCPBUGS-54223: Fix opentelemetry processor/receiver/exporter/extensions labels",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2582",
    "type": "pullRequest",
    "title": "MON-4188: Add docs for proxy_url alertmanager",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2577",
    "type": "pullRequest",
    "title": "NO-JIRA: bot Synchronize versions of the downstream components",
    "body": "Description This pull request updates `jsonnet/versions.yaml` to match with the already in use downstream versions of the monitoring components. Based on that file, it regenerates the assets to update some metadata (mainly the `app.kubernetes.io/version` annotation) attached to some of the resources and update other placeholders. It is safe to merge this change (provided that the CI jobs pass). If you wish to perform this manually, execute the following commands from cluster-monitoring-operator repository: ``` make versions make generate ```"
  },
  {
    "id": "2558",
    "type": "pullRequest",
    "title": "MON-4189:Updating node-exporter accelerators configmap",
    "body": "Adding new accelerator for monitoring to the configmap !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2580",
    "type": "pullRequest",
    "title": "MON-4043: Configuring external Alertmangers with proxy_url",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2554",
    "type": "pullRequest",
    "title": "MON-4136: set up the PrometheusPossibleNarrowSelectors alert",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2545",
    "type": "pullRequest",
    "title": "MON-3960: test: enable back TestTLSSecurityProfileConfiguration and m...",
    "body": "...ake it only check the default TLSProfiles as changing the profiles is disruptive (nodes rollout), other profiles/cases are now checked in new unit tests !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2574",
    "type": "pullRequest",
    "title": "NO-JIRA: chore: versions: kubeRbacProxy's primary branch isn't main yet",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2575",
    "type": "pullRequest",
    "title": "OU-515: remove old nginx configmap deletion",
    "body": "This PR removes the delete task of the ConfigMap that was used to hold the nginx configuration for the old version of the monitoring plugin. In 4.19 this is not necessary anymore. I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2572",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump prometheus-operator to 0.80.1",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2567",
    "type": "pullRequest",
    "title": "MON-4147: test: remove unnecessary UWM configuration in TestUserWorkloadMonitoringXXX",
    "body": "since those scenarios are already tested in TestUserWorkloadMonitorPrometheusK8Config. Additionally, these configurations may require UWM Prometheus Pods to restart during tests (with statefulset recreation as claim template is updated), as applying these configurations is asynchronous. This could disrupt the tests, make them harder to debug, and slow them down. Also test(TestUserWorkloadMonitoringMetrics): increase timeout to 3m as some Pods may require more that 1m to become ready and get scraped by Prometheus for the first time !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2568",
    "type": "pullRequest",
    "title": "OCPBUGS-50837: Fix opentelemetry metrics to use regexp on label match",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2569",
    "type": "pullRequest",
    "title": "OCPBUGS-50703: Add incidents metric to telemetry",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2565",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump prometheus-operator to v0.80.0",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2536",
    "type": "pullRequest",
    "title": "MON-3866: create separate metrics client cert for metrics server",
    "body": "reviving requires - x test deleting the secret --- !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2563",
    "type": "pullRequest",
    "title": "NO-JIRA: tweak asciiDocs formatting to ease the mapping into the monitoring Docs",
    "body": "As requested in Also Hide the auto examples from asciiDocs as it's still WIP, to avoid confusion !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2560",
    "type": "pullRequest",
    "title": "OCPBUGS-48381: jsonnet: switch telemeter to main",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2559",
    "type": "pullRequest",
    "title": "OCPBUGS-48376: jsonnet: switch openshift-state-metrics to main branch",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2561",
    "type": "pullRequest",
    "title": "OCPBUGS-48370: chore: rename default branch in various places",
    "body": "Mainly for `make versions` /hold can be merged later !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2531",
    "type": "pullRequest",
    "title": "NO-JIRA: bot Synchronize versions of the downstream components",
    "body": "Description This pull request updates `jsonnet/versions.yaml` to match with the already in use downstream versions of the monitoring components. Based on that file, it regenerates the assets to update some metadata (mainly the `app.kubernetes.io/version` annotation) attached to some of the resources and update other placeholders. It is safe to merge this change (provided that the CI jobs pass). If you wish to perform this manually, execute the following commands from cluster-monitoring-operator repository: ``` make versions make generate ```"
  },
  {
    "id": "2551",
    "type": "pullRequest",
    "title": "OCPBUGS-48074: Fixing telemetry rule for accelerators",
    "body": "The list of the supported accelerators now includes ~50 devices, which makes it difficult to provide in the rule. this PR change the selection for vendors only, and adds the vendors currently supported by the node-exporter. The list of the reported models is specified in the: models are explicitly listed in !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2546",
    "type": "pullRequest",
    "title": "MON-4107: chore: add logs (at v=3 level) regarding the deactivation of components",
    "body": "This still requires CMO log level to be changed while debugging. !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2547",
    "type": "pullRequest",
    "title": "OCPBUGS-31356: chore(client): DeleteXXX short-circuit if the resource doesn't exist as a GET is less expensive than a no-op DELETE",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2544",
    "type": "pullRequest",
    "title": "MON-4118: chore: use alertmanager v2 in tests as v1 is not longer supported in Prometheus 3",
    "body": "chore: adjust AdditionalAlertmanagerConfig..APIVersion documentation as v1 is not longer suporter in Prom 3 chore: add a config validation check in case v1 in still using in one of the three AdditionalAlertmanagerConfig (Platform Prom, UWM Prom and Thanos ruler), this is temp and just meant to guide users during the first 4.X upgrade that ships Prom 3 MON-4118: chore: use alertmanager v2 in tests as v1 is not longer supported in Prometheus 3 --- This will be mentioned in the release notes and maybe we'll upgrade a \"known risk/ a warning\" for -4.19 upgrades. !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2543",
    "type": "pullRequest",
    "title": "MON-4116: fix TestPrometheusRemoteWrite to align the image used for the remote write receiver with k8s'",
    "body": "...e remote write receiver with k8s' instead of the operator's upstream default image This broke once prometheus-operator's default image is a prom 3 see prometheus 3 no longer understand the `remote-write-receiver` feature flag. also moved from the feature gate to the spec field as it'll be required for prom 3 !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2542",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump prometheus-operator to 0.79.2",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2540",
    "type": "pullRequest",
    "title": "MGMT-19498:Fixing the configmap data fields",
    "body": "Renaming the pciName field to modelName"
  },
  {
    "id": "2538",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump prometheus-operator to v0.79.1",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2530",
    "type": "pullRequest",
    "title": "MGMT-19498: Adding accelerators configuration file to the node-exporter",
    "body": "1) adding ConfigMap that contains the yaml structure describing monitored accelerators per vendor/model 2) mapping accelerators ConfigMap into the node-exporter pods 3) adding env variable that contains the exact path for the mapped ConfigMap !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2422",
    "type": "pullRequest",
    "title": "OCPBUGS-35095: unpin `kubernetes-mixin`",
    "body": "Unpin `kubernetes-mixin` to rely on the version pulled in from `kube-prometheus`, and update the dependencies as a result. Also, update the `version` manifest as well, as that changed during the tenure of this PR. !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2533",
    "type": "pullRequest",
    "title": "OCPBUGS-45389: update image to be consistent with ART for 4.19",
    "body": "chore(Makefile): update golangci-lint to v1.62.2 for better compatibility with go1.23 supersedes !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2524",
    "type": "pullRequest",
    "title": "OCPBUGS-35726: remove certificate hash annotation for monitoring-plugin",
    "body": "With the monitoring plugin binary reloads the certificate and key files from disk automatically. !-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2529",
    "type": "pullRequest",
    "title": "OCPBUGS-45179: Use explicit name label for logging telemetry metrics",
    "body": "Updates the metrics queries for the logging telemetry to explicitly use the `__name__` label. See also 2526 (backport to 4.18) and 2528 (backport of original change to 4.17 including this fix). I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2527",
    "type": "pullRequest",
    "title": "NO-JIRA: bot Synchronize versions of the downstream components",
    "body": "Description This pull request updates `jsonnet/versions.yaml` to match with the already in use downstream versions of the monitoring components. Based on that file, it regenerates the assets to update some metadata (mainly the `app.kubernetes.io/version` annotation) attached to some of the resources and update other placeholders. It is safe to merge this change (provided that the CI jobs pass). If you wish to perform this manually, execute the following commands from cluster-monitoring-operator repository: ``` make versions make generate ```"
  },
  {
    "id": "2522",
    "type": "pullRequest",
    "title": "OCPBUGS-44831: disable token automount for alertmanager-user-workload SA",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2492",
    "type": "pullRequest",
    "title": "NO-JIRA: use scrape class to avoid TLS config repetitions",
    "body": "!-- Don't forget about CHANGELOG if this affects the end user! Changelog entry format: - PR-id(PR-URL) Monitoring Component ... PR-id Id of your pull request. PR-URL URL of your PR Component Component affected by your changes such as deps bump, alerts changes and any user facing changes. Example: - 741( Bump thanos components to v0.11.0 release -- I added CHANGELOG entry for this change. x No user facing changes, so no entry in CHANGELOG was needed."
  },
  {
    "id": "2692",
    "type": "pullRequest",
    "title": "OCPBUGS-55285: bindata,ovn-k,cudn: Validate loclanet topology's excludeSubnet match specified subnets",
    "body": "Add CEL validation on OVN-K CUDN CRD for localnet to topology, to ensure the specified `excludeSubnetes` match the specified `subnets`. Note to reviewer: This change make the CRD diverge from the CRD on U/S due to a bug 1( that its fix is available on D/S 2( 3( but not available on U/S yet. Once the fix is available on U/S, the CRD definition in OVN-Kubentes repo should have the same CEL validation this PR adds, tracked by 4( 1 2 3 4"
  },
  {
    "id": "2573",
    "type": "pullRequest",
    "title": "OCPBUGS-40906: Implement IPsec NAT-Traversal encapsulation option",
    "body": "There is a requirement to encapsulate IPsec east west traffic in UDP via NAT-T so that those packets are compatible with intermediate NAT device(s) if present. This PR consumes new API to enable or disable encap option and applies to OVN to configure east west ipsec tunnel connections accordingly. API PRs:"
  },
  {
    "id": "2690",
    "type": "pullRequest",
    "title": "OCPBUGS-55090: Configures subdirectory based CNI chain loading",
    "body": "Using the `auxiliaryCNIChainName` feature which isolates executions to an independent CNI chain. See also this gist( with a demo about how to operate it."
  },
  {
    "id": "2674",
    "type": "pullRequest",
    "title": "OCPBUGS-54238: Update CSR status condition appropriately",
    "body": "When CSR signing reattempt happens, signer controller is not updating existing `CertificateFailed` condition type, instead it tries to add another `CertificateFailed` condition and leads to Duplicate value: \"Failed\" error in the network co status, ``` % oc get co network NAME VERSION AVAILABLE PROGRESSING DEGRADED SINCE MESSAGE network 4.19.0-0.ci.test-2025-03-26-015315-ci-ln-g8dqch2-latest True False True 4h Unable to update csr: CertificateSigningRequest.certificates.k8s.io \"ipsec-csr-test-80237\" is invalid: status.conditions1.type: Duplicate value: \"Failed\" ``` Fixing it just by updating existing `CertificateFailed` condition so that network status don't get updated unnecessarily for this case."
  },
  {
    "id": "2678",
    "type": "pullRequest",
    "title": "CORENET-5914: bindata,ovn-k: Update CUDN CRD following localnet support",
    "body": "The ClusterUserDefinedNetwork CRD has been extended and now support creating localnet topology networks."
  },
  {
    "id": "2668",
    "type": "pullRequest",
    "title": "SDN-5701: multus-networkpolicy Update CRD to the latest v1beta1",
    "body": "This version adds endPort support."
  },
  {
    "id": "2687",
    "type": "pullRequest",
    "title": "CNF-16707: frr-k8s: wire the frr-status sidecar container",
    "body": "Now that the changes are merged in the code, we can update the manifests to include the frr-status exporter in charge of creating the actual resources."
  },
  {
    "id": "2685",
    "type": "pullRequest",
    "title": "CORENET-5856: Update RouteAdvertisements schema"
  },
  {
    "id": "2684",
    "type": "pullRequest",
    "title": "OCPBUGS-54837: Add missing backendAddressPools read permission on azure",
    "body": "Although the issue was found while testing on AKS it is not specific to it. This also affects standalone Azure deployments."
  },
  {
    "id": "2676",
    "type": "pullRequest",
    "title": "OCPBUGS-54636: update install-cni script",
    "body": "update install-cni script to match whereabouts bin so that we get cert rotatation in openshift"
  },
  {
    "id": "2560",
    "type": "pullRequest",
    "title": "SDN-5342: Signer username validation",
    "body": "In CNO we have an approver that signs certs automatically, without checking any identity information, so this PR enhances the signer to check on CSR's user name that is populated by API server upon receiving CSR request from the nodes. So it's sufficient to verify the user name before signing the CSR. It also adds required unit tests to test signer controller, it needed to change from using `kubernetes.Clientset` to `cnoclient.Client` for accessing CSR's UpdateApproval API. This needs to be tested on OCP cluster. cc @kyrtapz @trozet @jcaamano"
  },
  {
    "id": "2681",
    "type": "pullRequest",
    "title": "OCPBUGS-53180: Add IPv6 NGINX configuration",
    "body": "Add an additional listen directive that will catch IPv6-originated requests towards the nginx server that serves the networking-console-plugin manifests."
  },
  {
    "id": "2671",
    "type": "pullRequest",
    "title": "CNF-16707: frr-k8s: Add BGPSessionState CRD",
    "body": "Syncing with upstream: the CRD change is needed before we bring the actual code downstream."
  },
  {
    "id": "2656",
    "type": "pullRequest",
    "title": "SDN-5689: Rebase k8s v1.32",
    "body": "go get -u github.com/openshift/build-machinery-go go get -u k8s.io/api go get -u k8s.io/apimachinery go get -u k8s.io/code-generator go get -u k8s.io/component-base go get -u k8s.io/klog/v2 go get -u k8s.io/kube-proxy go get -u k8s.io/utils go get -u sigs.k8s.io/controller-runtime go get -u github.com/openshift/api go get -u github.com/openshift/client-go go get -u github.com/openshift/library-go go get -u github.com/openshift/machine-config-operator go get -u k8s.io/apiextensions-apiserver go get -u k8s.io/client-go go get -u sigs.k8s.io/controller-tools go mod tidy go mod vendor make verify"
  },
  {
    "id": "2677",
    "type": "pullRequest",
    "title": "OCPBUGS-54159: frr-k8s: tolerate all taints",
    "body": "Just as ovnkube-node, frr-k8s daemon set is an infrastructure component and should be deployed regardless of taints. This solves frr-k8s pods not being deployed on nodes labeled with node-role.kubernetes.io/infra and tainted with NoSchedule."
  },
  {
    "id": "2670",
    "type": "pullRequest",
    "title": "OCPBUGS-54636: Auto opt in for whereabouts-controller",
    "body": "Using the shim to deploy the controller causes the controller to error out, auto-deploy works"
  },
  {
    "id": "2454",
    "type": "pullRequest",
    "title": "OCPBUGS-52280: Move to use newer IPsec DaemonSets irrespective of MCP state",
    "body": "When a machine config pool is in a paused state, then it doesn't process any machine config. so during legacy IPsec upgrade (`4.14-4.15`), IPsec machine configs may not be installed on the nodes when its pool is in paused state. In those cases the network operator continues to render older IPsec daemonsets which blocks network components from not getting upgraded to newer versions. Hence this PR renders newer IPsec daemonsets immediately, with new `IPsecCheckForLibreswan` check ensures one of the pods serves IPsec for the node. When MCPs are fully rolled out with ipsec machine config, then it goes ahead with rendering only host flavored IPsec daemonset. It brings in new behavior on IPsec daemonset rendering during IPsec deployment, upgrade and node reboot scenarios. 1. Users would notice both daemonsets being rendered at the time of IPsec install (or) upgrade for a temporary period until IPsec machine configs are fully deployed. 2. At the time of node reboot or machine config pool goes into progressing state, both daemonsets being rendered. In this scenario, the containerized ipsec daemonset pods are dormant. 3. It removes legacy upgrade case as every upgrade would be considered as the same with this approach. 4. It now mounts top level system directories `/usr/sbin` and `/usr/libexec` instead of specific ipsec host paths. The ipsec paths are available only when libreswan is installed on the node (as mentioned in step 1). 5. For the upgrades `4.14-4.15` which moves IPsec from container to host deployment, so adding mco version to be at least 4.15 to start rendering IPsec machine configs. Signed-off-by: Periyasamy Palanisamy pepalani@redhat.com"
  },
  {
    "id": "2647",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Update managed Azure HCP cloud network config",
    "body": "This PR updates the parameters needed for authentication with Azure on managed Azure HCP for the new managed Azure HCP authentication type, UserAssignedIdentityCredentials. See Persisting MSI Credentials( for more info."
  },
  {
    "id": "2665",
    "type": "pullRequest",
    "title": "OCPBUGS-52972: Correct namespace ref and cert dir",
    "body": "cc @dougbtv correct paste error on cert dir and point controller daemonest to correct whereabouts namespace"
  },
  {
    "id": "2664",
    "type": "pullRequest",
    "title": "NO-JIRA: ovn-k: sync EgressService with upstream",
    "body": "Specifically, this brings the host additionalPrinterColumn."
  },
  {
    "id": "2659",
    "type": "pullRequest",
    "title": "OCPBUGS-52361: frr-k8s: rename validatingwebhook name",
    "body": "We change the webhook name so that the operator and CNO do not attempt to modify eachother's resources, e.g the operator deleting the webhook created by CNO."
  },
  {
    "id": "2383",
    "type": "pullRequest",
    "title": "SDN-4829: Add machine config watchers to report IPsec status",
    "body": "This PR enhances the status manager to react to the network operator's machine configs rendering, listens to machine config and machine config pool events during the lifetime of the machine configs rendered by the network operator and reflects machine config pool(s) progressing/degraded status while rolling out changes. It uses a new `network.operator.openshift.io/rendered-machineconfig-state` annotation as dynamic cache on the network cluster operator object to stash rendered machine config state so that network operator pod can rely on it to build its own internal state upon its pod restart caused by machine config triggered node reboot."
  },
  {
    "id": "2648",
    "type": "pullRequest",
    "title": "NP-1100: Enable fast ranges",
    "body": "cc @dougbtv Add whereabouts controller and necessary RBAC to enable fast ranges in openshift Currently pointing to personal image, but when dockerfile change merges in o/wherabouts i will correct the image ref and remove the hold"
  },
  {
    "id": "2652",
    "type": "pullRequest",
    "title": "NO-JIRA: Add \"centos\" to supported OS ids",
    "body": "As we move to using pure centos bootimages for OKD, support the \"centos\" ID as the ID will not be \"scos\" anymore."
  },
  {
    "id": "2628",
    "type": "pullRequest",
    "title": "SDN-5330: Keep rendering OVN IPsec when its daemonset not available",
    "body": "The commit is not complete because `OVNIPsecStatus` is still not set when none of the IPsec daemonset exists on the cluster at the time of machine config pools are updating (or) node is rebooted. Hence fixing it by `OVNIPsecStatus` is always set to reflect ipsec deployment state of the cluster and update the render pipeline to render ovn ipsec for the above mentioned scenarios. It renders ovn ipsec even before ipsec daemonsets are deployed when IPsec is freshly enabled on the cluster. That's ok because It will be effective only when the `ovs-monitor-ipsec `script is started and that's going to be done only when the ipsec pod is running. so we are safe to ignore it now. When IPsec is disabled from API, ovn ipsec is disabled followed by stop rendering ipsec machine config and ipsec daemonset. While ipsec machine configs are removed which would make `ovnkube-node` daemonset into progressing state and `OVNIPsecActive` condition becomes true again. Hence this pr considers machine config status as well so that the rendering pipeline will not render IPsec machine configs again. It also removes dead code related to IPsec 4.13 upgrade which is no longer valid for upgrade scenarios beyond = 4.15. This change is intended to be backported until 4.15 so still keeping legacy upgrade scenarios."
  },
  {
    "id": "2638",
    "type": "pullRequest",
    "title": "OCPBUGS-49746: ovn-k,cudn crd: Ensure matching toplogy and topology-config",
    "body": "Update CUDN CRD according to 1: add API validation to ensure CUDN CR spec.topology match the spesifed topology-configuration. 1"
  },
  {
    "id": "2615",
    "type": "pullRequest",
    "title": "OCPBUGS-48312: frr-k8s: align manifests with operator",
    "body": "specifically, we bring the healthcheck change and unnumbered support."
  },
  {
    "id": "2636",
    "type": "pullRequest",
    "title": "OCPBUGS-49621:Fix UDN and CUDN hostSubnet validation",
    "body": "In the previous validation rule, valid IPv6 subnets would mistakenly invalidate the CustomResource. Reflecting the changes happening upstream in"
  },
  {
    "id": "2634",
    "type": "pullRequest",
    "title": "OCPBUGS-49667: OVNK should be able to annotate network ID on NADs"
  },
  {
    "id": "2610",
    "type": "pullRequest",
    "title": "OCPBUGS-46564: Update egressfirewall CRD to be consistent with ovn-kubernetes repo",
    "body": "This PR updates the egressfirewall CRD with the latest CRD from the ovk-kubernetes repo. This fixes the issue of mismatch of regex validation of the DNS name field between the two CRDs."
  },
  {
    "id": "2623",
    "type": "pullRequest",
    "title": "SDN-5426: (C)UDN CRD: add IPAM section and IPAM.Mode field.",
    "body": "Changes from"
  },
  {
    "id": "2621",
    "type": "pullRequest",
    "title": "SDN-5330: Keep IPsec in OVN enabled during the upgrade",
    "body": "The following change on the machine pool: `status.MachineCount == status.UpdatedMachineCount && hasSourceInMachineConfigStatus(status, machineConfigs)` is introduced with PR which ensures IPsec machine config is always installed on all the nodes in the cluster, So this is deleting the IPsec daemonset as per the CNO state machine for IPsec when the condition is not met. But this is also accidentally disabling IPsec in OVN which is not an expected behavior. This causes ovs-monitor-ipsec to refresh existing ipsec connections unnecessarily when IPsec pod comes up as it is not able to find remote_name from the tunnel. This may also trigger deleting IPsec connection entries from openshift.conf file if ovs-monitor-ipsec is not killed timely when ipsec daemonset is removed. So this PR enables ovn ipsec option as long as the API is set with Full mode."
  },
  {
    "id": "2619",
    "type": "pullRequest",
    "title": "OCPBUGS-48425: ovn-k, rbac: Enable users read & modify UserDefinedNetwork CRs",
    "body": "This PR introduce new ClusterRole allowing non clsuter-admin users (i.e.: project-admins) create & modify UserDefinedNetwork CRs, allowing self-servicing OVN-K overlay networks w/o the cluster-admin intervention. Addressing 1. 1"
  },
  {
    "id": "2616",
    "type": "pullRequest",
    "title": "SDN-4930: Fix user-defined-networks-namespace-label binding",
    "body": "/cc @trozet"
  },
  {
    "id": "2591",
    "type": "pullRequest",
    "title": "SDN-4930: Add host isolation mounts to ovnkube-node"
  },
  {
    "id": "2611",
    "type": "pullRequest",
    "title": "SDN-4168: Cleanup ipsec state only when ipsec is not full mode",
    "body": "This PR does the following to fixes to prevent unnecessary ipsec service restart, ip xfrm state policy cleanups while bringing up ipsec-host pod. This would potentially avoid reestablishment of IKE SAs during ipsec pod restarts and let OVN networking pods traffic go on without any packet drops. 1. There is an incorrect check in ipsec pod clean up logic which removes `/etc/ipsec.d/openshift.conf` file, ip xfrm state and policy entries in all cases, but these must be removed only when ipsec mode is changed from full to external or disabled. 2. We don't need narrowing=yes option to be set explicitly anymore because system default crypto policies are commented out now, otherwise `TS_UNACCEPTABLE` error is seen temporarily at the time of ipsec service restart. 3. The IPsec service restart is needed only at the time of specific IPsec config changes, so doing ipsec service only at the time commenting out default crypto-policies conf file."
  },
  {
    "id": "2612",
    "type": "pullRequest",
    "title": "OCPBUGS-42609: Disable adding/removing the UDN namespace label",
    "body": "UDN namespace label will be required when namespaces are created in order to use a primary UDN in that namespace. Upstream PR:"
  },
  {
    "id": "2442",
    "type": "pullRequest",
    "title": "SDN-5085: Add support for route advertisements"
  },
  {
    "id": "2586",
    "type": "pullRequest",
    "title": "CNF-15518: Bump the openshift api version",
    "body": "This is needed for the AdditionalRoutingCapabilities field promoted to default."
  },
  {
    "id": "2590",
    "type": "pullRequest",
    "title": "OCPBUGS-46065: Skip including default crypto policies to avoid authby issue",
    "body": "The ovs-monitor-ipsec doesn't set authby, so when it calls ipsec auto --start the default ones defined at Libreswan's compile time will be used. On restart, Libreswan will use authby from libreswan.config. If libreswan.config is incompatible with the Libreswan's compiled-in defaults, then we'll have an authentication problem. But OTOH, ovs-monitor-ipsec does set ike and esp algorithms, so those may be incompatible with libreswan.config as well. Hence commenting out the \"include\" from libreswan.conf to avoid such conflicts. @igsilya proposed fixes( in ovs to solve this problem in a proper way, When these changes are consumed, the current workaround should be replaced with `--root-ipsec-conf` and `--use-default-crypto` parameters while invoking `ovs-monitor-ipsec` script."
  },
  {
    "id": "2372",
    "type": "pullRequest",
    "title": "OCPBUGS-33656: Remove ip xfrm state when IPsec is disabled",
    "body": "The ovn-ipsec-host daemonset doesn't remove ipsec state when IPsec for east west traffic is disabled. This might still keep running data plane traffic with ipsec encrypted. So this PR cleans up ipsec state so that east west traffic restored with only geneve header."
  },
  {
    "id": "2581",
    "type": "pullRequest",
    "title": "OCPBUGS-45341: iptables-alerter daemonset should run everywhere",
    "body": "Managed services marks a couple of nodes as \"infra\" so user workloads don't get scheduled on them. However, platform daemonsets like iptables-alerter should run there - and the typical toleration for that purpose should be: ```yaml tolerations: - operator: Exists ``` instead the toleration is ```yaml - key: \"node-role.kubernetes.io/master\" operator: \"Exists\" effect: \"NoSchedule\" ``` There's only two daemonsets that don't follow this pattern (iptables-alerter and dns-default) and it's causing issues in CI runs for ROSA. The PreferredDuringScheduling doesn't actually guarantee the taints are obeyed, sometimes these DS end up on an infra node and then KubeDaemonSetMisScheduled fires (and fails the CI run). Examples from other platform DS shows everyone other than these 2 uses the first pattern: ``` $ for ns in openshift-cluster-csi-drivers openshift-cluster-node-tuning-operator openshift-dns openshift-image-registry openshift-machine-config-operator openshift-monitoring openshift-multus openshift-multus openshift-multus openshift-network-diagnostics openshift-network-operator openshift-ovn-kubernetes openshift-security; do echo \"NS: $ns\"; oc get ds -o json -n $ns|jq '.items.0.spec.template.spec.tolerations'; done NS: openshift-cluster-csi-drivers { \"operator\": \"Exists\" } NS: openshift-cluster-node-tuning-operator { \"operator\": \"Exists\" } NS: openshift-dns { \"key\": \"node-role.kubernetes.io/master\", \"operator\": \"Exists\" } NS: openshift-image-registry { \"operator\": \"Exists\" } NS: openshift-machine-config-operator { \"operator\": \"Exists\" } NS: openshift-monitoring { \"operator\": \"Exists\" } NS: openshift-multus { \"operator\": \"Exists\" } NS: openshift-multus { \"operator\": \"Exists\" } NS: openshift-multus { \"operator\": \"Exists\" } NS: openshift-network-diagnostics { \"operator\": \"Exists\" } NS: openshift-network-operator { \"effect\": \"NoSchedule\", \"key\": \"node-role.kubernetes.io/master\", \"operator\": \"Exists\" } NS: openshift-ovn-kubernetes { \"operator\": \"Exists\" } NS: openshift-security { \"operator\": \"Exists\" } ```"
  },
  {
    "id": "2516",
    "type": "pullRequest",
    "title": "OCPBUGS-42189: Re-disable metrics server",
    "body": "The metrics server was incorectly enabled in acd67b432be4ef2efb470710aebba2e3551bc00d. Revert this behavior by specifying the metrics port in the options. Kudos to @pperiyasamy for finding the rootcause."
  },
  {
    "id": "2567",
    "type": "pullRequest",
    "title": "OCPBUGS-44950: Propagate HCP pods labels to 2nd level operands",
    "body": "HCP is adding a new API field to allow users creating HCP clusters to set custom labels on all HCP pods The CNO needs to integrate this feature in the same way it integrated the NodeSelector feature for HCP."
  },
  {
    "id": "1317",
    "type": "pullRequest",
    "title": "CNF-17656: Fix CPU parsing for `rcu_nocbs` kernel parameter",
    "body": "The test case associated with rcu_nocbs verification experienced flakiness due to incorrect parsing of the CPUs specified by the `rcu_nocbs` kernel parameter. Previously, the CPUs were parsed as a string, leading to mismatches with the isolated CPUs during string-based comparisons. This has been corrected by converting both values to cpuset type, ensuring accurate CPU set comparisons and improving test stability."
  },
  {
    "id": "1321",
    "type": "pullRequest",
    "title": "OCPBUGS-55063: E2E: Use cpuset.CPUSet for reserved, isolated and offline fields",
    "body": "When adding or removing cpus to reserved, isolated and offline use cpuset.CPUSet struct"
  },
  {
    "id": "1322",
    "type": "pullRequest",
    "title": "NO-JIRA: Make the e2e/basic/modules.go test reentrant"
  },
  {
    "id": "1320",
    "type": "pullRequest",
    "title": "NO-JIRA: Enhance hugepages validation error message",
    "body": "Add a more descriptive error message to guide users on setting the correct 'kernelPageSize' in the PerformanceProfile when specifying a hugepage of a certain size. Since 'kernelPageSize' is a relatively new field, users might not be aware that they must set a corresponding value that supports the hugepage size. Improve clarity by printing the specific 'page.size' value instead of dumping the entire struct."
  },
  {
    "id": "1318",
    "type": "pullRequest",
    "title": "PSAP-1767: Bump to k8s 1.32.3",
    "body": "This change bumps k8s to 1.32.3 and also bumps other direct dependencies."
  },
  {
    "id": "1319",
    "type": "pullRequest",
    "title": "NO-JIRA: Unblock production image generation",
    "body": "While 1314 unblocked the CI pipeline, it broke production image generation due to using unbound $OPENSHIFT_CI variable. Fix this."
  },
  {
    "id": "1313",
    "type": "pullRequest",
    "title": "OCPBUGS-54628: Add retry method if we hit jira rate limit",
    "body": "Jira implemented rate limit due to which tests which should be skipped due to known issues do not get skipped. This PR implements retry with exponential backoff to retry the request if we hit http status code 429(too many requests)"
  },
  {
    "id": "1314",
    "type": "pullRequest",
    "title": "NO-JIRA: Ignore -server-ose repos in the CI",
    "body": "This is a workaround not to pull `python3-perf` from CI's `-server-ose` repos."
  },
  {
    "id": "1279",
    "type": "pullRequest",
    "title": "CNF-17417: Enhanced utility function for fetching container runtime",
    "body": "In our tests, we usually create a ```TestPod``` and then configure the ```nodeSelector``` and ```namespace```. Consequently, the ```NodeName``` remains unset, which leads to the runtime utility function failing to retrieve the node. This PR improve the function to retrieve node from pod's ```nodeSelector``` . Refrence test cases: - cpu_management Link( - cgroups Link( - workloadhints Link("
  },
  {
    "id": "1304",
    "type": "pullRequest",
    "title": "PSAP-1608: Obsolete pod label-based matching",
    "body": "The Pod label matching functionality has been mentioned as a candidate for deprecation since OCP 4.4. Reasons for this change: the Pod label matching functionality does not scale well in larger clusters ease merging the two NTO control loops into one Report Tuned CRs which use Pod label matching functionality as invalid and trigger an alert (NTOPodLabelsUsed) for this to give cluster administrators time to update their configuration. Implements: PSAP-1608("
  },
  {
    "id": "1312",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: skip irqbalance tests due to known issue",
    "body": "Upstream ci lanes are failing because of the OCPBUGS-53466 bug, hence skipping the test."
  },
  {
    "id": "1309",
    "type": "pullRequest",
    "title": "PSAP-1736: Remove pinning of all dependencies",
    "body": "All pinned dependencies are essentially technical debt. Remove them. Notable changes: `github.com/jaypipes/ghw` bumped to the latest version 0.15.0. Rewrote `dedupExpectedContent()` in `gather-sysinfo.go`. Fixed buggy `IsHyperthreadingEnabled()` function. Processor capabilities cannot be used to determine wheter HT is enabled. must-gather data collected from a 3 (instead of 5) machine cluster. gather-sysinfo data collected from 3 new bare-metal machines. All machines had different topology. Machine worker2 had HT (logical processors) disabled in BIOS. must-gather and gather-sysinfo data collected from a virtual SNO installation."
  },
  {
    "id": "1307",
    "type": "pullRequest",
    "title": "CNF-16013: e2e: arm: Add arm kernelPageSize e2e testing suite",
    "body": "This PR introduces the following changes: A new 14_arm directory, which contains the e2e test suite for validating support of the 64k kernelPageSize under PerformanceProfile for the aarch64 family of CPUs. A new test suite to validate, at the node level, the kernelPageSize values of 4k and 64k on aarch64. This is done by applying changes to the spec field and inspecting the node to verify that the correct values are reflected on the associated node. The tests in the suite have been tested in an ARM cluster"
  },
  {
    "id": "1301",
    "type": "pullRequest",
    "title": "CNF-16638: Reduce code duplication of RPS enabled checks",
    "body": "Centralize the RPS enabled logic into just one function and add a way to force RPS off. This is prep-work for disabling RPS globally for all use cases."
  },
  {
    "id": "1305",
    "type": "pullRequest",
    "title": "NO-JIRA: Add observedGeneration to Profile status",
    "body": "`profiles.tuned.openshift.io` are managed both by the NTO operator and the operands. The operator manages the `.Spec` part, while the operand reports the status of the TuneD profile application via the `.Status` part. As it is impossible to tell whether the current `.Status` reflects potential `.Spec` changes without `.Status.ObservedGeneration`, introduce the new field."
  },
  {
    "id": "1216",
    "type": "pullRequest",
    "title": "OCPBUGS-44559: Manage TuneD profiles with the same name and different content",
    "body": "It is possible to create Tuned CRs with TuneD profiles of the same name. This is problematic when the duplicate TuneD profiles have different contents. This can cause periodic switches between the duplicate TuneD profiles and will lead to TuneD restarts. This change makes the operator control loop stop to avoid switching between the conflicting TuneD profiles of the same name and warns about this misconfiguration via: Tuned CR status and prometheus metric (nto_invalid_tuned_exist_info) NTOInvalidTunedExist alert ERROR message issued in the operator logs Other changes: Switch the ProfileStatusCondition condition type to StatusCondition. This is cosmetic only, all fields are preserved. Fixes: OCPBUGS-44559."
  },
  {
    "id": "1303",
    "type": "pullRequest",
    "title": "OCPBUGS-52352: Treat all aarch64 platforms as equals in tuned",
    "body": "We are commonly testing on two different ARM based platforms that use different cpu architecture designators ARM and APM. The per-platform tuning profile selector did not expect APM and failed to include the proper profile. Since we currently do not distinguish between the ARN vendors in any way, the patch changes the detection to be based on Architecture instead of on Vendor ID."
  },
  {
    "id": "1217",
    "type": "pullRequest",
    "title": "NO-JIRA: PPC: unit: test sortTopology for expected output",
    "body": "The node topology contains several slices that later on are sorted and used to determine whether two nodes are equal. Add a unit test to verify this sorting is done as expected."
  },
  {
    "id": "1297",
    "type": "pullRequest",
    "title": "CNF-12525: Switch builder image to multi-arch image",
    "body": "This change is necessary to enable building images for architectures like ARM. This is already been done in production Dockerfile.rhel9. The current Dockerfile does not support multi-architecture builds."
  },
  {
    "id": "1296",
    "type": "pullRequest",
    "title": "CNF-16742: kernelPageSize + hugepages combinations validation",
    "body": "This PR includes these changes: Corrected valid huge page sizes for ARM. Improved huge pages validation to depend on the configured kernelPageSize. Added unit tests to validate all `kernelPageSize` and `hugepages` combinations, covering both valid and invalid cases. This improves validation coverage and prevents misconfiguration. The validation for this work can be found in the Jira ticket."
  },
  {
    "id": "1295",
    "type": "pullRequest",
    "title": "OCPBUGS-49823: machineconfig: add support for various hugepage sizes",
    "body": "Generalized GetHugepagesSizeKilobytes function to handle various inputs. This allows us to use more possible hugepages size (e.g 512M on ARM). Pleas note we expect the validation to ensure the node arch + hugepage size combination is valid. Therefore, this function assumes a valid input, so it can safely convert it to bytes. This is done by using the `github.com/docker/go-units` which we should vet."
  },
  {
    "id": "1088",
    "type": "pullRequest",
    "title": "OCPBUGS-35911: E2E: Add test to verify runc process excludes the cpus used by pod.",
    "body": "Adding a test to verify that runc does not use CPUs assigned to guaranteed pods. Original bug link - What this test verifies: - It checks the configuration flow from kubelet - cri-o - runc, ensuring the correct CPU configuration is provided to runc during the container creation process. What this test does NOT verify: - It does not monitor the actual CPU usage during the container creation process or track the CPUs used by any intermediate forks."
  },
  {
    "id": "1294",
    "type": "pullRequest",
    "title": "OCPBUGS-49823: Support hugepage size selection for ARM-based clusters",
    "body": "This PR introduces support for selecting hugepage sizes on ARM-based clusters. It complements the work done in 1086 and ensures that hugepage configurations are correctly applied. E2E tests are planned to be added in a future update."
  },
  {
    "id": "1291",
    "type": "pullRequest",
    "title": "OCPBUGS-49403: E2E: Add configuration tests related to align cpus by uncorecache feature",
    "body": "Add configuration tests related to align cpus by uncorecache feature"
  },
  {
    "id": "1284",
    "type": "pullRequest",
    "title": "OCPBUGS-48530: E2E: Add test cases to verify PerPodPowerManagement with PPC",
    "body": "Add 2 new test cases to cover workload hints related to PerPodPowerManagement."
  },
  {
    "id": "1285",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix hack/test-tuned-fdp.sh",
    "body": "When testing new TuneD releases, we use the official `Dockerfile.rhel9`. The official Containerfile uses `registry.ci.openshift.org/ocp/OCP-VERSION:base-rhelRHEL-VERSION` images. These images use a wrapper for dnf/yum commands. The purpose of that wrapper to wrap yum/dnf invocations that are issued by CI workloads or local docker builds of OCP components. While the wrapper is useful to build an image identical or close to identical to the actual ART releases, it will ignore any custom repositories supplied to it via the \"podman build\" process and volume mounting `/etc/yum.repos.d`. The behaviour of the wrapper dnf/yum script can be modified by supplying it `ART_DNF_WRAPPER_POLICY` variable. Setting the value \"append\" to this variable does exactly what we need -- do not remove base image .repo files from dnf runs - only add ART repos based on invocation context."
  },
  {
    "id": "1280",
    "type": "pullRequest",
    "title": "OCPBUGS-48319: Add missing Polarion test case id",
    "body": "Add polarion test case id to few tests for reporting results to test case management systems"
  },
  {
    "id": "1261",
    "type": "pullRequest",
    "title": "OCPBUGS-48317: PPC_Test_fix: use ROLE_WORKER_CNF environment variable to determine mcp name",
    "body": "In the current ppc tests, we are using mcp-name as worker. Instead of using hardcoded value of worker, use the mcp name from ROLE_WORKER_CNF environment variable"
  },
  {
    "id": "1262",
    "type": "pullRequest",
    "title": "CNF-16267: Add kernel page size field",
    "body": "This PR introduces the following changes: KernelPageSize field has been added to performance profile API. This field defines the kernel page size: for x86/amd64, the only valid value is 4k, while for aarch64, the valid values are 4k, 64k. The default value is 4k if none is specified. Validation has been added Modified kernel Type( selection process, adding the new kernel type `64k-pages` alongside `default` and `realtime` Documented this Edit: This has been verified on an ARM cluster."
  },
  {
    "id": "1258",
    "type": "pullRequest",
    "title": "OCPBUGS-46584: Adjust Workload Hints test cases based on Intel or AMD",
    "body": "This PR adds utility functions to get Cpu Vendor (intel or AMD) in case of x86_64. Also Adjust Workload Hints test cases where kernel Args are adjusted based on Intel or AMD."
  },
  {
    "id": "1269",
    "type": "pullRequest",
    "title": "NO-JIRA: PPC: correct EnableHardwareTuning flag value",
    "body": "By mistake this was overridden to always `true` in this PR: 1236 Correct this by setting the value equal to the passed value from the parsed data."
  },
  {
    "id": "1230",
    "type": "pullRequest",
    "title": "CNF-15494: E2E: Tuned deferred test automation",
    "body": "This PR implements functional tests for the Tuned deferred annotation feature, developed in response to the bug OCPBUGS-28647."
  },
  {
    "id": "1173",
    "type": "pullRequest",
    "title": "OCPBUGS-42365: E2E: Adjusted mixed_cpus suite for hypershift",
    "body": "- Performance Profile applying is made consistent with mcp and nodepool based environments - Removed deprecated API client. - Added test suite run in makefile"
  },
  {
    "id": "1260",
    "type": "pullRequest",
    "title": "NO-JIRA: Update OWNERS file",
    "body": "David and Kevin are both no longer involved in this project. Make sure we don't spam them with review requests. /cc @dagrayvid /cc @kpouget"
  },
  {
    "id": "1229",
    "type": "pullRequest",
    "title": "CNF-16063: E2E: Add hypershift support to container runtime config tests",
    "body": "The container runtime configuration test was omitted during the HyperShift adjustments, as it was initially deemed unsuitable for HyperShift. This change introduces support for it."
  },
  {
    "id": "1255",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: common way to fetch poolName",
    "body": "On OpenShift we're looking for the MCP associated with the nodes affected by the profile. On HyperShift we're looking for the nodePool associated the nodes affected by the profile. This commit introduce a function to get the pool name which is essentially MCP/NodePool name depending on the platform detected at runtime."
  },
  {
    "id": "1256",
    "type": "pullRequest",
    "title": "NO-JIRA:e2e:labels: fix typo and adding type",
    "body": "small typo fixes and added a missing type declaration."
  },
  {
    "id": "1249",
    "type": "pullRequest",
    "title": "OCPBUGS-46426: e2e: add irdma to module_blacklist kernel args",
    "body": "This implements a workaround to prevent CI failures on specific hardware using an Intel E810 network card. When UserLevelNetworking is set to True, tuned attempts to set the combined channel count equal to the reserved CPUs but fails with the following error: tuned.utils.commands: Executing 'ethtool -L ens2f0 combined 1' error: netlink error: Device or resource busy The error occurs because the ice driver: ens2f0: Cannot change channels when RDMA is active. This issue causes the tuned profile to degrade. As a temporary solution, by adding 'module_blacklist=irdma' to the kernel Args we will block RDMA, to avoid these errors."
  },
  {
    "id": "1253",
    "type": "pullRequest",
    "title": "OCPBUGS-45421: Linter fixes",
    "body": "Golangci-linter configuration \".ci-operator.yaml\" was configured in a way which was showing a lot of false positives and also missing a lot of issues. Fix both the linter configuration and the missing issues that found its way into the codebase."
  },
  {
    "id": "1246",
    "type": "pullRequest",
    "title": "OCPBUGS-45971: e2e: tuned degraded test fix",
    "body": "Addressed a corner case where nodes based on VMs would always log a warning without verifying if the profile was degraded. This incorrect behavior has been fixed to properly check the profile state before logging warnings. Modified isVM func to execute \"systemd-detect-virt\" command after chroot to rootfs. This will ensures accurate virtualization detection by running the command in the host's context instead of the container."
  },
  {
    "id": "1236",
    "type": "pullRequest",
    "title": "OCPBUGS-44372: cmd: PPC: support tolerating heterogeneous core IDs",
    "body": "Problem: In a system with a specific number of cores per socket the host gives each core a number. So far PPC would generate performance profile only after verifying that the nodes pointed to by the specified node pool are all of the same hardware and topology. That is because the performance profile will apply the same configuration on all these nodes and it is most important that they have same structure, CPUs distribution across NUMAs and CPUs availability. This by default includes having same core IDs for each CPU in the same NUMA cells for all the compute nodes. for instance: Worker-0 has NUMA-0 on which the CPUs siblings 2,66 is coupled in one core numbered 18`. All other workers should have this info true for them, otherwise the tool would fail. It was observed (for example on Intel Xeon GoldGold 6438N with 0-127 online CPUs distributed across 2 sockets, 32 cores per socket and 2 threads per core) that core numbering can have different schemes even with a system from the same vendor, which causes the tool to fail to generate a profile. Suggested solution: With further investigation, The numbering the pattern depends on the settings of the hardware, the software and the firmware (BIOS).While core IDs may vary nodes can still be considered having same NUMA topology taking into account that core scope is on the single NUMA. However, core IDs can be important in optimizing the system's performance and managing isolation of tasks, meaning if the performance of worker-0 is not comparable to that of worker-1 before having performance-profile applied on both, having an improved performance on both after applying PP is not guaranteed. In this PR, we loosen the hard requirment of having same core numbering on same NUMA cells on different systems into a warning will be logged out as well as a comment on the generated CSV file. So as long as the NUMA cells have same logical processors' count and IDs and same threads' number, core ID equality is treated as best effort. That is because when scheduling workloads, we care about the logical processors ids and their location on the NUMAs. Disclaimer: We support this option to unblock business matters and is recommended to use the generated PP with cautiono."
  },
  {
    "id": "1231",
    "type": "pullRequest",
    "title": "OCPBUGS-45346: performanceprofile cpuset input validation",
    "body": "This fix ensures that the input for any CPU set field is valid. If an invalid string that does not represent a valid CPU set is provided, the admission webhook will return an appropriate error, such as: `spec.cpu: Internal error: strconv.Atoi: parsing \"garbage\": invalid syntax` This replaces the previous behavior where the server would return an error like: `Error from server: error when creating \"pp.yaml\": admission webhook \"vwb.performance.openshift.io\" denied the request: panic: runtime error: invalid memory address or nil pointer dereference recovered.` Moreover, fuzz tests have been added to ensure we exercise all errors when executing the validation function on valid and invalid inputs, ensuring no panic occurs during execution."
  },
  {
    "id": "1232",
    "type": "pullRequest",
    "title": "OCPBUGS-45264: Normalize cpu sets when rendering to Tuned profiles",
    "body": "Previously the isolated cpu list was passed verbatim as the user entered it. This could have resulted in very long kernel command line. Example: 10,9,8,7,6,5,4,3,2,1 (imagine 500+ cpus) This change consolidates the parsing logic in the Tuned templating and generates simply the following in such case. Example: 1-10"
  },
  {
    "id": "1219",
    "type": "pullRequest",
    "title": "CNF-15505: Remove container runtime selection",
    "body": "A new patch has been introduced for CRI-O, allowing the container runtime for the high-performance runtime class to be inherited from the system instead of being detected and explicitly set. As a result, the controller no longer needs to identify the container runtime from the containerRuntimeConfig for setting it in the 99-runtimes.conf snippet. This PR encompasses all (need to verify) required changes."
  },
  {
    "id": "1224",
    "type": "pullRequest",
    "title": "OCPBUGS-45048: Move reboot tests to appropriate make target for hypershift",
    "body": "Move all test which reboot nodes to pao-functests-update-only-hypershift - Use pao-functests-hypershift for tests which do not update profile - Use pao-functests-update-only-hypershift for tests which update Performance profile and reboot the nodes"
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "OPRUN-3821: Add FeatureFlag for OLMv1 Single/OwnNamespace",
    "body": "Preconditions: - Changes: - adds support for feature flag for Single/OwnNamespace installation handling"
  },
  {
    "id": "114",
    "type": "pullRequest",
    "title": "OCPBUGS-54877: Increase debug logging level for op-con/catd"
  },
  {
    "id": "113",
    "type": "pullRequest",
    "title": "OPRUN-3782: Watch for permissions preflight feature gate",
    "body": "Now with the proper name flag. Update to version of openshift/api with support."
  },
  {
    "id": "112",
    "type": "pullRequest",
    "title": "OCPBUGS-54781: Revert 111 \"OPRUN-3782: Watch for permissions preflight feature gate\"",
    "body": "Reverts 111 ; tracked by OCPBUGS-54781 Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Change seems to be preventing all techpreview installs from completing due to olm operator stuck progressing. To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /test openshift-e2e-aws-techpreview ``` CC: @tmshort div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "111",
    "type": "pullRequest",
    "title": "OPRUN-3782: Watch for permissions preflight feature gate",
    "body": "Update to version of openshift/api with support."
  },
  {
    "id": "109",
    "type": "pullRequest",
    "title": "OCPBUGS-54179: Add openshift node selector annotation",
    "body": "Add openshift node selector annotation"
  },
  {
    "id": "104",
    "type": "pullRequest",
    "title": "OPRUN-3690: Watch for new upstream feature gate APIV1MetasHandler",
    "body": "refer: Metas Endpoint RFC( PR that introduced metas endpoint in catalogd(operator-framework/operator-controller-1643) APIV1MetasHandler naming( Guide this PR followed for mapping upstream APIV1MetasHandler feature gate to downstream FeatureGateNewOLMCatalogdMetas} feature gate( Also bumps openshift/api to e8e096a21cb3dbeb93f1dc5138bf42ec766fc407"
  },
  {
    "id": "108",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update to k8s v0.32.2/v1.32.2",
    "body": "- Upgrade to v0.32.2 go get k8s.io/api@v0.32.2 go get k8s.io/apiserver@v0.32.2 go get k8s.io/apiextensions-apiserver@v0.32.2 go get k8s.io/apimachinery@v0.32.2 go get k8s.io/client-go@v0.32.2 go get k8s.io/component-base@v0.32.2 go get k8s.io/kms@v0.32.2 go get k8s.io/kube-aggregator@v0.32.2 - Get the library-go that supports v0.32.2 go get github.com/openshift/library-go@bad2d1bf3a3765a83bdbdf4f32d14399053524a2 go mod tidy go mod verify go mod vendor"
  },
  {
    "id": "106",
    "type": "pullRequest",
    "title": "OCPBUGS-51357: Revert \"(vendor) Bump openshift/api\"",
    "body": "This reverts commit 5880e4ab9ca864067e06131a20be62b9dbfe5629."
  },
  {
    "id": "105",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump kubernetes and openshift/api dependencies",
    "body": "Bump openshift/api to make available $ go get github.com/openshift/api@744790f2cff777b1bb29bdccce10e4e84cff0a69 $ go mod tidy $ go mod vendor Also needed $ go get openshift/client-go@f7ec47e to resolve vendoring inconsistency."
  },
  {
    "id": "102",
    "type": "pullRequest",
    "title": "OPRUN-3663: Watch and reconcile feature gates changes",
    "body": "Adds logic to watch and react to downstream feature gate changes by setting container env vars in `operator-controller-controller-manager` deployment manifests. Incorporates the recommended `github.com/openshift/library-go` approach (see to avoid duplicating this logic locally. ~As mentioned internally, there are still some things that need clarification - I'm raising them as comments here.~ @oceanc80 @joelanford"
  },
  {
    "id": "103",
    "type": "pullRequest",
    "title": "OCPBUGS-49410: extend clusterrole with permissions for OCP observability",
    "body": "This adds the remaining necessary clusterrole permissions that cluster-olm-operator needs to be able to grant and act on for the catalogd and operator-controller to facilitate automatic metrics collection via OCP machinery Specific necessary permissions are: - create, read, list, watch servicemonitors - read, list, watch endpoints, pods and services - bind for the newly created metric monitor roles part of OCPBUGS-49410 resolution prerequisite for"
  },
  {
    "id": "94",
    "type": "pullRequest",
    "title": "OCPBUGS-45425: Updating ose-cluster-olm-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-olm-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-olm-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "98",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fixing some nitpicks"
  },
  {
    "id": "93",
    "type": "pullRequest",
    "title": "OCPBUGS-45098: Add infomer for proxy.config.openshift.io",
    "body": "Update the environment of the cluster-olm-operator Update the env of the catalogd/operator-controller deployments"
  },
  {
    "id": "96",
    "type": "pullRequest",
    "title": "NO-ISSUE: bump all bingo build dependencies",
    "body": "Seems like we need a golangci-lint bump in order to pass the lint test in 94. Also, bumping bingo to 0.9 in order to ensure that the follow-up bump to go 1.23 goes okay (bingo 0.9 has a few bug fixes that are necessary when devs and CI are using go1.23)"
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove m1kola from owners"
  },
  {
    "id": "91",
    "type": "pullRequest",
    "title": "NO-ISSUE: Adding Lalatendu Mohanty as approver"
  },
  {
    "id": "612",
    "type": "pullRequest",
    "title": "OCPBUGS-48177: Exclude etcd readiness checks from /readyz to ignore temporary etcd hiccups",
    "body": "Explicitly exclude etcd and etcd-readiness checks (OCPBUGS-48177) and have etcd operator take responsibility for properly reporting etcd readiness. Justification: kube-apiserver instances get removed from a load balancer when etcd starts to report not ready (as will KA's /readyz). Client connections can withstand etcd unreadiness longer than the readiness timeout is. Thus, it is not necessary to drop connections in case etcd resumes its readiness before a client connection times out naturally. Follow up for"
  },
  {
    "id": "611",
    "type": "pullRequest",
    "title": "MON-4129: adjust Prometheus classic histograms 'le' related selectors in relabel config to accommodate the update to Prometheus v3"
  },
  {
    "id": "607",
    "type": "pullRequest",
    "title": "OCPBUGS-45701: Updating ose-cluster-openshift-apiserver-operator-cont...",
    "body": "This pr is for image to be consistent with ART for 4.19"
  },
  {
    "id": "604",
    "type": "pullRequest",
    "title": "NO-JIRA: Revert Disable ResilientWatchCacheInitialization",
    "body": "reverts: xref:"
  },
  {
    "id": "603",
    "type": "pullRequest",
    "title": "OCPBUGS-44693: Disable ResilientWatchCacheInitialization",
    "body": "requires:"
  },
  {
    "id": "600",
    "type": "pullRequest",
    "title": "OCPBUGS-23435: bump library-go to bring in workload-conditions fix",
    "body": "bring in sibling PR:"
  },
  {
    "id": "381",
    "type": "pullRequest",
    "title": "WRKLDS-1653: bump(k8s): update k8s.io/ dependencies to v1.32.2"
  },
  {
    "id": "373",
    "type": "pullRequest",
    "title": "OCPBUGS-47528: Add team members to the OWNERS file",
    "body": "Add team members to the OWNERS file for PR approvals and reviews"
  },
  {
    "id": "372",
    "type": "pullRequest",
    "title": "OCPBUGS-45698: Updating ose-cluster-openshift-controller-manager-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-openshift-controller-manager-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-openshift-controller-manager-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "370",
    "type": "pullRequest",
    "title": "API-1835: bump library-go",
    "body": "to pull all changes that have been made. needs to be backported to 4.18."
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "CNTRLPLANE-55: Add MinimallySufficientPodSecurityStandard annotation to namespaces",
    "body": "What CNTRLPLANE-55( Add the annotation `MinimallySufficientPodSecurityStandard` to namespaces via the `PodSecurityAdmissionLabelSynchronizationController`. The annotation stores the pod security decision made for the namespace. Why - Once a customer changes the labels and the label syncer doesn't set them anymore, we don't know what it would have picked. - Knowing that is important, in case that the label syncer would set the enforce label."
  },
  {
    "id": "160",
    "type": "pullRequest",
    "title": "WRKLDS-1653: bump(k8s): update k8s.io/ dependencies to v1.32.2"
  },
  {
    "id": "148",
    "type": "pullRequest",
    "title": "MON-3866: chore: csr: Add approver for monitoring CSRs issued for metrics-server",
    "body": "Also updates the library-go dep to get Currently, cluster-policy-controller only approves CSR with `prometheus-k8s` as the certificate subject. With we need to issue a separate certificate for `metrics-server` SA. (we want to remove the dependency on prometheus' + ease/improve client identification)"
  },
  {
    "id": "159",
    "type": "pullRequest",
    "title": "OCPBUGS-45829: Updating ose-cluster-policy-controller-container image to be consistent with ART for 4.19 ++"
  },
  {
    "id": "627",
    "type": "pullRequest",
    "title": "OCPBUGS-54590: Samples Operator should sort failing image imports"
  },
  {
    "id": "626",
    "type": "pullRequest",
    "title": "OCPBUGS-54589: Adding filter to clusterOperatorInformerEventHandler",
    "body": "Adding a filter to only trigger it there are events with openshift-samples on clusterOperatorInformerEventHandler"
  },
  {
    "id": "625",
    "type": "pullRequest",
    "title": "OCPBUGS-54591: only update LastTransitionTime if operator status change",
    "body": "Samples Operator should update the LastTransitionTime only if the status of the operator changes."
  },
  {
    "id": "622",
    "type": "pullRequest",
    "title": "OCPBUGS-54471: Periodic sync of supported OCP samples",
    "body": "Syncing the latest supported OCP samples from the library. Created using"
  },
  {
    "id": "621",
    "type": "pullRequest",
    "title": "OCPBUGS-54479: Periodic sync of OKD samples",
    "body": "Syncing the latest samples from the library to OKD. Created using"
  },
  {
    "id": "618",
    "type": "pullRequest",
    "title": "OCPBUGS-54349: cluster-samples-operator - fix failing unit tests MacBook (ARM chip)",
    "body": "Unit tests currently fail on a Macbook Pro with an Arm chip: 1. clone the CSO 2. cd ./openshift/cluster-samples-operator/pkg/stub 3. run the unit tests in a Macbook Termninal on a Macbook Pro M3 with an Arm chip and grep for failures: go test . | grep FAIL: --- FAIL: TestManagementState (0.00s) --- FAIL: TestProcessed (0.00s) --- FAIL: TestImageStreamEvent (0.00s) --- FAIL: TestImageStreamErrorRetry (0.00s) --- FAIL: TestTemplateEvent (0.00s) --- FAIL: TestImageStreamCreateErrorDegradedReason (0.00s) --- FAIL: TestImageGetError (0.00s) --- FAIL: TestImageUpdateError (0.00s) --- FAIL: TestTemplateGetError (0.00s) --- FAIL: TestTemplateUpsertError (0.00s) --- FAIL: TestBadTopDirList (0.00s) --- FAIL: TestBadSubDirList (0.00s) This is because the Architecture type is used in the component code and the tests must take an ARM chip into account for a Macbook Pro M3. With the modifications as per the PR, the tests now succeed on a Macbook Pro M3 with an Arm chip: go clean -testcache && go test . ok github.com/openshift/cluster-samples-operator/pkg/stub 0.518s dmalone@dmalone-mac stub % These tests also continue to succeed on a RHEL 9 X86_64 Linux VM: cloud-user@rh-dmalone-rhel-9 stub$ go clean -testcache && go test . ok github.com/openshift/cluster-samples-operator/pkg/stub 0.019s"
  },
  {
    "id": "614",
    "type": "pullRequest",
    "title": "OCPBUGS-54216: Update the k8s API version",
    "body": "update k8s.io/api, k8s.io/apimachinery, k8s.io/apiserver and k8s.io/client-go to v0.32.3 to be in line with OpenShift."
  },
  {
    "id": "616",
    "type": "pullRequest",
    "title": "OCPBUGS-54347: add rhdmalone to owners"
  },
  {
    "id": "613",
    "type": "pullRequest",
    "title": "OCPBUGS-54149: Updates to README.md",
    "body": "There are 2 broken hyperlinks in the README.md file for the Cluster Samples operator. Basically, the 2 links have been broken for several releases and renaming master to main won't have fixed them. Also, the value \"Failing\" for the \"CVO Cluster Operator Status\" needs to be changed to \"Degraded\" to match the online documentation and the code For further details, please see the README.md changes and the Jira OCPBUGS-54149"
  },
  {
    "id": "609",
    "type": "pullRequest",
    "title": "OCPBUGS-52848: Unrevert the revert \"OCPBUGS-45049: Adding mutex to func createSamples on handler.go\"",
    "body": "Reverts openshift/cluster-samples-operator607 This proved not to be the issue."
  },
  {
    "id": "608",
    "type": "pullRequest",
    "title": "OCPBUGS-52848: Unrevert the revert \"OCPBUGS-52346: bump x/oauth2 to version 0.27.0\"",
    "body": "Reverts openshift/cluster-samples-operator606"
  },
  {
    "id": "606",
    "type": "pullRequest",
    "title": "OCPBUGS-52848: Revert \"OCPBUGS-52346: bump x/oauth2 to version 0.27.0\"",
    "body": "Reverts Samples operator is the only one that is failing the nightly now and we are running out of ideas as to what could be the cause for this. We are reverting both and and see if that will make a difference with the official payload run. If proven unrelated, please unrevert this revert and have the change reintroduced to main."
  },
  {
    "id": "607",
    "type": "pullRequest",
    "title": "OCPBUGS-52848: Revert \"OCPBUGS-45049: Adding mutex to func createSamples on handler.go\"",
    "body": "Reverts Samples operator is the only one that is failing the nightly now and we are running out of ideas as to what could be the cause for this. We are reverting both and and see if that will make a difference with the official payload run. If proven unrelated, please unrevert this revert and have the change reintroduced to main."
  },
  {
    "id": "603",
    "type": "pullRequest",
    "title": "OCPBUGS-52379: relevant references to master renamed in README.md",
    "body": "README.md - the relevant references to master have been changed to main"
  },
  {
    "id": "602",
    "type": "pullRequest",
    "title": "OCPBUGS-52346: bump x/oauth2 to version 0.27.0",
    "body": "This also bumps go to version 1.23 which shouldn't be an issue as the base image being used on master is rhel-9-golang-1.23-openshift-4.19. Steps executed: $ go get -u golang.org/x/oauth2@v0.27.0 $ go mod tidy $ go mod vendor"
  },
  {
    "id": "601",
    "type": "pullRequest",
    "title": "OCPBUGS-45049: Adding mutex to func createSamples on handler.go",
    "body": "It seems that the error appears when iterating with some maps that are being readed on the createSamples func. Testing if putting a lock on the createSamples func avoids this type of situantion without affecting the performance of the component ~~~ fatal error: concurrent map iteration and map write goroutine 228 running: github.com/openshift/cluster-samples-operator/pkg/stub.(Handler).createSamples( 0xc000bf0200, 0x0, 0x0, 0xc000217740, 0xc00104ffb0) /go/src/github.com/openshift/cluster-samples-operator/pkg/stub/handler.go:1167( +0xc5 github.com/openshift/cluster-samples-operator/pkg/stub.(Handler).Handle( {{0x253b590?, 0xc000a22600?}, 0x0?}) /go/src/github.com/openshift/cluster-samples-operator/pkg/stub/handler.go:952( +0x1c34 github.com/openshift/cluster-samples-operator/pkg/operator.(Controller).handleWork( {0x2533b80?, 0x39250c8}, {0x1db2ea0?, 0xc000b3f460}) ~~~ ~~~ 2024-11-05T22:47:35.818480092Z time=\"2024-11-05T22:47:35Z\" level=info msg=\"clearImageStreamTagError: stream fuse7-karaf-openshift-jdk11 already deleted so no worries on clearing tags\" 2024-11-05T22:47:35.818480092Z time=\"2024-11-05T22:47:35Z\" level=info msg=\"There are no more errors or image imports in flight for imagestream fuse7-karaf-openshift-jdk11\" 2024-11-05T22:47:35.827118301Z fatal error: concurrent map iteration and map write 2024-11-05T22:47:35.829238519Z 2024-11-05T22:47:35.829238519Z goroutine 251 running: 2024-11-05T22:47:35.829238519Z github.com/openshift/cluster-samples-operator/pkg/stub.(Handler).createSamples(0xc000932f20, 0xc000d82c00, 0x0, 0x0, 0xc000342ed0, 0xc000342ea0) 2024-11-05T22:47:35.829238519Z /go/src/github.com/openshift/cluster-samples-operator/pkg/stub/handler.go:1221 +0x516 2024-11-05T22:47:35.829257997Z github.com/openshift/cluster-samples-operator/pkg/stub.(Handler).Handle(0xc000932f20, {{0x253b590?, 0xc001141000?}, 0xb0?}) 2024-11-05T22:47:35.829257997Z /go/src/github.com/openshift/cluster-samples-operator/pkg/stub/handler.go:952 +0x1c34 ~~~"
  },
  {
    "id": "592",
    "type": "pullRequest",
    "title": "OCPBUGS-30313: Removing reference of registry.access.redhat.com",
    "body": "Testing the removal of registry.access.redhat.com on redHatRegistriesFound and redHatRegistriesDomainFound functions The objective of this is to see if the tests actually passes with the removal of this registry as the imagestreams should be able to be created even if registry.access.redhat.com is not on the registrySources.allowedRegistries of the image.config/cluster CR"
  },
  {
    "id": "593",
    "type": "pullRequest",
    "title": "OCPBUGS-48182: add shannon and aroyoredhat as owners",
    "body": "As OCP sustaining takes on responsibility for the Cluster Samples Operator component, shannon and aroyoredhat need to be added as owners."
  },
  {
    "id": "591",
    "type": "pullRequest",
    "title": "OCPBUGS-45597: Updating ose-cluster-samples-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-samples-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-samples-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "577",
    "type": "pullRequest",
    "title": "NO-JIRA: correct cinder operator CredentialsRequest name",
    "body": "- The cinder csi driver operator CredentialsRequest name uses `openshift-cluster-csi-drivers` seems a bit mislead, correct it to `openstack-cinder-csi-driver-operator` which is more clear which operator uses it."
  },
  {
    "id": "576",
    "type": "pullRequest",
    "title": "OCPBUGS-54491: sync Azure File permissions with upstream docs",
    "body": "If users configure a storage class with `networkEndpointType: privateEndpoint` parameter CSI driver will fail to provision a volume due to missing permissions. I've cross checked the OCPBUGS-54491 bug report with upstream documentation to see what we miss and also noticed a few more that were also missing upstream when testing the private endpoints manually. After discussing this with upstream the list was extended with the missing ones: This CredentialsRequest object is used when installing or upgrading cluster, by extracting it from payload and passing it to `ccoctl` which creates Azure roles with the permissions listed. This might result in granting more privileges than most users need. Alternatively we could drop this change and only document the process, which would require additional manual step for users intending to use private endpoints."
  },
  {
    "id": "574",
    "type": "pullRequest",
    "title": "STOR-2078: Enable VolumeAttributesClass for GCP-PD",
    "body": "Enabling VolumeAttributesClass for GCP-PD driver and adding needed resources."
  },
  {
    "id": "557",
    "type": "pullRequest",
    "title": "OSASINFRA-3731: openstack: Consume CA cert from CCO secret",
    "body": "In openshift/cloud-credential-operator/pull/780, we have added the ability for `cloud-credential-operator` to consume a CA cert from the root credentials secret and to include in the credentials secrets it provisions. In openshift/installer/pull/9194, we have modified the Installer to start setting this field where necessary. Adapt the assets for both the openstack-cinder and openstack-manila CSI drivers to start consuming this field, where present. We maintain fallbacks for the previous locations of the cert for now, but these can be removed in the next release. This needs wait for the CCO change to be approved before we merge this. /hold"
  },
  {
    "id": "564",
    "type": "pullRequest",
    "title": "STOR-2126: Enable readOnlyFileSystem",
    "body": "Enable readOnlyFileSystem in the operator for security concerns. Recommended for all containers running in kubernetes."
  },
  {
    "id": "570",
    "type": "pullRequest",
    "title": "STOR-1878: Run operators without root user control",
    "body": "- remove obsolete assets/csidriveroperators/azure-file-original directory - add securityContext.runAsNonRoot=true to operator deployments - make update /cc @openshift/storage"
  },
  {
    "id": "569",
    "type": "pullRequest",
    "title": "STOR-1881: Role and ClusterRole with too wide permissions",
    "body": "- rbac: drop obsolete csi.openshift.io apiGroup - rbac: remove wildcard for vsphere cns.vmware.com apiGroup /cc @openshift/storage"
  },
  {
    "id": "568",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "566",
    "type": "pullRequest",
    "title": "OCPBUGS-24588: bump library-go",
    "body": "To pull deployment controller fix:"
  },
  {
    "id": "554",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 Notes: - Updated calls for functions with new parameter clock"
  },
  {
    "id": "528",
    "type": "pullRequest",
    "title": "CFE-1131: Added token minter Sidecar for aws-ebs hypershift-deployments",
    "body": "Added Sidecar minter for aws-ebs-csi-driver-operator hypershift-deployments"
  },
  {
    "id": "556",
    "type": "pullRequest",
    "title": "OCPBUGS-50668: fix Vsphere cluster Storage operator in Unavailable state",
    "body": "During upgrade from 4.15 to 4.16 an error can happen when VSphereProblemDetectorDeploymentControllerAvailable condition is present from 4.15, but 4.16 and later versions don't use it anymore and users can get stuck during upgrade. This PR fixed the problem. To test, add the condition using `oc edit --subresource=status --output-patch storage cluster`, after that CSO should remove it. @openshift/storage"
  },
  {
    "id": "550",
    "type": "pullRequest",
    "title": "STOR-2078: VolumeAttributesClasses typo in resources",
    "body": "VolumeAttributesClasses typo in resources"
  },
  {
    "id": "551",
    "type": "pullRequest",
    "title": "OCPBUGS-45073: Support HCP labels",
    "body": "HCP is adding a new API field to allow users creating HCP clusters to set custom labels on all HCP pods cluster-storage-operator needs to integrate this feature in the same way it integrated the NodeSelector feature for HCP."
  },
  {
    "id": "549",
    "type": "pullRequest",
    "title": "STOR-2078: Typo in clusterRole resources for VolumeAttributesClasses",
    "body": "Noted: Resources are in plural form."
  },
  {
    "id": "546",
    "type": "pullRequest",
    "title": "OCPBUGS-45617: Updating ose-cluster-storage-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-storage-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: cluster-storage-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "544",
    "type": "pullRequest",
    "title": "OCPBUGS-45737: Remove unecessary resources from the guest cluster",
    "body": "In hypershift the guest has no operator running, so no resources related to it should be created there. This commit removes the creation of service account, role and role binding."
  },
  {
    "id": "545",
    "type": "pullRequest",
    "title": "STOR-2078: Add RBAC rule for Volumeattributesclass"
  },
  {
    "id": "542",
    "type": "pullRequest",
    "title": "STOR-2078: Add OPERATOR_IMAGE_VERSION var to AWS-EBS operator",
    "body": "Adding `OPERATOR_IMAGE_VERSION` variable to AWS EBS operator."
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "NO-JIRA: Updating openshift-ci-release-key for 2 years",
    "body": "The release-controller's Signer key is set to expire at the end of this month. The PR introduces the new public key that will be able to read the signatures produced when the Signer's private key is updated. The private key was created with an expiration date of: `2027-03-31` (2 years from the end of this month)."
  },
  {
    "id": "1172",
    "type": "pullRequest",
    "title": "OTA-1403: Add an always passing test case",
    "body": "Will rebase after gets in."
  },
  {
    "id": "1177",
    "type": "pullRequest",
    "title": "NO-JIRA: make verify"
  },
  {
    "id": "1165",
    "type": "pullRequest",
    "title": "OCPBUGS-23514: Failing=Unknown upon long CO updating",
    "body": "When it takes too long (90m+ for machine-config and 30m+ for others) to upgrade a cluster operator, clusterversion shows a message with the indication that the upgrade might hit some issue. This will cover the case in the related OCPBUGS-23538: for some reason, the pod under the deployment that manages the CO hit CrashLoopBackOff. Deployment controller does not give useful conditions in this situation 1. Otherwise, checkDeploymentHealth 2 would detect it. Instead of CVO's figuring out the underlying pod's CrashLoopBackOff which might be better to be implemented by deployment controller, it is expected that our cluster admin starts to dig into the cluster when such a message pops up. In addition to the condition's message. We propagate Fail=Unknown to make it available for other automations, such as update-status command. 1. 2."
  },
  {
    "id": "1171",
    "type": "pullRequest",
    "title": "NO-JIRA: manifests: make template manifests valid YAML",
    "body": "CVO manifests present in the payload contain plain templating `yada` placeholders where final manifests expect to contain strings, and because `{ }` has meaning in YAML, these manifests are invalid without template engine processing. CVO manifests are applied by CVO itself, which processes them through the templating engine, which makes them valid YAML. In an attempt to address OCPBUGS-30080, I want to process the CVO manifests through `oc adm release new` machinery, which requires them to be valid YAML."
  },
  {
    "id": "1176",
    "type": "pullRequest",
    "title": "OTA-1488: Remove USC code",
    "body": "For now we are not moving forward with the USC effort. It not necessary to build and include the code in the CVO binary, as well to carry the necessary docs. If we need ideas from USC we can find the code in Git history."
  },
  {
    "id": "1175",
    "type": "pullRequest",
    "title": "OTA-1488: Remove DevPreview USC manifests",
    "body": "We are shipping no USC functionality in 4.19, not even in DevPreview, so we should not include these manifests in the payload."
  },
  {
    "id": "1174",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix some issues identified by yamllint",
    "body": "See the rehearsal( for the details. The remained two will be fixed by ``` $ yamllint -v && yamllint --strict -d '{extends: default, rules: {indentation: {indent-sequences: consistent}, document-start: disable, line-length: disable}}' ./install yamllint 1.35.1 ./install/0000_00_cluster-version-operator_03_deployment.yaml 73:20 error too many spaces inside braces (braces) 73:36 error too many spaces inside braces (braces) ```"
  },
  {
    "id": "1168",
    "type": "pullRequest",
    "title": "OTA-1403: Create minimal openshift tests extension",
    "body": "Create a minimal Cluster Version Operator OpenShift tests extension. For more information regarding the extension, see openshift-eng/openshift-tests-extension( repository or the respective enhancement( This pull request references --- Following PRs will: - Include new targets in the Makefile. - `update` to run `_output/$OS/$ARCH/openshift-tests-extension update` this generates a file that contains metadata about existing tests, the `update` generates an error if some invalid changes were made - `verify` to verify no changes are present after the `update` invocation - Create a new job to run the `verify` on presubmits - Create the first test in the extension - Update the Dockerfile to include the extension binary in a payload image - Register the extension in origin - Add remaining tests"
  },
  {
    "id": "1173",
    "type": "pullRequest",
    "title": "NO-JIRA: Add unit test for renderManifest",
    "body": "The diff makes sense, of course. ```console $ cat ./install/0000_00_cluster-version-operator_03_deployment.yaml | grep '' image: {{.ReleaseImage - \"--release-image=.ReleaseImage\" value: .ClusterProfile $ diff -Naupr install/0000_00_cluster-version-operator_03_deployment.yaml pkg/payload/testdata/TestRenderManifest_expected_cvo_deployment.yaml --- install/0000_00_cluster-version-operator_03_deployment.yaml 2024-11-06 13:30:42 +++ pkg/payload/testdata/TestRenderManifest_expected_cvo_deployment.yaml 2025-03-27 09:59:50 @@ -25,11 +25,11 @@ spec: automountServiceAccountToken: false containers: - name: cluster-version-operator - image: .ReleaseImage + image: quay.io/cvo/release:latest imagePullPolicy: IfNotPresent args: - \"start\" - - \"--release-image=.ReleaseImage\" + - \"--release-image=quay.io/cvo/release:latest\" - \"--enable-auto-update=false\" - \"--listen=0.0.0.0:9099\" - \"--serving-cert-file=/etc/tls/serving-cert/tls.crt\" @@ -70,7 +70,7 @@ spec: fieldRef: fieldPath: spec.nodeName - name: CLUSTER_PROFILE - value: .ClusterProfile + value: some-profile this pod is hostNetwork and uses the internal LB DNS name when possible, which the kubelet also uses. this dnsPolicy allows us to use the same dnsConfig as the kubelet, without access to read it ourselves. dnsPolicy: Default ``` /cc @petr-muller"
  },
  {
    "id": "1169",
    "type": "pullRequest",
    "title": "OTA-1403: Move the CVO CLI Application to a Separate Folder",
    "body": "So that we can have multiple CLI applications in the `cmd` folder. For example, `cmd/cluster-version-operator/`, `cmd/cvo-tests/`, `cmd/cluster-version-operator-v2/`. Being done to tidy the folder for"
  },
  {
    "id": "1163",
    "type": "pullRequest",
    "title": "OTA-209: Add CVOConfiguration controller",
    "body": "The controller has an empty reconciliation logic as of now. The logic will be implemented in a follow-up PR. The goal of this PR is to introduce a new CVO controller, which can optionally (depending on the state of the `CVOConfiguration` feature gate) create a new informer."
  },
  {
    "id": "1164",
    "type": "pullRequest",
    "title": "OTA-1427: Reconcile all nodes via a special event",
    "body": "This PR addressed the remained comments from In the 1st commit it improves the error handling on `reconcileAllNodes()` (See 1 for details). Prior to this commit, the event on MC/MCP will be re-queued if `reconcileAllNodes()` hits an error. However, `syncMachineConfig()` (or `syncMachineConfigPool` respectively) is stateful, i.e., the result replies on the content of the caches that might be changed from the original event. With the commit, a special event stays between an MC/MCP event and `reconcileAllNodes()`. An error from the latter will re-queue the special event which basically means triggering another run of `reconcileAllNodes()`. The 2nd commit is to improve the code either for better readability or for better APIs from the lib. Sync.Map with powerful functions for atomic ops on a map is an example for the latter case. In the 3rd commit, it moves sync.Once into nodeInformerController controller level. As a result each nodeInformerController instance will execute the function once which makes more sense than doing it once grobally because what we do there is initialization of the caches that are associated with the instance. For the core code, it is not a big deal since we have only ONE instance of the controller. However, it matters for unit tests where there are many controllers. 1."
  },
  {
    "id": "1166",
    "type": "pullRequest",
    "title": "OCPBUGS-52258: pkg/cvo/updatepayload: Context around ValidateDirectory calls",
    "body": "These usually either succeed or give `os.IsNotExist`, but in some cases can return errors like1: Unable to download and prepare the update: stat /etc/cvo/updatepayloads/7WNaprXJNWTsPAepCHJ00Q/release-manifests/release-metadata: permission denied. To make it easier to debug those situations, this commit adds context to errors near `ValidateDirectory` calls, so it's more clear that the issue is the CVO's attempts to read `/etc/cvo/...` failing, and not an error with the `version-...` Pod, registry access, etc. Also while I'm in this space, I've replaced the old `errors.Wrap` in `ImageForShortName` with `fmt.Errorf(...%w, ...)`, now that the Go standard libraries support error-wrapping like that. One fewer 3rd-party dependency call-site. 1:"
  },
  {
    "id": "1159",
    "type": "pullRequest",
    "title": "NO-JIRA: Use k8s.sets for the fields of ClusterCapabilities",
    "body": "Will rebase after"
  },
  {
    "id": "1144",
    "type": "pullRequest",
    "title": "OTA-1427: Recompute node insights when MC/MCP changes",
    "body": "This is to address the following comments from the review 1: - Decide what to do with the code we copied from MCO ( - x Avoid iterating all MCP resource and re-computing selectors on every Node-triggered sync ( - x Recompute Node insights when MCP selectors change (changed selectors can change MCP membership, potentially making Node insights stale) ( - x Avoid iterating all MC resources on every Node-triggered sync ( - x Decide how to gracefully handle Nodes that are not matched by any MCP selector ( - Polishing condition reasons, messages and the \"summary\" insight message ( 1."
  },
  {
    "id": "1161",
    "type": "pullRequest",
    "title": "OTA-209: Add `ClusterVersionOperator` manifests",
    "body": "will be broken down into smaller PRs. This the initial PR. For more information regarding the resources, see This pull request references"
  },
  {
    "id": "1162",
    "type": "pullRequest",
    "title": "OTA-1418: Decribe informer-usc communication",
    "body": "Going from USC-scrapes-all-insights periodically to unidirectional message passing makes insight lifecycle a bit harder (if an informer is not saying anyting about an insight Status API knows about, is it just unchanged, or did the informer lose track of it?). List of known insight UIDs is lightweight-enough payload to be included in every message sent to USC and the USC can (eventually) drop the insights that the informer stops reporting as known, and can drop the insights the informer requests to be dropped. Unsure whether this mechanism survives until the final version but it is reasonably robust for the current state."
  },
  {
    "id": "1157",
    "type": "pullRequest",
    "title": "NO-JIRA: Rename fields in ClusterCapabilities for readability",
    "body": "Follow up Will rebase after gets in."
  },
  {
    "id": "1145",
    "type": "pullRequest",
    "title": "OTA-1427: Polish reason and message in Node's status insight",
    "body": "This is to address the following comments from the review 1: - Decide what to do with the code we copied from MCO ( - Avoid iterating all MCP resource and re-computing selectors on every Node-triggered sync ( - Recompute Node insights when MCP selectors change (changed selectors can change MCP membership, potentially making Node insights stale) ( - Avoid iterating all MC resources on every Node-triggered sync ( - Decide how to gracefully handle Nodes that are not matched by any MCP selector ( - x Polishing condition reasons, messages and the \"summary\" insight message ( 1."
  },
  {
    "id": "1131",
    "type": "pullRequest",
    "title": "NO-JIRA: Refactor for readability",
    "body": "Before we decide to use sets (K8S has util lib for sets) instead of maps for the fields from we may still do refactoring like these to improve the readability: - Removed an unused constant `CapabilityAnnotation` and removed `DefaultCapabilitySet` and use its reference directly. - Removed `setKnownCapabilities()` and `GetKnownCapabilities()`. Use `configv1.KnownClusterVersionCapabilities` instead. The logic is changed/improved a bit: A capability not enabled in all capSets is considered known now, but not before. - The args`existingEnabled` and `alwaysEnabled` were handled in the same way in the function `SetCapabilities`. We removed the `alwaysEnabled` in the function and send their union when calling the function."
  },
  {
    "id": "1160",
    "type": "pullRequest",
    "title": "OCPBUGS-50498: cvo: improve error handling on port collision",
    "body": "Return right away to avoid panicking if `net.Listen()` hits an error. Moreover, a more user-friendly log is printed out for the case by wrapping the error with more context."
  },
  {
    "id": "1149",
    "type": "pullRequest",
    "title": "NO-JIRA: Update ClusterOperator Status Conditions to `listType=map`",
    "body": "Generally, conditions are a listType map, which allows multiple actors via SSA to set individual conditions. We are building a suite of controllers which we plan to set low lever conditions, and have a aggregate controller look at these lower level conditions to set our top level conditions. Our intention was to use SSA, but without these markers, we can only write the whole list of conditions on each update, and this will cause conflicts. Existing clients should not be affected as they already write the entire list. This is based on 1147 for now as I needed the updated deps /hold need to merge before we can continue Opening this so that we can double check E2Es with this change"
  },
  {
    "id": "1093",
    "type": "pullRequest",
    "title": "OTA-861: Generate an accepted risk for Y-then-Z upgrade",
    "body": "This one will be rebased after is merged."
  },
  {
    "id": "1156",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix a few AMD64-oriented tests on Non-AMD64 machines",
    "body": "Those tests fail on e.g., the arm64 machine. ```console $ go test -v -count 1 ./pkg/cvo/... Skipped' availableupdates_test.go:167: Skipped the test on arm64 --- SKIP: TestSyncAvailableUpdates (0.00s) cvo_test.go:2786: Skipped the test case \"no operator or ClusterVersion upstream uses the default update service\" on arm64 cvo_test.go:2786: Skipped the test case \"report an error condition when channel isn't set\" on arm64 cvo_test.go:2786: Skipped the test case \"report an error condition when no current version is set\" on arm64 cvo_test.go:2786: Skipped the test case \"report an error condition when the http server reports an error\" on arm64 cvo_test.go:2786: Skipped the test case \"set available updates and clear error state when success and empty\" on arm64 cvo_test.go:2786: Skipped the test case \"calculate available update edges\" on arm64 cvo_test.go:2786: Skipped the test case \"operator update service takes precedence over ClusterVersion upstream\" on arm64 --- SKIP: TestOperator_availableUpdatesSync/no_operator_or_ClusterVersion_upstream_uses_the_default_update_service (0.16s) --- SKIP: TestOperator_availableUpdatesSync/report_an_error_condition_when_channel_isn't_set (0.00s) --- SKIP: TestOperator_availableUpdatesSync/report_an_error_condition_when_no_current_version_is_set (0.00s) --- SKIP: TestOperator_availableUpdatesSync/report_an_error_condition_when_the_http_server_reports_an_error (0.00s) --- SKIP: TestOperator_availableUpdatesSync/set_available_updates_and_clear_error_state_when_success_and_empty (0.00s) --- SKIP: TestOperator_availableUpdatesSync/calculate_available_update_edges (0.00s) --- SKIP: TestOperator_availableUpdatesSync/operator_update_service_takes_precedence_over_ClusterVersion_upstream (0.00s) ```"
  },
  {
    "id": "1150",
    "type": "pullRequest",
    "title": "OTA-1418: USC: Drop unknown insights after grace period",
    "body": "When we first see an insight in the API that is no longer known by the informer that originally reported it, mark it for expiration instead of dropping it right away. If it becomes known again, unmark the expiration. If it does not become known until expired, drop it from the API."
  },
  {
    "id": "1155",
    "type": "pullRequest",
    "title": "NO-JIRA: `status`: extract API types to a package",
    "body": "We are temporarily using API types that will eventually come via importing openshift/api = under a package. Extract the current API types to a subpackage, so everything we use from it is used through a package (e.g. `updatestatus.THING` instead of just `THING`). This will make an eventual switch to the proper API easier. There are no functional changes, the code is just moved around /cc @DavidHurta /auto-cc"
  },
  {
    "id": "1147",
    "type": "pullRequest",
    "title": "OTA-209: Bump `github.com/openshift/client-go`",
    "body": "Bump the `github.com/openshift/client-go` module. The module was being bumped in the pull request; however, I have decided to separate the two efforts as the commits and issues were growing."
  },
  {
    "id": "1148",
    "type": "pullRequest",
    "title": "OTA-209: Resolve lint issues",
    "body": "These issues are not currently detected by the `ci/prow/lint` job as the job uses the version `v1.54.2` of the `golangci-lint` tool 1( It is needed to update the tool to support go `1.23`, which will be introduced in PR. However, updating the tool right now in would cause the `ci/prow/lint` presubmit to fail on PRs( Fix the lint issues in this PR. After that, we will update the `golangci-lint` tool. No disruptions to existing PRs will be introduced."
  },
  {
    "id": "1141",
    "type": "pullRequest",
    "title": "OTA-1418: Allow forcing health insights on CV",
    "body": "OTA-1418( Allow forcing health insights on CV When a `ClusterVersion` is annotated with `usc.openshift.io/force-health-insight`, make USC emit a health insight, suitable for testing health insight lifecycle. Note that such health insight never goes away for now; this will be addressed by followup PRs. Health insights UIDs are a hash of the insight message and the resources involved. This will become problematic if we ever want to do aggregation, but for now it suits the purpose. Builds on 1138 /cc @hongkailiu /auto-cc"
  },
  {
    "id": "1138",
    "type": "pullRequest",
    "title": "OTA-1339: USC: Pull latest UpdateStatus API code",
    "body": "The `UpdateStatus` API PR was recently updated to a version proposed for review & potential approval and merge."
  },
  {
    "id": "1136",
    "type": "pullRequest",
    "title": "OTA-1427: USC: Maintain status insights for Nodes"
  },
  {
    "id": "1142",
    "type": "pullRequest",
    "title": "OTA-1427: Add hack/test-usc-integration.sh to start testing USC in CI",
    "body": "Required by /cc @petr-muller /auto-cc"
  },
  {
    "id": "1135",
    "type": "pullRequest",
    "title": "OTA-1411: USC: Maintain status insights for ClusterOperator resources"
  },
  {
    "id": "1130",
    "type": "pullRequest",
    "title": "OTA-209: Bump `github.com/openshift/api`",
    "body": "Steps: ``` $ go get github.com/openshift/api $ go mod tidy $ go mod vendor $ go mod verify ``` So that we can use the new `ClusterVersionOperator` API."
  },
  {
    "id": "1125",
    "type": "pullRequest",
    "title": "OCPBUGS-45922: CONTRIBUTING.md: Rename `master` to `main`",
    "body": "From OCPBUGS-45922: Review your repository content for any assumptions related to branch naming. In rare scenarios, this may require opening pull requests against the target git repository to adopt the new \"main\" branch convention. For any such PR: Ensure the PR is on /hold. Ensure the PR is lgtm and approved. Link the PR to this ticket by adding the ticket ID to the PR's title."
  },
  {
    "id": "1107",
    "type": "pullRequest",
    "title": "OTA-1269: USC: Add `DevPreviewNoUpgrade`-gated manifests",
    "body": "- x Builds on: - x Blocked by: (fails hypershift without that change) --- - Namespace - ServiceAccount - Role that allows read, watch & update ConfigMaps (+binding) - ClusterRole that allows read & watch ConfigVersions (+rolebinding) - Deployment Squashed review commits: USC: Do not tolerate taints The original Deployment was copied from CVO which contained a bunch of strong tolerations. It does not seem USC needs to be this robust against node conditions and can be easily evicted if necessary. USC: Use `openshift-user-critical` priority class The original USC deployment was copied from CVO which is obviously very important component and should be protected from OOM kills and preemption but USC does not seem to need it. If it is fine for your operator/operand to be preempted by user-workload and OOMKilled use openshift-user-critical priority class"
  },
  {
    "id": "1127",
    "type": "pullRequest",
    "title": "NO-ISSUE: Simplify the preconditions code",
    "body": "Follow up and"
  },
  {
    "id": "1123",
    "type": "pullRequest",
    "title": "OCPBUGS-45777: Updating cluster-version-operator-container image to be consistent with ART for 4.19",
    "body": "Updating cluster-version-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: cluster-version-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1112",
    "type": "pullRequest",
    "title": "OCPBUGS-44860: pkg/payload/precondition/clusterversion: New GiantHop update precondition",
    "body": "From our docs1: Due to fundamental Kubernetes design, all OpenShift Container Platform updates between minor versions must be serialized. You must update from OpenShift Container Platform `4.y` to `4.y+1`, and then to `4.y+2`. You cannot update from OpenShift Container Platform `4.y` to `4.y+2` directly. However, administrators who want to update between two even-numbered minor versions can do so incurring only a single reboot of non-control plane hosts. This commit adds a new precondition that enforces that policy, so cluster admins who run `--to-image ...` don't hop straight from `4.y.z` to `4.(y+2).z'` or similar without realizing that they were outpacing testing and policy. 1:"
  },
  {
    "id": "1115",
    "type": "pullRequest",
    "title": "OCPBUGS-45324: deps: bump golang.org/x/net to 0.31.0",
    "body": "Created by: ```console $ go get -u golang.org/x/net go: downloading golang.org/x/sync v0.9.0 go: upgraded golang.org/x/crypto v0.27.0 = v0.29.0 go: upgraded golang.org/x/net v0.29.0 = v0.31.0 go: upgraded golang.org/x/sync v0.8.0 = v0.9.0 go: upgraded golang.org/x/sys v0.25.0 = v0.27.0 go: upgraded golang.org/x/term v0.24.0 = v0.26.0 go: upgraded golang.org/x/text v0.18.0 = v0.20.0 $ go mod tidy $ go mod vendor ```"
  },
  {
    "id": "1106",
    "type": "pullRequest",
    "title": "OCPBUGS-31462: Set `openshift.io/required-scc: privileged` annotation in `version` pods",
    "body": "pkg/cvo/updatepayload.go: Set openshift.io/required-scc: privileged for version pods( Utilize the `openshift.io/required-scc` annotation 1 to pin the required SCC to `version` pods. This will ensure that any existing custom SCCs in the cluster will not have an effect on the `version` pods. The `privileged` default SCC 2 was chosen as the pod accesses and modifies host `/etc/` files. To do that, a pod must run as root and must also pass SELinux permission checks. This is currently achieved by the pod running as a privileged root. For such permission, the `privileged` default SCC is required. Using the `hostmount-anyuid` default SCC is not sufficient for the existing code as the pod is not able to pass the SELinux permissions checks. Additional SELinux, host file system, and/or code changes would be needed. In the future, we may implement such changes or try to use a local persistent volume 3 as running the version pod as privileged root is undesirable for the pod's goal of copying files into another pod. Some of the other alternatives are modifications to the current architecture of two separate pods or using a different type of volume. 1 2 3"
  },
  {
    "id": "1105",
    "type": "pullRequest",
    "title": "OTA-1307: pkg/cvo/updatepayload: Drop the Job controller for release-manifests downloads",
    "body": "Previously, the CVO launched a Job and waited for it to complete to get manifests for an incoming release payload. But the Job controller doesn't bubble up details about why the pod has trouble (e.g. Init:SignatureValidationFailed), so to get those details, we need direct access to the Pod. The Job controller doesn't seem like it's adding much value here, so we're dropping it and monitoring the Pod ourselves."
  },
  {
    "id": "66",
    "type": "pullRequest",
    "title": "OCPBUGS-45705: Updating configmap-reload-container image to be consistent with ART for 4.19",
    "body": "Updating configmap-reload-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: configmap-reload.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "15038",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55972: Wrap ListPageHeader action with a div",
    "body": "This is an automated cherry-pick of 15008 /assign rhamilto"
  },
  {
    "id": "15036",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55961: resolve http Context and Client handling",
    "body": "This is an automated cherry-pick of 15009 /assign vikram-raj"
  },
  {
    "id": "15034",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55959: add data-quickstart-id to quick create button",
    "body": "This is an automated cherry-pick of 14998 /assign vikram-raj"
  },
  {
    "id": "15018",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55702: fix bug where Critical Alerts section cannot be collapsed",
    "body": "This is an automated cherry-pick of 15015 /assign rhamilto"
  },
  {
    "id": "15027",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55814: Add DEVCONSOLE_PROXY flag",
    "body": "This is an automated cherry-pick of 15006 /assign vikram-raj"
  },
  {
    "id": "15007",
    "type": "pullRequest",
    "title": "OCPBUGS-55414: fix runtime error on MachineConfigPools page",
    "body": "After Note the existing behavior of the page is different depending upon whether or not a project exists for the user. img width=\"1441\" alt=\"Screenshot 2025-04-28 at 9 36 38 AM\" src=\" / img width=\"1376\" alt=\"Screenshot 2025-04-28 at 9 42 21 AM\" src=\" /"
  },
  {
    "id": "15011",
    "type": "pullRequest",
    "title": "OCPBUGS-55448: Fix +Add details switch animation regression",
    "body": "before: after:"
  },
  {
    "id": "15012",
    "type": "pullRequest",
    "title": "OCPBUGS-55454: Disable web terminal and Shipwright e2e",
    "body": "Disabling the Web terminal e2e in CI as it is failing and blocking the other PRs."
  },
  {
    "id": "14988",
    "type": "pullRequest",
    "title": "OCPBUGS-53443: Check for ACM when hiding switcher",
    "body": "fixes"
  },
  {
    "id": "14996",
    "type": "pullRequest",
    "title": "ODC-7727: Change favourites button defaultName",
    "body": "The favourites button previously always used the URL for the default name. This causes some strange names such as the `openshift` being the default name for routes like `/helm-repositories/ns/openshift`. This PR changes the behaviour so that if the `PageHeading` title is passed as a string, the defaultName will be that title. Now, the default favourites name for `/helm-repositories/ns/openshift` is `Helm Repositories`. You can now also press Enter to submit the favourites modal. Before pressing enter would do nothing /assign @rhamilto /label px-approved /label docs-approved /label qe-approved"
  },
  {
    "id": "14995",
    "type": "pullRequest",
    "title": "CONSOLE-4492: fix: do not render if listpageheader has no props",
    "body": "/assign @rhamilto"
  },
  {
    "id": "14991",
    "type": "pullRequest",
    "title": "OCPBUGS-55252: fix bug where tab underline is missing",
    "body": "Reverts 14987 Updates PF to 6.2.2 which fixes tab underline regression"
  },
  {
    "id": "14994",
    "type": "pullRequest",
    "title": "NO-JIRA: Deprecate `react-router-dom-v5-compat`",
    "body": "We should probably deprecate this now in case 14957 doesn't make it on time /label px-approved /label qe-approved docs approval: /assign @opayne1"
  },
  {
    "id": "14965",
    "type": "pullRequest",
    "title": "OCPBUGS-54670: Use PF component group for PageHeading",
    "body": "follow up on 14875 adopts PF PageHeader( for console's main heading component. no major UI changes should appear in this PR (e.g., create buttons appearing in a separate row as the title), except for two: operator details now have a line between the operator icon and the operator name. badges are also now placed next to the title. fixes small a11y issue where heading actions were inside of the `h1` element when it shouldn't be"
  },
  {
    "id": "14980",
    "type": "pullRequest",
    "title": "OCPBUGS-54833: fix spacing of secondary action in notification drawer...",
    "body": "... alert heading In order to fix this bug, I opted to remove the remaining `package/patternfly` code that was in use and resulting in the bug and replaced it with the official PatternFly components. Additionally, I noticed some inconsistencies in a couple of the hard-coded alerts: 1. If the alert's secondary action (link on the right side of the title) matched the primary action (what happens when you click the alert itself), I removed the secondary action. 2. The `ServiceLevelNotification` alert is not clickable, so I removed the hover and moved the link to the body of the alert. After img width=\"383\" alt=\"Screenshot 2025-04-18 at 9 10 07 AM\" src=\" / img width=\"390\" alt=\"Screenshot 2025-04-18 at 9 10 12 AM\" src=\" /"
  },
  {
    "id": "14969",
    "type": "pullRequest",
    "title": "OCPBUGS-54976: Mark `withHandlePromise` HOC as Deprecated"
  },
  {
    "id": "14940",
    "type": "pullRequest",
    "title": "OCPBUGS-54656: Add space between quick start action list items",
    "body": "Fixes: Analysis / Root cause: Styling was missing Solution Description: Added the styling to align the Restart button to the end Screen shots / Gifs for design review: ---BEFORE---- img width=\"443\" alt=\"Screenshot 2025-04-07 at 2 19 49 PM\" src=\" / ---AFTER---- img width=\"435\" alt=\"Screenshot 2025-04-07 at 3 04 31 PM\" src=\" / ----- Unit test coverage report: NA Test setup: 1. Open any Quick Start 2. Click on start 3. See Restart button is aligned in middle Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14983",
    "type": "pullRequest",
    "title": "OCPBUGS-54601: fix bug where operator appears twice",
    "body": "when disableCopiedCSVs is true and the selected project matches the operator's default namespace Credit to @TheRealJon for this fix. Thank you! /assign @cajieh After img width=\"1240\" alt=\"Screenshot 2025-04-21 at 2 36 59 PM\" src=\" /"
  },
  {
    "id": "14978",
    "type": "pullRequest",
    "title": "OCPBUGS-45514: Add account email to the telemetry",
    "body": "Frontend change for /assign @TheRealJon"
  },
  {
    "id": "14979",
    "type": "pullRequest",
    "title": "CONSOLE-4464: Update PatternFly to latest"
  },
  {
    "id": "14955",
    "type": "pullRequest",
    "title": "OCPBUGS-54657: Expose OdcBaseNode through the dynamic plugin SDK",
    "body": "Fixes: Description: I have to export the type manually if I use require since I am only able to import the value not the type. I tried below approach also ``` import type { OdcBaseNode as OdcBaseNodeType } from '@console/topology/src/elements'; export const OdcBaseNode: OdcBaseNodeType = require('@console/topology/src/elements').OdcBaseNode; ``` but there are errors in yarn install and yarn run dev for this solution and still I was able to import just the value not the type."
  },
  {
    "id": "14972",
    "type": "pullRequest",
    "title": "OCPBUGS-55047: align spacing after breadrcumb with PatternFly",
    "body": "After img width=\"527\" alt=\"Screenshot 2025-04-15 at 5 17 46 PM\" src=\" / img width=\"531\" alt=\"Screenshot 2025-04-15 at 5 17 50 PM\" src=\" / img width=\"551\" alt=\"Screenshot 2025-04-15 at 5 17 53 PM\" src=\" / @PeterYurkovich, you're going to need to account for the removal of `.monitoring-breadcrumbs`. `.pf-v6-u-pb-md` is an easy subtitute."
  },
  {
    "id": "14974",
    "type": "pullRequest",
    "title": "OCPBUGS-55018: fix web terminal initialize form style",
    "body": "Before: Kubeadmin user img width=\"886\" alt=\"image\" src=\" / non-admin user img width=\"829\" alt=\"image\" src=\" / After: Kubeadmin user img width=\"1007\" alt=\"image\" src=\" / non-admin user img width=\"884\" alt=\"image\" src=\" /"
  },
  {
    "id": "14881",
    "type": "pullRequest",
    "title": "CONSOLE-4505: Update i18next package"
  },
  {
    "id": "14976",
    "type": "pullRequest",
    "title": "OCPBUGS-55084: fix bug where highlighting items from quickstart does ...",
    "body": "...not work After"
  },
  {
    "id": "14966",
    "type": "pullRequest",
    "title": "CONSOLE-4542: Remove base `dl` `dd` `dt` CSS",
    "body": "follow up on to remove unused `dl` `dd` `dt` CSS styles. adding labels for follow up PR: /label px-approved /label docs-approved /label qe-approved code review: /assign @rhamilto"
  },
  {
    "id": "14967",
    "type": "pullRequest",
    "title": "CONSOLE-4541: deprecate VirtualizedTable and ListPageFilter and useLi...",
    "body": "...stPageFilter"
  },
  {
    "id": "14949",
    "type": "pullRequest",
    "title": "CONSOLE-4524: Allow Deletion of Identity Providers (IDPs) via OpenShift Web Console",
    "body": "Screenshots: !Screenshot 2025-04-09 at 9 46 21 AM( !Screenshot 2025-04-09 at 9 46 29 AM( !Screenshot 2025-04-14 at 2 23 38 PM( !Screenshot 2025-04-09 at 9 47 18 AM( !Screenshot 2025-04-14 at 2 23 22 PM( img width=\"1876\" alt=\"Screenshot 2025-04-10 at 10 20 25 AM\" src=\" /"
  },
  {
    "id": "14902",
    "type": "pullRequest",
    "title": "OCPBUGS-43792: Load extensions in same order as plugins listed in SERVER_FLAGS global",
    "body": "Adjust how console dynamic plugin extensions are resolved so that the order can be controlled using the console operator config. The extensions will resolve in the same order as the list of enabled plugins in the console operator config. This means that cluster admins can choose which plugin takes priority when there are extension collisions for extension points like the Project modal where only one extension can be resolved and rendered."
  },
  {
    "id": "14952",
    "type": "pullRequest",
    "title": "ODC-7781: Running knative e2e tests from admin view",
    "body": "Story:ODC-7781( Description: Running knative e2e tests from admin view Command to execute: export NO_HEADLESS=true && export CHROME_VERSION=$(/usr/bin/google-chrome-stable --version) BRIDGE_KUBEADMIN_PASSWORD=YH3jN-PRFT2-Q429c-5KQDr BRIDGE_BASE_ADDRESS= export BRIDGE_KUBEADMIN_PASSWORD export BRIDGE_BASE_ADDRESS oc login -u kubeadmin -p $BRIDGE_KUBEADMIN_PASSWORD oc apply -f ./frontend/packages/console-shared/src/test-data/htpasswd-secret.yaml oc patch oauths cluster --patch \"$(cat ./frontend/packages/console-shared/src/test-data/patch-htpasswd.yaml)\" --type=merge In frontend folder run ./integration-tests/test-cypress.sh -p knative Run knative-ci file Browser Chrome 125"
  },
  {
    "id": "14956",
    "type": "pullRequest",
    "title": "OCPBUGS-54669: Enable project selector dropdown on Helm form in admin perspective"
  },
  {
    "id": "14968",
    "type": "pullRequest",
    "title": "OCPBUGS-54963: Fix visual regression with knative getting started card",
    "body": "before: !image( after: !image( pf5: !image("
  },
  {
    "id": "14929",
    "type": "pullRequest",
    "title": "OCPBUGS-54536: Use router link for OLM CSV empty state",
    "body": "fixes also replaces a few `a target=\"_blank\" ...` with `ExternalLink`s"
  },
  {
    "id": "14964",
    "type": "pullRequest",
    "title": "CONSOLE-4492: Use `helpText` for help text",
    "body": "follow up on 14875 fixes spacing regression in certain routes. also use `BreadcrumbItem` for linking to breadcrumbs to reduce dom nodes /assign @rhamilto follow up pr, adding labels: /label px-approved /label docs-approved /label qe-approved"
  },
  {
    "id": "14963",
    "type": "pullRequest",
    "title": "OCPBUGS-54878: Align left/right margins of add card items",
    "body": "fixes !image( code review: /assign @rhamilto"
  },
  {
    "id": "14947",
    "type": "pullRequest",
    "title": "CONSOLE-4542: Convert `dl`, `dd`, `dt` to PF `DescriptionList`",
    "body": "fixes example change: before: !image( after: !image("
  },
  {
    "id": "14958",
    "type": "pullRequest",
    "title": "CONSOLE-4538: Add error reporting link to `ErrorBoundary` modal",
    "body": "after: code review: /assign @spadgett adding labels for already approved ticket /label qe-approved /label docs-approved /label px-approved"
  },
  {
    "id": "14934",
    "type": "pullRequest",
    "title": "OCPEDGE-1614: hack: allow DualReplica in control plane topology validation"
  },
  {
    "id": "14921",
    "type": "pullRequest",
    "title": "OCPBUGS-36658: Fetching taskRuns in PLR details page using PLR UID also",
    "body": "Fixes: Analysis / Root cause: In TaskRun list page under PLR details page, TaskRuns were fetching based on name Solution Description: Added a condition to fetch based on UID also Screen shots / Gifs for design review: ---BEFORE---- ---AFTER---- ----- Unit test coverage report: NA Test setup: 1. Create Pipeline foo with Task bar 2. Create PipelineRun with name myplr using Pipeline foo 3. Wait until completion (spawns TaskRun myplr-bar) 4. In OpenShift web UI for PipelineRun myplr can see TaskRun myplr-bar 5. Delete PipelineRun myplr 6. Repeat step 2 & 3 Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14954",
    "type": "pullRequest",
    "title": "CONSOLE-4507: Clean up catalog view",
    "body": "Skeleton update Modal updates Improve layout at mobile by moving tabs after tiles at small resolutions"
  },
  {
    "id": "14945",
    "type": "pullRequest",
    "title": "CONSOLE-4520: Further PatternFly 6 bug fixes and cleanup",
    "body": "this PR fixes the following regressions and bugs (mostly as a result of the PF6 upgrade): - the sass variables `color-text-muted`, `color-text-secondary`, `color-primary`, and `color-error` are not PF tokens - an extra div in is rendered in `ListPageHeader` if there are no children, leading to a misalignment in the favourites icon for some plugins - the `QuickSearch` modal catalog icon alt text wasn't truncated, leading to some layout issues if some icons failed to load - the `viewContainer` in the `QuickSearch` modal has been removed. the modal now covers the entire screen (like a regular PF modal). this fixes a clipping issue when the browser window only takes up half of the screen - `co-suggestion-line` used base tokens for the background, which doesn't look right in dark mode - the web terminal loading screen text was not properly coloured - `cypress-axe` had a peer dependency mismatch after upgrading cypress - two versions of `esbuild` were installed when developing console locally (not great as esbuild is a ~10mb dev dependency) - the \"Add to project\" and \"Add to favourites\" tooltips were covering up other components - the `r` icon was slightly stretched - in the Machine list page, \"Create machine\" should be \"Create Machine\" as `Machine` is the name of a CR Since these bug fixes were pretty trivial, I bundled a bunch of them into one PR (instead of having 8 PRs), to reduce code review effort and merge queue time. let me know if any of them (or all of them) should be split up code review: /assign @rhamilto bug fix PR, adding labels: /label px-approved /label docs-approved /label qe-approved"
  },
  {
    "id": "14953",
    "type": "pullRequest",
    "title": "CONSOLE-4464: Update PatternFly to 6.2.0",
    "body": "fixes code review: /assign @rhamilto qe review: /assign @yapei /label px-approved /label docs-approved"
  },
  {
    "id": "14887",
    "type": "pullRequest",
    "title": "OCPBUGS-49870: Can't edit deployment (from the private git repository) in RHOCP 4.15 via console",
    "body": "Fixes: Analysis / Root cause: If repo is not reachable, by default build strategy was updated to Source Solution Description: If it is from dockerfile, updated the build strategy to Docker Screen shots / Gifs for design review: ---AFTER---- ----- Unit test coverage report: NA Test setup: 1.importing from a Git repository and a Docker image. 2. selected \"Edit api-assessment\" on the Deployment 3.the content on this page was set to \"Import from Dockerfile\", then unable to edit anything. Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14950",
    "type": "pullRequest",
    "title": "OCPBUGS-54733: fix bug where co-resource-icon--fixed-width can clip",
    "body": "After img width=\"503\" alt=\"Screenshot 2025-04-08 at 1 10 16 PM\" src=\" /"
  },
  {
    "id": "14889",
    "type": "pullRequest",
    "title": "OCPBUGS-52486: Notification drawer should have keyboard navigation focus when expanded.",
    "body": "Opened notification drawer should be prioritized for the tab/keyboard navigation. before: after: QE test scenario: 1. Navigate via keyboard (pressing TAB) 2. Open the notification drawer. 3. Try to navigate further via keyboard. Expected results: The navigation should continue on the opened drawer instead of the underlying page."
  },
  {
    "id": "14937",
    "type": "pullRequest",
    "title": "OCPBUGS-54540: fix flaking update-modal test"
  },
  {
    "id": "14948",
    "type": "pullRequest",
    "title": "OCPBUGS-54684: Remove orphaned notification drawer CSS class"
  },
  {
    "id": "14946",
    "type": "pullRequest",
    "title": "OCPBUGS-54492: metadata.name field is missing in PDB example YAML"
  },
  {
    "id": "14912",
    "type": "pullRequest",
    "title": "CONSOLE-4538: Use PF component groups for Error states",
    "body": "for follows the guidelines set out in Originally, I wanted to use the MissingPage( component group; however, there are issues with it in dark theme: adding labels for ticket part of pf6 upgrade /label px-approved /label docs-approved code review: /assign @rhamilto qe review: /assign @yapei 404ErrorPage not sure if we can link to `/search` like this. maybe I should remove that button? before: !( after: !( ErrorBoundary before: !( after: !( !("
  },
  {
    "id": "14911",
    "type": "pullRequest",
    "title": "ODC-7720: Further Developer Catalog - Software Catalog renaming",
    "body": "follow up fix for to decrease the mentions of \"developer catalog\" in the console codebase, which has since been renamed to \"software catalog\". follow up PR for approved ticket, adding labels /label px-approved /label docs-approved /label qe-approved /label acknowledge-critical-fixes-only"
  },
  {
    "id": "14920",
    "type": "pullRequest",
    "title": "CONSOLE-4540: add set as default sc action",
    "body": "DEMO"
  },
  {
    "id": "14850",
    "type": "pullRequest",
    "title": "ODC-7778: Include Quick create in Admin perspective guided tour",
    "body": "img width=\"597\" alt=\"image\" src=\" /"
  },
  {
    "id": "14932",
    "type": "pullRequest",
    "title": "ODC-6775, CONSOLE-4393: @types/node pre-merge prep",
    "body": "Pulling out the `jest.requireActual` change into a separate PR to make the changeset of smaller. This PR also includes the `classNames` import rewrite from in case that is needed for a future Jest upgrade. code review: /assign @jhadvig no docs/qe/px approval needed since this doesn't really affect anything: /label px-approved /label docs-approved /label qe-approved"
  },
  {
    "id": "14907",
    "type": "pullRequest",
    "title": "OCPBUGS-46526: Add BaseNode in topology folder into Dynamic Plugin SDK",
    "body": "Fixes: Description: Exposed below components to dynamic plugin ``` WorkloadNode PodSet BaseNode withContextMenu withCreateConnector ```"
  },
  {
    "id": "14923",
    "type": "pullRequest",
    "title": "OCPBUGS-54472: fix position of OpenShift Lightspeed button",
    "body": "Before img width=\"95\" alt=\"Screenshot 2025-04-01 at 9 59 59 AM\" src=\" / After img width=\"158\" alt=\"Screenshot 2025-04-01 at 10 16 01 AM\" src=\" /"
  },
  {
    "id": "14922",
    "type": "pullRequest",
    "title": "OCPBUGS-54461: Add missing `href` props to masthead items",
    "body": "fixes adds `href` prop so that users can now middle-click these masthead dropdown items. left-clicking still works and does not reload the page"
  },
  {
    "id": "14927",
    "type": "pullRequest",
    "title": "OCPBUGS-53065: Fix regression where normal Pod terminals are unresponsive.",
    "body": "Followup for The node debugging fix caused a regression where standard Pod terminals were unresponsive, when using attach command. Before this PR merged we were solely using exec command, which was working fine for pod terminals. Added a logic for passing a prop that specifies if the websocket will attach (for node debug pods) or exec (for standard pods) to the given pod, besides that the changes are bringing back the old code from `pod-exec.jsx` before merged. Renamed the `pod-attach.jsx` component to reflect the functional duality of the component. before: !Screenshot 2025-04-02 at 11 00 09( after: !Screenshot 2025-04-02 at 10 44 50( Possible test scenario: 1. Visit any Pod details page 2. Click on Terminal tab 3. Use the terminal"
  },
  {
    "id": "14930",
    "type": "pullRequest",
    "title": "OCPBUGS-54540: fix flaking update-modal test"
  },
  {
    "id": "14928",
    "type": "pullRequest",
    "title": "OCPBUGS-53167: Re-enable guided tour in admin perspective",
    "body": "Fixes:"
  },
  {
    "id": "14909",
    "type": "pullRequest",
    "title": "CONSOLE-4520: Further base token cleanup and fixes",
    "body": "fixes - removed most files in `frontend/public/components/overview` as they were orphaned - replaced many base tokens / some hard-coded colors with semantic token equivalents test cases: - not really sure how to test this. `qe-approved` should not be given if there are issues with colours in dark/light mode"
  },
  {
    "id": "14906",
    "type": "pullRequest",
    "title": "OCPBUGS-54265: Remove extra div in MultiTabListPage",
    "body": "fixes before: !image( after: !image("
  },
  {
    "id": "14924",
    "type": "pullRequest",
    "title": "OCPBUGS-54477: Remove char limit for favourite names",
    "body": "addresses feedback from @TheRealJon during sprint demo fixes after: !( code review: /assign @TheRealJon @rhamilto"
  },
  {
    "id": "14655",
    "type": "pullRequest",
    "title": "OCPBUGS-47723: always show 'Plugin available' button on CSV list no matter plugin enabled or not",
    "body": "- Show `Plugin available` button when associated plugin is `Disabled` - Show `Plugin available` button when associated plugin is `Enabled` - Also updated popover text"
  },
  {
    "id": "14361",
    "type": "pullRequest",
    "title": "NO-JIRA: adding new reference plugin: kuadrant"
  },
  {
    "id": "14925",
    "type": "pullRequest",
    "title": "OCPBUGS-54485: Add dark theme feedback graphic",
    "body": "fixes after: dark: !( light: !("
  },
  {
    "id": "14918",
    "type": "pullRequest",
    "title": "CONSOLE-4484: Fix `Skip to content` regression",
    "body": "follow up to fix an a11y regression I caused in The button now links to `content-scrollable` which is the div that contains the main content follow up PR for approved ticket, adding labels /label px-approved /label docs-approved /label qe-approved code review: /assign @rhamilto"
  },
  {
    "id": "14913",
    "type": "pullRequest",
    "title": "OCPBUGS-54436: Warning: React.useMemo has a missing dependency",
    "body": "Before: img width=\"1016\" alt=\"Screenshot 2025-03-29 at 1 05 09 AM\" src=\" / After: img width=\"1418\" alt=\"Screenshot 2025-03-29 at 1 08 05 AM\" src=\" /"
  },
  {
    "id": "14916",
    "type": "pullRequest",
    "title": "OCPBUGS-54430: Fix shifting play/pause button when loading",
    "body": "fixes before: after: code review: /assign @rhamilto"
  },
  {
    "id": "14651",
    "type": "pullRequest",
    "title": "OCPBUGS-46404: i18n translations for Export as CSV button",
    "body": "Before !Before-i18n( After !After("
  },
  {
    "id": "14851",
    "type": "pullRequest",
    "title": "OCPBUGS-52479: Fix OLM e2e tests",
    "body": "img width=\"1503\" alt=\"image\" src=\" / img width=\"1505\" alt=\"image\" src=\" /"
  },
  {
    "id": "14676",
    "type": "pullRequest",
    "title": "OCPBUGS-20230: Prevent yaml editor crash",
    "body": "Prevent yaml editor crash when editing a deployment with annotation `image.openshift.io/triggers: ''` fixes:"
  },
  {
    "id": "14783",
    "type": "pullRequest",
    "title": "ODC-7756, CONSOLE-4464: Bump PF6 to latest prereleases",
    "body": "fixes bumps console to the latest available PatternFly prereleases, so we can start testing them note that `marked` is a new peer dependency for quickstarts"
  },
  {
    "id": "14799",
    "type": "pullRequest",
    "title": "CONSOLE-4501: Add unit test for Timestamp component",
    "body": "This is a follow-on for OCPBUGS-51202( Add tests to prevent regressions in the Timestamp component."
  },
  {
    "id": "14880",
    "type": "pullRequest",
    "title": "CONSOLE-4521: Remove old polyfills",
    "body": "The following polyfills are no longer needed as we dropped Internet Explorer support: - - - - In a follow-up PR, I will remove unused node.js polyfills, after merges. code review: /assign @vojtechszocs QE review: /assign @yapei tech debt, adding labels: /label px-approved /label docs-approved"
  },
  {
    "id": "14863",
    "type": "pullRequest",
    "title": "OCPBUGS-52948: Multiple favorite icon on same page",
    "body": "Fixes: Analysis / Root cause: ListPageHeader component was present inside operator details page tab, so multiple Favorite button displayed. Solution Description: Favorite button is removed in operator details page tab. Screen shots / Gifs for design review: ----BEFORE--- !image (3)( ----- ---AFTER---- img width=\"1706\" alt=\"image\" src=\" / ----- Unit test coverage report: NA Test setup: 1. install Red Hat Serverless operator 2. navigate to Operator details knative serving page Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14898",
    "type": "pullRequest",
    "title": "OCPBUGS-53065: Debug pod logs are not accessible when debugging a node via OpenShift Console",
    "body": "Explanations behind changes: kubectl/oc exec( runs a command inside a new separate terminal outside of the main terminal process within the container. In contrast, attach( connects directly to the standard output and error streams of an already running main process. This is crucial towards the fix of the logs not showing the executed commands within the debug pod, because both UI and CLI logs are retrieving history from the main terminal process. Attaching the debug terminal to the main process allows for continuous log updates and ensures that the logs reflect the active state. Using attach instead of exec also corresponds( to the way node debug is implemented within oc CLI debug command."
  },
  {
    "id": "14891",
    "type": "pullRequest",
    "title": "CONSOLE-4462: Remove two more overrides",
    "body": "the `skip-to-content` override is not required as it's already the PF default: the second one is my opinion that we should align with PatternFly and use their preferred background color. removed `text-uppercase` class as that no longer does anything. I have talked to @nicolethoen regarding the intended the PF topology background color before, and she confirmed with designers that the intended color is \"secondary grey\" before: !( after: !( follow up ticket, adding labels /label px-approved /label docs-approved /label qe-approved"
  },
  {
    "id": "14901",
    "type": "pullRequest",
    "title": "OCPBUGS-53227: fix bug where /k8s/all-namespaces/volumesnapshots 404s",
    "body": "After"
  },
  {
    "id": "14762",
    "type": "pullRequest",
    "title": "ODC-7770: Remove perspective switcher if only one perspective is present",
    "body": "before: !Screenshot From 2025-02-12 16-39-29( after: !Screenshot From 2025-02-12 16-47-02( /assign @vikram-raj @sanketpathak /label px-approved docs-approved acknowledge-critical-fixes-only"
  },
  {
    "id": "14890",
    "type": "pullRequest",
    "title": "OCPBUGS-52938: 'Helm Chart Repository' name is used in breadcrumb link, details page heading and action names",
    "body": "Fixes: Solution Description: Updated details pages of HCR and PHCR to show `HelmChartRepository` and `ProjectHelmChartRepository` instead of `Helm Chart Repository` and `Project Helm Chart Repository` respectively Screen shots / Gifs for design review: ---BEFORE---- ---AFTER---- img width=\"1415\" alt=\"Screenshot 2025-03-20 at 12 50 37 PM\" src=\" / img width=\"1411\" alt=\"Screenshot 2025-03-20 at 12 50 56 PM\" src=\" / ----- Unit test coverage report: NA Test setup: 1. navigate to Helm - Repositories page, click on on HelmChartRepository 2. Check the details page heading name, breadcrumb link name and action items name Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14895",
    "type": "pullRequest",
    "title": "(chores) Add approvers",
    "body": "Adding Jackson and Marek to the list of approvers. \"_With great power there must also come -- great responsibility\"_ - Uncle Ben /assign @rhamilto @spadgett"
  },
  {
    "id": "14852",
    "type": "pullRequest",
    "title": "OCPBUGS-52864: Edit form for key/value secrets should be showing decoded base64 values.",
    "body": "before: !Screenshot 2025-03-10 at 17 54 33( after: !Screenshot 2025-03-10 at 17 54 54("
  },
  {
    "id": "14802",
    "type": "pullRequest",
    "title": "ODC-7773: Add e2e tests for Favorites feature",
    "body": "Dependent on PR - Story: ODC-7773( img width=\"764\" alt=\"Screenshot 2025-02-27 at 4 13 39 PM\" src=\" /"
  },
  {
    "id": "14858",
    "type": "pullRequest",
    "title": "CONSOLE-4437: Add CSP test to the test-prow-e2e.sh",
    "body": "/assign @vojtechszocs @spadgett FYI"
  },
  {
    "id": "14740",
    "type": "pullRequest",
    "title": "RHSTOR-6927: Removes LSO static plugin from console",
    "body": "!image("
  },
  {
    "id": "14878",
    "type": "pullRequest",
    "title": "OCPBUGS-53119: Add support for extensibility in SnapshotClass and StorageClass pages"
  },
  {
    "id": "14857",
    "type": "pullRequest",
    "title": "OCPBUGS-52489: Fixed the typo 'enivornments' on tour page",
    "body": "Fixed the typo"
  },
  {
    "id": "14853",
    "type": "pullRequest",
    "title": "CONSOLE-4081: Refactor EditSecret component",
    "body": "Possible test scenarios: Test Key/Value Secret 1. Create Key/Value Secret 2. Click on created Key/Value Secret 3. Click on kebab menu, press Edit Secret 4. Correct Key/Value Edit Secret form should be shown. Test Image Pull Secret 1. Create Image Pull Secret 2. Click on created Image Pull Secret 3. Click on kebab menu, press Edit Secret 4. Correct `Edit image pull secret` form should be shown. Test Webhook Secret 1. Create Webhook Secret 2. Click on created Webhook Secret 3. Click on kebab menu, press Edit Secret 4. Correct `Edit webhook secret` form should be shown. As a shared fifth step could be editing the fields and saving the changes. The newly edited data should be visible in the secret now. Currently when you try to edit the Key/Value secret form, the data/value part is incorrectly shown as base64 encoded value, which is not caused by this PR. I addressed this issue in separate PR("
  },
  {
    "id": "14861",
    "type": "pullRequest",
    "title": "OCPBUGS-53030: Fix type-only dynamic module import build warnings for plugins",
    "body": "This PR fixes the following kind of warnings :warning: that may occur when building Console dynamic plugins: ``` LOG from @openshift-console/dynamic-plugin-sdk-webpack/lib/webpack/loaders/dynamic-module-import-loader ../node_modules/ts-loader/index.js??ruleSet1.rules0.use0!./components/Nav.tsx w Non-index and non-dynamic module import @patternfly/react-table/dist/esm/components/Table/base/types ``` In the snippet above, `@patternfly/react-table` package does not provide a corresponding dynamic module for e.g. `ThSortType` which causes Console webpack `dynamic-module-import-loader` to skip import transformation with a warning. For actual JS code, this would indicate a problem with e.g. `@patternfly/react-table` package. However, for TypeScript types like `ThSortType` it's not really an issue due to TS to JS transpilation. Therefore, Console webpack `dynamic-module-import-loader` will skip processing type-only imports since these have no impact on generated module federation code. This PR also bumps `typescript` version in dynamic demo plugin to match Console frontend and aligns `compilerOptions.lib` setting with respect to `compilerOptions.target` (ES 2021) across `tsconfig.json` files. How to reproduce the build warning Open `dynamic-demo-plugin/src/components/Nav.tsx` and add the following code after existing import statements: ```ts import type { ThSortType } from '@patternfly/react-table/dist/esm/components/Table/base/types'; console.log({} as ThSortType); ``` then update plugin SDK dependencies and build demo plugin: ``` (cd dynamic-demo-plugin ; yarn install-plugin-sdk && yarn build-dev) ```"
  },
  {
    "id": "14876",
    "type": "pullRequest",
    "title": "CONSOLE-3960: Migrate `react-helmet` to `react-helmet-async`",
    "body": "Thanks to the `react-helmet-async` authors for making the transition super intuitive :yum: test cases: - do titles update correctly when switching routes? - do the titles update when the brand is changed? (e.g., ROSA, OKD, etc) code review: /assign @TheRealJon qe review: /assign @yapei"
  },
  {
    "id": "14844",
    "type": "pullRequest",
    "title": "CONSOLE-3247: Remove `react-measure`",
    "body": "removes `react-measure` dependency possible test cases: - when clicking the buttons in the add page, do they still work? - when resizing the add page, are there errors? - does the add page show all the same cards as before? tech debt, adding labels /label px-approved /label docs-approved QE review (whoever has time): /assign @yapei /assign @sanketpathak code review: /assign @vikram-raj"
  },
  {
    "id": "14893",
    "type": "pullRequest",
    "title": "OCPBUGS-34737: Disable pipeline ci tests due to failure in task creation"
  },
  {
    "id": "14872",
    "type": "pullRequest",
    "title": "OCPBUGS-53103: Apply plugin-api-changed label to plugin SDK shared modules",
    "body": "Moving Console plugin SDK shared module metadata and init code under a separate directory in order to apply `plugin-api-changed` label via the `OWNERS` file."
  },
  {
    "id": "14830",
    "type": "pullRequest",
    "title": "ODC-7776: Add getting started alert",
    "body": "Story: Demo: -----Developer login---- -----Admin login------"
  },
  {
    "id": "14717",
    "type": "pullRequest",
    "title": "ODC-7766: Test updates pertaining to perspective merge",
    "body": "Description: Software catalog tests in Admin view and update developer catalog to software catalog wherever it's being used in tests Story: - ODC-7766( Checks for approving Epic scenarios Automation PR: - Execute the @to-do tagged gherkin scripts manually - Convert the @to-do gherkin scripts to cypress automation scripts - Once scripts are automated, replace tag @to-do with @epic-number - Execute the scripts in Remote cluster Execution Commands: Have a cluster and disable developer perspective in customization of console export NO_HEADLESS=true && export CHROME_VERSION=$(/usr/bin/google-chrome-stable --version) BRIDGE_KUBEADMIN_PASSWORD=YH3jN-PRFT2-Q429c-5KQDr BRIDGE_BASE_ADDRESS= export BRIDGE_KUBEADMIN_PASSWORD export BRIDGE_BASE_ADDRESS oc login -u kubeadmin -p $BRIDGE_KUBEADMIN_PASSWORD oc apply -f ./frontend/packages/console-shared/src/test-data/htpasswd-secret.yaml oc patch oauths cluster --patch \"$(cat ./frontend/packages/console-shared/src/test-data/patch-htpasswd.yaml)\" --type=merge !-- Under frontend folder run -- ./integration-tests/test-cypress.sh -p dev-console Execute file software-catalog-details.feature Screenshots: Browser conformance: - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14874",
    "type": "pullRequest",
    "title": "CONSOLE-4515, CONSOLE-4516, CONSOLE-4517: Update `react-modal`, `react-tagsinput`",
    "body": "update a few react dependencies to prepare for React 18. shockingly there appear to be no breaking changes for these packages removed `focus-trap-react` as it appears to be unused. tech debt, adding labels /label px-approved /label docs-approved"
  },
  {
    "id": "14877",
    "type": "pullRequest",
    "title": "OCPBUGS-53118: Include init containers in readiness count if ready and started is true",
    "body": "FYI: This fix is a follow-on to the OCPBUGS-38543: OCP web console show pod status as Init:0/1 after using Native sidecars PR( It addresses the case where the init containers should be considered in the pod ready status if both the` ready` and `started` are `true`. This is consistent with the CLI. @yanpzhan Could you please create a bug for this issue since you found it? Before: img width=\"1506\" alt=\"Screenshot 2025-03-13 at 4 43 23 PM\" src=\" / After: img width=\"1503\" alt=\"Screenshot 2025-03-13 at 4 43 32 PM\" src=\" /"
  },
  {
    "id": "14723",
    "type": "pullRequest",
    "title": "CONSOLE-4461: Notification drawer move to Page props, fixing the small overlap on the notification drawer",
    "body": "Moved the code for notification polling from the notification drawer component to a separate useNotificationPoller hook, that retrieves notifications at the `app.jsx` level. Doing so as the notification drawer is conditionally rendered within PF Page component, so when the notification drawer wasn't rendered the poller couldn't poll the alerts. Made some adjustments tied to the move of notification drawer component to a prop of Page like a removal of unnecessary components - `NotificationDrawer` and `NotificationDrawerHeading`. Ideally we would want to replace the `NotificationCategory` and `NotificationEntry` from the `patternfly/src/components/notification-drawer` as well, did not cover it in this PR. before: !Screenshot 2025-01-09 125242( After:"
  },
  {
    "id": "14683",
    "type": "pullRequest",
    "title": "OCPBUGS-45847: Remove barrel file references in static plugin `exposedModules`",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 h2 id=\"solution-description\"Solution description/h2 I removed all index file imports in the `exposedModules` field and replaced them with their direct counterparts, then removed the index file. I did not do this for `pipelines-plugin` (and instead suppressed the build warning you get from using index files) as it is being moved to a dynamic plugin( h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 Code reviewer: /cc @vojtechszocs h2 id=\"test-cases\"Test cases:/h2 !-- Outline any test cases here -- - Nothing should change to the user - All changed codeRefs in `console-extensions.json` should point to a valid export"
  },
  {
    "id": "14870",
    "type": "pullRequest",
    "title": "OCPBUGS-52589: Fix hooks in `CaptureTelemetry`",
    "body": "follow on for - added SDK changelog notes - fixed a react hook type error that wasn't caught by typescript (as it was in `jsx`) - removed unused react imports from the dynamic-demo-plugin code review: /assign @jhadvig"
  },
  {
    "id": "14873",
    "type": "pullRequest",
    "title": "CONSOLE-3414: Fix flaky `Loading` tests",
    "body": "fixes this flake: ``` {this.className.includes is not a function TypeError TypeError: this.className.includes is not a function at SVGSVGElement.eval (webpack://@knative-plugin/integration-tests/../../dev-console/integration-tests/support/pages/app.ts:28:32) at Context.eval (webpack://@knative-plugin/integration-tests/../../dev-console/integration-tests/support/pages/app.ts:27:36)} ``` adding labels for follow on ticket: /label px-approved /label docs-approved /label qe-approved code review: /assign @rhamilto"
  },
  {
    "id": "14866",
    "type": "pullRequest",
    "title": "OCPBUGS-53047: Disable guided tour in admin perspective"
  },
  {
    "id": "14848",
    "type": "pullRequest",
    "title": "OCPBUGS-52166: Fix sort function on Access review table",
    "body": "Sorting Logic was not hooked up to the URL Search params"
  },
  {
    "id": "14864",
    "type": "pullRequest",
    "title": "OCPBUGS-52589: update @types/react to v17, use new JSX transform",
    "body": "- update `@types/react` to be in sync with react version - use new JSX transform"
  },
  {
    "id": "14829",
    "type": "pullRequest",
    "title": "ODC-7775: Update content in Getting started resources on cluster and project overview page",
    "body": "Adds start admin perspective guided tour action and Enable the developer perspective quick start link in cluster and project overview getting started resources section. Step to test - Create a sample quick start with name `enable-developer-perspective` and displayName `Enable the developer perspective`"
  },
  {
    "id": "14836",
    "type": "pullRequest",
    "title": "OCPBUGS-52325: fix Node Logs toolbar layout at mobile",
    "body": "Includes changes from which already merged. After"
  },
  {
    "id": "14675",
    "type": "pullRequest",
    "title": "CONSOLE-4430: Content Security Policy E2E testing with Puppeteer & Chrome",
    "body": "This PR adds a script that tests Console web application for Content Security Policy( violations. Console currently implements CSP via Content-Security-Policy-Report-Only( HTTP response header and uses custom SecurityPolicyViolationEvent( handler to report any CSP violations detected in production env. to telemetry service. Summary of changes - Use Puppeteer( to install and manage a local Chrome for Testing( browser instance. All files related to Puppeteer are placed under `frontend/.puppeteer` directory. Chrome test browser is installed only when necessary, so the typical `yarn install` dependency update flow is not affected. - Run `yarn test-puppeteer-csp` in `frontend` directory to launch the CSP test script. This script assumes that Console Bridge server is already running locally and will test page for CSP violations using Chrome DevTools Protocol( (CDP). Example 1 - test pass !( Example 2 - test fail, after adding inline script in `frontend/public/index.html` !( General test flow 1. Use CDP to spy on page request (`resourceType` = `Document`). Modify the request by adding custom `Test-CSP-Reporting-Endpoint` header, instructing the server to use the given CSP reporting endpoint for testing purposes and then resume the modified request. 2. Use CDP to spy on potential CSP violation report requests (`resourceType` = `CSPViolationReport`). Upon receiving such request, report the error and then fulfill the request with 200 status code - this way, we don't need to implement a real CSP reporting endpoint. 3. Load page and wait until there is no network activity for at least 2s. Treat non-OK HTTP status code as error. As a follow-up, we should add a CI job that invokes `test-csp.sh` as the entry point."
  },
  {
    "id": "14842",
    "type": "pullRequest",
    "title": "CONSOLE-3414: Replace `Loading` with PF `Spinner`",
    "body": "before: after: tech debt, adding labels /label docs-approved /label px-approved code review: /assign @rhamilto qe review: /assign @yapei"
  },
  {
    "id": "14839",
    "type": "pullRequest",
    "title": "ODC-7727: Add hover effect to favourites icon",
    "body": "follow on ticket to add a hover effect to the add to favourites button, by using the CSS from the ODC topology quick search button before !before( after !after( /assign @lokanandaprabhu adding labels for already approved ticket /label px-approved /label qe-approved /label docs-approved"
  },
  {
    "id": "14827",
    "type": "pullRequest",
    "title": "CONSOLE-4504: set LogViewer theme using console's theme",
    "body": "After"
  },
  {
    "id": "14812",
    "type": "pullRequest",
    "title": "OCPBUGS-48491: Namespace is not persisting when switching to developer view from the topology page of admin page",
    "body": "Fixes: Analysis / Root cause: Active namespace value was not considered in namespace context Solution Description: Considered Active namespace value in namespace context Screen shots / Gifs for design review: ----BEFORE--- ----- ---AFTER---- ----- Unit test coverage report: NA Test setup: 1. Go to topology page on ain view after login 2. Select/Create a namespace 3. Switch to developer perspective Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14798",
    "type": "pullRequest",
    "title": "OCPBUGS-49348: Fix Secret form drag and drop issue",
    "body": "Fix file upload logic in file-input.txt so that we aren't using different logic for dnd vs browse behaviors. Also fix incorrect value being passed into this component from OpaqueSecretFormEntry component."
  },
  {
    "id": "14658",
    "type": "pullRequest",
    "title": "OCPBUGS-37101: Remove logoutOpenShift method call",
    "body": "The logoutOpenShift got remove part of the External OIDC work. /assign @TheRealJon"
  },
  {
    "id": "14826",
    "type": "pullRequest",
    "title": "OCPBUGS-52316: enable clicking outside NodeLogs Selects to close them",
    "body": "After"
  },
  {
    "id": "14813",
    "type": "pullRequest",
    "title": "OCPBUGS-52214: add missing v5 patternfly-addons.scss and patternfly-charts.scss styles"
  },
  {
    "id": "14835",
    "type": "pullRequest",
    "title": "CONSOLE-4409: Update monaco theming and sidebar logic",
    "body": "follow up PR on issues.redhat.com/browse/CONSOLE-4409( adding labels /label qe-approved /label px-approved /label docs-approved - Fixes bug where PROCESSED_THEME is sometimes `systemDefault` when it shouldn't be - Uses a `Switch` for `CodeEditorField` sidebar toggle after: !image( code review: /cc @rhamilto"
  },
  {
    "id": "14825",
    "type": "pullRequest",
    "title": "CONSOLE-4503: Replace custom Banner with PatternFly equivalent",
    "body": "implements removes `co-global-notification` custom CSS. before: !before( after: !after( /label px-approved QE review: /cc @yapei code review: /cc @rhamilto for testing: - check if the kubeadmin banner looks okay - check if the user impersonation banner looks okay - create ConsoleNotification CR and see if those look okay - check if the telemetry banner looks okay"
  },
  {
    "id": "14824",
    "type": "pullRequest",
    "title": "OCPBUGS-52298: Add breadcrumbs to ODC Project details page",
    "body": "fixes before: !before( after: !after( /cc @rhamilto @vikram-raj"
  },
  {
    "id": "14822",
    "type": "pullRequest",
    "title": "OCPBUGS-51372: Filter 'Name' on resource list page doesn't align well when language is set to Chinese/Japanese/Korean",
    "body": "Configuring the text of a dropdown (`pf-v6-c-dropdown-togle__text` rule) to not wrap on whitespaces (`whitespace: nowrap`) selectively by adding the `co-nowrap` class to the Dropdown text content fixes the problem where chinese/japanese/korean overflowed to second line causing the dropdown to have bigger height than surrounding toolbar buttons. before: !Screenshot 2025-03-04 at 12 36 25( after: !Screenshot 2025-03-04 at 12 36 55("
  },
  {
    "id": "14765",
    "type": "pullRequest",
    "title": "ODC-7727: Favoriting page in the Console admin perspective",
    "body": "Story: Demo: ----- Maximum count reached---"
  },
  {
    "id": "14820",
    "type": "pullRequest",
    "title": "OCPBUGS-51355: VolumeSnapshots are not displayed in OpenShift Web Console",
    "body": "VolumeSnapshotPage used default initializes for namespace prop which caused problem when retrieving All projects list page. Removing the initialized and only providing the fallback default value in the createLink fixed this problem. before: after:"
  },
  {
    "id": "14815",
    "type": "pullRequest",
    "title": "CONSOLE-4498: Replace checkboxes with Switch in ResourceLog",
    "body": "To align with changes in After Note the layout issue at mobile is existing and is the result of an existing issue in PatternFly("
  },
  {
    "id": "14814",
    "type": "pullRequest",
    "title": "OCPBUGS-30973: Remove @ts-ignore comment missed in 14680"
  },
  {
    "id": "14807",
    "type": "pullRequest",
    "title": "CONSOLE-4496: Replace custom Checkbox filter with PatternFly Switch",
    "body": "I opted for Switch( over a multi-select toggle group( as `Switch` was a direct 1:1 replacement for `Checkbox` while maintaining the majority of the existing implementation and design. We can certainly revisit if folks disagree. Before After"
  },
  {
    "id": "14781",
    "type": "pullRequest",
    "title": "OCPBUGS-51037: Update the monitoring topic used by the console team",
    "body": "The monitoring documentation is going through the restructuring. For this reason, the console links need to be updated to reflect that change. For versions 4.14+ Link (docs.openshift): Link (docs.redhat):"
  },
  {
    "id": "14810",
    "type": "pullRequest",
    "title": "OCPBUGS-50650: Retain original path when detecting perspective"
  },
  {
    "id": "14663",
    "type": "pullRequest",
    "title": "CONSOLE-4407, CONSOLE-4409: Update monaco and YAML language server, use PF6 CodeEditor",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 !--The pull request title must be prefixed with a Jira issue or Bugzilla bug in order to be merged. For example: For e.g Features: - CONSOLE-XXXX: title For e.g Jira Bug Fixes: - OCPBUGS-XXXX: title For e.g Bugzilla Bug Fixes: - Bug XXXXXXX: title Combos: - CONSOLE-XXXX, Bug XXXXXXX: title-- h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- - Switch from react-monaco-editor( to the PatternFly Code editor( - Use monaco-yaml( for YAML language support (still based on yaml-language-server( which supports newer monaco versions - Removed `umd-compat-loader` - Update monaco from 0.28.1 to 0.51.0, which adds a few new features, notably sticky scrolling( - Note that this removes the kbdAlt/kbd+kbdF1/kbd accessibility keyboard shortcut, as the shortcut was seemingly removed in monaco-editor 0.40.0: see the last version with the dialog( and first version without it( - Updated custom CodeEditor theme to use PF6 tokens. Work on adding this theme to PatternFly is underway, see - Fix long time bug where the commands in the command palette are bolded and underlined h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant -- Before: !image( !image( After: !image( !image("
  },
  {
    "id": "14790",
    "type": "pullRequest",
    "title": "OCPBUGS-51076: Console UI Displays Incorrect Subscription Values",
    "body": "When subscription has no channel configured, we should not be showing 'default' channel as a fallback. We should instead show that there is 'No channel' or channel 'Not found'. In addition we should not show any channels as selected in the radio input of subscription channel modal, when no channels are configured. before: after:"
  },
  {
    "id": "14786",
    "type": "pullRequest",
    "title": "CONSOLE-4399: Added 'createdTime' in Jobs.tsx"
  },
  {
    "id": "14819",
    "type": "pullRequest",
    "title": "OCPBUGS-48413: Sorted Links based on OS in CLI",
    "body": "On the page /command-line-tools, the oc and virtctl sorted the links differently. It is now sorted based on OS."
  },
  {
    "id": "14806",
    "type": "pullRequest",
    "title": "CONSOLE-4484: follow on fix to ensure Bottom ConsoleNotification are ...",
    "body": "...visible After !localhost_9000_k8s_cluster_console openshift io~v1~ConsoleNotification_example("
  },
  {
    "id": "14804",
    "type": "pullRequest",
    "title": "NO-JIRA: Apply plugin-api-changed label on changes to the api package",
    "body": "Changes to this package will require API reviewers to apply the plugin-api-approved label to approve PRs for merge. See which adds the labels and updates the tide queries. /cc @jhadvig @vojtechszocs"
  },
  {
    "id": "14809",
    "type": "pullRequest",
    "title": "OCPBUGS-52180: Fix notification drawer close button error"
  },
  {
    "id": "14776",
    "type": "pullRequest",
    "title": "ODC-7724: Add guided tour in Admin perspective",
    "body": "Descriptions: Add a guided tour in the Admin perspective to inform the user about the unified perspective."
  },
  {
    "id": "14792",
    "type": "pullRequest",
    "title": "ODC-7769: Add Getting started section in project Overview page",
    "body": "Add getting started section on the project overview page img width=\"1489\" alt=\"image\" src=\" /"
  },
  {
    "id": "14680",
    "type": "pullRequest",
    "title": "OCPBUGS-30973: Update @types/react-redux",
    "body": "- Update react-redux to latest v7 release, which includes @types/react-redux - Remove dev dependency on @types/react-redux - Remove all @ts-ignore comments - Fix ts errors that were being hidden by @ts-ignore comments"
  },
  {
    "id": "14644",
    "type": "pullRequest",
    "title": "ODC-7725: Show perspective preferences option if more than one perspective are available",
    "body": "Story:"
  },
  {
    "id": "14793",
    "type": "pullRequest",
    "title": "OCPBUGS-51202: Fix Timestamp component"
  },
  {
    "id": "14643",
    "type": "pullRequest",
    "title": "OCPBUGS-46050: Determine if disabled a11y rules can be re-enabled",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 !--The pull request title must be prefixed with a Jira issue or Bugzilla bug in order to be merged. For example: For e.g Features: - CONSOLE-XXXX: title For e.g Jira Bug Fixes: - OCPBUGS-XXXX: title For e.g Bugzilla Bug Fixes: - Bug XXXXXXX: title Combos: - CONSOLE-XXXX, Bug XXXXXXX: title-- h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 !-- - Tag an OCP console engineer to review the changes. - If there are visual, content, or interaction changes in the PR, tag \"@openshift/team-ux-review\" - If the PR is implementing a story, assign QE, docs, and PX approvers: Console Approver: /assign gh-user QE approver: /assign gh-user Docs approver: /assign gh-user PX approver: /assign gh-user -- h2 id=\"test-cases\"Test cases:/h2 !-- Outline any test cases here -- h2 id=\"additional-info\"Additional info:/h2 !-- Add any additional info here -- h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant --"
  },
  {
    "id": "14760",
    "type": "pullRequest",
    "title": "CONSOLE-4484: Replace custom tabs with PF6 `Tabs` component",
    "body": "fixes before/after: !image( !image( !image("
  },
  {
    "id": "14695",
    "type": "pullRequest",
    "title": "OCPBUGS-48642: Check for unused modules in static plugins",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- - Check all console static plugin `exposedModules` to see if they have a corresponding codeRef in `console-extensions.json`, and emit a webpack warning if there are modules that do not. - Prune unused modules, including `network-attatchment-definition-plugin`, as the code can no longer be reached h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 /assign @vojtechszocs h2 id=\"test-cases\"Test cases:/h2 !-- Outline any test cases here -- No user facing changes have been made, so everything should run exactly the same as before"
  },
  {
    "id": "14782",
    "type": "pullRequest",
    "title": "CONSOLE-4486: decrease TertiaryHeading margins in Edit resource limit...",
    "body": "...s modal After img width=\"661\" alt=\"Screenshot 2025-02-19 at 9 51 21 AM\" src=\" / img width=\"644\" alt=\"Screenshot 2025-02-19 at 9 56 10 AM\" src=\" /"
  },
  {
    "id": "14771",
    "type": "pullRequest",
    "title": "OCPBUGS-50546: Do not load CSRs if user does not have permissions"
  },
  {
    "id": "14775",
    "type": "pullRequest",
    "title": "OCPBUGS-36786: Force async package upgrade."
  },
  {
    "id": "14766",
    "type": "pullRequest",
    "title": "OCPBUGS-50670: fix bold text issues and missing underline on inline link buttons on safari and firefox.",
    "body": "Linked PF issue( before: (safari) !Screenshot 2025-02-18 at 13 39 43( (firefox) !Screenshot 2025-02-18 at 13 40 23( after: (safari) !Screenshot 2025-02-18 at 13 32 20( (firefox) !Screenshot 2025-02-18 at 13 34 38("
  },
  {
    "id": "14779",
    "type": "pullRequest",
    "title": "NO-JIRA: Small demo plugin and plugin doc improvements",
    "body": "- demo plugin - remove redundant dependencies and update `yarn.lock` file - plugin docs - change Console repo links to reference `main` instead of `master`"
  },
  {
    "id": "14780",
    "type": "pullRequest",
    "title": "CONSOLE-4489: fix bug where dropdown menu can overflow",
    "body": "PatternFly 6 `Dropdown` menus can only be positioned using popperProps( As a result, `.pf-m-align-right-on-md` no longer works to change the positioning of menu. Given this limitation and the need to preserve `menuClassName` for other use cases, I renamed `pf-m-align-right-on-md` to `prevent-overflow` and use it to conditionally enable `preventOverflow` on the `Dropdown` `Popper`. Note this doesn't fully restore the functionality we previously had where the menu was positioned on the right side of the toggle at medium and larger viewports, but it does resolve the issue where the menu was overflowing while preserving the alignment for smaller than medium viewports."
  },
  {
    "id": "14732",
    "type": "pullRequest",
    "title": "OCPBUGS-49996: add missing contextId to be able to inject tabs from plugins",
    "body": "This PR adds the missing contextId to the `HorizontalNav` so plugins can inject tabs targeted to specific nav sections."
  },
  {
    "id": "14713",
    "type": "pullRequest",
    "title": "OCPBUGS-49778: Linkify OLM operator uninstall message",
    "body": "Make links and email addresses in custom operator uninstall messages clickable. img width=\"626\" alt=\"Screenshot 2025-02-03 at 11 32 02 AM\" src=\" / Note: This change doesn't support markup in the message. It just highlights URLs or emails addresses in the plain text."
  },
  {
    "id": "14697",
    "type": "pullRequest",
    "title": "OCPBUGS-50693: Show Observe section without PROMETHEUS and MONITORING flags",
    "body": "Currently, the Observe section is only shown to users which have the `PROMETHEUS`, `MONITORING` and `CAN_GET_NS` flags. Some dynamic plugins, for example distributed tracing and logging, add a new link to the Observe section, which should be visible to all users, even without the `PROMETHEUS`, `MONITORING` and `CAN_GET_NS` flags. Therefore this PR removes the requirement on this flags. I checked the links in the section, and the monitoring-related links (Alerting, Metrics, Dashboards, Targets) set the required permissions (`PROMETHEUS`, `MONITORING` and `CAN_GET_NS`) on the `console.navigation/href` already: In case the Observe section is empty, it is hidden:"
  },
  {
    "id": "14767",
    "type": "pullRequest",
    "title": "CONSOLE-4467: replace html heading elements with PatternFly components",
    "body": "I overlooked these two instances in since they live outside `frontend`. After !localhost_9000_example-namespaced-page_all-namespaces (1)( !localhost_9000_example-namespaced-page_all-namespaces("
  },
  {
    "id": "14773",
    "type": "pullRequest",
    "title": "OCPBUGS-50847: fix but where textarea can be expanded horizontally",
    "body": "After"
  },
  {
    "id": "14756",
    "type": "pullRequest",
    "title": "CONSOLE-4476: Remove various upstream workarounds",
    "body": "fixes issues.redhat.com/browse/CONSOLE-4476( removes upstream workarounds now that they have been fixed. there should be no new visual changes that appear with this PR. adding labels for PF6 bugfix: /label docs-approved /label px-approved /label acknowledge-critical-fixes-only /label qe-approved /assign @rhamilto /assign @sg00dwin"
  },
  {
    "id": "14700",
    "type": "pullRequest",
    "title": "OCPBUGS-45141: Store Topology sidebar alert in the localStorage"
  },
  {
    "id": "14768",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Console dynamic plugin SDK doc and changelogs",
    "body": "Need this PR merged before publishing fresh 4.19 prerelease plugin SDK packages."
  },
  {
    "id": "14684",
    "type": "pullRequest",
    "title": "ODC-7735: Edit ci tests to have step to enable developer perspective",
    "body": "Description: Fixing CI tests for the pr to run green on CI Story: - ODC-7718( Checks for approving Epic scenarios Automation PR: - Execute the @to-do tagged gherkin scripts manually - Convert the @to-do gherkin scripts to cypress automation scripts - Once scripts are automated, replace tag @to-do with @epic-number - Execute the scripts in Remote cluster Execution Commands: Have a cluster and disable developer perspective in customization of console export NO_HEADLESS=true && export CHROME_VERSION=$(/usr/bin/google-chrome-stable --version) BRIDGE_KUBEADMIN_PASSWORD=YH3jN-PRFT2-Q429c-5KQDr BRIDGE_BASE_ADDRESS= export BRIDGE_KUBEADMIN_PASSWORD export BRIDGE_BASE_ADDRESS oc login -u kubeadmin -p $BRIDGE_KUBEADMIN_PASSWORD oc apply -f ./frontend/packages/console-shared/src/test-data/htpasswd-secret.yaml oc patch oauths cluster --patch \"$(cat ./frontend/packages/console-shared/src/test-data/patch-htpasswd.yaml)\" --type=merge !-- Under frontend folder run -- ./integration-tests/test-cypress.sh -p -console Execute CI files in the following test packages: ./integration-tests/test-cypress.sh -p dev-console ./integration-tests/test-cypress.sh -p helm ./integration-tests/test-cypress.sh -p knative ./integration-tests/test-cypress.sh -p pipelines ./integration-tests/test-cypress.sh -p shipwright ./integration-tests/test-cypress.sh -p topology ./integration-tests/test-cypress.sh -p web-terminal Screenshots: Browser conformance: - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14764",
    "type": "pullRequest",
    "title": "OCPBUGS-50665: fix bug where Demo Plugin tab url is always appended",
    "body": "After"
  },
  {
    "id": "14520",
    "type": "pullRequest",
    "title": "CONSOLE-4079,CONSOLE-4080: Address tech debt in GenericSecretForm and KeyValueEntryForm components",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 Refactors GenericSecretForm and KeyValueEntryForm to be functional components !--The pull request title must be prefixed with a Jira issue or Bugzilla bug in order to be merged. For example: For e.g Features: - CONSOLE-XXXX: title For e.g Jira Bug Fixes: - OCPBUGS-XXXX: title For e.g Bugzilla Bug Fixes: - Bug XXXXXXX: title Combos: - CONSOLE-XXXX, Bug XXXXXXX: title-- h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- This PR refactors the GenericSecretForm and KeyValueEntryForm to use functional components and makes code improvements to fit the standards we currently follow. h2 id=\"test-cases\"Test cases:/h2 !-- Outline any test cases here -- 1. Visit workloads - secrets - create secret - (Key/Value form) - fill form - create secret 2. Visit workloads - secrets - click on any secret of Opaque type - kebab menu - edit secret - edit contents of the form - save h2 id=\"additional-info\"Additional info:/h2 !-- Add any additional info here -- h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant --"
  },
  {
    "id": "14747",
    "type": "pullRequest",
    "title": "OCPBUGS-49381: Workloads-DeploymentConfigs-Add storage: i18n misses",
    "body": "Before: img width=\"1020\" alt=\"Screenshot 2025-02-10 at 11 58 16 AM\" src=\" / After: img width=\"966\" alt=\"Screenshot 2025-02-10 at 11 58 04 AM\" src=\" / FYI: The actual translations in supported langs will be available later on."
  },
  {
    "id": "14759",
    "type": "pullRequest",
    "title": "CONSOLE-4480: fix background color of Command Line Terminal tab",
    "body": "This is a CSS hack to fix the presentation. Long term, we ought to consider a more proper fix. Before img width=\"1013\" alt=\"Screenshot 2025-02-11 at 4 05 20 PM\" src=\" / img width=\"1007\" alt=\"Screenshot 2025-02-11 at 4 05 48 PM\" src=\" / After img width=\"534\" alt=\"Screenshot 2025-02-12 at 8 50 48 AM\" src=\" / img width=\"532\" alt=\"Screenshot 2025-02-12 at 8 50 58 AM\" src=\" /"
  },
  {
    "id": "14691",
    "type": "pullRequest",
    "title": "OCPBUGS-48548: The secret created with Basic authentication has an incorrect type",
    "body": "Source secret form could be of Opaque type when non-mandatory username field was not specified. When determining the basic auth type for source secrets our logic should expect that the non-mandatory fields wont be specified. I adjusted to logic in the `determineSecretType` function to evaluate a secret as basic auth secret when the secret form includes mandatory field `password`. This doesn't collide with other secret forms as only the image-pull-secret has a `password` field, but the pull secrets are being stored( under `.dockerconfigjson` or `.dockercfg` keys, which are used( to determine their type. before: after:"
  },
  {
    "id": "14750",
    "type": "pullRequest",
    "title": "CONSOLE-4464: bump PatternFly 6 to latest available versions",
    "body": "We ultimately want to land on the latest official releases (e.g., `6.2.0`), but this gets us closer to those final versions, providing time to vet the changes in the latest prerelease versions."
  },
  {
    "id": "14682",
    "type": "pullRequest",
    "title": "CONSOLE-4443: Upgrade dynamic-demo-plugin to PatternFly 6",
    "body": "Plan is to go ahead and merge this with prerelease versions and update to the final versions with (which itself will likely require multiple PRs)."
  },
  {
    "id": "14709",
    "type": "pullRequest",
    "title": "OCPBUGS-48637: add support for \"OpenShift Virtualization Engine\" valid subscription filter on OperatorHub"
  },
  {
    "id": "14704",
    "type": "pullRequest",
    "title": "OCPBUGS-46088: Hypershift Filter by Node type list is empty",
    "body": "Before: img width=\"1674\" alt=\"Screenshot 2025-01-28 at 2 52 50 PM\" src=\" / After: img width=\"1767\" alt=\"Screenshot 2025-01-28 at 2 53 05 PM\" src=\" /"
  },
  {
    "id": "14752",
    "type": "pullRequest",
    "title": "CONSOLE-4477: more token updates"
  },
  {
    "id": "14742",
    "type": "pullRequest",
    "title": "OCPBUGS-49839: fix run time error when no completed version exists",
    "body": "Follow on fix to address"
  },
  {
    "id": "14751",
    "type": "pullRequest",
    "title": "CONSOLE-4475: fix QueryBrowser tooltip styles",
    "body": "To test, deploy to the cluster and enable the resulting `console-demo-plugin` Dynamic Plugin. Before After"
  },
  {
    "id": "14734",
    "type": "pullRequest",
    "title": "CONSOLE-4469: improve layout and functionality of Edit upstream confi...",
    "body": "...guration modal Before After"
  },
  {
    "id": "14523",
    "type": "pullRequest",
    "title": "OCPBUGS-43061: update the Deployment pod on change in imageStream",
    "body": "Fixes: Descriptions: - When the ImageStreamTag is updated, the pod does not automatically reflect the new image for Deployments created via the OpenShift Console. As in trigger annotation boolean value for paused is set as a string."
  },
  {
    "id": "14748",
    "type": "pullRequest",
    "title": "CONSOLE-4474: Unbold pf-v6 labels by default",
    "body": "fixes before: !before( after: !after( adding labels for PF6 bugfix: /label docs-approved /label px-approved /label acknowledge-critical-fixes-only /assign @rhamilto"
  },
  {
    "id": "14745",
    "type": "pullRequest",
    "title": "CONSOLE-4465: add workaround for menu scroll",
    "body": "Added two css blocks to `_overrides.scss` to account for the scrollable menu bug, which can be removed once the upstream fix is live and brought in."
  },
  {
    "id": "14739",
    "type": "pullRequest",
    "title": "CONSOLE-4473: fix alignment issues with Bootstrap radio and checkbox ...",
    "body": "...inputs Before img width=\"666\" alt=\"Screenshot 2025-02-07 at 3 26 14 PM\" src=\" / img width=\"719\" alt=\"Screenshot 2025-02-07 at 3 27 03 PM\" src=\" / After img width=\"655\" alt=\"Screenshot 2025-02-07 at 3 26 29 PM\" src=\" / img width=\"646\" alt=\"Screenshot 2025-02-07 at 3 30 23 PM\" src=\" /"
  },
  {
    "id": "14738",
    "type": "pullRequest",
    "title": "CONSOLE-4472: fix QuickStart layout issues",
    "body": "Before img width=\"461\" alt=\"Screenshot 2025-02-07 at 2 51 23 PM\" src=\" / After img width=\"471\" alt=\"Screenshot 2025-02-07 at 2 49 29 PM\" src=\" /"
  },
  {
    "id": "14737",
    "type": "pullRequest",
    "title": "CONSOLE-4471: fix bug where close button can overlap guided tour popo...",
    "body": "...ver contents After img width=\"641\" alt=\"Screenshot 2025-02-07 at 2 24 17 PM\" src=\" /"
  },
  {
    "id": "14736",
    "type": "pullRequest",
    "title": "CONSOLE-4470: fix bug where Edit button is bold inside DetailsItem dt",
    "body": "After img width=\"940\" alt=\"Screenshot 2025-02-07 at 2 04 39 PM\" src=\" /"
  },
  {
    "id": "14726",
    "type": "pullRequest",
    "title": "CONSOLE-4467: replace html heading elements with PatternFly components",
    "body": "replaces any existing HTML heading elements with PatternFly components introduces `PrimaryHeading`, `SecondaryHeading`, and `TertiaryHeading` components to DRY up the code removes duplicated heading styles so that styling must come from PatternFly via a `Title` or `Content` component limits the contents of `_patternfly5.scss` to only PatternFly 5 so it is easier to remove in the future"
  },
  {
    "id": "14731",
    "type": "pullRequest",
    "title": "OCPBUGS-49988: Updating cypress config to have video enabled for the CI results"
  },
  {
    "id": "14727",
    "type": "pullRequest",
    "title": "OCPBUGS-46513: Fix issue with bridge flag for conditional CSP features"
  },
  {
    "id": "14656",
    "type": "pullRequest",
    "title": "OCPBUGS-47722: always show associated plugin name on CSV details page",
    "body": "- Since we are showing `Console plugin` section only when `csvPlugins.length 0` and we are aiming to always present console plugin name on CSV details page, so removed `csvPluginsCount` from `ConsolePlugins` ``` {csvPlugins.length 0 && subscription && ( ConsolePlugins csvPlugins={csvPlugins} trusted={isCatalogSourceTrusted(subscription?.spec?.source)} / )} ``` - Since we are trying to always show console plugin name in Console Plugin Modal, so also removed `csvPluginsCount` from `ConsolePluginModal` - Always show plugin name on CSV details page regardless of plugin count !Screenshot 2025-01-03 at 4 14 28 PM( !Screenshot 2025-01-03 at 4 15 08 PM( - Always show plugin name in plugin modal regardless of plugin count !Screenshot 2025-01-03 at 4 27 56 PM( !Screenshot 2025-01-03 at 4 29 08 PM("
  },
  {
    "id": "14708",
    "type": "pullRequest",
    "title": "OCPBUGS-49718: Fix Pipeline Repository overview page close button"
  },
  {
    "id": "14705",
    "type": "pullRequest",
    "title": "ODC-7726,ODC-7767: Expose Topology components and utils to openshift-console/dynamic-plugin-sdk",
    "body": "Story: Description: Exposing the below topology components to dynamic plugins, ``` CpuCellComponent MemoryCellComponent TopologyListViewNode useOverviewMetrics withEditReviewAccess getPodMetricStats getTopologyResourceObject getResource getTopologyEdgeItems getTopologyGroupItems getTopologyNodeItem mergeGroup getModifyApplicationAction baseDataModelGetter getWorkloadResources contextMenuActions CreateConnector createConnectorCallback ```"
  },
  {
    "id": "14722",
    "type": "pullRequest",
    "title": "OCPBUGS-49919: Catalog card label should be right aligned",
    "body": "Before: img width=\"1212\" alt=\"image\" src=\" / After: img width=\"1198\" alt=\"image\" src=\" /"
  },
  {
    "id": "14712",
    "type": "pullRequest",
    "title": "NO-JIRA: Consolidate YAMLs Directory into yamls to Resolve macOS Case-Sensitivity Conflicts",
    "body": "Problem Description On macOS, the default file system (APFS) is case-insensitive but case-preserving. This causes issues when directory names in the repository differ only by case, such as YAMLs and yamls. Specifically, the macOS file system treats these two folders as the same directory, resulting in conflicts during operations like file diffs, moves, and merges. This issue arose after the repository was transferred from a case-sensitive Linux system to macOS. On Linux, YAMLs and yamls were treated as distinct folders. However, on macOS, these directories are merged, leading to unexpected behavior such as: - Git showing diffs for unchanged files. - Git operations failing or behaving unpredictably. - Confusion in the local working directory structure. Solution To resolve the case-sensitivity conflict and make the repository compatible with macOS, this PR: 1. Moves the contents of the YAMLs directory into the yamls directory. 2. Normalizes the directory structure by consolidating these into a single yamls folder."
  },
  {
    "id": "14729",
    "type": "pullRequest",
    "title": "CONSOLE-4381: PatternFly 6 README updates"
  },
  {
    "id": "14719",
    "type": "pullRequest",
    "title": "OCPBUGS-49839: fix run time error when no completed version exists",
    "body": "After img width=\"922\" alt=\"Screenshot 2025-02-04 at 3 08 18 PM\" src=\" /"
  },
  {
    "id": "14706",
    "type": "pullRequest",
    "title": "OCPBUGS-49366: fix bug where Search filter dropdown label isn't i18n",
    "body": "After"
  },
  {
    "id": "14694",
    "type": "pullRequest",
    "title": "OCPBUGS-48635: fix/remove broken codeRefs",
    "body": "code review: /assign @vojtechszocs before/after:"
  },
  {
    "id": "14710",
    "type": "pullRequest",
    "title": "OCPBUGS-46513: Add support for conditional CSP headers"
  },
  {
    "id": "14692",
    "type": "pullRequest",
    "title": "OCPBUGS-48608: Render refresh popover after adding CSP directive to the ConsolePlugin CR",
    "body": "Tested the change on a dev cluster and works as expected. /assign @TheRealJon"
  },
  {
    "id": "14685",
    "type": "pullRequest",
    "title": "OCPBUGS-45029: dev-console cypress feature file test update",
    "body": "Fix : OCPBUGS-45031( OCPBUGS-45023( OCPBUGS-45025( OCPBUGS-45034( OCPBUGS-45030( OCPBUGS-45029( OCPBUGS-45018( OCPBUGS-45032("
  },
  {
    "id": "14679",
    "type": "pullRequest",
    "title": "NO-JIRA: update github username",
    "body": "/assign @jhadvig"
  },
  {
    "id": "14628",
    "type": "pullRequest",
    "title": "OCPBUGS-46438: Pipeline visualisation shows all tasks as Failed and after that goes to Running state",
    "body": "Fixes: Analysis / Root cause: By default user was shown Failed state if there is no TaskRun details available. Solution Description: Since we already have a alert to show if there is no task available for the resource, we can remove the the default failed state added and if the PipelineRun is failed also, we don't have `pipelineRun.spec.status` attribute in the resource. Screen shots / Gifs for design review: ----BEFORE--- ----Shared by Pipelines team--- ----- ---AFTER---- ---If no task--- ----- Unit test coverage report: NA Test setup: 1. Create below PLR and ReRun (I am only able to reproduce this issue while using resolver) ``` kind: PipelineRun apiVersion: tekton.dev/v1 metadata: name: run-basic-pipeline-from-git spec: pipelineRef: resolver: git params: - name: url value: - name: revision value: main - name: pathInRepo value: pipeline.yaml params: - name: username value: admin ``` Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14469",
    "type": "pullRequest",
    "title": "OCPEDGE-1346: feat: bump api to pull in arbiter node infra",
    "body": "Per EP: This PR adds the enum for the new control plane topology value of `HighlyAvailableArbiter` to the list of known values during the validation step."
  },
  {
    "id": "14650",
    "type": "pullRequest",
    "title": "OCPBUGS-45103: update variable name for plugin name parsing",
    "body": "Before - on CSV details page !Screenshot 2024-12-26 at 4 29 56 PM( - within modal !Screenshot 2024-12-26 at 4 29 29 PM( After - on CSV details page !Screenshot 2024-12-26 at 4 30 30 PM( - within modal !Screenshot 2024-12-26 at 4 30 37 PM( - pseudo translation !Screenshot 2024-12-26 at 4 31 30 PM("
  },
  {
    "id": "14588",
    "type": "pullRequest",
    "title": "ODC-7720: Add dev perspective nav options to admin perspective",
    "body": "Story: Descriptions: - Add `Developer Catalog` nav option under the `Home` section in the Admin perspective - Add `Helm` nav option below `Operators` option in the Admin perspective - Add `Functions` nav option under the `Serverless`section in the Admin perspective img width=\"466\" alt=\"image\" src=\" /"
  },
  {
    "id": "14677",
    "type": "pullRequest",
    "title": "OCPBUGS-48292: allow copying of dependency assets"
  },
  {
    "id": "14609",
    "type": "pullRequest",
    "title": "OCPBUGS-45325: Fix ns dropdown UI when web terminal is open",
    "body": "Before: !Screenshot From 2024-12-10 10-25-03( After: !image("
  },
  {
    "id": "14671",
    "type": "pullRequest",
    "title": "CONSOLE-4379: remove PatternFly 4 shared modules",
    "body": "Follow on to as this deletion was overlooked."
  },
  {
    "id": "14633",
    "type": "pullRequest",
    "title": "CONSOLE-4076: Address tech debt in SourceSecretForm component"
  },
  {
    "id": "14631",
    "type": "pullRequest",
    "title": "CONSOLE-4077: Refactor BasicAuthSubform to be functional component",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 Refactors BasicAuthSubform to be a functional component h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 h2 id=\"test-cases\"Test cases:/h2 h2 id=\"additional-info\"Additional info:/h2 h2 id=\"screenshots\"Screen shots / gifs / design review:/h2"
  },
  {
    "id": "14635",
    "type": "pullRequest",
    "title": "OCPBUGS-2956: 'create a Project' button on Getting started page doesn't work",
    "body": "Fixes: Analysis / Root cause: By default the pages will be disabled if user don't have any projects created. Solution Description: If user don't have any project and Getting Started section is disabled then `Create a Project` button will not be shown to user. Screen shots / Gifs for design review: ----BEFORE--- ----- ---AFTER---- ----- Unit test coverage report: NA Test setup: 1. A new normal user login to OCP web console, user will be redirected to Getting Started page 2. try to create a project via 'create a Project' button in message \"Select a Project to start adding to it or create a Project.\" Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14429",
    "type": "pullRequest",
    "title": "OCPBUGS-43661: Limit payload size of GQL query"
  },
  {
    "id": "14647",
    "type": "pullRequest",
    "title": "OCPBUGS-46511: fix navigation from non-General User Preference tab to...",
    "body": "... Lightspeed setting After Note: because the navigation occurs from the same page in this case (the User Preferences page), the spotlight feature is not rendered when switching tabs, which is expected behavior."
  },
  {
    "id": "14578",
    "type": "pullRequest",
    "title": "OCPBUGS-45371: Authenticate user token in openshift Authenticate func"
  },
  {
    "id": "14632",
    "type": "pullRequest",
    "title": "OCPBUGS-21755: Add catalog to operator installation route parameters and PackageManifest list request label selector",
    "body": "In order to predictably fetch the singular PackageManifest that is being used during an install, the providing catalog needs to be included as a label selector. Otherwise, it's possible to recieve two or more PackageManifests in the list response."
  },
  {
    "id": "14579",
    "type": "pullRequest",
    "title": "OCPBUGS-45915: prefer OpenShift release version in telemetry events",
    "body": "Previously, we were reporting the internal console version, which is opaque and difficult to correlate to a specific OpenShift version."
  },
  {
    "id": "14657",
    "type": "pullRequest",
    "title": "OCPBUGS-47778: Improving web terminal test failures"
  },
  {
    "id": "14653",
    "type": "pullRequest",
    "title": "OCPBUGS-46415: Append new errors via string instead of list",
    "body": "Includes 14624"
  },
  {
    "id": "14648",
    "type": "pullRequest",
    "title": "OCPBUGS-46555: fix bug where two external link icons can appear in Op...",
    "body": "...eratorHub modal After img width=\"481\" alt=\"Screenshot 2024-12-23 at 1 10 31 PM\" src=\" /"
  },
  {
    "id": "14308",
    "type": "pullRequest",
    "title": "ODC-7695: Fix and enable web-terminal tests",
    "body": "Description: Fixing and enabling web-terminal CI tests Story: - ODC-7695( Checks for approving Epic scenarios Automation PR: - Execute the @to-do tagged gherkin scripts manually - Convert the @to-do gherkin scripts to cypress automation scripts - Once scripts are automated, replace tag @to-do with @epic-number - Execute the scripts in Remote cluster Execution Commands: Example: export NO_HEADLESS=true && export CHROME_VERSION=$(/usr/bin/google-chrome-stable --version) BRIDGE_KUBEADMIN_PASSWORD=YH3jN-PRFT2-Q429c-5KQDr BRIDGE_BASE_ADDRESS= export BRIDGE_KUBEADMIN_PASSWORD export BRIDGE_BASE_ADDRESS oc login -u kubeadmin -p $BRIDGE_KUBEADMIN_PASSWORD oc apply -f ./frontend/packages/console-shared/src/test-data/htpasswd-secret.yaml oc patch oauths cluster --patch \"$(cat ./frontend/packages/console-shared/src/test-data/patch-htpasswd.yaml)\" --type=merge !-- Under frontend folder run -- ./integration-tests/test-cypress.sh -p webterminal Screenshots: Browser conformance: - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14554",
    "type": "pullRequest",
    "title": "OCPBUGS-45213: Fix BuildSpec details section heading font size",
    "body": "Fixes: OCPBUGS-45213( Before img width=\"945\" alt=\"Screenshot 2024-11-29 at 6 11 40 PM\" src=\" After img width=\"1129\" alt=\"image\" src=\""
  },
  {
    "id": "14646",
    "type": "pullRequest",
    "title": "OCPBUGS-47541: Incorrect capitalization for `Lightspeed` to capitalized `LightSpeed` in ja and zh langs"
  },
  {
    "id": "14629",
    "type": "pullRequest",
    "title": "OCPBUGS-46452: i18n upload/download routine task - sprint 263",
    "body": "Adding latest translations from Memsource project"
  },
  {
    "id": "14630",
    "type": "pullRequest",
    "title": "OCPBUGS-46385: fix alignment of Font Awesome icons",
    "body": "After img width=\"1196\" alt=\"Screenshot 2024-12-16 at 11 21 19 AM\" src=\" /"
  },
  {
    "id": "14610",
    "type": "pullRequest",
    "title": "OCPBUGS-32406: Test Serverless function gives no response when function is not running",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- Disable button when there are no pods h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 code review: /assign @lokanandaprabhu @vikram-raj h2 id=\"test-cases\"Test cases:/h2 !-- Outline any test cases here -- - Is the button disabled when there are no pods? - Is the button enabled when there are pods? h2 id=\"additional-info\"Additional info:/h2 !-- Add any additional info here -- n/a h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant -- Demo"
  },
  {
    "id": "14634",
    "type": "pullRequest",
    "title": "OCPBUGS-46544: Post TypeScript upgrade changes",
    "body": "should be merged first - Remove duplicated `ResizeObserver` type - Update `@types/node` to 18.x to prepare for Node 22 upgrade( - Standardize all redux `ts-ignore` comments so it's easier to globally find/replace later when upgrading - Fix `Dispatch` import, we import from `redux` instead of `react-redux`, see - Remove various obsoleted `ts-ignore`s and update a few missing eslint ignores - All `ts-ignore`s also now have descriptions in the same line"
  },
  {
    "id": "14617",
    "type": "pullRequest",
    "title": "OCPBUGS-46461: Test helm CI failures"
  },
  {
    "id": "14620",
    "type": "pullRequest",
    "title": "CONSOLE-4400: Upgrade TypeScript to v5"
  },
  {
    "id": "14409",
    "type": "pullRequest",
    "title": "OCPBUGS-43671: Disable GQL introspection"
  },
  {
    "id": "14614",
    "type": "pullRequest",
    "title": "CONSOLE-4380: Remove more already-migrated code"
  },
  {
    "id": "14311",
    "type": "pullRequest",
    "title": "OCPBUGS-41826, OCPBUGS-41676: upgrade axe-core and cypress-axe"
  },
  {
    "id": "14600",
    "type": "pullRequest",
    "title": "OCPBUGS-28206: ERROR in search tool: Cannot read properties of undefined (reading 'state')",
    "body": "Before: img width=\"964\" alt=\"Screenshot 2024-12-06 at 10 02 04 AM\" src=\" img width=\"1868\" alt=\"Screenshot 2024-12-06 at 10 02 43 AM\" src=\" img width=\"961\" alt=\"Screenshot 2024-12-06 at 10 02 52 AM\" src=\" After: img width=\"1910\" alt=\"Screenshot 2024-12-06 at 10 03 46 AM\" src=\" img width=\"1891\" alt=\"Screenshot 2024-12-06 at 10 04 07 AM\" src=\" img width=\"969\" alt=\"Screenshot 2024-12-06 at 10 04 15 AM\" src=\""
  },
  {
    "id": "14594",
    "type": "pullRequest",
    "title": "CONSOLE-4378: remove orphaned PopupKebabMenu code",
    "body": "This code is orphaned and contains a reference to `@patternfly/react-core/deprecated`. It should be removed so we can drop PF4 and adopt PF6."
  },
  {
    "id": "14593",
    "type": "pullRequest",
    "title": "CONSOLE-4377: update to use new DropdownItemProps from PatternFly 5",
    "body": "In order to adopt PatternFly 6, we need to remove references to deprecated items. In this case, it's easiest to simply use the new props interface as it is compatible."
  },
  {
    "id": "14592",
    "type": "pullRequest",
    "title": "CONSOLE-4376: remove orphaned ClusterConfigurationDropdownField code"
  },
  {
    "id": "14602",
    "type": "pullRequest",
    "title": "OCPBUGS-45787: Installing operator with a + in the version name doesn't work",
    "body": "Make the URL seach params encoded so that the plus character wont cause issues in the version field"
  },
  {
    "id": "14586",
    "type": "pullRequest",
    "title": "OCPBUGS-37058: i18n: Missing translations for \"PodDisruptionBudget violated\" string"
  },
  {
    "id": "14581",
    "type": "pullRequest",
    "title": "OCPBUGS-45468: Updating openshift-enterprise-console-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-console-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-console.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "14543",
    "type": "pullRequest",
    "title": "OCPBUGS-45104: update release note link",
    "body": "`/release_notes/ocp-${major}-${minor}-release-notesocp-${major}-${minor}-${patch}` is an invalid doc link, it's not a specific link to `${patch}` Check available links for `ocp-${major}-${minor}-${patch}` on access.redhat.com !Screenshot 2024-11-27 at 3 43 05 PM( We can see the most suitable link should be `/release_notes/ocp-${major}-${minor}-release-notesocp-${major}-${minor}-${patch}_release-notes`"
  },
  {
    "id": "14414",
    "type": "pullRequest",
    "title": "OCPBUGS-23924: Render TaskRun results even when failed",
    "body": "Fixes: !-- For e.g Fixes: -- OCPBUGS-23924( Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of Defect -- Render of `TaskRun` results was blocked if failed Solution Description: !-- Describe your code changes in detail and explain the solution -- Render results regardless of failure Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- After: !image( Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- install pipeline operator and use the pipeline provided in the jira Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - x Firefox - Safari"
  },
  {
    "id": "14577",
    "type": "pullRequest",
    "title": "ODC-7710: Remove `@console/rhoas-plugin`",
    "body": "Fixes: !-- For e.g Fixes: -- Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of Defect -- `@console/rhoas-plugin` is unmaintained Solution Description: !-- Describe your code changes in detail and explain the solution -- Remove it Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- Before: !image (1)( After: !image( Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- n/a Browser conformance: !-- To mark tested browsers, use x -- - Chrome - Firefox - Safari"
  },
  {
    "id": "14597",
    "type": "pullRequest",
    "title": "OCPBUGS-45802: fix Number input focus layout issue",
    "body": "After img width=\"676\" alt=\"Screenshot 2024-12-06 at 9 29 10 AM\" src=\""
  },
  {
    "id": "14596",
    "type": "pullRequest",
    "title": "CONSOLE-4380: Use AlertsRulesDetailPage from `monitoring-plugin`",
    "body": "/hold Fixes: !-- For e.g Fixes: -- Solution Description: !-- Describe your code changes in detail and explain the solution -- - Remove `AlertRulesDetailsPage` from console - Add a route in monitoring-plugin to enable it - Remove code related to routes that are no longer provided by console repo Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- !image( The only change to the AlertsRulesDetailPage in the developer perspective is that it will no longer have a namespace selector. Since the selected alert is already namespaced, it didn't make sense to swap namespaces while focused on a specific AlertRule. Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- Host the monitoring dynamic plugin locally by running ```sh ./bin/bridge -plugins monitoring-plugin= -i18n-namespaces=plugin__monitoring-plugin -branding openshift console backend yarn dev console/frontend and monitoring-plugin/web ``` Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - x Firefox - Safari"
  },
  {
    "id": "14599",
    "type": "pullRequest",
    "title": "OCPBUGS-45848: Throw warnings when `guessModuleFilePath` is needed to guess file extensions"
  },
  {
    "id": "14575",
    "type": "pullRequest",
    "title": "OCPBUGS-45319: Add customData field to the HorizontalNav component"
  },
  {
    "id": "14590",
    "type": "pullRequest",
    "title": "OCPBUGS-45606: 'Channel' and 'Version' dropdowns do not collapse if the user does not select an option.",
    "body": "The onclick event in MenuToggle was always setting the dropdown to be opened, after these changes the toggle behavior functions as expected"
  },
  {
    "id": "14378",
    "type": "pullRequest",
    "title": "CONSOLE-3905: (deps) upgrade to webpack 5",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 !--The pull request title must be prefixed with a Jira issue or Bugzilla bug in order to be merged. For example: For e.g Features: - CONSOLE-XXXX: title For e.g Jira Bug Fixes: - OCPBUGS-XXXX: title For e.g Bugzilla Bug Fixes: - Bug XXXXXXX: title Combos: - CONSOLE-XXXX, Bug XXXXXXX: title-- h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- - upgraded `webpack` related dependencies to latest version - updated `formik` from 2.0.3 to 2.1.5 to fix build warning - remove `cache-loader`, `null-loader` because they are deprecated - updated `react-dnd` from 9.4.0 to 11.1.3 to fix build error - switched `ts-loader` to `esbuild-loader` for performance - switch `webpack-virtual-modules` with `val-loader` to fix build warning (and for easier transition to rspack, since it supports most loader APIs) h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 !-- - Tag an OCP console engineer to review the changes. - If there are visual, content, or interaction changes in the PR, tag \"@openshift/team-ux-review\" - If the PR is implementing a story, assign QE, docs, and PX approvers: Console Approver: /assign gh-user QE approver: /assign gh-user Docs approver: /assign gh-user PX approver: /assign gh-user -- n/a h2 id=\"test-cases\"Test cases:/h2 - Does `@console/internal/file-input` still work as expected? - Are there any regressions with `formik` or `react-dnd`? - Do all the Monaco YAML language server features work? - Do all dynamic and static plugins work as expected? - Does everything else work the same? h2 id=\"additional-info\"Additional info:/h2 !-- Add any additional info here -- n/a h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant -- n/a"
  },
  {
    "id": "14453",
    "type": "pullRequest",
    "title": "OCPBUGS-44059: Run `check-resolution` in parallel",
    "body": "Fixes: !-- For e.g Fixes: -- Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of -- Currently check-patternfly-modules.sh checks dependencies serially, which could be made faster by checking them in parallel. Since `yarn why` does not write to anything, this should be easily parallelizable as there is no race condition with writing back to the yarn.lock Solution Description: !-- Describe your code changes in detail and explain the solution -- The `check-resolution` function is now run in parallel Hardware used: ``` Fedora Linux 41 (Workstation Edition) Dell Inc. XPS 13 9310 11th Gen Intel\u00ae Core\u2122 i7-1185G7 \u00d7 8 32.0 GiB Memory ``` Results after running `time ./check-patternfly-modules.sh`: ``` before (trial 1): real 3m43.195s user 4m12.756s sys 1m23.471s before (trial 2): real 3m28.193s user 4m6.334s sys 1m17.644s before (trial 3): real 3m16.052s user 3m59.488s sys 1m16.666s after (trial 1): real 2m9.005s user 5m47.988s sys 1m38.153s after (trial 2): real 1m35.808s user 5m51.834s sys 1m46.357s after (trial 3): real 1m32.960s user 5m49.147s sys 1m42.260s ``` Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- n/a Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- `./check-patternfly-modules.sh` should run the same as before Browser conformance: !-- To mark tested browsers, use x -- n/a"
  },
  {
    "id": "14313",
    "type": "pullRequest",
    "title": "OCPBUGS-38543: OCP web console show pod status as Init:0/1 after using Native sidecars",
    "body": "Before: img width=\"954\" alt=\"Screenshot 2024-09-19 at 10 23 47 AM\" src=\" After: img width=\"1879\" alt=\"Screenshot 2024-09-19 at 10 24 22 AM\" src=\""
  },
  {
    "id": "14547",
    "type": "pullRequest",
    "title": "OCPBUGS-44920: save all `window.windowError`s for easier debugging",
    "body": "Fixes: !-- For e.g Fixes: -- Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of Defect -- Previous `windowError`s were being discarded, which makes it harder to determine root causes of failure when there are multiple errors being thrown Solution Description: !-- Describe your code changes in detail and explain the solution -- Save all of the `windowError`s so that the CI is able to log all of them in the event there are multiple errors thrown Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- n/a Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- n/a Browser conformance: !-- To mark tested browsers, use x -- n/a"
  },
  {
    "id": "14583",
    "type": "pullRequest",
    "title": "OCPBUGS-45198: fix bug where ConsolePlugins list does not display if ...",
    "body": "...not loaded plugins are present After img width=\"1365\" alt=\"Screenshot 2024-12-04 at 11 53 31 AM\" src=\""
  },
  {
    "id": "14582",
    "type": "pullRequest",
    "title": "OCPBUGS-45242: fix runtime error when backend service details don't e...",
    "body": "...xist After"
  },
  {
    "id": "14562",
    "type": "pullRequest",
    "title": "OCPBUGS-45296: Add Telemetry to the OLS Import to Console feature",
    "body": "_Note: PR openshift/lightspeed-console558 is dependant on this PR. (Currently, merged)_ Type: - x Bug Fix - New Feature Jira Link: 1. Solution Description: This pull request introduces telemetry tracking to the YAML editor in the `frontend/public/components/edit-yaml.jsx` file. The main changes include importing the telemetry hook, adding a new utility function to extract resource kind from YAML, and firing telemetry events when code is imported. Telemetry integration: `frontend/public/components/edit-yaml.jsx`(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR24): Added the `useTelemetry` hook to track user interactions with the YAML editor. 1(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR24) 2(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR117) Utility function: `frontend/public/components/edit-yaml.jsx`(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR252-R263): Introduced `getResourceKindfromYAML` function to determine the resource kind from YAML content. Telemetry event triggers: `frontend/public/components/edit-yaml.jsx`(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR284-R287): Added telemetry event firing for the 'OLS Code Imported' event when code is imported into the editor. 1(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR284-R287) 2(diffhunk://diff-68f9741fec50dc79b50d2de1ece38b9a78fb54154c683c8be276d2a104e62cdbR313-R316) Test setup: 1. Install OLS Plugin 2. Import a code to the console 3. Telemetry will be fired. Browser conformance: - x Chrome - Firefox - Safari"
  },
  {
    "id": "14470",
    "type": "pullRequest",
    "title": "OCPBUGS-44254: Bump pkijs from 2.1.89 to 2.1.90",
    "body": "Fixes: !-- For e.g Fixes: -- Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of Defect -- Build warning was fixed in where this was the only change Solution Description: !-- Describe your code changes in detail and explain the solution -- Further updates were not made to avoid risk Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- n/a Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- n/a Browser conformance: !-- To mark tested browsers, use x -- - Chrome - Firefox - Safari"
  },
  {
    "id": "14565",
    "type": "pullRequest",
    "title": "OCPBUGS-36212: Missing translation for \"\"Read write once pod (RWOP)\" ja and zh",
    "body": "FYI: The Japanese translation for \"Read write once pod (RWOP)\" is the same as the EN."
  },
  {
    "id": "14526",
    "type": "pullRequest",
    "title": "OCPBUGS-43859: Getting `Oh no, something went wrong` error when trying to install operator.",
    "body": "Some PackageManifests did not have a currentCSVDesc.annotations property resulting in console crashing for attempting to read from undefined"
  },
  {
    "id": "14521",
    "type": "pullRequest",
    "title": "OCPBUGS-44800: Add Dynamic Plugins nav item",
    "body": "!localhost_9000_k8s_cluster_operator openshift io~v1~Console_cluster_console-plugins("
  },
  {
    "id": "14134",
    "type": "pullRequest",
    "title": "OCPBUGS-32033: Fix Function Import: An error occurred Cannot read properties of undefined (reading 'filter')",
    "body": "Fixes: Descriptions: When users import a Serverless func repo and `build.buildEnvs` or `run.envs` is not defined in the `func.yaml` then UI throw an error on creation. This PR adds `` if envs is not defined."
  },
  {
    "id": "14130",
    "type": "pullRequest",
    "title": "OCPBUGS-13685: use default StorageClass for ServerlessFunction pipelineVolumeClaimTemplate",
    "body": "Fix: Descriptions: The \"Create Serverless Function\" is not working for OCP installation in Openstack. It fails to create the PersistentVolume used by the pipeline with the error `storageclass.storage.k8s.io \"gp3-csi\" not found`. So, this PR fetch the default Storage class and use that in VolumeClaimTemplate. Test setup: - Install Pipeline and Serverless Operator and create CRs - Add all ClusterTasks and Pipeline from this gist - Navigate to `Create Serverless function` form and create a Serverless function by entering Git URL and enable Pipeline in the form"
  },
  {
    "id": "14532",
    "type": "pullRequest",
    "title": "OCPBUGS-44595: only enable Save button in Console plugin enablement m...",
    "body": "...odal if value changes Demo Note the demo was recorded with the console in development mode, so the `Enable` link is hacked to appear (it normally wouldn't in dev mode) and its label doesn't change because the plugin was enabled manually."
  },
  {
    "id": "14531",
    "type": "pullRequest",
    "title": "OCPBUGS-41974: ImagePullSecret getting duplicated when editing DeploymentConfig in Form View",
    "body": "Fixes: Analysis / Root cause: Duplicate check was not considered for image pull secrets Solution Description: Added a check to skip if the secret is already added Screen shots / Gifs for design review: ----BEFORE--- ----- ---AFTER---- Unit test coverage report: NA Test setup: 1. Create a Deployment or Deployment config 2. Add image pull secret 3. Edit D/DC and check imagePullSecrets Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14502",
    "type": "pullRequest",
    "title": "OCPBUGS-44898: i18n upload/download routine task - sprint 262",
    "body": "Adding latest translations from Memsource project"
  },
  {
    "id": "14471",
    "type": "pullRequest",
    "title": "OCPBUGS-44265: ReRun of Resolver based PipelineRuns fails from UI",
    "body": "Fixes: Analysis / Root cause: PipelineRun with Resolver case was not handled. Only Pipeline name was sent at the time of rerun under pipelineRef. Solution Description: If PLR is using resolver, instead of sending pipeline name in pipelineRef, resolver and params values are used. Screen shots / Gifs for design review: ----BEFORE--- ----PLR list page kebab menu---- ----- ----PLR details page action menu---- ----- ---AFTER---- Unit test coverage report: NA Test setup: 1. Create a resolver based pipelinerun using or use the below provided yaml directly. 2. Attempt to \"ReRun\" the same from Console ``` kind: PipelineRun apiVersion: tekton.dev/v1 metadata: name: run-basic-pipeline-from-git spec: pipelineRef: resolver: git params: - name: url value: - name: revision value: main - name: pathInRepo value: pipeline.yaml params: - name: username value: admin ``` Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - Firefox - Safari - Edge"
  },
  {
    "id": "14448",
    "type": "pullRequest",
    "title": "OCPBUGS-43830: Expand \"Rollback Helm Release\" status width",
    "body": "Fixes: !-- For e.g Fixes: -- Analysis / Root cause: !-- Briefly describe analysis of US/Task or root cause of Defect -- Status text was too long for the width so it overlapped with the content in the next column Solution Description: !-- Describe your code changes in detail and explain the solution -- Expand width of status header Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- Before: !Screenshot From 2024-11-20 10-16-38( After: !Screenshot From 2024-11-20 10-16-34( Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- Create a helm release, then upgrade it, then go to \"Rollback Helm Release\" Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - x Firefox - Safari"
  },
  {
    "id": "14413",
    "type": "pullRequest",
    "title": "ODC-7698: Replace `CopyPipelineRunButton` with PF5 design",
    "body": "Fixes: !-- For e.g Fixes: -- Solution Description: !-- Describe your code changes in detail and explain the solution -- Remove `react-copy-to-clipboard` dep, remove `CopyPipelineRunButton`, and switch from a monaco-based design to the PatternFly-provided multiline design I considered other options, such as rewriting the `CopyPipelineRunButton` using the PatternFly component; however, the presence of the `textId` prop in PF's `ClipboardCopyButton` highly implies that the intended design should accompany a node in the DOM with an id containing the text to be copied. However, the `EditorField` does not have an ID containing just the text, and copying from its parent would include line numbers. Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- demo Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- n/a Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - x Firefox - Safari"
  },
  {
    "id": "14514",
    "type": "pullRequest",
    "title": "OCPBUGS-39388: Filter out empty params before Shipwright build creation",
    "body": "Fixes: Descriptions: - Filter out empty params before Shipwright build creation as BuildRun fails if empty param values are passed."
  },
  {
    "id": "14540",
    "type": "pullRequest",
    "title": "OCPBUGS-39359: Add optional build strategy params under ExpandCollapse",
    "body": "Fixes: Descriptions: - Hide optional parameters under the ExpandCollapse component."
  },
  {
    "id": "977",
    "type": "pullRequest",
    "title": "ODC-7780: update quick starts to work in the converged perspective",
    "body": "Update the following quick starts to make it work in the converged perspective 1. Add health checks to your sample application 2. Add Helm Chart Repositories to extend the Developer Catalog for your project 3. Get started with JBoss EAP 7 using a Helm Chart 4. Manage available content in the Helm Chart Catalog 5. Monitor your sample application 6. Get started with Node 7. Get started with Quarkus using a Helm Chart 8. Get started with Quarkus using s2i 9. Install Red Hat Developer Hub (RHDH) using Helm Chart 10. Install Red Hat Developer Hub (RHDH) using the Operator 11. Get started with Spring"
  },
  {
    "id": "979",
    "type": "pullRequest",
    "title": "OCPBUGS-55082: Revert \"Add rhel8 and rhel9 oc binaries for Linux OS in CLI downloads\"",
    "body": "Reverts openshift/console-operator976 The original PR is causing failures during minor version upgrades. /assign @dgoodwin /cc @jhadvig"
  },
  {
    "id": "976",
    "type": "pullRequest",
    "title": "CONSOLE-4523: Add rhel8 and rhel9 oc binaries for Linux OS in CLI downloads",
    "body": "Updating the downloads server in order for it to serve the rhel8 and rhel9 binaries for the Linux OS. Also needed to update `CLIDownloadsSyncController` controller that is responsible for creating the ConsoleCLIDownloads CR of `oc` binaries. Screen: img width=\"1386\" alt=\"Screenshot 2025-04-09 at 13 20 54\" src=\" / Originally I wanted to put all the oc + oc.rhel8 + oc.rhel9 into a single archive, but that would be a huge one, more then 500MB \ud83e\udd2f so I rather added an archive for each binary type. /assign @Mylanos @opayne1 Im open for discussion about the name for the link, cause basically what I did is I've only appended ` - RHEL 8` or ` - RHEL 9` for RHEL binaries (`oc.rhel8` and `oc.rhel9`)"
  },
  {
    "id": "955",
    "type": "pullRequest",
    "title": "NETOBSERV-2023: Implement a quickstart for netobserv operator",
    "body": "Initial quickstart for Network Observability Operator"
  },
  {
    "id": "975",
    "type": "pullRequest",
    "title": "CONSOLE-4481: Add additional CSP test",
    "body": "/assign @TheRealJon"
  },
  {
    "id": "971",
    "type": "pullRequest",
    "title": "OCPBUGS-45514: Report email_domain to telemetry",
    "body": "Fixing which got reverted cause due to panic ``` 2025-02-26T22:31:18.003099708Z E0226 22:31:18.001413 1 telemetry.go:103 telemetry config error: HTTP request failed with status '403 Forbidden'2025-02-26T22:31:18.003099708Z E0226 22:31:18.001669 1 panic.go:262 \"Observed a panic\" panic=\"runtime error: invalid memory address or nil pointer dereference\" panicGoValue=\"\\\"invalid memory address or nil pointer dereference\\\"\" stacktrace= 2025-02-26T22:31:18.003099708Z goroutine 1126 running:2025-02-26T22:31:18.003099708Z k8s.io/apimachinery/pkg/util/runtime.logPanic({0x3779570, 0x553bc80}, {0x2c92360, 0x5433290}) 2025-02-26T22:31:18.003099708Z /go/src/github.com/openshift/console-operator/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:107 +0xbc 2025-02-26T22:31:18.003099708Z k8s.io/apimachinery/pkg/util/runtime.handleCrash({0x3779570, 0x553bc80}, {0x2c92360, 0x5433290}, {0xc001a783d0, 0x1, 0xc002be6148?}) 2025-02-26T22:31:18.003099708Z /go/src/github.com/openshift/console-operator/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:82 +0x5e 2025-02-26T22:31:18.003099708Z k8s.io/apimachinery/pkg/util/runtime.HandleCrash({0xc002be6190, 0x1, 0xc000ab3180?}) 2025-02-26T22:31:18.003099708Z /go/src/github.com/openshift/console-operator/vendor/k8s.io/apimachinery/pkg/util/runtime/runtime.go:59 +0x108 2025-02-26T22:31:18.003099708Z panic({0x2c92360?, 0x5433290?}) 2025-02-26T22:31:18.003099708Z /usr/lib/golang/src/runtime/panic.go:785 +0x132 2025-02-26T22:31:18.003099708Z github.com/openshift/console-operator/pkg/console/telemetry.GetOrganizationMeta(0xc000c1d530, {0x0, 0x0}, {0x0, 0x0}, {0xc0009fa210, 0x24}, {0xc0009d1290, 0xb0}) 2025-02-26T22:31:18.003099708Z /go/src/github.com/openshift/console-operator/pkg/console/telemetry/telemetry.go:105 +0x32d 2025-02-26T22:31:18.003099708Z github.com/openshift/console-operator/pkg/console/operator.(consoleOperator).GetTelemetryConfiguration(0xc000bb2c00, {0xc0000cd220?, 0x2?}, 0xc002be7710) 2025-02-26T22:31:18.003099708Z /go/src/github.com/openshift/console-operator/pkg/console/operator/sync_v400.go:483 +0x27e ``` /assign @TheRealJon"
  },
  {
    "id": "974",
    "type": "pullRequest",
    "title": "CONSOLE-4481: Add junit generation for unit and e2e testing",
    "body": "In order for prow to contribute tests output to sippy our unit and e2e tests need to generate junit files. For that reason I've rewrote how the unit tests and e2e tests are being executed. img width=\"1913\" alt=\"Screenshot 2025-04-07 at 14 45 51\" src=\" / /assign @TheRealJon @yapei"
  },
  {
    "id": "973",
    "type": "pullRequest",
    "title": "ART-12521: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-04-04 17:29:46,063 ERROR vendor directory changed after vendoring: A vendor/golang.org/x/sys/unix/dev_aix_ppc.go A vendor/golang.org/x/sys/unix/dev_aix_ppc64.go A vendor/golang.org/x/sys/unix/dev_zos.go 2025-04-04 17:29:50,718 ERROR PackageRejected: The content of the vendor directory is not consistent with go.mod. Please check the logs for more details. ``` Konflux ignores .gitignore files since its a possible security gap."
  },
  {
    "id": "958",
    "type": "pullRequest",
    "title": "NETOBSERV-2029: add netobserv ConsoleCLIDownload",
    "body": "Add netobserv CLI download link"
  },
  {
    "id": "970",
    "type": "pullRequest",
    "title": "OCPBUGS-53164: Add annotations to Enable developer perspective quick start to include in the console quick starts"
  },
  {
    "id": "968",
    "type": "pullRequest",
    "title": "ODC-7723: Add quick start to enable developer perspective",
    "body": "!Screenshot 2025-03-07 at 3 09 35 PM( img width=\"450\" alt=\"image\" src=\" / img width=\"449\" alt=\"image\" src=\" / img width=\"447\" alt=\"image\" src=\" / img width=\"455\" alt=\"image\" src=\" / img width=\"454\" alt=\"image\" src=\" /"
  },
  {
    "id": "969",
    "type": "pullRequest",
    "title": "CONSOLE-4508: Enable CSP e2e test",
    "body": "Enabling the CSP related test case in out CI. The test should only run if the featureGate is set. /assign @TheRealJon @yapei"
  },
  {
    "id": "965",
    "type": "pullRequest",
    "title": "OCPBUGS-51256: Custom route TLS should be optional when IngressController's DefaultCertificate is set",
    "body": "Due to this change Routes controller needs to start fetching IngressController `default` instance form the `openshift-ingress-operator` namespace and check if the `Sepc.DefaultCertificate` is set. If so, console-operator does not need to enforce setting the custom TLS secret for custom route, in the `ValidateCustomRouteConfig` method. + Add unit tests for the NewRouteConfig function, for which I needed to make the `RouteControllerSpec` fields public. /assign @TheRealJon"
  },
  {
    "id": "964",
    "type": "pullRequest",
    "title": "OCPBUGS-51379: Re-revert Report email_domain to telemetry + fix panic for uninitialized mail value.",
    "body": "Reverts openshift/console-operator962 Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple payload failures due to console-operator panic To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-aggregate periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance 10 ``` CC: @jhadvig"
  },
  {
    "id": "962",
    "type": "pullRequest",
    "title": "OCPBUGS-45514: Report email_domain to telemetry + fix panic for uninitialized mail value.",
    "body": "The original PR needed to be reverted( due to panicking operator. /assign @TheRealJon"
  },
  {
    "id": "961",
    "type": "pullRequest",
    "title": "OCPBUGS-51156: Revert 950 \"OCPBUGS-45514: Report email_domain to telemetry\"",
    "body": "Reverts 950 ; tracked by OCPBUGS-51156 Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple payload failures due to console-operator panic To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-aggregate periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance 10 ``` CC: @jhadvig div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "950",
    "type": "pullRequest",
    "title": "OCPBUGS-45514: Report email_domain to telemetry",
    "body": "/assign @TheRealJon"
  },
  {
    "id": "956",
    "type": "pullRequest",
    "title": "OCPBUGS-48536: Bump documentationBaseURL to 4.19",
    "body": "/assign @TheRealJon"
  },
  {
    "id": "960",
    "type": "pullRequest",
    "title": "OCPBUGS-48740: Vendor the missing CSP directives",
    "body": "Vendoring: - - /assign @TheRealJon"
  },
  {
    "id": "957",
    "type": "pullRequest",
    "title": "OCPBUGS-46513: Add ConsolePluginContentSecurityPolicy feature gate to...",
    "body": "... console config"
  },
  {
    "id": "939",
    "type": "pullRequest",
    "title": "OCPEDGE-1345: feat: add arbiter node support for HA",
    "body": "Per EP: This PR bumps to the latest ocp/api to pull in the new control plane topology defined in the Arbiter EP. The `HighlyAvailableArbiter` is a new control plane topology that allows for 2 regular sized master nodes and 1 smaller arbiter node as part of the control plane, this PR adds the check so that HA is still respected when the control plane topology is set to `HighlyAvailableArbiter`"
  },
  {
    "id": "946",
    "type": "pullRequest",
    "title": "OCPBUGS-45722: Updating openshift-enterprise-console-operator-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-console-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-console-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "944",
    "type": "pullRequest",
    "title": "OCPBUGS-45222: Dont disable console when authConfig type is set to None",
    "body": "/assign @spadgett"
  },
  {
    "id": "945",
    "type": "pullRequest",
    "title": "OCPBUGS-44953: don't set current clients when no OIDC providers are configured",
    "body": "Description Fixes OCPBUGS-44953( by resetting the AuthStatusHandler.currentClientID to an empty string when the Authentication.Spec.Type is not set to OIDC. Additionally, protects against a degraded state when AuthStatusHandler.currentClientID is set but there is no evidence of OIDC providers being configured in the spec by only adding current clients in the Authentication status when both the currentClientID is set and there is evidence of OIDC providers being configured. Adds a warning log when we notice the currentClientID is set but there is no evidence of OIDC providers being configured."
  },
  {
    "id": "942",
    "type": "pullRequest",
    "title": "OCPBUGS-44362: Remove the v1alpha1 schema for ConsolePlugin CRD",
    "body": "Vendor of /assign @TheRealJon"
  },
  {
    "id": "940",
    "type": "pullRequest",
    "title": "OCPBUGS-44556: console/status: set initial value of Message field",
    "body": "Due to this change( the condition's `Message` field has now a zero value of `nil` (due to using the `ConditionApplyConfiguration`), while before it was simply `\"\"`, which is a valid value for `Message`. This PR simply initializes the `Message` field to an empty string."
  },
  {
    "id": "183",
    "type": "pullRequest",
    "title": "OCPBUGS-37212: Upstream sync 15042025",
    "body": "Upstream sync 15042025"
  },
  {
    "id": "180",
    "type": "pullRequest",
    "title": "OCPBUGS-53198: Upstream sync 01-04-2025",
    "body": "Upstream sync 01-04-2025"
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "OCPBUGS-53198: Sync 25-03-2025",
    "body": "Upstream sync 25-03-2025"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "OCPBUGS-45272: Ds merge 3/7/25",
    "body": "Downstream merge as requested by @SchSeba"
  },
  {
    "id": "173",
    "type": "pullRequest",
    "title": "OCPBUGS-48190: Ds merge 2/5/2025",
    "body": "Downstream merge including port isolation support"
  },
  {
    "id": "131",
    "type": "pullRequest",
    "title": "OCPBUGS-45467: Updating coredns-container image to be consistent with ART for 4.19",
    "body": "Updating coredns-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: coredns.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "130",
    "type": "pullRequest",
    "title": "OCPBUGS-39559: Updating coredns-container image to be consistent with ART for 4.18",
    "body": "Updating coredns-container image to be consistent with ART for 4.18 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: coredns.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "OCPBUGS-36454: Rename Dockerfile.openshift.rhel7 to Dockerfile.ocp",
    "body": "Rename `Dockerfile.openshift.rhel7` to a version independent name - `Dockerfile.ocp`. This aims to address the discrepancy between the Dockerfile name and its contents which refer to rhel9 at the moment. Coordinated with: - merging the PR first - ART merging once this is merged."
  },
  {
    "id": "320",
    "type": "pullRequest",
    "title": "ART-12521: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-04-04 17:27:40,305 ERROR vendor directory changed after vendoring: A vendor/github.com/google/gnostic-models/jsonschema/schema.json A vendor/github.com/google/gnostic-models/openapiv2/openapi-2.0.json A vendor/go.opentelemetry.io/otel/renovate.json A vendor/k8s.io/kubernetes/test/e2e/testing-manifests/kubectl/agnhost-primary-service.json 2025-04-04 17:27:42,087 ERROR PackageRejected: The content of the vendor directory is not consistent with go.mod. Please check the logs for more details. ``` Konflux ignores .gitignore files since its a possible security gap."
  },
  {
    "id": "311",
    "type": "pullRequest",
    "title": "NO-JIRA: Merge into master"
  },
  {
    "id": "317",
    "type": "pullRequest",
    "title": "OCPBUGS-45433: Updating csi-driver-manila-container image to be consistent with ART for 4.19",
    "body": "Updating csi-driver-manila-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-driver-manila.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "318",
    "type": "pullRequest",
    "title": "OCPBUGS-45739: Updating ose-openstack-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-openstack-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-openstack-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "316",
    "type": "pullRequest",
    "title": "OCPBUGS-45412: Updating ose-openstack-cinder-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-openstack-cinder-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-openstack-cinder-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "153",
    "type": "pullRequest",
    "title": "NO-JIRA: Merge into main",
    "body": "Need manual intervention due to conflicts in `go.mod` caused by us overriding the go version to match other components."
  },
  {
    "id": "150",
    "type": "pullRequest",
    "title": "OCPBUGS-45714: Updating csi-driver-nfs-container image to be consistent with ART for 4.19",
    "body": "Updating csi-driver-nfs-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-driver-nfs.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "83",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase external-attacher to v4.8.1 for OCP 4.19",
    "body": "Diff to upstream 4.8.1: Changes between 4.7.0 (OCP 4.18) and 4.8.1 (OCP 4.19): - - Full changelogs: @openshift/storage"
  },
  {
    "id": "82",
    "type": "pullRequest",
    "title": "OCPBUGS-41719: UPSTREAM: 624: Reorder API calls after successful detach",
    "body": "Fix double ControllerUnpublish calls. Remove a finalizer on a VolumeAttachment (VA) first and then mark its state as detached (if the object still exists). This ensures that ControllerUnpublish is called only once. It won't be called( on VA without the finalizer, even if it has attached: true."
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "OCPBUGS-45401: Updating csi-attacher-container image to be consistent with ART for 4.19",
    "body": "Updating csi-attacher-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-attacher.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "111",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase external-provisioner to upstream v5.2.0 for OCP 4.19",
    "body": "Diff to upstream 5.2.0: Changes between 5.1.0 (OCP 4.18) and 5.2.0 (OCP 4.19): - - - - Full changelogs: @openshift/storage"
  },
  {
    "id": "112",
    "type": "pullRequest",
    "title": "OCPBUGS-51561: bump golang.org/x/crypto to v0.36.0",
    "body": "I bumped the golang.org/x/crypto version to v0.36.0 as opposed to v0.35.0 because this was the version upstream bumped to."
  },
  {
    "id": "113",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Update bertinatto from OWNERS"
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "OCPBUGS-49805: Fix the managed-by-label getting populated with invalid value",
    "body": "Cherry pick of upstream's"
  },
  {
    "id": "109",
    "type": "pullRequest",
    "title": "OCPBUGS-46727: CVE-2024-45338: bump golang.org/x/net to v0.34.0"
  },
  {
    "id": "108",
    "type": "pullRequest",
    "title": "OCPBUGS-46125: CVE-2024-45337: bump golang.org/x/crypto to v0.31.0"
  },
  {
    "id": "107",
    "type": "pullRequest",
    "title": "OCPBUGS-45735: Updating csi-provisioner-container image to be consistent with ART for 4.19",
    "body": "Updating csi-provisioner-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-provisioner.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "169",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase external-resizer to upstream v1.13.2 for OCP 4.19",
    "body": "Diff to upstream 1.13.2: Changes between 1.12.0 (OCP 4.18) and 1.13.2 (OCP 4.19): - - - - - Full changelogs: @openshift/storage"
  },
  {
    "id": "167",
    "type": "pullRequest",
    "title": "OCPBUGS-45706: Updating ose-csi-external-resizer-container image to be consistent with ART for 4.19",
    "body": "Updating ose-csi-external-resizer-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-csi-external-resizer.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase external-snapshotter to v8.2.1 for OCP 4.19",
    "body": "Diff to upstream 8.2.1: Notable changes between 8.2.0 (OCP 4.18) and 8.2.1 (OCP 4.19): - Full changelogs: @openshift/storage"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "STOR-2281: Remove csi-snapshot-validation-webhook",
    "body": "Remove csi-snapshot-validation-webhook image no longer used."
  },
  {
    "id": "71",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase livenessprobe to v2.15.0 for OCP 4.19",
    "body": "Diff to upstream 2.15.0: Changes between 2.14.0 (OCP 4.18) and 2.15.0 (OCP 4.19): - Full changelogs: @openshift/storage"
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "OCPBUGS-45588: Updating csi-livenessprobe-container image to be consistent with ART for 4.19",
    "body": "Updating csi-livenessprobe-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-livenessprobe.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "78",
    "type": "pullRequest",
    "title": "STOR-2251: Rebase node-driver-registrat to v2.13.0 for OCP 4.19",
    "body": "Diff to upstream 2.13.0: Changes between 2.12.0 (OCP 4.18) and 2.13.0 (OCP 4.19): - Full changelogs: @openshift/storage"
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "OCPBUGS-45712: Updating csi-node-driver-registrar-container image to be consistent with ART for 4.19",
    "body": "Updating csi-node-driver-registrar-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: csi-node-driver-registrar.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "467",
    "type": "pullRequest",
    "title": "OCPBUGS-45492: Updating openshift-enterprise-builder-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-builder-container image to be consistent with ART for 4.19"
  },
  {
    "id": "458",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-43812: Upgraded Kubernetes dependency from 1.28.2 to 1.30.2",
    "body": "Upgraded Kubernetes dependency from 1.28.2 to 1.30.2 This upgrades the Kubernetes dependency from 1.28.2 to 1.30.2 to close the version gap that appeared when OpenShift continued with Kubernetes v1.28.2 through version 4.16, even though Kubernetes had moved ahead. OpenShift 4.15 was the last version where OpenShift and Kubernetes were closely aligned. With OpenShift 4.18, Golang was also upgraded from v1.21 to v1.22 to ensure compatibility with the newer Kubernetes release. Summary: - Upgrade k8s.io dependencies to v1.30.2 from v1.28.2"
  },
  {
    "id": "455",
    "type": "pullRequest",
    "title": "OCPBUGS-48741: Buildah dependency bump to v1.39.0",
    "body": "Bump buildah from 1.35.4 to 1.39.0 to fix CVE-2024-9675("
  },
  {
    "id": "432",
    "type": "pullRequest",
    "title": "OCPBUGS-48667: Bump golang.org/x/crypto dependency to 0.31.0",
    "body": "This commit applies a fix for vulnerability CVE-2024-45337 ( It's related jira is OCPBUGS-48667( Output from 'make test' run ` make test hack/test.sh ok github.com/openshift/builder/cmd 0.044s ? github.com/openshift/builder/pkg/build/builder/crioclient no test files ? github.com/openshift/builder/pkg/build/builder/util/log no test files ? github.com/openshift/builder/pkg/version no test files ? github.com/openshift/builder/test/unit/fake no test files ok github.com/openshift/builder/pkg/build/builder 121.601s ok github.com/openshift/builder/pkg/build/builder/cmd 0.053s ok github.com/openshift/builder/pkg/build/builder/cmd/dockercfg 0.005s ok github.com/openshift/builder/pkg/build/builder/cmd/scmauth 0.026s ok github.com/openshift/builder/pkg/build/builder/timing 0.004s ok github.com/openshift/builder/pkg/build/builder/util 0.005s ok github.com/openshift/builder/pkg/build/builder/util/dockerfile 0.003s ` Output from 'make build' run ` root@ppalepu-vm builder make build hack/build.sh `"
  },
  {
    "id": "414",
    "type": "pullRequest",
    "title": "OCPBUILD-174: Clean Up Containerfiles",
    "body": "Remove previous \"dev\"/rhel7 Dockerfiles, and replace them with an equivalent `Containerfile` based on ubi9. The `Containerfile` uses the suffix `.ubi` as opposed to a specific UBI/RHEL version number to support future upgrades to ubi10 and beyond. The Containerfile uses UBI images from `registry.access.redhat.com`, which does not require a pull secret. This makes it easy for any contributor to pick up and build. Created a separate Containerfile for OCP builds (`.ocp`), copying the current contents of `Dockerfile.rhel8`. This `Containerfile` uses images from the OpenShift CI system, which are only available to Red Hat employees. The `.rhel8` suffix was removed because it is a source of confusion for new contributors; OCP is currently based on RHEL9 images, and will switch to ubi10 at some point in the future."
  },
  {
    "id": "415",
    "type": "pullRequest",
    "title": "OCPBUILD-174: Always Build with `-mod vendor`",
    "body": "We no longer need to test if we are building with go modules and the `-mod vendor` mode; always build with `-mod vendor` because vendoring dependencies is an OpenShift standard practice."
  },
  {
    "id": "419",
    "type": "pullRequest",
    "title": "OCPBUGS-47526: Add team members to the OWNERS file",
    "body": "Add team members to the OWNERS file for PR reviews and approvals"
  },
  {
    "id": "416",
    "type": "pullRequest",
    "title": "OCPBUILD-174: Refresh CONTRIBUTING Guide",
    "body": "Clean up the README and contributing guide so it is easier to comprehend and provide fuller context to contributors. The original README was a bare document that was mostly untouched after OpenShift 4.0 was released. Most of the contributors at the time were OpenShift veterans and had deep \"head knowledge\" of how OpenShift worked; a fully detailed README or contributor guide was not a top priority. This update provides fuller context to contributors, linking out to the openshift-controller-manager repository and Red Hat's official docs for Builds with BuildConfig. The contributor guide is restructured with a more natural developer progression (set up, clone, compile, test, deploy). Deploy instructions are updated to reference cluster-bot for Red Hat employees, and self- managed install modes for the general public. To encourage cluster-bot use, contributors are encouraged to submit pull requests with only unit tests passing; testing code changes end to end is not required prior to PR submission."
  },
  {
    "id": "412",
    "type": "pullRequest",
    "title": "OCPBUGS-45321: skipping some unit tests to avoid failures as they are duplicate",
    "body": "Recent git upgrade to fix a CVE is causing some issues lately for the unit tests. The git upgrade disabled file protocol by default which is causing the problem.Those tests are skipped as they are duplicate."
  },
  {
    "id": "425",
    "type": "pullRequest",
    "title": "IR-522: disable aws region check",
    "body": "disable the artificial aws region check. we are doing this so we can support new aws regions without requiring patching the code every time. this is a test and should not land on main."
  },
  {
    "id": "424",
    "type": "pullRequest",
    "title": "NO-JIRA: chore: update owners file",
    "body": "this commits adds myself to the list of reviewers and approvers while also removes dmage (no longer part of the team)."
  },
  {
    "id": "419",
    "type": "pullRequest",
    "title": "OCPBUGS-38874,OCPBUGS-25981: bump docker-distribution to add new regions",
    "body": "bumping docker-distribution dependency as the new version includes a few new regions. this bump also includes the changes introduced by"
  },
  {
    "id": "417",
    "type": "pullRequest",
    "title": "OCPBUGS-45414: Updating openshift-enterprise-registry-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-registry-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-registry.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "167",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: adapt for layered node image",
    "body": "We're working on changing how the node image is built to more cleanly be a layered build on top of a RHEL-only base image. As a result, some of the fields in `/etc/os-release` are changing slightly. The changes are documented in: Though one bit missing from there is that `RHEL_VERSION` is no longer in `/etc/os-release`. That info is now simply `ID`. So use that instead."
  },
  {
    "id": "165",
    "type": "pullRequest",
    "title": "MGMT-19747: Getting the kernel version from the `kernel-rt-core-` file.",
    "body": "OCP 4.19 has recently bumped its RHEL version from 9.4 to 9.6. With this change, seems like the `/usr/share/rpm-ostree/extensions/kernel-rt-version...` file is gone so the test has been adjusted to get the version from the `/usr/share/rpm-ostree/extensions/kernel-rt-core-version...` file instead. --- /assign @TomerNewman @yevgeny-shnaidman In the recent containers: ``` root gpu-operator (main) $ oc adm release info registry.ci.openshift.org/ocp/release:4.19.0-0.nightly-2025-01-19-034009 --image-for=rhel-coreos-extensions quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:297ff1d0d9e4ecd2f48ba50cfe07e88f5bb3f6379c27786fba5768f63fa9b000 root gpu-operator (main) $ podman run -it --rm quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:297ff1d0d9e4ecd2f48ba50cfe07e88f5bb3f6379c27786fba5768f63fa9b000 ls -1 /usr/share/rpm-ostree/extensions/ grep kernel-rt -rw-r--r--. 1 root root 3813281 Jan 13 18:49 kernel-rt-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 19312353 Jan 13 18:49 kernel-rt-core-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 20380805 Jan 13 18:49 kernel-rt-devel-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 4518229 Jan 13 18:49 kernel-rt-kvm-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 38912981 Jan 13 18:49 kernel-rt-modules-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 32060453 Jan 13 18:49 kernel-rt-modules-core-5.14.0-427.51.1.el9_4.x86_64.rpm -rw-r--r--. 1 root root 4283873 Jan 13 18:49 kernel-rt-modules-extra-5.14.0-427.51.1.el9_4.x86_64.rpm ```"
  },
  {
    "id": "164",
    "type": "pullRequest",
    "title": "MGMT-19688: Adding pull-secrets to the `oc adm release info...` command.",
    "body": "In order to access the release payload, we need to have access to the pull-secret of the cluster. In addition, since we are running in a \"hub\" cluster, `podman` cannot be used, therefore, I have replaced it with an `oc run ...` command instead."
  },
  {
    "id": "163",
    "type": "pullRequest",
    "title": "MGMT-19688: Pulling the DTK image from the CI registry instead of quay.io.",
    "body": "This job is running on OCP nightly builds and the OCP payload for those versions aren't available in quay.io but instead they are in `registry.ci.openshift.org`. --- /assign @yevgeny-shnaidman @TomerNewman"
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "OCPBUGS-48156: Assert right rt version at build time"
  },
  {
    "id": "162",
    "type": "pullRequest",
    "title": "MGMT-19671: Using `jq` instead of `yq` in the `e2e` job.",
    "body": "`yq` is not installed in the image that runs the job on nightly builds. It is installed on the pre-merge job though, therefore, it wasn't catch during PR creation. This commit should fix the issue. --- /assign @yevgeny-shnaidman @TomerNewman Nightly builds are currently failing because the `yq` tool doesn't exist in the test image."
  },
  {
    "id": "160",
    "type": "pullRequest",
    "title": "MGMT-19632: Extending the `e2e` job to validate the `kernel-rt` versions matches.",
    "body": "We are validating that the DTK image contain the kernel packages matching the running kernel on the node. This commit is extending the job to also compare DTK's kernel-rt packages and the RT kernel that the node will reboot into if configured to do so."
  },
  {
    "id": "159",
    "type": "pullRequest",
    "title": "OCPBUGS-45364: Updating driver-toolkit-container image to be consistent with ART for 4.19",
    "body": "Updating driver-toolkit-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: driver-toolkit.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "89",
    "type": "pullRequest",
    "title": "OCPBUGS-53096: Build openshift container based on 4.19 image",
    "body": "Running this container in a TDX confidential cluster resulted in a segfault. That segfault could be related to a glibc bug reported for some guests (see I couldn't reproduce the issue on other images that were built onto the 4.19 image. Trying out to test the hypothesis and a possible _fix_. This patch fixes the segfault `egress-router-binary-copy` caused while installing an OCP 4.19 cluster on TDX confidential machines in GCP."
  },
  {
    "id": "324",
    "type": "pullRequest",
    "title": "ETCD-726: Rebase etcd 3.5.21 openshift 4.19",
    "body": "This PR rebases etcd 3.5.21 into openshift-4.19. running `make` locally ``` SUCCESS: etcd_build (GOARCH=arm64) ./bin/etcd --version etcd Version: 3.5.21 Git SHA: 6e97e912b Go Version: go1.23.7 Go OS/Arch: darwin/arm64 ./bin/etcdctl version etcdctl version: 3.5.21 API version: 3.5 ./bin/etcdutl version etcdutl version: 3.5.21 API version: 3.5 ``` cc @openshift/openshift-team-etcd @sdodson"
  },
  {
    "id": "313",
    "type": "pullRequest",
    "title": "OCPBUGS-52181: Ensure cluster id changes during force-new-cluster",
    "body": "Ensures that the cluster id is different for each invocation of --force-new-cluster"
  },
  {
    "id": "311",
    "type": "pullRequest",
    "title": "OCPBUGS-50510: Add configurable option for hardware-related timeout delay",
    "body": "defaults to 25 seconds to get us closer to the request timeout that is used in the kube-apiserver of 34 seconds. configuration option to override default with `OPENSHIFT_ETCD_HARDWARE_DELAY_TIMEOUT` environment variable"
  },
  {
    "id": "306",
    "type": "pullRequest",
    "title": "OCPBUGS-45488: Updating ose-etcd-container image to be consistent with ART for 4.19",
    "body": "Updating ose-etcd-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-etcd.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "315",
    "type": "pullRequest",
    "title": "ETCD-717: Rebase etcd 3.5.19 openshift 4.19",
    "body": "This PR rebases etcd 3.5.19 into openshift-4.19. running `make` locally ``` SUCCESS: etcd_build (GOARCH=arm64) ./bin/etcd --version etcd Version: 3.5.19 Git SHA: 7ef93eff0 Go Version: go1.23.7 Go OS/Arch: darwin/arm64 ./bin/etcdctl version etcdctl version: 3.5.19 API version: 3.5 ./bin/etcdutl version etcdutl version: 3.5.19 API version: 3.5 ``` cc @openshift/openshift-team-etcd @sdodson"
  },
  {
    "id": "309",
    "type": "pullRequest",
    "title": "DOWNSTREAM: carry: OCPBUGS-51838: fix a compaction induce latency issue",
    "body": "This is upstream PR The compaction behavior is changed in commit 02635( and introduces a latency issue. To be more speicific, the `ticker.C` acts as a fixed timer that triggers every 10ms, regardless of how long each batch of compaction takes. This means that if a previous compaction batch takes longer than 10ms, the next batch starts immediately, making compaction a blocking operation for etcd. To fix the issue, this commit revert the compaction to the previous behavior which ensures a 10ms delay between each batch of compaction, allowing other read and write operations to proceed smoothly. Please read"
  },
  {
    "id": "308",
    "type": "pullRequest",
    "title": "ETCD-709: Rebase etcd 3.5.18 openshift 4.19",
    "body": "This PR rebases etcd 3.5.18 into openshift-4.19. running `make` locally ``` SUCCESS: etcd_build (GOARCH=arm64) ./bin/etcd --version etcd Version: 3.5.18 Git SHA: 88bb55f64 Go Version: go1.22.11 Go OS/Arch: darwin/arm64 ./bin/etcdctl version etcdctl version: 3.5.18 API version: 3.5 ./bin/etcdutl version etcdutl version: 3.5.18 API version: 3.5 ``` cc @openshift/openshift-team-etcd"
  },
  {
    "id": "74",
    "type": "pullRequest",
    "title": "OCPCLOUD-2845: Merge (1316392) into master"
  },
  {
    "id": "69",
    "type": "pullRequest",
    "title": "OCPCLOUD-2845: Merge (54cd0bb) into master"
  },
  {
    "id": "72",
    "type": "pullRequest",
    "title": "OCPBUGS-43089: Do not check for PodCIDR when determining if node is in the default subnetwork.",
    "body": "Manual cherry-pick that will be dropped when we rebase, needed to satisfy backporting requirements to 4.18. Original commit message: gce_loadbalancer_internal.go - Do not check for PodCIDR when determining if node is in the default subnetwork. The problem with PodCIDR check is that it can skip a freshly added node when PodCIDR is not yet set. Service provisioning will succeed. Then, when PodCIDR is added to the node, this code can decide to not sync the service anymore. As a result the node would never be added to the LB backends. Possible effect on a multi-subnet cluster: the controller may attempt to add a node from a non-default network to the Instance Group. This would fail, error would be returned by `updateInternalLoadBalancer` function and as a result the service would be retried. At some point the retry will see the updated node with the subnetwork label and skip it. Manual testing with a custom CCM with this change showed that the label is added immediately and the error doesn't even happen. The PodCIDR check was supposed to be a safety check for situations where subnetwork label is not present and node subnet can not be determined. Since PodCIDR was supposed to be set in the same place as PodCIDR the assumption was that node with PodCIDR but no label must be from the default subnet."
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "OCPBUGS-45407: Updating ose-gcp-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-gcp-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-gcp-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "240",
    "type": "pullRequest",
    "title": "ART-12521: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-04-04 17:30:06,588 ERROR vendor directory changed after vendoring: A vendor/github.com/emicklei/go-restful/v3/coverage.sh A vendor/github.com/subosito/gotenv/.env 2025-04-04 17:30:08,935 ERROR PackageRejected: The content of the vendor directory is not consistent with go.mod. Please check the logs for more details. ``` Konflux ignores .gitignore files since its a possible security gap."
  },
  {
    "id": "239",
    "type": "pullRequest",
    "title": "OCPCLOUD-2856: Merge (b822ce2) into master"
  },
  {
    "id": "238",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that updates the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "237",
    "type": "pullRequest",
    "title": "NO-JIRA: Merge (737b737) into master"
  },
  {
    "id": "234",
    "type": "pullRequest",
    "title": "OCPBUGS-45614: Updating ose-gcp-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-gcp-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-gcp-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "111",
    "type": "pullRequest",
    "title": "CORS-3906: Update MAPI GCP Provider to use custom GCP endpoints",
    "body": "Vendor update. Update openshift/api to use a version that contains the custom endpoint information. When creating the compute service, determine if there is a custom endpoint set in the infrastructure platform status. When creating the tagging service, determine fi there is a custom endpoint set in the infrastructure platform status. Add a function template to pass to the actuator and machine scope parameters for looking up the custom endpoints. During tests a Mock function is passed that will do nothing and return no error. During the actual execution the real lookup function is passed. When no function is set the default will be to use the function that will look through the infrastructure to find the custom endpoints. Update machine scope tests to set a mock function. Update actuator tests to set a mock function"
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "OCPCLOUD-2882, OCPCLOUD-2889: Provision AMD SEV-SNP and Intel TDX confidential instances",
    "body": "As in upstream cluster-api-provider-gcp's: - - - Other relevant patches: - openshift/api patch: - Machine api operator patch:"
  },
  {
    "id": "102",
    "type": "pullRequest",
    "title": "OCPBUGS-46387: add a3 instance types to gpu quota validation logic",
    "body": "this change expands the quota detection logic to include a3 instance types in addition to a2."
  },
  {
    "id": "108",
    "type": "pullRequest",
    "title": "OCPBUGS-17079, OCPBUGS-44671: Disable shielded VMs for non-UEFI disks",
    "body": "This PR builds upon - Abstracts the check to a helper function/utility - Adds proper parsing for all supported input formats of disk images. It also adds an additional check in the machine reconciler's `create()` method, to ensure creation of new machinesets non-uefi-compatible won't fail (the higher level machineset check may have not run or updated the spec when creation happens)"
  },
  {
    "id": "109",
    "type": "pullRequest",
    "title": "OCPCLOUD-2840: Bump k8s 1.32"
  },
  {
    "id": "101",
    "type": "pullRequest",
    "title": "OCPBUGS-43531: Refactor exists() to handle gcp API change",
    "body": "GCP started responding with 400 for invalid zone instead of 404. This PR updates the exits() to handle the change. It also removes the zone get API call and instead determines invalid zone or projectID from the error message of the instance get call."
  },
  {
    "id": "98",
    "type": "pullRequest",
    "title": "OCPBUGS-45923: update a2 gpu detection logic to be dynamic",
    "body": "this change updates the way that a2 instance types are validated for quota. gcp has added a new type of a2 instance category named \"ultragpu\". the ultragpu series has a different type of gpu, \"nvidia-a100-80gb\", which requires a new constant be applied to the quota. to make this workflow more modular in the future, it is also being adjusted to dynamically discover the gpu type during the instance quota validation."
  },
  {
    "id": "96",
    "type": "pullRequest",
    "title": "OCPBUGS-45733: Updating ose-machine-api-provider-gcp-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-api-provider-gcp-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-api-provider-gcp.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "OCPBUGS-39258: UPSTREAM: 2021: Add Attach Limit for Hyperdisk + Gen4 VMs",
    "body": "Cherry-pick upstream PRS that reports correct nr. of hyperdisk-balanced disks attachable to a VM."
  },
  {
    "id": "75",
    "type": "pullRequest",
    "title": "STOR-2257: Rebase to upstream v1.17.4 for OCP 4.19",
    "body": "Issue link: This rebase also includes fixes for Diff to upstream v1.15.2: Changes between v1.15.2 (OCP 4.18) and v1.17.4 (OCP 4.19): - - - - - - - Full changelogs: @openshift/storage"
  },
  {
    "id": "73",
    "type": "pullRequest",
    "title": "OCPBUGS-45567: Updating ose-gcp-pd-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-gcp-pd-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-gcp-pd-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "145",
    "type": "pullRequest",
    "title": "OCPBUGS-53451: enable VolumeAttributesClass",
    "body": "Adding RBAC rules and enabling the VolumeAttributesClass for clusters with TechPreviewNoUpgrade set."
  },
  {
    "id": "144",
    "type": "pullRequest",
    "title": "OCPBUGS-54336: Bump library-go",
    "body": "Bump library-go to pull in"
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "CORS-3911: Add custom endpoint args from infrastructure",
    "body": "The infrastructure struct will contain the endpoint overrides (if they exist). The overrides should be passed along to the csi-driver. In this case upstream already has a flag for `compute-endpoint`. The operator will search through the list of endpoint overrides and if the compute endpoint override is found, then the data is passed along as an arg/flag."
  },
  {
    "id": "140",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "139",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 cc @openshift/storage"
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "OCPBUGS-48100: Rename master branch to main",
    "body": "Update master branch to main /cc @openshift/storage"
  },
  {
    "id": "136",
    "type": "pullRequest",
    "title": "OCPBUGS-45400: Updating ose-gcp-pd-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-gcp-pd-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-gcp-pd-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "7",
    "type": "pullRequest",
    "title": "OCPBUGS-45458: Updating gcp-workload-identity-federation-webhook-container image to be consistent with ART for 4.19",
    "body": "Updating gcp-workload-identity-federation-webhook-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: gcp-workload-identity-federation-webhook.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "644",
    "type": "pullRequest",
    "title": "OCPBUGS-45759: Updating openshift-enterprise-haproxy-router-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-haproxy-router-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-haproxy-router.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "643",
    "type": "pullRequest",
    "title": "OCPBUGS-45702: Updating ose-haproxy-router-base-container image to be consistent with ART for 4.19",
    "body": "Updating ose-haproxy-router-base-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-haproxy-router-base.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "621",
    "type": "pullRequest",
    "title": "OCPBUGS-39403: Fix parseIPList to Continue Processing After Invalid IPs and Return Valid IPs",
    "body": "Summary This PR updates the `parseIPList` function to handle IP lists containing invalid IPs or CIDRs more gracefully. Previously, the function would return an empty string as soon as it encountered an invalid IP or CIDR. This update ensures that the function will now continue processing the rest of the list and return a space-separated string of all valid IPs and CIDRs. Changes - Modified `parseIPList` to: - Log all invalid entries for troubleshooting. - Return a string of valid IPs and CIDRs, or an empty string if none are valid. Benefits - Improved Robustness: The function now handles mixed validity IP lists more gracefully, allowing valid entries to be processed even if there are some invalid entries. - Enhanced Debugging: Logging of invalid IPs or CIDRs provides better visibility into issues with input data. Additional Notes - The function continues to trim and validate input while logging detailed information about invalid entries. - Ensure to review and test the function with various IP list scenarios to confirm the correctness of the changes."
  },
  {
    "id": "642",
    "type": "pullRequest",
    "title": "OCPBUGS-45290: Reject All CA-Signed Certs Using SHA1",
    "body": "Previously, only SHA1 leaf certs were rejected. However, in 4.16, any SHA1 cert that is CA-signed (not self-signed) is unsupported. This led to cases were routes with SHA1 intermediate CA certs were accepted, but HAProxy rejects them. Self-signed SHA1 certificates (i.e. root CA) remain supported since they are not subject to verification. This update ensures all route certs, including the server, CA, and destination CA certs, are inspected, and any SHA1 cert that is not self-signed is rejected. Additionally, explicitly reject DSA SHA1 certificates. While all DSA certificates are already rejected by the router, this change provides a clearer and more precise rejection error message."
  },
  {
    "id": "646",
    "type": "pullRequest",
    "title": "OCPBUGS-47761: Update default_pub_keys.pem to use SHA256",
    "body": "Previously, default_pub_keys.pem used SHA1 which is no longer supported by HAProxy. This resulted in router deployments that didn't specify a default cert, to fail due to default_pub_keys.pem being too weak. Additionally, a 2048 byte RSA key is used so that default_pub_keys.pem will work with FIPs clusters. This fix regenerates the default_pub_keys.pem cert file by executing the following commmands: ``` openssl req -x509 -newkey rsa:2048 -sha256 -days 3650 -keyout exampleca.key -out exampleca.crt -nodes -subj '/C=US/ST=SC/L=Default City/O=Default Company Ltd/OU=Test CA/CN= openssl req -newkey rsa:2048 -nodes -keyout example.key -out example.csr -subj '/CN= openssl x509 -req -days 3650 -sha256 -in example.csr -CA exampleca.crt -CAcreateserial -CAkey exampleca.key -extensions ext -extfile (echo $'ext basicConstraints = CA:FALSE subjectKeyIdentifier = none authorityKeyIdentifier = none') -out example.crt cat example.crt example.key default_pub_keys.pem ``` Add default_pub_keys.pem to .gitleaks.toml since this default certificate and key have always been publicly stored in this repo. This avoids false positive alerts in our tooling. See for more details."
  },
  {
    "id": "639",
    "type": "pullRequest",
    "title": "OCPBUGS-43745: Add support for IdleCloseTerminationPolicy",
    "body": "Replace the hard-coded `idle-close-on-response` setting with a conditional based on the IngressController's `spec.idleConnectionTerminationPolicy` field, which controls whether HAProxy maintains idle frontend connections during reloads or closes them immediately. The default behaviour for OCP 4.19 returns to closing idle connections immediately, reversing which had made 'option idle-close-on-response' always present in the HAProxy configuration. References: - The field `idleConnectionTerminationPolicy` was added in - cluster-ingress-operator e2e test in openshift/cluster-ingress-operator1166"
  },
  {
    "id": "645",
    "type": "pullRequest",
    "title": "NO-JIRA: Update OWNERS file to reflect current team",
    "body": "Update OWNERS file with Thealisyed to reflect current team"
  },
  {
    "id": "618",
    "type": "pullRequest",
    "title": "OCPBUGS-38078: Validate HAProxy health check interval time value",
    "body": "The maximum valid time representing value in HAProxy is 2147483647ms (max positive value for a 32-bit signed integer). Setting time value to one exceeding the maximum handled by HAProxy for `router.openshift.io/haproxy.health.check.interval` breaks the router-default pods. Prior to this PR `clipHAProxyTimeoutValue` was used to validate the timeout values set in annotations like `haproxy.router.openshift.io/timeout` or `haproxy.router.openshift.io/timeout-tunnel`. By reusing the `clipHAProxyTimeoutValue` function, this PR adds the same validation for the value set in `router.openshift.io/haproxy.health.check.interval` annotation to ensure it is within the range that HAProxy can parse."
  },
  {
    "id": "2275",
    "type": "pullRequest",
    "title": "OCPBUGS-55265: Bump 1.32.4"
  },
  {
    "id": "2135",
    "type": "pullRequest",
    "title": "OCPBUGS-37706: allow TLS1.3 or modern profile to be specified"
  },
  {
    "id": "2247",
    "type": "pullRequest",
    "title": "OCPBUGS-53249: skip UDP LoadBalancer on external",
    "body": "What type of PR is this? /kind cleanup /kind failing-test What this PR does / why we need it: The intention of this PR is to skip the tests below in the platform type `External` as it is not configured properly (when trying to use UDP service LB on AWS, for instance), and those are permanent failing on that platform. ~~~ sig-network LoadBalancers Feature:LoadBalancer should be able to preserve UDP traffic when server pod cycles for a LoadBalancer service on the same nodes Skipped:alibabacloud Skipped:aws Skipped:baremetal Skipped:ibmcloud Skipped:kubevirt Skipped:nutanix Skipped:openstack Skipped:ovirt Skipped:vsphere Suite:openshift/conformance/parallel Suite:k8s sig-network LoadBalancers Feature:LoadBalancer should be able to preserve UDP traffic when server pod cycles for a LoadBalancer service on different nodes Skipped:alibabacloud Skipped:aws Skipped:baremetal Skipped:ibmcloud Skipped:kubevirt Skipped:nutanix Skipped:openstack Skipped:ovirt Skipped:vsphere Suite:openshift/conformance/parallel Suite:k8s ~~~ OpenShift CI exercises platform type External on AWS and vSphere providers, both requires additional configuration to CCM created correctly the service LoadBalancer using UDP protocol, such requirements is not implemented by upstream k8stest. Those tests are also skipped by AWS and vSphere. Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes OCPBUGS-53249( Special notes for your reviewer: The support to platform type `External` in the test framework was added on to satisfy and test changes here using the job e2e-external-aws-ccm( Those tests are not valid on platform type External when using CCM for the same reason it isn't in the integrated providers - requires additional setup, or service does not support it. There is only one scenario I can see that those upstream tests could be exercised: cluster installed with platform type External without CCM, it will behave like platform `None`. Although we don't have test scenarios enabled checking advanced platform `external` configurations, such as checking if the CCM is enabled in the Infrastructure object. Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note NONE. ```"
  },
  {
    "id": "2263",
    "type": "pullRequest",
    "title": "OCPBUGS-54426: Fix implementation of ContainsCIDR to allow non-equal addresses",
    "body": "This has already merged into the main and 1.33 branch of K/K, but we are waiting on cherry-pick approval for the 1.32 branch. This updates the implementation of the CEL CIDR matching check which was rejecting some valid values."
  },
  {
    "id": "2216",
    "type": "pullRequest",
    "title": "OCPBUGS-52410: Propagate error when creating CustomResourceStorage instead of panicking"
  },
  {
    "id": "2256",
    "type": "pullRequest",
    "title": "TRT-1854: fix OVNKubernetes network skips",
    "body": "This was originally improperly translated from the entry in rules.go: This resulted in ~33 specs being skipped for OVNKubernetes that should not be"
  },
  {
    "id": "2254",
    "type": "pullRequest",
    "title": "STOR-2285: Update group snapshot test rules",
    "body": "Update group snapshot test rules to be in sync with openshift-hack/e2e/annotate. We want group snapshot tests disabled only with csi-hostpath test driver. That one needs a special config - a change in the csi-hostpath CSI driver yaml files + a feature gate enabled. The others (namely csi-hostpath-groupsnapshot) should be enabled. That one has the yaml file change + `OCPFeatureGate:VolumeGroupSnapshot`. With this PR, I can see: ``` ./k8s-tests-ext list OCP CSI Volumes Driver: csi-hostpath-groupsnapshot OCPFeatureGate:VolumeGroupSnapshot Testpattern: (delete policy) volumegroupsnapshottable Feature:volumegroupsnapshot VolumeGroupSnapshottable should create snapshots for multiple volumes in a pod Suite:openshift/conformance/parallel Suite:k8s\", ``` Which is what I want. Before this PR, the command returns empty output and no group snapshots are tested."
  },
  {
    "id": "2257",
    "type": "pullRequest",
    "title": "OCPBUGS-54339: UPSTREAM: 129808: e2e: bump port-forward timeout",
    "body": "This test is a new test in upstream Kubernetes added in 1.32 (OCP 4.19) and it is marked as flaky also in upstream. There is a PR in upstream to mitigate the flakiness by increasing the timeout value from 10 seconds to 15 seconds which has landed on 1.33 but not backported to 1.32. This still does not guarantee fixing the failure because there are many type of cluster that may suffer from some latencies (as we experienced now temporarily in metal clusters). However, carrying the new timeout value in downstream would help us."
  },
  {
    "id": "2178",
    "type": "pullRequest",
    "title": "TRT-1836: UPSTREAM: carry: remove old k8s-tests external binary",
    "body": "It has been replaced by k8s-tests-ext, the openshift-tests-extension version. Can merge after /hold"
  },
  {
    "id": "2235",
    "type": "pullRequest",
    "title": "OCPBUGS-45273: Properly annotate networking skip according to Jira ticket"
  },
  {
    "id": "2241",
    "type": "pullRequest",
    "title": "OCPBUGS-53014: Bump 1.32.3"
  },
  {
    "id": "2215",
    "type": "pullRequest",
    "title": "TRT-1854: translate test annotations to use: `include`/`exclude` CEL, labels, filtering",
    "body": "`openshift-tests-extension` introduces a new way to skip upstream tests based on environment flags and `include`/`exclude` fields present on the listed tests. This PR translates the existing annotations to that functionality, but leaves them in place. They will be removed in a later PR."
  },
  {
    "id": "2232",
    "type": "pullRequest",
    "title": "STOR-2285: UPSTREAM: carry: Add volume group snapshot test driver",
    "body": "Upstream enables volume group snapshots by editing yaml files in a shell script 1. We can't use this script in openshift-tests. Create a brand new, OCP specific test driver based on csi-driver-hostpath, only with the --feature-gate=VolumeGroupSnapshot on the external-snapshotter command line. The tests have a tag `OCPFeatureGate:VolumeGroupSnapshot` to run them only in TechPreviewNoUpgrade CI jobs. Also explicitly skip the o/k test in `k8s-e2e-` CI jobs, that job does not interpret `OCPFeatureGate:xyz` We will need to carry this whole patch until the feature graduates to enabled-by-default, hopefully within 4.19 cycle. I've chosen to create brand new files in this carry patch, so it can't conflict with the existing ones in a future rebase. 1:"
  },
  {
    "id": "2192",
    "type": "pullRequest",
    "title": "OCPBUGS-44693: Revert \"disable ResilientWatchCacheInitialization feature\"",
    "body": "When this feature is enabled, watch requests that are to be served from the watch cache immediately return 429 if the cache is not initialized and the client retries. When disabled, the same watch requests \"hang\" until they either time out or complete successfully. There is an OCP test that counts the number of watch requests during a job on a per-user basis by scraping audit logs. The test fails if a user exceeds an arbitrary threshold that has been selected based on historical observations. With this feature enabled, any issue that delays watch cache initialization or forces a watch cache to reinitialize now results in an increase in the number of watch requests appearing in the audit logs (due to the retries), which in turn causes the test thresholds to breach. This was temporarily disabled for kube-apiserver to improve the CI signal-to-noise ratio during the 1.31 rebase. It was not disabled for openshift-apiserver. Sample job from the 1.31 rebase process before the feature was disabled:"
  },
  {
    "id": "2236",
    "type": "pullRequest",
    "title": "OCPBUGS-52477: Revert 2229: Initialize testContext before enumerating tests",
    "body": "Reverting it breaks nightlies. See the linked Jira for details."
  },
  {
    "id": "2229",
    "type": "pullRequest",
    "title": "NO-JIRA: Initialize testContext before enumerating tests",
    "body": "testContext must be populated before enumerating e2e tests, it's too late to populate it before running them. At least upstream `e2e.test` does so and my Kubernets 1.33 test (= future 4.20) counts with that. It uses the `TestContext.NodeOSDistro`( in `ginkgo.Context()` here( `k8s-tests` already did this, just `k8s-tests-ext` is different now. Improve overall error handling in k8s-test-ext: remove `panic()` and print some context around the errors. print a specific error on empty KUBECONFIG / KUBERNETES_MASTER Examples: empty KUBECONFIG: ` F0303 18:45:40.863889 3264068 k8s-tests.go:63 Failed to initialize Kubernetes client. Is KUBECONFIG set? Full error: invalid configuration: no configuration has been provided, try setting KUBERNETES_MASTER environment variable` KUBECONFIG pointing to a missing file: `F0303 18:47:24.093819 3264652 k8s-tests.go:65 Failed to initialize test framework: stat /home/jsafrane/some/non-existing/file: no such file or directory`"
  },
  {
    "id": "2231",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: OCPBUGS-45274: Enable PodRejectionStatus test",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- What type of PR is this? !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- What this PR does / why we need it: This PR enables the suppressed test for PodRejectionStatus. Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes OCPBUGS-45274( Special notes for your reviewer: Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2228",
    "type": "pullRequest",
    "title": "OCPBUGS-45274: UPSTREAM: 130097: Modify how to check the status",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- What type of PR is this? !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- What this PR does / why we need it: This is a cherry-pick from upstream to fix the test. I will create a follow-up PR to enable the test that has been skipped. The test is validated in this PR . Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2155",
    "type": "pullRequest",
    "title": "OCPBUGS-45214: Add groupsnapshot tests",
    "body": "Add e2e test for volume group snapshots. There are several commits: ~Upstream 126326 - adds the e2e tests. Already part of Kubernetes 1.32, but we still have 1.31 in o/k~ Upstream 128972 - updates the tests for breaking changes in the new external-snapshotter. This is needed even with 1.32 in o/k. Carry: Regenerate test annotations I prepared a PR to update Fabio's ongoing rebase to 1.32:"
  },
  {
    "id": "2201",
    "type": "pullRequest",
    "title": "OCPNODE-2940: add minimumkubeletversion admission package",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- What type of PR is this? !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- What this PR does / why we need it: + admission pieces, as requested by Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2214",
    "type": "pullRequest",
    "title": "TRT-1854: Update openshift-tests-extension version",
    "body": "Re-vendoring `openshift-tests-extension` to pull in some useful helper methods needed to translate the existing test skips to the new environment flags."
  },
  {
    "id": "2218",
    "type": "pullRequest",
    "title": "OCPBUGS-45359: Unskip recover volume expansion failure tests"
  },
  {
    "id": "2213",
    "type": "pullRequest",
    "title": "OCPBUGS-45241: UPSTREAM: carry: Re-enable temporarily disabled port-forward test",
    "body": "This test was disabled temporarily during rebase process, because it requires to have newer versions of crio and oc. Now, these components have been based on 1.32. This PR re-enables port-forward tests."
  },
  {
    "id": "2217",
    "type": "pullRequest",
    "title": "OAPE-96: UPSTREAM: drop: bump openshift/api@107848b719c5",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- What this PR does / why we need it: Bump `openshift/api` to vendor Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes"
  },
  {
    "id": "2104",
    "type": "pullRequest",
    "title": "OCPNODE-2940: add minimumkubeletversion package",
    "body": "What type of PR is this? !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- /kind feature What this PR does / why we need it: Adds an additional admission feature that verifies all kubelets are above a certain version. WIP, TODOs inline Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2209",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Bump 1.32.2",
    "body": "No conflict commit as there were no merge conflicts"
  },
  {
    "id": "2119",
    "type": "pullRequest",
    "title": "NO-JIRA: UPSTREAM: fix request Host storing in openshift.io/during-graceful audit log annotation",
    "body": "request URL doesn't contain the host used in the request, instead it should be fetched from request headers Note for rebase: squash it into the following commit UPSTREAM: carry: annotate audit events for requests during unready phase and graceful termination phase ( When audit message is being processed may strip `Host` from `r.URL`, however `r.Host` is always filled in. This value may be different for proxy requests, but in most cases `r.Host` should be used instead of `r.URL.Host`"
  },
  {
    "id": "2168",
    "type": "pullRequest",
    "title": "OCPBUGS-41533: UPSTREAM: carry: util: inform the kubelet it has a new enough kernel for idmapped mounts",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- What type of PR is this? !-- Add one of the following kinds: /kind bug /kind cleanup /kind documentation /kind feature Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- /kind cleanup What this PR does / why we need it: Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note Fix bogus warning that the underlying kernel doesn't support idmapped mounts ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2177",
    "type": "pullRequest",
    "title": "TRT-1286: List images from external test binary"
  },
  {
    "id": "2202",
    "type": "pullRequest",
    "title": "OCPBUGS-46477: Disable ServiceAccountNodeAudienceRestriction feature gate and reenable Azure file tests",
    "body": "What type of PR is this? /kind bug /kind failing-test What this PR does / why we need it: Disable ServiceAccountNodeAudienceRestriction feature gate by default in v1.32.( Re-enable Azure file tests. Which issue(s) this PR fixes: Special notes for your reviewer: Does this PR introduce a user-facing change? ```release-note None ``` cc @bertinatto"
  },
  {
    "id": "2194",
    "type": "pullRequest",
    "title": "TRT-1854: UPSTREAM: drop: ./hack/update-vendor.sh for openshift-tests-extension",
    "body": "Bump to pull in new changes from `openshift-tests-extension`. These will be necessary to translate current test annotations the new environment flags."
  },
  {
    "id": "2171",
    "type": "pullRequest",
    "title": "OCPBUGS-46038: UPSTREAM: 129180: prevent unnecessary resolving of iscsi/fc devices to dm"
  },
  {
    "id": "2191",
    "type": "pullRequest",
    "title": "OCPBUGS-48694: Don't retry storage calls with side effects.",
    "body": "The existing patch retried any etcd error returned from storage with the code \"Unavailable\". Writes can only be safely retried if the client can be absolutely sure that the initial attempt ended before persisting any changes. The \"Unavailable\" code includes errors like \"timed out\" that can't be safely retried for writes."
  },
  {
    "id": "2182",
    "type": "pullRequest",
    "title": "NO-JIRA: Add benluddy to DOWNSTREAM_OWNERS."
  },
  {
    "id": "2113",
    "type": "pullRequest",
    "title": "OCPBUGS-38121: OCPBUGS-39305: UPSTREAM: carry: log only deprecated api requests",
    "body": "Unrevert This PR needs to go in before merging as well as a green pass on `/payload-job periodic-ci-openshift-release-master-ci-4.18-upgrade-from-stable-4.17-e2e-aws-ovn-upgrade`"
  },
  {
    "id": "2174",
    "type": "pullRequest",
    "title": "OCPBUGS-48177: UPSTREAM: carry: disable etcd readiness checks by default",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. If this is your first time, please read our contributor guidelines: and developer guide 2. Please label this pull request according to what type of issue you are addressing, especially if this is a release targeted pull request. For reference on required PR/issue labels, read here: 3. Ensure you have added or ran the appropriate tests for your PR: 4. If you want faster PR reviews, read how: 5. If the PR is unfinished, see how to mark it: -- What type of PR is this? /kind feature What this PR does / why we need it: Explicitly exclude etcd and etcd-readiness checks (OCPBUGS-48177) and have etcd operator take responsibility for properly reporting etcd readiness. Justification: kube-apiserver instances get removed from a load balancer when etcd starts to report not ready (as will KA's /readyz). Client connections can withstand etcd unreadiness longer than the readiness timeout is. Thus, it is not necessary to drop connections in case etcd resumes its readiness before a client connection times out naturally. This is a downstream patch only as OpenShift's way of using etcd is unique. Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: - Each health check is also registered as a readyz check. Thus registration of both `etcd` and `etcd-readiness` checks can't be just simply commented out/removed. - The logic for excluding checks through ?exclude=checkname URL construct does not distinguish between health, livez and readyz checks. So patching the code on the level of getExcludedChecks( would require to extend underlying `handleRootHealth` and `InstallPathHandlerWithHealthyFunc` with extra arguments to inject the list of excluded checks. - I choose the middle ground of letting both checks to be added through `AddReadyzChecks`. Yet excluded from the final addition addition since `AddReadyzChecks` can be invoked from multiple places. Does this PR introduce a user-facing change? !-- If no, just write \"NONE\" in the release-note block below. If yes, a release note is required: Enter your extended release note in the block below. If the PR requires additional action from users switching to the new release, include the string \"action required\". For more information on release notes see: -- ```release-note ``` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: !-- This section can be blank if this pull request does not require a release note. When adding links which point to resources within git repositories, like KEPs or supporting documentation, please reference a specific commit and avoid linking directly to the master branch. This ensures that links reference a specific point in time, rather than a document that may change over time. See here for guidance on getting permanent links to files: Please use the following format for linking documentation: - KEP: link - Usage: link - Other doc: link -- ```docs ```"
  },
  {
    "id": "2109",
    "type": "pullRequest",
    "title": "OCPEDGE-1314: feat: add arbiter node role",
    "body": "What this PR does / why we need it: Per EP: This PR adds the new node role of `arbiter` to the well known labels for openshift so that the kubelet is allowed to register a role of type `arbiter` Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.: - KEP:"
  },
  {
    "id": "2190",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: downgrade grpc library to 1.65.0",
    "body": "This PR: Bumps openshift-eng/openshift-tests-extension to main. Downgrade gRPC library back to 1.65.0, which is the version k8s 1.32.1 uses. PR bumped google.golang.org/grpc to v1.67.0. However, that version rejects TLS connections that don't support ALPN, which is incompatible with how the product currently works. As a result, routes tests in openshift/origin fail when the o/k is bumped there. Kubernetes 1.32.1 uses version 1.65, so we decided to downgrade the library to the same version as upstream uses. /assign @jsafrane @stbenjam"
  },
  {
    "id": "2167",
    "type": "pullRequest",
    "title": "OCPBUGS-48077,OCPBUGS-48078: Fix status ratcheting 4.19",
    "body": "Ratcheting validation does not currently apply to status subresources, but should do per my discussion with API machinery folks in slack. I've raised a PR upstream and this copies it downstream, there's a little more work to do upstream to investigate a failing test, which I've disabled in the second commit here for now. Picked up while double checking"
  },
  {
    "id": "2185",
    "type": "pullRequest",
    "title": "OCPBUGS-48819: Fix Portworx plugin's CSI translation to copy secret name & namespace",
    "body": "Clean `git cherry-pick 051414a53a053b98d24b1c0a067ec6598ddf02ed` + updated commit message. /cc @openshift/storage @sdodson"
  },
  {
    "id": "2147",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Update to Kubernetes v1.32.1"
  },
  {
    "id": "2179",
    "type": "pullRequest",
    "title": "OCPBUGS-48364: Update to Kubernetes 1.31.4",
    "body": "/assign @atiratree was created for 4.18, but I miss updating in `master` as well. This PR is intended to fix that."
  },
  {
    "id": "2142",
    "type": "pullRequest",
    "title": "TRT-1836: Bug fixes for openshift-tests-extension",
    "body": "- Update latest openshift-tests-extension, includes bug fixes and environmental params - Fix test contexts in k8s-tests-ext so it's fully initialized"
  },
  {
    "id": "2154",
    "type": "pullRequest",
    "title": "OCPBUGS-45645: Updating openshift-enterprise-pod-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-pod-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-pod.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "2136",
    "type": "pullRequest",
    "title": "OCPBUGS-44786: add support for the LLC alignment cpumanager policy option",
    "body": "add support for the LLC alignment by pulling ahead of time u/s PR 126750."
  },
  {
    "id": "2141",
    "type": "pullRequest",
    "title": "WRKLDS-1449: Update to Kubernetes v1.31.3",
    "body": "/assign @atiratree /hold should we merge after branch cut"
  },
  {
    "id": "2139",
    "type": "pullRequest",
    "title": "OCPBUGS-44896: Enable format library for 4.18",
    "body": "A new format library was introduced for CEL in 4.18, but, it is not usable in 4.18 due to upgrade checks put in place (to allow version skew between API servers and rollbacks). This means that the library is actually only presently usable in 4.19 once 1.32 ships. However, there are some issues we may face. We have a number of APIs in flight currently that would like to use this new library, we cannot get started on those features until this library is enabled. Some of those features would also like to be backported to 4.18. We also have risks on upgrades. If we decide to use this format library in any API that is upgraded prior to KAS, then during an upgrade, the CRD will be applied to the older version of the API server, blocking the upgrade as it will fail. By backporting the library (pretending it was introduced earlier, and then introducing it directly into 4.17), we can enable anything that installs post KAS upgrade to leverage this from 4.18 (solving those features asking for backports), and enable anything that upgrades pre-kas to actually leverage this in 4.19. API approvers will be responsible for making sure the libraries and upgrade compatibility are considered as new APIs are introduced. Presently, the library has had no bug fixes applied to the release-1.31 or release-1.32 branches upstream. The backport from 4.18 to 4.17 was clean bar some conflict in the imports that was easily resolved. So I'm confident that if we do need to backport any bug fixes, this should be straight forward. Any bugs in these libraries can be assigned to me (jspeed)"
  },
  {
    "id": "6126",
    "type": "pullRequest",
    "title": "OCPBUGS-55927: Fix Konflux enterprise contract violations",
    "body": "What this PR does / why we need it: This PR is to fix the Konflux enterprise contract rule violations for MCE 2.9. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6117",
    "type": "pullRequest",
    "title": "OCPBUGS-55749: Fix mce-2.9 konflux pipelines",
    "body": "What this PR does / why we need it: 6029 bumped the go.mod golang version without bumping the golang builder container used in mce and control plane override pipelines. This is most likely due to the fact that the main branch pipelines had been mistakenly disabled before branching out the 4.19 release. Which issue(s) this PR fixes: Fixes OCPBUGS-55749 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6104",
    "type": "pullRequest",
    "title": "Red Hat Konflux update hypershift-cli-mce-29",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization( Please follow the block sequence indentation style introduced by the proprosed PipelineRuns YAMLs, or keep using consistent indentation level through your customized PipelineRuns. When different levels are mixed, it will be changed to the proposed style."
  },
  {
    "id": "6072",
    "type": "pullRequest",
    "title": "HYPBLD-642: konflux build hcp cli",
    "body": "What this PR does / why we need it: This builds the MCE container image that serves the productized hcp CLI binaries via Nginx so that users can download them through the MCE console. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5943",
    "type": "pullRequest",
    "title": "OCPBUGS-53206: Use a CPO image label to determine whether to run expired cert remediation",
    "body": "What this PR does / why we need it: Adds a commented label to the CPO image that should be uncommented whenever we switch to using CPO v2 as the default. Uses that label (and annotation) to determine whether we should remediate expired certs from the hypershift operator. We were previously using the HC version, assuming that 4.19 would default to CPOv2, but that won't be the case. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-53206( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "6092",
    "type": "pullRequest",
    "title": "OCPBUGS-55433: Add control plane pull secret reference to control-plane-operator SA",
    "body": "What this PR does / why we need it: Ensures that the control-plane-operator service account contains a reference to the control plane pull secret. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-55433( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6053",
    "type": "pullRequest",
    "title": "OCPBUGS-56896: Add proxy trustedCA to ignition config",
    "body": "What this PR does / why we need it: This PR ensures that if the proxy set for a HostedCluster has a TrustedCA set, then the that CA will be included in the nodes ignition config. Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6069",
    "type": "pullRequest",
    "title": "OCPBUGS-53082: Skip AWS cleanup check for 4.14 and earlier",
    "body": "What this PR does / why we need it: Skips AWS resource deletion validation for releases 4.14 and earlier and explicitly skips cloud resource cleanup for TestCreatePrivate. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-53082( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6009",
    "type": "pullRequest",
    "title": "HOSTEDCP-2254: Fix Karpenter deployment restarting",
    "body": "What this PR does / why we need it: - This PR changes the token-minter container to a sideContainer (init container with RestartPolicy = Always) and adds a StartupProbe to ensure other containers are blocked until the token file is created. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6076",
    "type": "pullRequest",
    "title": "NO-JIRA: Add e2e flags to test Azure KMS",
    "body": "What this PR does / why we need it: This commit adds two e2e flags that will be needed to test the Azure KMS configuration in e2e-aks. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6048",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Support KMSv2 encryption encryption for ARO HCP, with MIv3",
    "body": "What this PR does / why we need it: This PR: - updates Azure KMS implementation by updating the encryption configuration to only support v2 parameters - have Azure KMS use it's own Azure authentication configuration; previously, it was reusing CP/CCM configuration - reorders some of the Azure how-to pages in our docs - adds a how-to section on setting up and verifying etcd encryption Which issue(s) this PR fixes: Fixes CNTRLPLANE-111( Notes to Reviewers: - The first commit contains the actual code changes. The other commits are docs related. - CacheSize: ptr.To\\int32\\\\(100\\), was removed because it is not valid for v2 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5754",
    "type": "pullRequest",
    "title": "NO-JIRA: Azure AKS Docs Updated to set Secrets in Key Vault",
    "body": "What this PR does / why we need it: This PR updates the Azure AKS Cluster Docs( to also add the secrets to the key vault as well as the certs as this is needed for creating an Azure HC on AKS. This is in accordance with the Azure AKS update from MIv2 to MIv3. This PR also adds a KV setup script in the contrib directory. Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6071",
    "type": "pullRequest",
    "title": "CNTRLPLANE-713: Pass featuregates for ocm and oapi in cpov2",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Follow up for Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5972",
    "type": "pullRequest",
    "title": "HOSTEDCP-2059: Support capacity reservation in NodePool API",
    "body": "What this PR does / why we need it: Adds new field to the NodePool AWS platform API `.placement.capacityReservation` to allow specifying a capacity reservation for the EC2 instances to be launched into. see: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6067",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix hostedcluster_controller unit test for featuregate job",
    "body": "What this PR does / why we need it: Follow-up to 6060 Minor unit test fix"
  },
  {
    "id": "6068",
    "type": "pullRequest",
    "title": "CNTRLPLANE-713: Pass featuregates to ocm and oapi",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: follow up for Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6060",
    "type": "pullRequest",
    "title": "CNTRLPLANE-713: Use feature flags from release payload for control plane workloads",
    "body": "What this PR does / why we need it: We currently render feature flags using cluster-config-api container inside the Kube APIServer and Ignition Server for rendering into the hosted cluster. However, for components that we run in the control plane that also use feature flags (Kube APIServer, Kube Controller Manager, Kube Scheduler, Cluster Policy Controller), we are simply generating feature flags from vendored code in the HyperShift repo. This may not reflect the reality of the particular release payload that we are running. This commit adds a job to render feature gates into a configmap that can be used to configure the control plane workloads. For v2, it introduces a new type of component (Job). Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-713( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6005",
    "type": "pullRequest",
    "title": "CNTRLPLANE-711: transition admissionregistration from v1beta1 to v1",
    "body": "implements"
  },
  {
    "id": "6062",
    "type": "pullRequest",
    "title": "AUTOSCALE-127: fix e2e autonode drift test",
    "body": "Fixes the test by grabbing the correct part of the string from node.Status.NodeInfo.OSImage that now points to the rhcos version. See as to why we need this. !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6058",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Enable MIv3 for Ingress",
    "body": "What this PR does / why we need it: This PR: - enables managed identity version 3 for ingress on managed azure, ARO HCP - removes unneeded managed Azure environment variables now that all HO, HCP, and OpenShift operators support managed identity version 3 Which issue(s) this PR fixes: Fixes CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5946",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove kas from EnsureNoCrashingPods exceptions",
    "body": "This was introduced here It shouldn't be needed now is merged !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6019",
    "type": "pullRequest",
    "title": "OCPBUGS-54863: Add annotation to configure KAS goaway-chance",
    "body": "What this PR does / why we need it: Add support to override the --goaway-chance parameter for the kube-apiserver. The default will remain the previously hardcoded value of 0. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6029",
    "type": "pullRequest",
    "title": "AUTOSCALE-193: Use payload karpenter image if present, otherwise don't",
    "body": "What this PR does / why we need it: This PR syncs karpenter libs with our downstream fork, and makes the hypershift karpenter operator check the payload for an `aws-karpenter-provider-aws` image to use to deploy karpenter Why: - hypershift is currently hard-coded to use upstream karpenter-provider aws 1.07 - We want to ship with our downstream `aws-karpenter-provider-aws` version that will be packed into the payload (which is approximately ~1.3.2~ 1.2.3, and is broken, but we are fixing it: h - It's not in the payload yet but we're working on it, so we can't hard cut to always looking in the payload - We want to be able to run hypershift tests over in How: - adds a replace directive to go.mod to point the karpenter-aws-libraries to our openshift fork and bumps the required deps - syncs the CRDs with our downstream fork and (ours are newer than 1.0.7/1.0.8, fields were missing) and run `adjust-cel.sh` against them - adds logic to retrieve the karpenter provider from the `aws-karpenter-provider-aws` image in the payload image if present, and if not it falls back to the upstream image - adds plumbing to the karpenter-operator so it accepts a karpenter image argument Notes: - I did test this, and it passed the smoke test, I was able to deploy karpenter and scale. We'll see what we get in CI :smile: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6056",
    "type": "pullRequest",
    "title": "NO-JIRA: Red Hat Konflux update hypershift-release-mce-29",
    "body": "What this PR does / why we need it: Fixes the rebase issue for Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6051",
    "type": "pullRequest",
    "title": "NO-JIRA: Add cpo container sync to verify job",
    "body": "What this PR does / why we need it: This PR adds the cpo container sync so we make sure the RHTAP and CPO Dockerfile stay in sync Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6021",
    "type": "pullRequest",
    "title": "OCPBUGS-54867: Use 135 for terminationGracePeriodSeconds for v2 KAS",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5982",
    "type": "pullRequest",
    "title": "OCPBUGS-54810: Don't check if olm images exist if guest cluster",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6016",
    "type": "pullRequest",
    "title": "OCPBUGS-54819: Update OpenShift apiserver liveness and readiness probe endpoints to ...",
    "body": "...livez and readyz Similar to what was implemented for OpenShift IPI, the liveness and readiness probes associated with the OpenShift apiserver are updated to use the /livez (for liveness probe) and /readyz (for readiness probe) endpoints instead of the /healthz endpoint. References: - - What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6050",
    "type": "pullRequest",
    "title": "NO-JIRA: Add README.md to docs folder",
    "body": "What this PR does / why we need it: This commit adds a README.md to the docs folder so others understand how to locally check any changes they make to the docs. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6043",
    "type": "pullRequest",
    "title": "NO-JIRA: version check csi-snapshot-webhook for EnsureSATokenNotMountedUnlessNecessary",
    "body": "removed `csi-snapshot-webhook` from the excluded prefixes, however, the webhook is only removed back to 4.18. 4.16 and 4.17 still have it and it still needs to be excluded. This is causing payload test failures."
  },
  {
    "id": "5897",
    "type": "pullRequest",
    "title": "OCPBUGS-54225: Bump socks5 proxy, konnectivity proxy, http proxy, token minter memory requests",
    "body": "What this PR does / why we need it: The steady-state memory utilization of socks5 proxy, konnectivity proxy, http proxy, and token minter containers is approximately ~30Mi. This PR bumps `apiserver-token-minter`, `init-client-token-minter`, `client-token-minter`, `cloud-token-minter`, `token-minter`, `konnectivity-proxy`, `konnectivity-proxy-socks5`, `konnectivity-proxy-https`, `socks5-proxy`, `http-proxy` container requests to 30Mi to reflect this usage. The total persistent (non-init container) memory increase per HCP is ~200Mi. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6034",
    "type": "pullRequest",
    "title": "NO-JIRA: Improve API docs for configuration.Image",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6012",
    "type": "pullRequest",
    "title": "Revert \"Revert \"CNTRLPLANE-112: Enable MIv3 for CNO/CNCC on managed Azure\"\"",
    "body": "Reverts openshift/hypershift5860 This PR: - was originally introduced in - It was previously reverted here( by @kyrtapz as the change affected CNCC on azure standalone. Example here( - This PR can now be reintroduced because changes were made to the CNCC to update the Azure SDK to the latest libraries in Internal Slack Conversation:"
  },
  {
    "id": "6007",
    "type": "pullRequest",
    "title": "OCPBUGS-54533: Update DNS names for ovn-kubernetes cp metrics",
    "body": "What this PR does / why we need it: This commit updates the DNS names for ovn-kubernetes-control-plane from ovnkube-control-plane to ovn-kubernetes-control-plane. This is what is expected by the cluster network operator. Which issue(s) this PR fixes: Fixes OCPBUGS-54533( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6036",
    "type": "pullRequest",
    "title": "OCPBUGS-54763: openstack/cli: only set port security when specified",
    "body": "What this PR does / why we need it: A follow-up from 59ca93668729a35abd6faecee145055720f06ecb The CLI was mapping CLI options to a struct and the bool was False by default so disable port security was false which was enabling port security in the spec, which we try to avoid in this bug fix."
  },
  {
    "id": "6035",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump o/api version to 4.19 tag",
    "body": "Without this bump the ocp GatewayAPI tests fail since the feature is not enable in default featureset and so the ingress operator doesn't install the CRDs Run go get github.com/openshift/api@release-4.19 go mod tidy go mod vendor make update !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6027",
    "type": "pullRequest",
    "title": "OCPBUGS-54916: Set Azure KMS Configuration to v2",
    "body": "What this PR does / why we need it: This commit sets the Azure KMS configuration to the apiVersion, which is v2 by default. Which issue(s) this PR fixes: Fixes OCPBUGS-54916( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6032",
    "type": "pullRequest",
    "title": "OCPBUGS-54309: Drop isIP CEL check",
    "body": "This is not supported on vanilla kube 1.31 which is a valid use case for IBM Cloud !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5999",
    "type": "pullRequest",
    "title": "AUTOSCALE-127: allow karpenter-provider-aws image to be overriden by hcp annotation",
    "body": "Allows the karpenter-provider-aws image to be overriden by an HCP annotation. ~We need this in order to test/e2e our OpenShift karpenter-provider-aws image since it's not in the release payload yet.~ This is a helpful quality of life change to allow devs to test different aws-karpenter-provider versions with HyperShift autonode. Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5968",
    "type": "pullRequest",
    "title": "CNTRLPLANE-217: Add E2E to KubeAPIServerDNSName API to cover KAS custom certificate",
    "body": "Why do we want this PR This PR addresses the customer use case of using a KAS custom serving certificate in combination with the `KubeAPIServerDNSName` API. This setup enables the user to access the new API custom DNS name using the custom certificate they provided. Which issue(s) this PR fixes Fixes CNTRLPLANE-217( Flake detection ( \ud83d\udd34 TestCreateClusterPrivateWithRouteKAS/Teardown 4 Link( ( N\\A|"
  },
  {
    "id": "6004",
    "type": "pullRequest",
    "title": "STOR-2281: Remove snapshot webhook",
    "body": "What this PR does / why we need it: Snapshot webhook is no longer used. We will be removing it for future releases. Which issue(s) this PR fixes: Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6015",
    "type": "pullRequest",
    "title": "OCPBUGS-54763: openstack: set port security only if explicitly specified",
    "body": "What this PR does / why we need it: Avoids setting DisablePortSecurity by default to prevent failures when networks are project-owned and the default Neutron policy won't allow explicit port security options."
  },
  {
    "id": "5798",
    "type": "pullRequest",
    "title": "OCPBUGS-52661: KAS-Bump audit-webhook-initial-backoff and TerminationGracePeriodSeconds when audit webhook is enabled",
    "body": "related: !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "6018",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump CAPZ to v1.19.2",
    "body": "What this PR does / why we need it: This commit bumps CAPZ to v1.19.2 to include the patch for the memory leak related to NewBatchSpanProcessor. Incidentally, this also bumps CAPI to v1.9.6. More details on the leak: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: N/A Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5987",
    "type": "pullRequest",
    "title": "NO-JIRA: update konflux references",
    "body": "This PR contains the following updates: Change --- `e1d365c` - `61c90b1` `ec1f33e` - `95be274` `8abdd66` - `174d3c4` `a65c8d6` - `1d26a89` `03383b5` - `712afcf` `48c1dae` - `62c835a` `0.1` - `0.2` | :warning:migration( ( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "6011",
    "type": "pullRequest",
    "title": "OCPBUGS-48540: Mcd proxy",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: The MCD needs to honour dataplane proxy to pull the updated OS image and extensions Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5870",
    "type": "pullRequest",
    "title": "AUTOSCALE-44: add autonode karpenter drift hcp upgrade e2e test",
    "body": "What this PR does / why we need it: This PR adds a new test to the karpenter e2e suite which upgrades the hcp and validates that karpenter nodes are drift and upgraded to the control-plane's new release image version. Also validates that any pods that were already scheduled to the old karpenter node, will be rescheduled to the new karpenter node. Also this PR lowers the CPU of the tested workload to avoid them being unschedulable because of the small CPU allocation of `t3.large` instances. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes: Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5975",
    "type": "pullRequest",
    "title": "OCPBUGS-54602: Set KAS GOMEMLIMIT node label to what OSDFM expects",
    "body": "What this PR does / why we need it: In PR 5417 we changed the label we read from nodes to determine which GOMEMLIMIT to set on Kube API servers. It was previously hypershift.openshift.io/request-serving-gomemlimit The PR changed it to hypershift.openshift.io/kas-go-mem-limit This commit changes it back to what OSDFM is using on request serving nodes. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-54602( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5990",
    "type": "pullRequest",
    "title": "NO-JIRA: Add polling for kas-bootstrap kas network requests",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5875",
    "type": "pullRequest",
    "title": "OCPBUGS-53261: Add validation to avoid conflicts between KubeAPI server and NamedCertificates SANs",
    "body": "This PR adds validation to ensure there are no conflicts between the SAN's of the user's APIServer NamedCertificates and the KubeAPIServer CPO certificates. This prevents potential issues with certificate SANs conflicts that could break the TLS trust chain between the nodes and the KAS Which issue(s) this PR fixes: Fixes OCPBUGS-53261("
  },
  {
    "id": "6001",
    "type": "pullRequest",
    "title": "OCPBUGS-41853: Add documentation for API Server custom certificate in HCP",
    "body": "What this PR does / why we need it Included 2 new sections explaining how to configure a custom KAS certificate in a HostedCluster and also How to combine this with a custom KAS dns to be used into a kubeconfig. All the details regarding this last point, are explained in OCPSTRAT-1516( !CleanShot 2025-04-08 at 13 02 19( Which issue(s) this PR fixes Fixes OCPBUGS-41853( Related: - OCPBUGS-53261( - PR:"
  },
  {
    "id": "5893",
    "type": "pullRequest",
    "title": "OCPBUGS-54178: Add missing servicemonitors and prometheusrules permissions for non-OVN",
    "body": "What this PR does / why we need it: Resolves permission errors in the CNO for patching servicemonitors and prometheusrules for non-OVN clusters. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5984",
    "type": "pullRequest",
    "title": "ARO-15695: test/e2e: run EnsureImageRegistryCapabilityDisabled on 4.18",
    "body": "Hold for to merge. Diff is large because I wrapped `EnsureImageRegistryCapabilityDisabled` in a `t.Run()` cc @flavianmissi Run `/test e2e-aws-4-18` after dep merge and before moving out of draft."
  },
  {
    "id": "5991",
    "type": "pullRequest",
    "title": "NO-JIRA: Add OWNERS to kas-bootstrap",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5969",
    "type": "pullRequest",
    "title": "CNTRLPLANE-233: Add --kas-dns-name CLI flag to consume KubeAPIServerDNSName API",
    "body": "This PR includes the new flag --kas-dns-name, which enables the customer to create a HostedCluster directly to consume KubeAPIServerDNSName API Which issue(s) this PR fixes : Fixes CNTRLPLANE-233("
  },
  {
    "id": "5971",
    "type": "pullRequest",
    "title": "CNTRLPLANE-334: openshift/api dependency bumps",
    "body": "What this PR does / why we need it: This PR bumps the openshift/api, openshift/api/tools, and openshift/controller-tools dependencies throughout hypershift to pull in the latest changes. This is spun out from to have a separation between general dependency bumps and the bumps necessary to add the new external OIDC fields. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5985",
    "type": "pullRequest",
    "title": "NO-JIRA: Enable ppc64le builds",
    "body": "What this PR does / why we need it: This commit enables ppc64le builds. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5702",
    "type": "pullRequest",
    "title": "OSASINFRA-3732: openstack: Sync CA cert to new key",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: cloud-credential-operator now supports syncing CA certs from the root credential secret to the generated credentials secrets. If necessary, CCO expects the CA cert to be provided in the `cacert` key and will place it in the same location in the generated secrets. Start doing the same in control-plane-operator, which allows us to significantly simplify the assets used in cluster-storage-operator and csi-operator. Note that we are intentionally not changing how CA certs are managed for cluster-cloud-controller-manager-operator. There's a good reason for this, and a note is left inline to that effect. /hold Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Per $subject. Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5616",
    "type": "pullRequest",
    "title": "chore(deps): update golang docker tag to v1.24",
    "body": "This PR contains the following updates: Type Change ------ final `1.23` - `1.24` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"before 5am\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5942",
    "type": "pullRequest",
    "title": "OCPBUGS-54431: Don't set IgnitionServerTokenExpirationTimestampAnnotation if already set",
    "body": "What this PR does / why we need it: If the reconcile loop runs more often than every 2 hours, the `IgnitionServerTokenExpirationTimestampAnnotation` annotation gets reset on the ignition token secrets, potentially preventing them from being cleaned up and causing a backup of secrets. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-54431 Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5966",
    "type": "pullRequest",
    "title": "NO-JIRA: Sync labels between CPO and RHTAP CPO dockerfile",
    "body": "What this PR does / why we need it: This commit adds the label, LABEL io.openshift.hypershift .control-plane-operator-supports-kas-custom-kubeconfig=true, to the RHTAP CPO dockerfile as the CPO dockerfile was updated to include the label. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5970",
    "type": "pullRequest",
    "title": "OCPBUGS-52983: Add check for expected conditions before running NodePool tests",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5967",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: output pod name on EnsureHCPPodsAffinitiesAndTolerations failure",
    "body": "to help debug"
  },
  {
    "id": "5949",
    "type": "pullRequest",
    "title": "OCPBUGS-13292: Add functionality to limit CAPI CRD installation on HO installation",
    "body": "What this PR does / why we need it: This PR adds a new flag to the HO installation, limit-crd-install. This flag allows a user to limit what CAPI CRDs are installed per platform basis. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5965",
    "type": "pullRequest",
    "title": "OCPBUGS-54439: Change KASGoMemLimit to a string pointer type",
    "body": "What this PR does / why we need it: This PR changes the KASGoMemLimit to a string pointer type instead of a k8s api/resource Quantity pointer type and updates related unit tests. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5974",
    "type": "pullRequest",
    "title": "NO-JIRA: Red Hat Konflux update hypershift-operator-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "5892",
    "type": "pullRequest",
    "title": "NO-JIRA: Add doc on SecretProviderClass for managed Azure",
    "body": "What this PR does / why we need it: This PR: - creates a managed Azure section - adds a doc on SecretProviderClass for managed Azure Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5831",
    "type": "pullRequest",
    "title": "OCPBUGS-50562: Sync RBAC for attaching volumes on VM level",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: This is basically about adapting RBAC for this CSI driver fork PR: The RBAC is hardcoded here and thus needs to be changed as well. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5868",
    "type": "pullRequest",
    "title": "CNTRLPLANE-303: CPOv2 Refactor Refactor ignition into cpov2",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5523",
    "type": "pullRequest",
    "title": "NO-JIRA: Create token Secret for dev cluster explicitly",
    "body": "Needs to be created manually because: Prior to OpenShift Container Platform 4.16, a long-lived service account API token secret was also generated for each service account that was created. Starting with OpenShift Container Platform 4.16, this service account API token secret is no longer created. Related Slack discussion( !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: With the new version of OpenShift, the Secret/Token is not created automatically. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5960",
    "type": "pullRequest",
    "title": "OCPBUGS-52984: annotate AWSEndpointServices with HostedClusterAnnotation",
    "body": "Follow on to Previous PR added `AWSEndpointService` objects to the `HostedCluster` controller Watch, however, `enqueueHostedClustersFunc()` is unable to map to a `HostedCluster` to reconcile because the `AWSEndpointService` type does not have an explicit mapping method or the `HostedClusterAnnotation`. This PR adds the `HostedClusterAnnotation` to the `AWSEndpointService` so that `handleDefault` can map it to a `HostedCluster`"
  },
  {
    "id": "5879",
    "type": "pullRequest",
    "title": "OCPBUGS-53403: Remove synced annotations from HCP when they are removed from HC",
    "body": "What this PR does / why we need it: This commit ensures that annotations that are synced by the HostedCluster are removed from the HostedControlPlane when they are removed from the HostedCluster. Annotations that the HostedCluster reconciler does not know about are not removed. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-53403( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5951",
    "type": "pullRequest",
    "title": "NO-JIRA: set default expriationDate tag in AWS if not set",
    "body": "Had a recent issue where new dev ran e2e locally against AWS infra without including an expirationDate tag causing orphaned resources"
  },
  {
    "id": "5917",
    "type": "pullRequest",
    "title": "NO-JIRA: chore: Remove Azure autorest dependency",
    "body": "What this PR does / why we need it: This PR removes the Azure KMS use of the autorest dependency. The autorest was only used to determine the Azure Key Vault DNS suffix. A custom function mimicking the same functionality as autorest was implemented instead. Which issue(s) this PR fixes: N/A Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5947",
    "type": "pullRequest",
    "title": "CNTRLPLANE-378: Run kas-bootstrap binary for cpov2",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Follow up for: Incorportate kas bootstrap into cpov2 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5911",
    "type": "pullRequest",
    "title": "NO-JIRA: Add version check for CAPI flag",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Introduced by / OCPBUGS-50915 This breaks 4.14 Reverted by Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5775",
    "type": "pullRequest",
    "title": "ARO-15578: add disable cluster capabilities flag to cluster create cmd",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes Fixes ARO-15578( Checklist - X Subject and description added to both, commit and PR. - X Relevant issues have been referenced. - This change includes docs. - X This change includes unit tests."
  },
  {
    "id": "5916",
    "type": "pullRequest",
    "title": "NO-JIRA: chore: Bump CAPZ to v1.19.1",
    "body": "What this PR does / why we need it: This commit bumps CAPZ to v1.19.1 which includes the changes made to support User Assigned Managed Identity (UAMI) for managed Azure HCP. UAMI, also known as User Assigned Identity Credentials, was included in v1.19.0( however, there was an issue (see the warning note in v1.19.0 release notes) with v1.19.0 so CAPZ recommends v1.19.1( as the first version for v.1.9.x. ``` % git log v1.18.1..v1.19.1 --oneline Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5937",
    "type": "pullRequest",
    "title": "CNTRLPLANE-378: Move bootstrap apply bash into kas-bootstrap binary",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Follow up for It aims to alleviate the current bash scripts fragility and cover existing and any upcoming changes to this logic with appropriate test coverage Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5939",
    "type": "pullRequest",
    "title": "NO-JIRA: Disabling flaking EnsureKubeAPIDNSName E2E test",
    "body": "This PR tries to win some time for investigation why this error 409 happens once the clients tries to update the HC obbject with the new field kubeAPIServerDNSName"
  },
  {
    "id": "5924",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove ppc64le from HO tekton files",
    "body": "What this PR does / why we need it: This commit temporarily comments out the ppc64le bits for the HO tekton files since there has been an ongoing issue being able to build for this architecture. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5896",
    "type": "pullRequest",
    "title": "CNTRLPLANE-366: Create Azure role assignments in the Azure HC CLI",
    "body": "What this PR does / why we need it: This pull request: - reorganizes several items in the Azure CLI - updates the Azure create cluster CLI to create role assignments using the Azure SDK for Go rather than the az cli Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-366( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5904",
    "type": "pullRequest",
    "title": "OCPBUGS-53904: bump golang-jwt v4 and v5",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Need to bump the version due to OCPBUGS-53904 Fixes OCPBUGS-53904 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5873",
    "type": "pullRequest",
    "title": "CNTRLPLANE-350: add NodePool minor version compatibility check",
    "body": "What this PR does / why we need it: This commit adds validation to ensure NodePool versions are compatible with the HostedCluster version: - For 4.even versions, allows y-2 difference - For 4.odd versions, allows y-1 difference - NodePool version cannot be higher than control plane version The validation is skipped in disconnected environments where registry access is not available. Jira story Log ``` \u279c oc get hostedcluster -A NAMESPACE NAME VERSION KUBECONFIG PROGRESS AVAILABLE PROGRESSING MESSAGE clusters liangli0320 4.19.0-0.nightly-2025-03-19-080024 liangli0320-admin-kubeconfig Completed True False The hosted control plane is available \u279c bin/hcp create nodepool aws --name test07 --cluster-name liangli0320 --node-count 1 --release-image quay.io/openshift-release-dev/ocp-release:4.18.5-x86_64 NodePool test07 created \u279c bin/hcp create nodepool aws --name test07 --cluster-name liangli0320 --node-count 1 --release-image quay.io/openshift-release-dev/ocp-release:4.17.21-x86_64 {\"level\":\"error\",\"ts\":\"2025-03-20T17:24:49+08:00\",\"msg\":\"Failed to create nodepool\",\"error\":\"NodePool minor version 4.17 is not compatible with the HostedCluster minor version 4.19 (max allowed difference: 1)\",\"stacktrace\":\"github.com/openshift/hypershift/cmd/nodepool/core.(CreateNodePoolOptions).CreateRunFunc.func1 \\t/Users/daquan/hypershift/hypershift/cmd/nodepool/core/create.go:47 github.com/spf13/cobra.(Command).execute \\t/Users/daquan/hypershift/hypershift/vendor/github.com/spf13/cobra/command.go:985 github.com/spf13/cobra.(Command).ExecuteC \\t/Users/daquan/hypershift/hypershift/vendor/github.com/spf13/cobra/command.go:1117 github.com/spf13/cobra.(Command).Execute \\t/Users/daquan/hypershift/hypershift/vendor/github.com/spf13/cobra/command.go:1041 github.com/spf13/cobra.(Command).ExecuteContext \\t/Users/daquan/hypershift/hypershift/vendor/github.com/spf13/cobra/command.go:1034 main.main \\t/Users/daquan/hypershift/hypershift/product-cli/main.go:59 runtime.main \\t/Users/daquan/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.0.darwin-arm64/src/runtime/proc.go:272\"} Error: NodePool minor version 4.17 is not compatible with the HostedCluster minor version 4.19 (max allowed difference: 1) NodePool minor version 4.17 is not compatible with the HostedCluster minor version 4.19 (max allowed difference: 1) ``` Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes unit tests. - This change includes docs."
  },
  {
    "id": "5782",
    "type": "pullRequest",
    "title": "OCPBUGS-54608: fix(api): Adjust CRD validation rules to account for ignition server ...",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5918",
    "type": "pullRequest",
    "title": "ART-11792: update go mod dependency for konflux",
    "body": "Image build was failing on Konflux due to missing go mod dependencies. ``` 2025-03-28 20:35:58,496 ERROR vendor directory changed after vendoring: A vendor/github.com/docker/distribution/.dockerignore 2025-03-28 20:36:01,990 ERROR PackageRejected: The content of the vendor directory is not consistent with go.mod. Please check the logs for more details. ``` Konflux ignores .gitignore files since its a possible security gap. For now, removing `vendor//.dockerignore` line in the `.gitignore` file would allow ART to build the `hypershift` image on Konflux"
  },
  {
    "id": "5915",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Enable MIv3 for azure file csi driver",
    "body": "What this PR does / why we need it: This pull request enables managed identity version 3 for azure file csi driver for managed Azure HCP. Which issue(s) this PR fixes: A part of CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5910",
    "type": "pullRequest",
    "title": "NO-JIRA: Revert \"OCPBUGS-50915: Disable capi machineset preflights\"",
    "body": "Reverts openshift/hypershift5653 This broke 4.14 payload jobs with `cluster-api` pod not able to start ``` invalid argument \"MachineSetPreflightChecks=false\" for \"--feature-gates\" flag: unrecognized feature gate: MachineSetPreflightChecks ``` TRT SOP is to revert. @stbenjam @neisw"
  },
  {
    "id": "5903",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Fix CNCC RG Permissions & RBAC",
    "body": "What this PR does / why we need it: This pull request: - adds a role assignment for the CNCC over the VNET resource group for managed Azure, which is needed for CNCC to be able to read and write over items in the VNET resource group - adds event get & create RBAC for the service account, cloud-network-config-controller, in the openshift-cloud-network-config-controller namespace Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: A part of CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5838",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove TODO comment for AzureProviderConfig",
    "body": "What this PR does / why we need it: This commit removes the TODO comment above the AzureProviderConfig function. This ConfigMap is needed for the ignition configuration by the machine-config-operator (MCO). Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5871",
    "type": "pullRequest",
    "title": "OCPBUGS-46379: Kas bootstrap bin",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: kas-bootstrap is a tool to run the pre-required actions for bootstraping the kas during cluster creation (or upgrade). It will apply some CRDs rendered by the cluster-config-operator and update the featureGate CR status by appending the git FeatureGate status. It aims to alleviate the current bash scripts fragility, fix the fact we always replace instead of append the featureGate.status and include current and any upcoming changes to this logic with appropriate test coverage Follow up: Move the logic from kasContainerApplyBootstrap to kasContainerBootstrap and drop the former. Add it to cpov2 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-46379 Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5825",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Enable MIv3 for CAPZ",
    "body": "What this PR does / why we need it: This pull request: - bumps the CAPZ dependency to the commit in CAPZ containing the new Azure authentication method for ARO HCP MIv3 - changes the AzureClusterIdentity configuration to use UserAssignedIdentityCredentials to authenticate with Azure cloud Which issue(s) this PR fixes: Fixes CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5810",
    "type": "pullRequest",
    "title": "ARO-15229: add e2e tests for image registry capability",
    "body": "What this PR does / why we need it: Adds E2E tests for HostedCluster Capabilities API. Which issue(s) this PR fixes Fixes ARO-15229( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5856",
    "type": "pullRequest",
    "title": "CNTRLPLANE-336: CPOv2 Refactor Refactor konnectivity-agent into cpov2",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5653",
    "type": "pullRequest",
    "title": "OCPBUGS-50915: Disable capi machineset preflights",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: This enabled machineset preflights by default We want to disable this functionality in hcp because of the following reasons: - MachineSetPreflightCheckControlPlaneIsStable We currently don't express intent for a version via spec.version but via spec.release - MachineSetPreflightCheckKubernetesVersionSkew We preserve our ability to control our skew policy at a higher layer i.e. NodePool API - MachineSetPreflightCheckKubeadmVersionSkew We don't run kubeadmin at all. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5862",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Authenticate to Azure only once in CPO",
    "body": "What this PR does / why we need it: This commit changes the CPO to look for a stored Azure credential to reuse to authenticate with Azure. If there is no stored Azure credential, authenticate to Azure with UAMI and store the credentials. Prior to this commit, the CPO was getting new credentials every reconcile; this led to an issue where the CPO would open too many filewatchers as NewUserAssignedIdentityCredential opens a new filewatcher on every call. ``` time=2025-03-06T18:58:45.994Z level=ERROR msg=\"failed to create file watcher\" err=\"too many open files\" ``` Which issue(s) this PR fixes: A part of CNTRLPLANE-111( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5876",
    "type": "pullRequest",
    "title": "OCPBUGS-52190: Add konnectivity-proxy sidecar to openshift-oauth-apiserver",
    "body": "What this PR does / why we need it: ValidatingWebhooks installed in the data plane were not able to validate resources managed by the OpenShift oauth apiserver because the OpenShift oauth apiserver did not have a konnectivity-proxy. This commit adds the konnectivity-proxy sidecar to the openshift oauth apiserver deployment and uses the socks5 proxy given that the openshift-oauth-apiserver only needs to communicate with services inside the data plane. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-52190( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5859",
    "type": "pullRequest",
    "title": "NO-JIRA: Make serve-containerised in docs not defaulting to a running Docker container when Podman is installed",
    "body": "What this PR does / why we need it: When running ```make serve-containerised``` is ran within the docs directory, instead of defaulting to a running container on either Docker or Podman, it will default straight to Podman if it is installed locally, even if there is no container running in Podman. This PR adds an additional boolean condition to the checks in ```utils.sh``` to make sure that either Podman or Docker is installed and to check if there are any containers running. Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5861",
    "type": "pullRequest",
    "title": "OCPBUGS-53263: Fixed cpov2 reconciliation making no-op calls to api-server",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5881",
    "type": "pullRequest",
    "title": "OCPBUGS-53462: Check for availability of individual catalog images",
    "body": "What this PR does / why we need it: This commit refactors the code that fetches the images to use for OLM catalogs into a common support package. It checks individual catalog images instead of assuming that all of them have the same tag available. It also introduces a cache for images so that every reconcile loop does not result in registry lookups. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-53462( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5877",
    "type": "pullRequest",
    "title": "NO-JIRA: Improve error output msg for Azure CLI role cmds",
    "body": "What this PR does / why we need it: This commit improves the error output messaging for Azure CLI role assignment commands. This should help with diagnosing issues with Azure. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5776",
    "type": "pullRequest",
    "title": "STOR-2281: Remove csi-snapshot-validation-webhook",
    "body": "What this PR does / why we need it: Removed csi-snapshot-validation-webhook. Webhook image is no longer used and will not be built on OCP 4.19+. Which issue(s) this PR fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5857",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Fix KMS Azure credentials mount path",
    "body": "What this PR does / why we need it: This commit fixes the KMS Azure credentials mount path so that there is a / in between the path and credentials secret. Which issue(s) this PR fixes: A part of CNTRLPLANE-111( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5869",
    "type": "pullRequest",
    "title": "CNTRLPLANE-348: Konflux tagged releases",
    "body": "What this PR does / why we need it: Add a pipeline triggered by pushing tags to the repository that has an additional tekton task to tag the image with the git tag. This will make it much easier to spot which version is running in which environment. Which issue(s) this PR fixes Fixes CNTRLPLANE-348( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5846",
    "type": "pullRequest",
    "title": "OCPBUGS-53407: chore(deps): update konflux references",
    "body": "This PR contains the following updates: Change --- `5e5f290` - `e1d365c` quay.io/konflux-ci/tekton-catalog/task-build-image-index `8cdd218` - `8abdd66` quay.io/konflux-ci/tekton-catalog/task-clair-scan `48c1dae` - `c30c126` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check `b2ab681` - `5d63b92` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `63eb4a4` - `2f59e9a` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `443e665` - `f9e6e6a` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `5b9aada` - `8e817af` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `183b28f` - `ea2316b` quay.io/redhat-appstudio-tekton-catalog/task-build-image-manifest `0e022da` - `e9b3816` quay.io/redhat-appstudio-tekton-catalog/task-buildah-remote `bbf512e` - `e9c29ce` quay.io/redhat-appstudio-tekton-catalog/task-deprecated-image-check `6d307bd` - `59ef75d` quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies `a752b35` - `bc394bf` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5872",
    "type": "pullRequest",
    "title": "NO-JIRA: feat(builds): Add area labels and OWNERS",
    "body": "What this PR does / why we need it: Konflux contributions should be labeled as ci-tooling. Also adding myself to the OWNERS since I'm fiddling with it all the time. It will be less of a chore to handle Konflux PRs Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5760",
    "type": "pullRequest",
    "title": "OCPBUGS-52424: Set shutdown watch termination grace period on kube-apiserver",
    "body": "What this PR does / why we need it: Set the `shutdown-watch-termination-grace-period` on kube-apiserver to specify a grace period for waiting on watch requests to drain. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5865",
    "type": "pullRequest",
    "title": "NO-JIRA: Add Azure scheduler doc to mkdocs",
    "body": "What this PR does / why we need it: This commit adds the Azure schedule doc to the mkdocs so this page will display on our upstream website. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5864",
    "type": "pullRequest",
    "title": "CNTRLPLANE-342: Add missing area for support",
    "body": "What this PR does / why we need it: Since support/ is mostly used by control-plane-operator, it makes sense to have the same prow auto labeling. Which issue(s) this PR fixes: Fixes CNTRLPLANE-342( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5827",
    "type": "pullRequest",
    "title": "OCPBUGS-53050: Handle multiple mirror entries for source",
    "body": "What this PR does / why we need it: According to OCP IDMS, when the current mirror image is unavailable, the system should continue searching for an available mirror image. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5767",
    "type": "pullRequest",
    "title": "OCPBUGS-52331: CPO v2: rollout workloads on any changes to mounted configmaps/secrets",
    "body": "What this PR does / why we need it: Removes the RolloutOnSecretChange and RolloutOnConfigMapChange functions in favor of taking all configmaps and secrets into consideration when computing a config hash for a given component. Fixes reconciliation of service account kubeconfig secrets by reading existing values before the adapt function so we don't re-generate a certificate with every reconcile. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-52331( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5853",
    "type": "pullRequest",
    "title": "NO-JIRA: openstack: revert `OpenStackImageRetentionPolicy` + use a unique image name per Hosted Cluster",
    "body": "What this PR does / why we need it: - Revert of `OpenStackImageRetentionPolicy` for now. We have identified that the current code that was implemented isn't suitable for production. We want to re-work it but in the meantime we just revert it. - Added `ClusterImageName` function to encapsulate image name generation for a HostedCluster. - Updated `reconcileOpenStackImageCR` and `ReconcileOpenStackImageSpec` to use `ClusterImageName` instead of manually constructing image names. - Use an image name that now contains the Hosted Cluster name in it so it's unique and per Hosted Cluster. The OpenStack Glance image won't be shared across Hosted Clusters and its lifecycle will be the same as the HostedCluster using it (by default)."
  },
  {
    "id": "5860",
    "type": "pullRequest",
    "title": "Revert \"CNTRLPLANE-112: Enable MIv3 for CNO/CNCC on managed Azure\"",
    "body": "Reverts openshift/hypershift5837"
  },
  {
    "id": "5830",
    "type": "pullRequest",
    "title": "OCPBUGS-53083: e2e: detect leader election failure in restarted pods"
  },
  {
    "id": "5837",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Enable MIv3 for CNO/CNCC on managed Azure",
    "body": "What this PR does / why we need it: This PR enables managed identity version 3 for cluster network operator (CNO) and cloud network configuration controller (CNCC) for managed azure. Which issue(s) this PR fixes: Fixes CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5829",
    "type": "pullRequest",
    "title": "METAL-1240: Fix kube-controller-manager and openshift-route-controller-manager services' ipFamilies wrt PreferDualStack policy",
    "body": "What this PR does / why we need it: While adding a new ControlPlaneComponent, I came across these 2 errors: `{\"level\":\"error\",\"ts\":\"2025-03-13T15:45:22Z\",\"msg\":\"Reconciler error\",\"controller\":\"hostedcontrolplane\",\"controllerGroup\":\"hypershift.openshift.io\",\"controllerKind\":\"HostedControlPlane\",\"HostedControlPlane\":{\"name\":\"my-hcp-cluster\",\"namespace\":\"clusters-my-hcp-cluster\"},\"namespace\":\"clusters-my-hcp-cluster\",\"name\":\"my-hcp-cluster\",\"reconcileID\":\"2b7e0124-4ae6-42d2-b368-2d7cfc1252e5\",\"error\":\"failed to update control plane: ...Service \\\"kube-controller-manager\\\" is invalid: spec.ipFamilyPolicy: Invalid value: \\\"PreferDualStack\\\": must be 'SingleStack' to release the secondary IP family, Service \\\"openshift-route-controller-manager\\\" is invalid: spec.ipFamilyPolicy: Invalid value: \\\"PreferDualStack\\\": must be 'SingleStack' to release the secondary IP family,...}` I could fix this error in two ways: either by removing both Services's spec.ipFamilies field, or by adding IPv6 to both Services's spec.ipFamilies. I found this online which helped me reach this solution: The error seems to be coming from here in k8s: Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5139",
    "type": "pullRequest",
    "title": "OSASINFRA-3492: feat(openstack): leverage ORC to manage the release image",
    "body": "This PR enhances OpenStack support in HyperShift by improving image management and ORC (OpenStack Resource Controller) integration. - Added a new `RetentionPolicy` type with `Orphan` and `Prune` options. - Implemented `ImageRetentionPolicy` for OpenStack platform in `OpenStackPlatformSpec`. - Updated CRDs to include `imageRetentionPolicy` with a default value of `Prune`. - Enhanced the OpenStack CLI options to support `--openstack-image-retention-policy`. - Updated OpenStack resource management to ensure proper handling of Glance images via ORC. - Removed the mandatory requirement for `--openstack-node-image-name`, allowing ORC to manage RHCOS images dynamically. - Modified RBAC policies for ORC to ensure proper permissions on `images` resources. - Refactored related test cases and documentation to align with the new behavior. This change improves flexibility in managing OpenStack resources, enabling users to retain or prune images based on policy."
  },
  {
    "id": "5835",
    "type": "pullRequest",
    "title": "CNTRLPLANE-325: rootless containerized builds",
    "body": "What this PR does / why we need it: Changes the containerized builds to: Use the same container runtime detection as the main repository makefile. Changes from the docker mkdocs-material image to a fedora-minimal based one. Introduces the usage of a volume for the site build not to pollute the repository Makes the containerized versions respect the versions in requirements.txt Bumps requirements.txt. Changes the build mode to --strict, to prevent warnings from creeping in. Which issue(s) this PR fixes Fixes CNTRLPLANE-325( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5759",
    "type": "pullRequest",
    "title": "CNTRLPLANE-265: Enable gosimple, govet, and errcheck in golangci-lint",
    "body": "What this PR does / why we need it: This PR enables gosimple, govet, and errcheck in golangci-lint and fixes the errors from these linters. More info on Which issue(s) this PR fixes: Fixes CNTRLPLANE-265( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5820",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Fix Azure KMS SecretProviderClass volume name",
    "body": "What this PR does / why we need it: This PR fixes the SecretProviderClass name for the volume related to the KMS MIv3 credentials. Previously it was set to the volume name instead of the SecretProviderClass name. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: A part of CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5796",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump msi-dataplane dependency",
    "body": "What this PR does / why we need it: This pull request bumps the msi-dataplane dependency to the latest version, which contains updated error handling around filewatcher. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5818",
    "type": "pullRequest",
    "title": "OCPBUGS-52985: filter watch events for HO AWSEndpointService reconciler",
    "body": "`AWSEndpointServiceReconciler` is currently making a ton of AWS API calls because we reconcile on all `HostedCluster` and `NodePool` changes, which are very frequent during HosterCluster bringup. 24h AWS call volume across all HOs running in prow job mgmt clusters ``` DescribeVpcEndpointServiceConfigurations 76235 DescribeVpcEndpointServicePermissions 75033 DescribeLoadBalancers 39389 ``` All of these originate from the `AWSEndpointServiceReconciler`. This PR filters events triggered by `HostedCluster` and `NodePool` changes to only reconcile if fields we care about change. These are: `hostedCluster.Spec.Platform.AWS.AdditionalAllowedPrincipals` `nodePool.Spec.Platform.AWS.Subnet.ID` We already do this filtering on the CPO side"
  },
  {
    "id": "5799",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `c45aae9` - `dcff5bc` quay.io/konflux-ci/tekton-catalog/task-clamav-scan `91ba738` - `0804da1` quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check `5bc6129` - `b9cb1e1` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `6673cbd` - `154ec4b` quay.io/redhat-appstudio-tekton-catalog/task-clair-scan `2ca2cb8` - `6fb3cec` quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5456",
    "type": "pullRequest",
    "title": "ARO-14354,ARO-14356,ARO-14355: introduce image registry capability behind feature gate",
    "body": "What this PR does / why we need it: We're introducing the concept of capabilities to Hypershift on a limited basis, as described in This PR implements the changes necessary to disable the image registry capability at hosted cluster install time. What changed The changes listed below are what to expect when creating a HostedCluster with the Image Registry capability disabled (TODO: explain how to do this). `ClusterVersion` capabilities are set to the current set of capabilities (taken from openshift/api) The image-registry operator and its associated resources are not created or reconciled Resources include but are not limited to: operator pods, certificates, cloud credentials, pvc, `configs.imageregistry.operator.openshift.io`, image registry pods, relevant service accounts, cluster roles and bindings, etc. openshift-controller-manager's pull-secrets controller is disabled WIP Which issue(s) this PR fixes Fixes ARO-14354( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5808",
    "type": "pullRequest",
    "title": "OCPBUGS-52819: CPO Overrides for OCPBUGS-48519",
    "body": "What this PR does / why we need it: Define the necessary CPO overrides to deal with OCPBUGS-48519 for the users that opt-in to CPO overrides with the HyperShift Operator env var: ENABLE_CPO_OVERRIDES=1 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48519 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5680",
    "type": "pullRequest",
    "title": "PODAUTO-324: PODAUTO-325: Allow autonode to run upstream karpenter core e2e tests",
    "body": "What this PR does / why we need it: This PR adds a script to run upstream Karpenter core e2e tests( with AutoNode and hypershift. This will allow us to re-use tests and confirm that our karpenter-provider satisfies the basic/expected karpenter behaviour. See the JIRA issues or this relevant slack conversation for details on the test plan: This also allows an annotation `hypershift.openshift.io/karpenter-core-e2e-override` to be added to the `HostedCluster` object that allows the karpenter-operator to stop it's deletion in a guest cluster with AutoNode. We need the annotation because the upstream tests try to recreate NodeClasses before every test, but on the hypershift side, the karpenter-operator prevents the deletion of the NodeClass. The annotation will prevent the controller from reconciling the NodeClasses and VAP which denies deletion of the EC2NodeClass. We then use this annotation during an e2e test run by setting it before running the script. Note that the script has to be run in the context of the guest cluster. If all goes well, in a followup PR on the release repo, this will be done in separate steps in the prow config in a new hypershift release job that exercises this upstream test. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: fixes PODAUTO-324( fixes PODAUTO-325( Related to: PODAUTO-323( PODAUTO-327( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5807",
    "type": "pullRequest",
    "title": "OCPBUGS-51364: fix oc patch command on doc",
    "body": "Small nit on doc Which issue(s) this PR fixes: Fixes OCPBUGS-51364("
  },
  {
    "id": "5797",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix-dependabot-bumps",
    "body": "What this PR does / why we need it: This PR fixes the depenabot bump issues in: - - Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5795",
    "type": "pullRequest",
    "title": "OCPBUGS-52655: Add flag to set etcd storage size",
    "body": "What this PR does / why we need it: This PR adds a flag to the HyperShift CLI allowing the etcd storage size to be set during cluster creation. Which issue(s) this PR fixes Fixes OCPBUGS-52655 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5793",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Fix KMS MIv3 Issues",
    "body": "What this PR does / why we need it: This PR fixes a few issues when KMS was converted over to MIv3: - adds omitempty to ClientID and CertificatName in Azure API since these fields are no longer required in managed identity version 3 - renames the KMSUserAssignedCredsFile flag to KMSUserAssignedCredsSecretName. This more accurately represents the flag's purpose, which is to supply the HC with the name of the secret in Azure Key Vault containing the managed identity needed when using KMS. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: A part of CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5812",
    "type": "pullRequest",
    "title": "NO-JIRA: Disable GitHub Actions",
    "body": "What this PR does / why we need it: This PR disables the GH Actions we were testing. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5801",
    "type": "pullRequest",
    "title": "OCPBUGS-52821: stop using dev mode for loggers",
    "body": "What this PR does / why we need it: Removal of `UseDevMode` for loggers for all code excluding test code. Development logging code should not be used for production code. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Stop using DevMode for loggers: Hypershift issues at scale: Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5708",
    "type": "pullRequest",
    "title": "HOSTEDCP-2237: Auto approve Karpenter serving CSRs",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5746",
    "type": "pullRequest",
    "title": "OLS-1370: Add full aws permission list and point to it from \"getting started\"",
    "body": "What this PR does / why we need it: Adding the full list of aws permissions for creation of hypershift hosted clusters. Also adding it as a separate for user friendliness. Like this users can just copy one set of permissions to a policy and be able to create any IAM user capable of spinning hypershift hosted clusters. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: The issue where it was hard to find what set of permissions we needed and it required us to try many times and note down every permission that was missing from the lists. Furthermore, we compressed it to one list to make it easy to copy for any user. Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5769",
    "type": "pullRequest",
    "title": "NO-JIRA: CPOv2 token-minter abstraction",
    "body": "What this PR does / why we need it: This PR adds automation in CPOv2 that allows component to request a `token-minter` container to be injected programmatically instead of having it explicitly defined in the yaml manifest. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5778",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: skip WaitForImageRollout in executeNodePoolTest on newer releases",
    "body": "Observing failures in `TestNodePool/HostedCluster0/Main/TestNTOPerformanceProfile` for 4.15 and 4.16 after 5771 This PR reverts 5771 and does a version-gated version of the same thing to avoid rebreaking Openstack. cc @EmilienM"
  },
  {
    "id": "5763",
    "type": "pullRequest",
    "title": "OCPBUGS-52323: Make managed-trust-bundle optional",
    "body": "What this PR does / why we need it: Addresses issue with which made the `managed-trust-bundle` required. However, this breaks folks who bring their own PKI. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5779",
    "type": "pullRequest",
    "title": "CNV-57648: document how to configure descheduler",
    "body": "What this PR does / why we need it: Document hot to configure the cluster-kube-descheduler operator to configure the descheduler according to the `SoftTopologyAndDuplicates` profile in order to satisfy a topologySpreadConstraint to continuously spread VMs for a NodePool out across multiple underlying nodes. Which issue(s) this PR fixes: Fixes CNV-57648( Checklist - X Subject and description added to both, commit and PR. - X Relevant issues have been referenced. - X This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5777",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove WI step for cluster-image-registry-operator",
    "body": "What this PR does / why we need it: This commit removes the workload identity instruction for adding a federated ID for the service account openshift-image-registry:cluster-image-registry-operator. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5569",
    "type": "pullRequest",
    "title": "OTA-1405: Add the ClusterVersionOperator API",
    "body": "Add the ClusterVersionOperator API: Add the feature-gated ClusterVersionOperator API for HyperShift, which is described in more detail in the CVO Log Level API enhancement( This PR only introduces the API changes. The API will be implemented as part of the OTA-1406( issue. This is to break down the problem into smaller PRs. In case it is more desired to couple the API changes together with the implementation, please let me know. Which issue(s) this PR fixes: Fixes OTA-1405( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5771",
    "type": "pullRequest",
    "title": "OCPBUGS-52419: e2e: don't call `WaitForImageRollout` in `executeNodePoolTest`",
    "body": "What this PR does / why we need it: We don't need to call that function as it's already called where it's needed, in control_plane_upgrade_test for example."
  },
  {
    "id": "5475",
    "type": "pullRequest",
    "title": "OCPBUGS-50518: Kubernetes API Server apply-bootstrap container does not respect SIGTERM",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Modify apply-bootstrap container to trap SIGTERM, and handle it correctly before exiting to ensure the container terminates within the specified grace period. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5756",
    "type": "pullRequest",
    "title": "CNTRLPLANE-263: Remove unused CAPZ CRDs from HyperShift install",
    "body": "What this PR does / why we need it: Remove unused CAPZ managed related CRDs from the HyperShift install since those are not used in HyperShift. Which issue(s) this PR fixes: Fixes CNTRLPLANE-263( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5766",
    "type": "pullRequest",
    "title": "NO-JIRA: speed up image builds",
    "body": "This PR speeds up the image builds by Exclude the `.git` directory in the `COPY . .` for all built images, which saves around 150MB of disk I/O Make the `hypershift-tests` image, built with `Dockerfile.e2e`, multi-stage so we don't commit the source tree, intermediate build files, and dnf cache to the final image that needs to be pushed to the CI registry. This reduces the size of additional layers, on top of the base image, by 75% from ~4GB to ~1GB Before ``` $ podman history 118e47b22af65211e283c950b65ecc569381cff570990ef03914af5b9fb568b6 ID CREATED CREATED BY SIZE COMMENT 118e47b22af6 2 hours ago /bin/sh -c (nop) LABEL \"io.openshift.buil... 4.02GB FROM image-registry.openshift-image-registry.svc:5000/ci-op-vlijyxmd/pipeline@sha256:fe18ab91e42b1653a76a394ee0c9b6081069aff4781c3ecc765fab5ad6fc7c72 0c55494e4022 2 hours ago /bin/sh -c (nop) ENV \"OPENSHIFT_BUILD_NAM... 0B missing 2 hours ago /bin/sh -c make e2e 0B missing 2 hours ago /bin/sh -c rpm --import 0B missing 2 hours ago /bin/sh -c (nop) COPY dir:8e14329a83dbead... 0B missing 2 hours ago /bin/sh -c (nop) WORKDIR /hypershift 0B missing 2 hours ago /bin/sh -c (nop) ENV \"BUILD_LOGLEVEL\"=\"0\" 0B missing 8 hours ago /bin/sh -c mv -fZ /tmp/ubi.repo /etc/yum.r... 494MB FROM registry-proxy.engineering.redhat.com/rh-osbs/openshift-ci-openshift-golang-builder-latest-rhel9@sha256:80df50e59da51d2583cfc21d6d82b4f5725b20e3b5cf852129451f2be8a45e60 ``` After ``` $ podman history d51366c9ebabff1e0aeb1efaad4df34ff06db64c925b73171c976968de1be1ce ID CREATED CREATED BY SIZE COMMENT d51366c9ebab 15 minutes ago /bin/sh -c (nop) LABEL \"io.openshift.buil... 1GB FROM image-registry.openshift-image-registry.svc:5000/ci-op-j3lpfnxi/pipeline@sha256:fe18ab91e42b1653a76a394ee0c9b6081069aff4781c3ecc765fab5ad6fc7c72 0c55494e4022 16 minutes ago /bin/sh -c (nop) ENV \"OPENSHIFT_BUILD_NAM... 0B missing 16 minutes ago /bin/sh -c rpm --import 0B missing 18 minutes ago /bin/sh -c (nop) COPY file:363b0f143d8a29... 0B missing 18 minutes ago /bin/sh -c (nop) COPY file:08382bb82bb010... 0B missing 18 minutes ago /bin/sh -c (nop) COPY file:51eb800577418a... 0B missing 18 minutes ago /bin/sh -c mkdir -p /hypershift/bin /hyper... 0B missing 18 minutes ago /bin/sh -c (nop) WORKDIR /hypershift 0B missing 18 minutes ago /bin/sh -c (nop) ENV \"BUILD_LOGLEVEL\"=\"0\" 0B missing 8 hours ago /bin/sh -c mv -fZ /tmp/ubi.repo /etc/yum.r... 494MB FROM registry-proxy.engineering.redhat.com/rh-osbs/openshift-ci-openshift-golang-builder-latest-rhel9@sha256:80df50e59da51d2583cfc21d6d82b4f5725b20e3b5cf852129451f2be8a45e60 ```"
  },
  {
    "id": "5761",
    "type": "pullRequest",
    "title": "NO-JIRA: go.mod updates from Konflux",
    "body": "What this PR does / why we need it: This PR fixes a number of PRs opened by Konflux to update different go.mod dependencies: - - - - - Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5749",
    "type": "pullRequest",
    "title": "OSASINFRA-3733: (follow-up) deploy ORC on release payload = 4.19",
    "body": "What this PR does / why we need it: Here too we need to add a condition on when we want to pull ORC. This was a miss from"
  },
  {
    "id": "5751",
    "type": "pullRequest",
    "title": "OCPBUGS-52223: refactor aws identity health check into new controller",
    "body": "The cloud provider health check runs every time through the HCP reconcile loop and result in ~800k calls to `DescribeVpcEndpoints` per day in our CI. This is 25-30% of our total AWS API call volume in our CI account and is contributing to API throttling. xref Add identity provider health check Requeue HCP always This PR refactors the health check into its own controller to achieve two goals: 1) Do health checks periodically, even HCP is not changing. This is already done because with requeue the HCP as a hack to deal with unwatchable changes i.e. AWS LB stuff, however, I think we want to refactor this as well in a follow-on PR so we can stop requeuing the HCP on reconcile success. 2) Aggressively limit how often the health check is done in both the failure and success cases (30s for failure, 5m for success) We could refactor this in a different way where the code remains in the HCP reconciler, but we just record a `lastAWSIdentityCheckTime` and skip if the reconcile was triggered in less time than some `delayAWSIdentityCheckDuration`. This only works if we always requeue the HCP, even on reconcile success, which we currently do."
  },
  {
    "id": "5491",
    "type": "pullRequest",
    "title": "OCPBUGS-50523: Fix audit-logs container to properly handle SIGTERM",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5762",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove issues-exit flag for golangci-lint",
    "body": "What this PR does / why we need it: This PR removes the issues-exit flag for golangci-lint. If this flag is set, then the golangci-lint job will return as success even If there are errors. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5755",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Enable MIv3 for CP/CCM in managed Azure HCP",
    "body": "What this PR does / why we need it: This PR enables managed identity version 3 for cloud provider/cloud configuration manager for managed Azure HCP. Which issue(s) this PR fixes: A part of CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5753",
    "type": "pullRequest",
    "title": "NO-JIRA: Add CPO container sync check to GitHub Actions",
    "body": "What this PR does / why we need it: Minor updates to the GitHub Actions. This PR: - adds the CPO container sync check to GitHub Actions - disables caching for the make verify and golangci-lint GitHub Actions.Cache was enabled by default and was causing warning errors like - `Warning: Failed to restore: \"/usr/bin/tar\" failed with error: The process '/usr/bin/tar' failed with exit code 2.` Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5750",
    "type": "pullRequest",
    "title": "OCPBUGS-52227,OCPBUGS-52226: CVE Fix for potential denial of service in upstream libs",
    "body": "Which issue(s) this PR fixes: Fixes: - OCPBUGS-52227( - OCPBUGS-52226( CVEs: - CVE-2025-22868 - CVE-2025-22869"
  },
  {
    "id": "5719",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/go-jose/go-jose/v3 from 3.0.3 to 3.0.4",
    "body": "Bumps github.com/go-jose/go-jose/v3( from 3.0.3 to 3.0.4. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.0.4/h2 h2What's Changed/h2 pBackport fix for GHSA-c6gw-w398-hv78 CVE-2025-27144 a href=\" pstrongFull Changelog/strong: a href=\" /blockquote /details details summaryCommits/summary ul lia href=\" Backport fix 167 to v3 (a href=\" lia href=\" CI: Update github actions and go version (a href=\" lia href=\" Revert a href=\" (ignore unsupported JWKs in Sets) (a href=\" lia href=\" Unmarshal jwk keys with unsupported key type or algorithm into empty ... (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "5676",
    "type": "pullRequest",
    "title": "HOSTEDCP-2242: CPOv2 Refactor Refactor image-registry-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5747",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references 5527",
    "body": "What this PR does / why we need it: Does the migration steps in 5527 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5424",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update dependency mkdocs-material to v9.6.6",
    "body": "This PR contains the following updates: Update --- | mkdocs-material( (changelog( ( mkdocs-material-9.6.6 Compare Source( - Fixed &8203;8040( Privacy plugin not replacing exteral assets (9.6.5 regression) - Fixed &8203;8031( Replace unmtaintained `regex` package in search plugin `v9.6.5`( mkdocs-material-9.6.5 Compare Source( - Fixed &8203;8016( Tags listing not showing when when file name has spaces - Fixed &8203;8012( Privacy plugin crashes if HTTP download fails `v9.6.4`( mkdocs-material-9.6.4 Compare Source( - Fixed &8203;7985( Blog content sometimes not stretching to full width - Fixed &8203;7978( Navigation rendering bug in Safari 18.3 `v9.6.3`( mkdocs-material-9.6.3 Compare Source( - Fixed rendering of arrow heads in Mermaid.js class diagrams - Fixed &8203;7960( Tags plugin crashes on numeric metadata titles `v9.6.2`( mkdocs-material-9.6.2 Compare Source( - Fixed &8203;7955( Excessively long words don't break on narrow screens - Fixed &8203;7947( Scope setting interferes with outdated version banner `v9.6.1`( mkdocs-material-9.6.1 Compare Source( - Fixed &8203;7943( Tags plugin crashing due to merge error `v9.6.0`( mkdocs-material-9.6.0 Compare Source( - Added meta plugin - Rewrite of the tags plugin - Added support for allow lists in tags plugin - Added support for and custom sorting in tags plugin - Added support for related links in blog plugin - Added support for custom index pages in blog plugin - Added support for navigation subtitles - Fixed &8203;7924( Anchors might require two clicks when using instant navigation `v9.5.50`( mkdocs-material-9.5.50 Compare Source( - Fixed &8203;7913( Social plugin renders attribute lists in page title /details --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOS4xNTguMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5745",
    "type": "pullRequest",
    "title": "OCPBUGS-51364: Remove scaledown APIs from Backup/Restore procedure",
    "body": "After talking with etcd folks during the backup/restore research for OADP, they mentioned that is not necessary to scale down the APIs, meanwhile the HC is in pause. More info here:"
  },
  {
    "id": "5706",
    "type": "pullRequest",
    "title": "CNTRLPLANE-244: Enable initial GitHub Action jobs",
    "body": "What this PR does / why we need it: This PR enables an initial set of GitHub Action jobs including: codespell, golangci-lint, verify, and unit testing Which issue(s) this PR fixes: A part of CNTRLPLANE-244( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5551",
    "type": "pullRequest",
    "title": "OCPBUGS-49825: use registryOverrides when automaitcally retrieving catalog images for hosted control plane",
    "body": "What this PR does / why we need it: - We should use the registry overrides if provided when automatically retrieving the latest available catalog images, this can cause trouble when the pullsecret doesn't give access to the default redhat registry expected ie 'registry.redhat.io/redhat' Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5710",
    "type": "pullRequest",
    "title": "OSASINFRA-3733: deploy ORC on release payload = 4.19",
    "body": "What this PR does / why we need it: ORC was added to the release payload in 4.19 so we don't want to install it in 4.18."
  },
  {
    "id": "5703",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Enable MIv3 for azure disk csi driver",
    "body": "What this PR does / why we need it: This pull request enables managed identity version 3 for azure disk csi driver for managed Azure HCP. Which issue(s) this PR fixes A part of CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5600",
    "type": "pullRequest",
    "title": "HOSTEDCP-2262: Karpenter openshift ec2class",
    "body": "What this PR does / why we need it: While VAP is ok for implementing shared ownership it has some drawbacks. e.g. it forces us to change the builtin CEL rules of the API for required fields which is a maintenance burden and error prone. Besides it doesn't gives control to future api pivots we might need to execute to satisfy business needs. E.g. expose a field for dual stream support which requires picking a different ami, e.g expose a field for kubeletconfig that let us include that in the payload generation. This PR introduces a new CRD `OpenshiftEC2NodeClass` to be the main interaction point for users with Karpenter instead of directly creating/modifying `EC2NodeClass` objects. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5717",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(owners): Update IBM reviewers",
    "body": "What this PR does / why we need it: Updating IBM reviewers Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5704",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Enable MIv3 for Azure KMS",
    "body": "What this PR does / why we need it: This PR: - enables managed identity version 3 for Azure KMS for managed Azure HCP - removes the filewatcher package associated with Azure managed identity (MI) version 2; now that the CPO and KMS support MIv3, there is no need for this code Which issue(s) this PR fixes: A part of CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5716",
    "type": "pullRequest",
    "title": "NO-JIRA: doc: openstack: update go version",
    "body": "We are now using 1.23 so we need to update the doc or users will have trouble to build the binary."
  },
  {
    "id": "5655",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Enable image registry to use managed identity v3",
    "body": "What this PR does / why we need it: This PR enables image registry to use managed identity v3 Which issue(s) this PR fixes: Part of CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5663",
    "type": "pullRequest",
    "title": "HOSTEDCP-2246: CPOv2 Refactor Refactor OLM",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5694",
    "type": "pullRequest",
    "title": "HOSTEDCP-2247: CPOv2 Refactor Refactor control-plane-pki-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5679",
    "type": "pullRequest",
    "title": "OCPBUGS-51007: test/e2e: fix WaitForImageRollout to actually wait on upgrade case",
    "body": "The general idea of the fix is to detect the case where the HC image has been changed but that change has not yet propagated to HostedCluster status via ClusterVersion status. The PR detects this by recording the CompletionTime of the latest rollout in the version history when WaitForImageRollout is first called, immediately after the image is changed on the HostedCluster. As long as the latest rollout in the version history continues to match this recorded time, the update has not yet propagated through ClusterVersion and to the HostedCluster status. Once the propagation occurs, the latest entry in the version history will be Partial until the rollout completes, for which there is an existing block. Changes: Ignore the latest entries in the version history if the `CompletionTime` was before we changed the HC release image. drop `image` from `WaitForImageRollout()` signature since it is actually not used and also makes it clear that not waiting on anything to match the HC release image. add assertions to `TestCreateClusterPrivate` that actually test if the API endpoint is transitioning between private and public. Calling `ValidatePublicCluster or ValidatePrivateCluster` did not do this. Closed because I pushed the branch directly to `openshift` org :man_facepalming:"
  },
  {
    "id": "5700",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/go-jose/go-jose/v4 from 4.0.1 to 4.0.5",
    "body": "Bumps github.com/go-jose/go-jose/v4( from 4.0.1 to 4.0.5. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v4.0.5/h2 h2What's Changed/h2 ul liDon't allow unbounded amounts of splits by a href=\" in a href=\" /ul pFixes a href=\" pVarious other dependency updates, small fixes, and documentation updates in the full changelog/p h2New Contributors/h2 ul lia href=\" made their first contribution in a href=\" /ul pstrongFull Changelog/strong: a href=\" h2Version 4.0.4/h2 h1Fixed/h1 ul liReverted &quot;Allow unmarshalling JSONWebKeySets with unsupported key types&quot; as a breaking change. See a href=\" / a href=\" /ul h2Version 4.0.3/h2 h2Changed/h2 ul liAllow unmarshalling JSONWebKeySets with unsupported key types (a href=\" liDocument that OpaqueKeyEncrypter can't be implemented (for now) (a href=\" liDependency updates/li /ul h2Version 4.0.2/h2 h2What's Changed/h2 ul lia href=\" documentation/a of Verify() to note that JSONWebKeySet is a supported argument type/li lia href=\" exported error values/a for missing x5c header and unsupported elliptic curves error cases/li /ul h2New Contributors/h2 ul lia href=\" made their first contribution in a href=\" lia href=\" made their first contribution in a href=\" /ul pstrongFull Changelog/strong: a href=\" /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h1v4.0.4/h1 h2Fixed/h2 ul liReverted &quot;Allow unmarshalling JSONWebKeySets with unsupported key types&quot; as a breaking change. See a href=\" / a href=\" /ul h1v4.0.3/h1 h2Changed/h2 ul liAllow unmarshalling JSONWebKeySets with unsupported key types (a href=\" liDocument that OpaqueKeyEncrypter can't be implemented (for now) (a href=\" liDependency updates/li /ul h1v4.0.2/h1 h2Changed/h2 ul liImproved documentation of Verify() to note that JSONWebKeySet is a supported argument type (a href=\" liDefined exported error values for missing x5c header and unsupported elliptic curves error cases (a href=\" /ul /blockquote /details details summaryCommits/summary ul lia href=\" Don't allow unbounded amounts of splits (a href=\" lia href=\" Fix broken link in README.md (a href=\" lia href=\" Remove CLA mentions from CONTRIBUTING.md (a href=\" lia href=\" Bump golang.org/x/crypto from 0.31.0 to 0.32.0 (a href=\" lia href=\" Bump github.com/stretchr/testify from 1.9.0 to 1.10.0 (a href=\" lia href=\" Bump golang.org/x/crypto from 0.25.0 to 0.31.0 (a href=\" lia href=\" Remove export disclaimer (a href=\" lia href=\" Short circuit return errors from codeJSONWebKey.UnmarshalJSON()/code (a href=\" lia href=\" Update CHANGELOG for 4.0.4 (a href=\" lia href=\" Revert a href=\" JSONWebKeySet: ignore unsupported key types (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "5650",
    "type": "pullRequest",
    "title": "OCPBUGS-50907: Propagate Reason for Available condition from HCP to HC",
    "body": "What this PR does / why we need it: Align propagating Reason and Message for Available condition from HCP to HC for consistency and better readability of the state. Which issue(s) this PR fixes: Fixes OCPBUGS-50907( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5698",
    "type": "pullRequest",
    "title": "NO-JIRA: Reenable ibm network cel",
    "body": "What this PR does / why we need it: This is a revert of to reinforce CEL validation for IBMCloud. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5674",
    "type": "pullRequest",
    "title": "NO-JIRA: ho: watch AWSEndpointServices",
    "body": "added code for propagating the conditions on the `AWSEndpointService` up to the `HostedCluster`. However, the `HostedClusterReconciler` does not watch the `AWSEndpointService` type and thus can miss updates to the conditions. This PR adds `AWSEndpointService` to the `managedResources` that are watched by the `HostedClusterReconciler`. cc @muraee"
  },
  {
    "id": "5665",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: use test name for HC name",
    "body": "Right now, the test HCs have names like `example-abcdf`, which don't convey any information about the test case that HC was exercising. In particular, when looking at management cluster metrics or audit logs, it is difficult to track back to which test case a particular HC was exercising. This PR makes the HC name carry information matching it to an e2e test case. The HC name still needs to be unique across all running prow jobs as the name is also used as the infraID, so we still need to append a unique suffix."
  },
  {
    "id": "5584",
    "type": "pullRequest",
    "title": "OSASINFRA-3719: openstack: ORC deployed out of tree",
    "body": "- Introduce `OpenStackResourceControllerImage` annotation to allow overriding the ORC image. - Extend OpenStack platform struct to manage the ORC image alongside the CAPO manager. - Update `CAPIProviderDeploymentSpec` to deploy ORC as a separate container. - Add `OpenStackResourceController` image reference in platform initialization. - Define `IMAGE_OPENSTACK_RESOURCE_CONTROLLER` env variable for ORC image handling. This change enables the deployment of OpenStack Resource Controller (ORC) within the HyperShift operator."
  },
  {
    "id": "5672",
    "type": "pullRequest",
    "title": "CNTRLPLANE-35: skip EnsureValidatingAdmissionPoliciesExists/EnsureVal...",
    "body": "...idatingAdmissionPoliciesCheckDeniedRequests based on HC CPO version We need to skip based on the HC CPO version because when running minor upgrade tests we dont want to use the latest release image version as this would give innacurate test results What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-35( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5678",
    "type": "pullRequest",
    "title": "NO-JIRA: Update-precommit-docs",
    "body": "What this PR does / why we need it: This PR adds a precommit helpful tips documentation page to help other users quickly understand how to install, uninstall, and bypass the precommit hooks. Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5632",
    "type": "pullRequest",
    "title": "HOSTEDCP-2248: CPOv2 Refactor Refactor snapshotcontroller",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5651",
    "type": "pullRequest",
    "title": "OCPBUGS-50860: Skip hashing configuration.image.imageStreamImportMode",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: - Skip the hashing of the `spec.configuration.image.imageStreamImportMode` field as older CPO versions don't see that field yet and if we hash it then the HO and CPO hashes will never match. - Add a `CreateClusterWithImageConfiguration` e2e test that validates the cluster creation would fail without the hashing skipping !NOTE First, I pushed the `CreateClusterWithImageConfiguration` test first without the fix to verify it's going to fail and catch the bug, and indeed it did. - Failed Job( - ignition-server-logs ( ``` {\"level\":\"error\",\"ts\":\"2025-02-18T09:52:49Z\",\"msg\":\"Reconciler error\",\"controller\":\"secret\",\"controllerGroup\":\"\",\"controllerKind\":\"Secret\",\"Secret\":{\"name\":\"token-example-g5xv7-us-east-1b-15d0c3a1\",\"namespace\":\"e2e-clusters-jd6tw-example-g5xv7\"},\"namespace\":\"e2e-clusters-jd6tw-example-g5xv7\",\"name\":\"token-example-g5xv7-us-east-1b-15d0c3a1\",\"reconcileID\":\"b15397db-2c76-47e8-b3ba-e1696612099c\",\"error\":\"failed to generate payload: error getting ignition payload: machine-config-server configmap is out of date, waiting for update 90058cc5 != c3711dfa\",\"stacktrace\":\"sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).reconcileHandler \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:324 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).processNextWorkItem \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:261 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).Start.func2.2 \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:222\"} 2025/02/18 09:52:51 User Agent: Ignition/2.18.0. Requested: /ignition 2025/02/18 09:52:51 Token not found {\"level\":\"debug\",\"ts\":\"2025-02-18T09:52:51Z\",\"logger\":\"events\",\"msg\":\"Token not found in cache\",\"type\":\"Warning\",\"object\":{\"kind\":\"Secret\",\"namespace\":\"e2e-clusters-jd6tw-example-g5xv7\",\"name\":\"token-example-g5xv7-us-east-1a-15d0c3a1\",\"apiVersion\":\"v1\"},\"reason\":\"GetPayloadFailed\"} 2025/02/18 09:52:51 User Agent: Ignition/2.18.0. Requested: /ignition 2025/02/18 09:52:51 Token not found {\"level\":\"debug\",\"ts\":\"2025-02-18T09:52:51Z\",\"logger\":\"events\",\"msg\":\"Token not found in cache\",\"type\":\"Warning\",\"object\":{\"kind\":\"Secret\",\"namespace\":\"e2e-clusters-jd6tw-example-g5xv7\",\"name\":\"token-example-g5xv7-us-east-1b-15d0c3a1\",\"apiVersion\":\"v1\"},\"reason\":\"GetPayloadFailed\"} 2025/02/18 09:52:56 User Agent: Ignition/2.18.0. Requested: /ignition ``` Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-50860 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5656",
    "type": "pullRequest",
    "title": "NO-JIRA: Add omitempty to CredentialsSecretName",
    "body": "What this PR does / why we need it: This PR adds omitempty to CredentialsSecretName for Azure HC API. Without this commit, HO installs are failing on the CS side for ARO HCP since MIv3 isn't enabled. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5610",
    "type": "pullRequest",
    "title": "OCPBUGS-51039: return marshalled dataplane even if assignprincipals is false",
    "body": "Currently, we don't return the dataplane identities if assignServicePricnipals is false this means that cluster creation will fail as dataplane identities will be missing What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-51039( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5602",
    "type": "pullRequest",
    "title": "HOSTEDCP-2241: CPOv2 Refactor Refactor ingress operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5652",
    "type": "pullRequest",
    "title": "CNTRLPLANE-220: Update \"Create an Azure Hosted Cluster on AKS\" docs",
    "body": "What this PR does / why we need it: This PR makes changes to the Azure AKS documentation to ensure consistency through the steps. This helps prevent confusion for readers following the guide. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-220( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5623",
    "type": "pullRequest",
    "title": "CNTRLPLANE-238: Bump k8s to v1.32.2 and CAPZ to v1.18.0",
    "body": "What this PR does / why we need it: This pull request: - bumps HyperShift k8s to v1.32.2 - fixes issues from the bump - bumps CAPZ to v1.18.0 Which issue(s) this PR fixes: Fixes CNTRLPLANE-238( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5661",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix hc hcp cel inconsistency",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5654",
    "type": "pullRequest",
    "title": "NO-JIRA: add secretproviderclass to dump",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5631",
    "type": "pullRequest",
    "title": "OCPBUGS-50606: Fix kubeadmin login failure",
    "body": "This fixes the oauth deployment not restarting after kubeadmin-secret is created in the guest cluster by the HCCO. The HCCO now annoates the secret in the HCP namespace once it creates the secret in the guest cluster to signal a restart of the oauth deployment. What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5622",
    "type": "pullRequest",
    "title": "NO-JIRA: bump Cluster API Provider OpenStack to v0.12 (for 4.19 only)",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: - Bumps CAPO dependency to v0.12.0 - Updates the generated assets with make update Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5657",
    "type": "pullRequest",
    "title": "NO-JIRA: update hypershift azure roles to use ids",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5621",
    "type": "pullRequest",
    "title": "CNTRLPLANE-112: Add UserAssignedIdentityCredentials environment variable for OpenShift operators",
    "body": "What this PR does / why we need it: This PR adds an environment variable on the deployment of the following operators to specify the file path for the UserAssignedIdentityCredentials: ingress, image registry, and network. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-112( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5607",
    "type": "pullRequest",
    "title": "NO-JIRA: CPOv2 refactor self service sa kubeconfig",
    "body": "What this PR does / why we need it: Add cpov2 capability to self service sa kubeconfig for components includes Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5596",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Move CPO to use UserAssignedIdentityCredentials",
    "body": "What this PR does / why we need it: This PR: - updates the CPO to use the secret associated with UserAssignedIdentityCredentials - updates the reconciliation of the SecretProviderClass to also support UserAssignedIdentityCredentials Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-111( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5594",
    "type": "pullRequest",
    "title": "HOSTEDCP-2244: Refactor machine approver into cpov2",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5595",
    "type": "pullRequest",
    "title": "OCPBUGS-50578: add region to AWS creds passed to operators managed by CPO",
    "body": "What this PR does / why we need it: this will ensure that clients build by these operators will point to the same AWS region that the HCP itself is deployed in when interacting with cloud resources. This fixes an issue where HCP operators that use AssumeRoleWithWebIdentity credentials to interact with AWS cloud resources don't have the ability to see OIDC providers in the GovCloud partition, which means that these operators break when deployed in GovCloud. Which issue(s) this PR fixes: Fixes OCPBUGS-50578 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5601",
    "type": "pullRequest",
    "title": "OCPBUGS-50014: Restart HCP on stale serving certs",
    "body": "What this PR does / why we need it: Adds code to the HyperShift operator to initiate a restart of control plane workloads when stale certificates are detected. This is limited for hosted clusters with OCP version 4.19. In 4.19, we will handle automatic restarts within the OCP v2 code. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-50014( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5604",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove ARO HCP Managed Identity Tech Preview",
    "body": "What this PR does / why we need it: This PR removes all of the ARO HCP managed identity work out from behind Tech Preview. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5568",
    "type": "pullRequest",
    "title": "HOSTEDCP-2171: add e2e test for aro scheduler",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2171( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5466",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump Golang to 1.23",
    "body": "What this PR does / why we need it: This PR - bumps Golang to 1.23 for the main go.mod, API go.mod, and hack/tools/go.mod - updates the RHTAP Dockerfiles to Golang v1.23 Which issue(s) this PR fixes: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5609",
    "type": "pullRequest",
    "title": "NO-JIRA: Ensure 'pull-secret' is set properly on v2 serviceAccounts",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5611",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump to CAPI v1.9, CAPA v2.7",
    "body": "What this PR does / why we need it: Bump to CAPI v1.9, CAPA v2.7 Required for the upcoming openshift CAPI/CAPA rebases on the newest upstream versions."
  },
  {
    "id": "5543",
    "type": "pullRequest",
    "title": "HOSTEDCP-2255: e2e: ensure custom tolerations on all HCP pods"
  },
  {
    "id": "5593",
    "type": "pullRequest",
    "title": "HOSTEDCP-2243: Refactor dns operator into cpov2",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5540",
    "type": "pullRequest",
    "title": "PODAUTO-318: Implement HCP karpenter deletion",
    "body": "What this PR does / why we need it: This commit implements supporting cascading deletion of karpenter provisioned nodes upon deletion of a hosted control plane. Also modifies the current Karpenter e2e test to test deletion of an HCP is not blocked by karpenter nodes, and adds a unit test. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5515",
    "type": "pullRequest",
    "title": "NO-ISSUE: docs/content/how-to/disaster-recovery/etcd-recovery: Explicitly delegate to admin",
    "body": "What this PR does / why we need it: The outgoing line left the responsibility for the deletion ambiguous. Maybe the HyperShift operator had automated that deletion? Maybe the admin had to manually delete, and the automation was just scoped to post-deletion recovery? My incoming line is trying to make it clear that it's the latter, and that HyperShift is not involved in the Pod/PVC deletion that initiates recovery, even when `--enable-etcd-recovery` is true. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5582",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump the golang-dependencies group with 2 updates",
    "body": "Bumps the golang-dependencies group with 2 updates: golang.org/x/sync( and golang.org/x/time( Updates `golang.org/x/sync` from 0.10.0 to 0.11.0 details summaryCommits/summary ul lia href=\" sync/errgroup: improve documentation for semaphore limit behavior/li liSee full diff in a href=\" view/a/li /ul /details br / Updates `golang.org/x/time` from 0.9.0 to 0.10.0 details summaryCommits/summary ul lia href=\" rate: prevent overflows when calculating durationFromTokens/li liSee full diff in a href=\" view/a/li /ul /details br / Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions /details"
  },
  {
    "id": "5581",
    "type": "pullRequest",
    "title": "PODAUTO-302: Relax cel rule for karpenter role to be required in an ec2NodeClass",
    "body": "What this PR does / why we need it: In a hosted cluster with `autonode`, the role passed to the default `EC2NodeClass` that are given to instances/nodes are not required for instances to join the cluster. This PR relaxes the cel rule that requires the `role` field to be present in the EC2NodeClass custom resource and allows it to be changed. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5583",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove haproxy generation error for normal flow",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5572",
    "type": "pullRequest",
    "title": "OCPBUGS-49913: Honor proxy vars in the util insecure http client",
    "body": "What this PR does / why we need it: Honor proxy vars in the util insecure http client. When replacing the default transport, we need to set the proxy field to net.http.ProxyFromEnvironment to honor proxy env vars. Otherwise, no proxy will be used if the _PROXY env vars are set. Here's the documentation of the `Proxy` field ```go // Proxy specifies a function to return a proxy for a given // Request. If the function returns a non-nil error, the // request is aborted with the provided error. // // The proxy type is determined by the URL scheme. \"http\", // \"https\", \"socks5\", and \"socks5h\" are supported. If the scheme is empty, // \"http\" is assumed. // \"socks5\" is treated the same as \"socks5h\". // // If the proxy URL contains a userinfo subcomponent, // the proxy request will pass the username and password // in a Proxy-Authorization header. // // If Proxy is nil or returns a nil URL, no proxy is used. Proxy func(Request) (url.URL, error) ``` Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5571",
    "type": "pullRequest",
    "title": "CNTRLPLANE-221: specify region in AWS credentials for operator-roles",
    "body": "What this PR does / why we need it: specify cloud region in the AWS credentials profile for AssumeRoleWithWebIdentity passed to HCP operator roles (e.g. KAS kms-provider) when the HCP is deployed in a region that lies in the AWS govcloud partition. This is necessary because if the credentials don't specify a GovCloud partition in the profile, then a session is built pointing to the default non-GovCloud regions, and that client will be unable to see and authenticate to OIDC providers inside the GovCloud partition. See the ticket for specific error details and examples against the KubeAPIServer's kms-provider Which issue(s) this PR fixes Fixes CNTRLPLANE-221( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5579",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: combine OpenStack advanced tests within one Nodepool",
    "body": "What this PR does / why we need it: This will make our tests to run faster, especially if we keep adding tests."
  },
  {
    "id": "5499",
    "type": "pullRequest",
    "title": "OCPBUGS-49609: Split binary builds",
    "body": "What this PR does / why we need it: This PR aims to alleviate the memory issues that occur when building binaries due to memory exhaustion, likely caused by the AzureSDK imports. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-49609 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced."
  },
  {
    "id": "5580",
    "type": "pullRequest",
    "title": "NO-JIRA: Apply additional labels to CollectProfilesCronJob",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5293",
    "type": "pullRequest",
    "title": "HOSTEDCP-2231: Remove cloud connection, Set Transit Gateway as default",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: This PR updates the PowerVS documentation and code to reflect Transit Gateway as the default networking mode. IBM Cloud has removed support for cloud connection, necessitating this change. Removed references to cloud connection. Updated hypershift powervs commands to use Transit Gateway as the default networking mode. Revised the documentation to provide clear guidance on Transit Gateway usage. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes 5062 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - x This PR was tested locally."
  },
  {
    "id": "5564",
    "type": "pullRequest",
    "title": "CNTRLPLANE-209: Add shared-ingress docs",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5522",
    "type": "pullRequest",
    "title": "HOSTEDCP-2257: Vendor karpenter CRDs",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5554",
    "type": "pullRequest",
    "title": "ARO-14442: introduce capabilities api",
    "body": "What this PR does / why we need it: We're introducing the concept of capabilities to Hypershift on a limited basis, as described in Which issue(s) this PR fixes : Fixes ARO-14442( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5578",
    "type": "pullRequest",
    "title": "NO-JIRA: add optional step for creating release image using cluster b...",
    "body": "...ot and multiple prs !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5556",
    "type": "pullRequest",
    "title": "CNTRLPLANE-109: Update Azure API for Phase 3 Managed Identity Work",
    "body": "What this PR does / why we need it: This pull requests begins the phase 3 managed identity work for ARO HCP. This pull request: - relaxes the API requirement to have a ClientID and CertificateName for any ManagedIdentity - adds the CredentialsSecretName field which contains the name of the secret that contains the JSON format of a UserAssignedIdentityCredentials struct Relaxing the previous API requirements should allow the HO to continue to work with phase 2 managed identity work as phase 3 work continues. In a later PR, ClientID and CertificateName will be removed and CredentialsSecretName will be required. Which issue(s) this PR fixes: Fixes CNTRLPLANE-109( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5565",
    "type": "pullRequest",
    "title": "NO-JIRA: add watch permission to SecretProviderClass in ARO",
    "body": "What this PR does / why we need it: fixes operator errors like: operator-5cdcbcb4b7-4v2l2 operator E0205 13:52:52.869331 1 reflector.go:158 \"Unhandled Error\" err=\"sigs.k8s.io/controller-runtime/pkg/cache/internal/informers.go:106( Failed to watch v1.SecretProviderClass: unknown (get secretproviderclasses.secrets-store.csi.x-k8s.io( logger=\"UnhandledError\" Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5560",
    "type": "pullRequest",
    "title": "NO-JIRA: Update cpov2 docs",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5441",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: don't skip mirrorconfigs on OSP",
    "body": "What this PR does / why we need it: This was a bad copy paste but this test should not be skipped on OpenStack."
  },
  {
    "id": "5546",
    "type": "pullRequest",
    "title": "OCPBUGS-49791: Use /livez for kubernetes scheduler liveness probe",
    "body": "What this PR does / why we need it: The scheduler's /livez endpoint is more appropriate for its liveness probe Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5559",
    "type": "pullRequest",
    "title": "CNTRLPLANE-111: Move secretproviderclass.go to support folder",
    "body": "What this PR does / why we need it: This PR is prerequisite work for CNTRLPLANE-111( This PR - moves the secretproviderclass.go and its unit test file to the support directory; the function, ReconcileManagedAzureSecretProviderClass, within this file is called by both the HO and the CPO - changes `ReconcileManagedAzureSecretProviderClass` to take a ManagedIdentity Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: N/A Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5553",
    "type": "pullRequest",
    "title": "OCPBUGS-49838: Watch NodePools in HostedCluster controller",
    "body": "What this PR does / why we need it: The HostedCluster controller sets an annotation on the HostedControlPlane to enable/disable autoscaling based on whether there are nodepools that require autoscaling. Because we were not watching NodePools in this controller, changes to NodePools did not get immediately reflected in the HostedControlPlane annotation. This commit adds NodePools to the list of resources that the HostedCluster controller watches. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-49838( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5549",
    "type": "pullRequest",
    "title": "HOSTEDCP-2120: Enable EnsureCustomLabels e2e test",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5524",
    "type": "pullRequest",
    "title": "OCPBUGS-49724: remove passed in image matching desired image check fr...",
    "body": "...om WaitForImageRollout What this PR does / why we need it: - The reported desired image is now the digest of the passed in image which no longer matches the passed in image during the check and can cause the test to fail cluster validation. The remaining check in WaitForImageRollout should be sufficient to consider the image rolloud successfully. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-49724( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5525",
    "type": "pullRequest",
    "title": "OCPBUGS-48619: Add HostedCluster additional trustbundles to konnectivity-https-proxy",
    "body": "What this PR does / why we need it: When using the konnectivity-https-proxy sidecar to communicate through workers, the proxy dials any configured proxy directly and fails to connect if it cannot trust the proxy's serving certificate. This commit adds mounts for the trusted-ca-bundle-managed configmap to sidecar containers that run the konnectivity-https-proxy. The configmap contains the aggregate of .spec.additionalTrustBundle and .spec.configuration.proxy.trustedCA. This fixes the issue of the ingress operator not becoming available when using a proxy with a custom certificate. In addition it propagates any proxy environment variables that are set on the control plane operator to the konnectivity-https-proxy containers. This is needed when the management cluster itself requires a proxy and the proxy container dials an address directly such as when it needs to communicate with a cloud provider endpoint. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48619( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5401",
    "type": "pullRequest",
    "title": "HOSTEDCP-2040: Add TestCreateClusterCustomConfigV2",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5535",
    "type": "pullRequest",
    "title": "OCPBUGS-49748: Duplicate hostDevices.name when hostDevices.deviceName has multiple types.",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: If hostDevices.deviceName has multiple types, the generated hostDevices.name has duplicates. when ``` apiVersion: hypershift.openshift.io/v1beta1 kind: NodePool spec: platform: kubevirt: hostDevices: - count: 8 deviceName: nvidia.com/H20 - count: 4 deviceName: nvidia.com/NVSwitch ``` VirtualMachine ``` hostDevices: - deviceName: nvidia.com/H20 name :hostdevice-1 - deviceName: nvidia.com/H20 name :hostdevice-2 - deviceName: nvidia.com/H20 name :hostdevice-3 - deviceName: nvidia.com/H20 name :hostdevice-4 - deviceName: nvidia.com/NVSwitch name :hostdevice-1 - deviceName: nvidia.com/NVSwitch name :hostdevice-2 ``` Which issue(s) this PR fixes Fixes Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5547",
    "type": "pullRequest",
    "title": "OCPBUGS-49804: Revert \"HOSTEDCP-2120: Enable EnsureCustomLabels e2e test\"",
    "body": "Reverts openshift/hypershift5511"
  },
  {
    "id": "5526",
    "type": "pullRequest",
    "title": "HOSTEDCP-2259: CLI: enable secure proxy creation",
    "body": "What this PR does / why we need it: Adds '--enable-secure-proxy' flag to 'hypershift create infra aws' and 'hypershift create cluster aws' commands. The flag is similar to the existing '--enable-proxy' flag, except that it creates a proxy that exposes a ssl endpoint with custom serving certificate. This is needed to automate testing of secure proxy use cases. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2259( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5541",
    "type": "pullRequest",
    "title": "CNTRLPLANE-172: cli: azure: allow assigning custom HCP roles",
    "body": "A follow on to We don't yet have built-in roles for the HCP components and that process might take a while. In the meantime, we can exercise the limited permission set in custom roles that are manually created by the user before cluster creation. The role names are `Azure Red Hat OpenShift Control Plane Operator Role` for the CPO `Azure Red Hat OpenShift NodePool Management Role` for CAPZ i.e. nodePoolManagement Once these roles are built-in, we can safely assume the roles always exist and remove this flag."
  },
  {
    "id": "5505",
    "type": "pullRequest",
    "title": "OCPBUGS-49686: Add ObjectEncoding to the Azure API and SecretProviderClass Reconciliation in the CPO",
    "body": "What this PR does / why we need it: This PR: - adds ObjectEncoding to the Azure API so one can specify how a secret is encoded - adds the objectEncoding to SecretProviderClass params so the right decoding option can be used on the Azure Key Vault secret Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5518",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/Azure/go-autorest/autorest from 0.11.29 to 0.11.30 in the azure-github-dependencies group",
    "body": "Bumps the azure-github-dependencies group with 1 update: github.com/Azure/go-autorest/autorest( Updates `github.com/Azure/go-autorest/autorest` from 0.11.29 to 0.11.30 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2autorest/v0.11.30/h2 pDeprecate the codeautorest/code module./p /blockquote /details details summaryCommits/summary ul lia href=\" Update readmes and add deprecation notices (a href=\" lia href=\" Add links to track 2 migration guides (a href=\" lia href=\" Mark the adal module as deprecated (a href=\" lia href=\" Bump golang.org/x/crypto from 0.6.0 to 0.17.0 in /autorest/azure/cli (a href=\" lia href=\" Bump golang.org/x/crypto from 0.6.0 to 0.17.0 in /autorest/azure/auth (a href=\" lia href=\" Bump golang.org/x/crypto from 0.6.0 to 0.17.0 in /autorest (a href=\" lia href=\" Bump golang.org/x/crypto from 0.6.0 to 0.17.0 in /autorest/adal (a href=\" lia href=\" Stop retriable request from adding a non-nil Body (a href=\" lia href=\" chore: should use xx.String() instead of string(xx.Bytes()) (a href=\" lia href=\" io/ioutil deprecated (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions /details"
  },
  {
    "id": "5511",
    "type": "pullRequest",
    "title": "HOSTEDCP-2120: Enable EnsureCustomLabels e2e test",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5510",
    "type": "pullRequest",
    "title": "OCPBUGS-48688: Remove Credentials from the Azure API",
    "body": "What this PR does / why we need it: This PR: - removes the Credentials field from the Azure API since it is no longer needed. Originally, the client secret info, subscription id, and tenant id were stored in this secret reference. However, client secret implementation has been removed as a result of workload identity work, and subscription id and tenant id are directly exposed in the Azure API now. - updates the CLI and the HyperShift Operator (HO) to use Tenant ID directly from the HC Azure API spec rather than the previous Credentials secret. References to the Credentials secret, in the CLI and HO, were also removed in this commit. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48688( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5439",
    "type": "pullRequest",
    "title": "HOSTEDCP-2249: Reconcile karpenter user-data secret programmatically instead of creating a mock nodePool",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5519",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump the misc-dependencies group with 6 updates",
    "body": "Bumps the misc-dependencies group with 6 updates: From --- `3.5.17` `3.5.17` `1.61.0` Updates `go.etcd.io/etcd/api/v3` from 3.5.17 to 3.5.18 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.5.18/h2 pPlease check out a href=\" for a full list of changes. And make sure to read a href=\" guide/a before upgrading etcd (there may be breaking changes)./p pFor installation guides, please check out a href=\" and a href=\" etcd/a. Latest support status for common architectures and operating systems can be found at a href=\" platforms/a./p h6Linux/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1br / rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz/p p/tmp/etcd-download-test/etcd --versionbr / /tmp/etcd-download-test/etcdctl versionbr / /tmp/etcd-download-test/etcdutl version/p h1start a local etcd server/h1 p/tmp/etcd-download-test/etcd/p h1write,read to etcd/h1 p/tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo barbr / /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foobr / /code/pre/p h6macOS (Darwin)/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp &amp;&amp; rm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / mv /tmp/etcd-${ETCD_VER}-darwin-amd64/ /tmp/etcd-download-test &amp;&amp; rm -rf mv /tmp/etcd-${ETCD_VER}-darwin-amd64br / &lt;/tr&gt;&lt;/table&gt;br / /code/pre/p /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" version: bump up to 3.5.18/li lia href=\" Merge pull request a href=\" from ahrtr/race-20250117_3.5/li lia href=\" Ensure all goroutines created by StartEtcd to exit before closing the errc/li lia href=\" Merge pull request a href=\" from fuweid/35-fix-19179/li lia href=\" mvcc: restore tombstone index if it's first revision/li lia href=\" Merge pull request a href=\" from ivanvc/release-3.5-bump-go-to-1.22.11/li lia href=\" Bump go toolchain to 1.22.11/li lia href=\" Merge pull request a href=\" from joshuazh-x/fix-embed-close-deadlock-3.5/li lia href=\" Avoid deadlock in etcd.Close when stopping during bootstrapping/li lia href=\" Merge pull request a href=\" from fuweid/v35_check_v2store_followup/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `go.etcd.io/etcd/client/pkg/v3` from 3.5.17 to 3.5.18 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.5.18/h2 pPlease check out a href=\" for a full list of changes. And make sure to read a href=\" guide/a before upgrading etcd (there may be breaking changes)./p pFor installation guides, please check out a href=\" and a href=\" etcd/a. Latest support status for common architectures and operating systems can be found at a href=\" platforms/a./p h6Linux/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1br / rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz/p p/tmp/etcd-download-test/etcd --versionbr / /tmp/etcd-download-test/etcdctl versionbr / /tmp/etcd-download-test/etcdutl version/p h1start a local etcd server/h1 p/tmp/etcd-download-test/etcd/p h1write,read to etcd/h1 p/tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo barbr / /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foobr / /code/pre/p h6macOS (Darwin)/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp &amp;&amp; rm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / mv /tmp/etcd-${ETCD_VER}-darwin-amd64/ /tmp/etcd-download-test &amp;&amp; rm -rf mv /tmp/etcd-${ETCD_VER}-darwin-amd64br / &lt;/tr&gt;&lt;/table&gt;br / /code/pre/p /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" version: bump up to 3.5.18/li lia href=\" Merge pull request a href=\" from ahrtr/race-20250117_3.5/li lia href=\" Ensure all goroutines created by StartEtcd to exit before closing the errc/li lia href=\" Merge pull request a href=\" from fuweid/35-fix-19179/li lia href=\" mvcc: restore tombstone index if it's first revision/li lia href=\" Merge pull request a href=\" from ivanvc/release-3.5-bump-go-to-1.22.11/li lia href=\" Bump go toolchain to 1.22.11/li lia href=\" Merge pull request a href=\" from joshuazh-x/fix-embed-close-deadlock-3.5/li lia href=\" Avoid deadlock in etcd.Close when stopping during bootstrapping/li lia href=\" Merge pull request a href=\" from fuweid/v35_check_v2store_followup/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `go.etcd.io/etcd/client/v3` from 3.5.17 to 3.5.18 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.5.18/h2 pPlease check out a href=\" for a full list of changes. And make sure to read a href=\" guide/a before upgrading etcd (there may be breaking changes)./p pFor installation guides, please check out a href=\" and a href=\" etcd/a. Latest support status for common architectures and operating systems can be found at a href=\" platforms/a./p h6Linux/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1br / rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz/p p/tmp/etcd-download-test/etcd --versionbr / /tmp/etcd-download-test/etcdctl versionbr / /tmp/etcd-download-test/etcdutl version/p h1start a local etcd server/h1 p/tmp/etcd-download-test/etcd/p h1write,read to etcd/h1 p/tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo barbr / /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foobr / /code/pre/p h6macOS (Darwin)/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp &amp;&amp; rm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / mv /tmp/etcd-${ETCD_VER}-darwin-amd64/ /tmp/etcd-download-test &amp;&amp; rm -rf mv /tmp/etcd-${ETCD_VER}-darwin-amd64br / &lt;/tr&gt;&lt;/table&gt;br / /code/pre/p /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" version: bump up to 3.5.18/li lia href=\" Merge pull request a href=\" from ahrtr/race-20250117_3.5/li lia href=\" Ensure all goroutines created by StartEtcd to exit before closing the errc/li lia href=\" Merge pull request a href=\" from fuweid/35-fix-19179/li lia href=\" mvcc: restore tombstone index if it's first revision/li lia href=\" Merge pull request a href=\" from ivanvc/release-3.5-bump-go-to-1.22.11/li lia href=\" Bump go toolchain to 1.22.11/li lia href=\" Merge pull request a href=\" from joshuazh-x/fix-embed-close-deadlock-3.5/li lia href=\" Avoid deadlock in etcd.Close when stopping during bootstrapping/li lia href=\" Merge pull request a href=\" from fuweid/v35_check_v2store_followup/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `go.etcd.io/etcd/server/v3` from 3.5.17 to 3.5.18 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.5.18/h2 pPlease check out a href=\" for a full list of changes. And make sure to read a href=\" guide/a before upgrading etcd (there may be breaking changes)./p pFor installation guides, please check out a href=\" and a href=\" etcd/a. Latest support status for common architectures and operating systems can be found at a href=\" platforms/a./p h6Linux/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1br / rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz/p p/tmp/etcd-download-test/etcd --versionbr / /tmp/etcd-download-test/etcdctl versionbr / /tmp/etcd-download-test/etcdutl version/p h1start a local etcd server/h1 p/tmp/etcd-download-test/etcd/p h1write,read to etcd/h1 p/tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo barbr / /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foobr / /code/pre/p h6macOS (Darwin)/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp &amp;&amp; rm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / mv /tmp/etcd-${ETCD_VER}-darwin-amd64/ /tmp/etcd-download-test &amp;&amp; rm -rf mv /tmp/etcd-${ETCD_VER}-darwin-amd64br / &lt;/tr&gt;&lt;/table&gt;br / /code/pre/p /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" version: bump up to 3.5.18/li lia href=\" Merge pull request a href=\" from ahrtr/race-20250117_3.5/li lia href=\" Ensure all goroutines created by StartEtcd to exit before closing the errc/li lia href=\" Merge pull request a href=\" from fuweid/35-fix-19179/li lia href=\" mvcc: restore tombstone index if it's first revision/li lia href=\" Merge pull request a href=\" from ivanvc/release-3.5-bump-go-to-1.22.11/li lia href=\" Bump go toolchain to 1.22.11/li lia href=\" Merge pull request a href=\" from joshuazh-x/fix-embed-close-deadlock-3.5/li lia href=\" Avoid deadlock in etcd.Close when stopping during bootstrapping/li lia href=\" Merge pull request a href=\" from fuweid/v35_check_v2store_followup/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `go.etcd.io/etcd/tests/v3` from 3.5.17 to 3.5.18 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v3.5.18/h2 pPlease check out a href=\" for a full list of changes. And make sure to read a href=\" guide/a before upgrading etcd (there may be breaking changes)./p pFor installation guides, please check out a href=\" and a href=\" etcd/a. Latest support status for common architectures and operating systems can be found at a href=\" platforms/a./p h6Linux/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz -o /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gzbr / tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /tmp/etcd-download-test --strip-components=1br / rm -f /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz/p p/tmp/etcd-download-test/etcd --versionbr / /tmp/etcd-download-test/etcdctl versionbr / /tmp/etcd-download-test/etcdutl version/p h1start a local etcd server/h1 p/tmp/etcd-download-test/etcd/p h1write,read to etcd/h1 p/tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 put foo barbr / /tmp/etcd-download-test/etcdctl --endpoints=localhost:2379 get foobr / /code/pre/p h6macOS (Darwin)/h6 pre lang=\"sh\"codeETCD_VER=v3.5.18 h1choose either URL/h1 pGOOGLE_URL=a href=\" / GITHUB_URL=a href=\" / DOWNLOAD_URL=${GOOGLE_URL}/p prm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / rm -rf /tmp/etcd-download-test &amp;&amp; mkdir -p /tmp/etcd-download-test/p pcurl -L ${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-darwin-amd64.zip -o /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / unzip /tmp/etcd-${ETCD_VER}-darwin-amd64.zip -d /tmp &amp;&amp; rm -f /tmp/etcd-${ETCD_VER}-darwin-amd64.zipbr / mv /tmp/etcd-${ETCD_VER}-darwin-amd64/ /tmp/etcd-download-test &amp;&amp; rm -rf mv /tmp/etcd-${ETCD_VER}-darwin-amd64br / &lt;/tr&gt;&lt;/table&gt;br / /code/pre/p /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" version: bump up to 3.5.18/li lia href=\" Merge pull request a href=\" from ahrtr/race-20250117_3.5/li lia href=\" Ensure all goroutines created by StartEtcd to exit before closing the errc/li lia href=\" Merge pull request a href=\" from fuweid/35-fix-19179/li lia href=\" mvcc: restore tombstone index if it's first revision/li lia href=\" Merge pull request a href=\" from ivanvc/release-3.5-bump-go-to-1.22.11/li lia href=\" Bump go toolchain to 1.22.11/li lia href=\" Merge pull request a href=\" from joshuazh-x/fix-embed-close-deadlock-3.5/li lia href=\" Avoid deadlock in etcd.Close when stopping during bootstrapping/li lia href=\" Merge pull request a href=\" from fuweid/v35_check_v2store_followup/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `kubevirt.io/containerized-data-importer-api` from 1.61.0 to 1.61.1 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v1.61.1/h2 pThis release follows v1.61.0 and consists of 9 changes, contributed by 2 people, leading to 164 files changed, 13499 insertions(+), 2900 deletions(-)./p pThe source code and selected binaries are available for download at: a href=\" pPre-built CDI containers are published on Quay.io and can be viewed at: a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" h2Notable changes/h2 pChangelog: a href=\" h2Contributors/h2 p2 people contributed to this release:/p precode 7 kubevirt-bot &lt;kubevirtbot@redhat.com&gt; 2 Alex Kalenyuk &lt;akalenyu@redhat.com&gt; /code/pre h2Additional Resources/h2 ul liMailing list: a href=\" lia href=\" to contribute/a/li lia href=\" /ul /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote pv1.61.0 Enhancement: Add nbdkit command line parameters to improve reliability of multi-stage VDDK imports Enhancement: enable cross compile tools for s390x for CDI builder BugFix: Fix PVC deletion logic in CDI populators Enhancement: enable s390x native build BugFix: Bump tar rpm to fix concurrent host-assisted clone tar failure on file change during read BugFix: Increased size of scratch space to take fs overhead into account Enhancement: Handle desired storage class changes automatically in cron controller by deleting old storage class sources Cleanup: Deprecating ObjectTransfer feature Enhancement: provide s390x support for functional tests Enhancement: Add s390x nightly build automation BugFix: Handle PunchHole/AppendZeroWithTruncate failures Enhancement: Suppress alerting for static provisioning Cleanup: Document device_ownership_from_security_context=true for containerd v2 BugFix: Warm imports to filesystem volumes would fail size validation on subsequent snapshots Enhancement: Explicitly declaring containerPort in cdi-apiserver deployment BugFix: Reduce frequency of SCC management Events BugFix: Reduce frequency of Route management events BugFix: Fix uploading for block devices that exceed requested size Cleanup: Standardize go.mod to not specify patch version BugFix: nil pointer in handleSnapshot BugFix: config controller broken with ingresses Enhancement: Add RWX to AWS EBS io2 storage capabilities BugFix: VDDK Fix Incomplete transfer of change blocks leads to data corruption Cleanup: cdi-uploadserver: healthcheck and application use same port/p pv1.61.1 a href=\" /blockquote /details details summaryCommits/summary ul lia href=\" v1.61.1 release notes/li lia href=\" release-v1.61 CNV-52722( Pass through extra VDDK configuration options to i.../li lia href=\" bump golang.org/x/net to v0.33.0 (a href=\" lia href=\" Fix flaky DataImportCron volume snapshot test (a href=\" lia href=\" Move size detection pod deletion to cleanup (a href=\" (a href=\" lia href=\" release-v1.61 Fix PVC webhook rendering segfault (a href=\" lia href=\" CWE-79 small tightening up (a href=\" lia href=\" Watch for StorageProfile updates to reconcile DVs (a href=\" lia href=\" add IBM Block Storage CSI driver support for RWX (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions /details"
  },
  {
    "id": "5508",
    "type": "pullRequest",
    "title": "MON-4129: adjust Prometheus classic histograms 'le' related selectors in relabel config to accommodate the update to Prometheus v3",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4829",
    "type": "pullRequest",
    "title": "OCPBUGS-49611: Konnectivity: add agent readiness",
    "body": "What this PR does / why we need it: This PR adds readiness probe to Konnectivity agent on hosted user plane. It is helpful to indicate pod readiness when the connection to Konnectivity server drops. In this case pod goes to \"0/1 Running\" status. implementation: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5514",
    "type": "pullRequest",
    "title": "NO-JIRA: cpov2: switch to resource.k8s.io/v1beta1 after kube 1.32 rebase",
    "body": "Forgot to update CPOv2 code in"
  },
  {
    "id": "5395",
    "type": "pullRequest",
    "title": "HOSTEDCP-2226: Add ValidatingAdmissionPolicy for karpenter EC2NodeClass CRD",
    "body": "What this PR does / why we need it: - Add ValidatingAdmissionPolicy for karpenter EC2NodeClass CRD to prevent updates to managed fields - Relax CEL validations for EC2NodeClass CRD - Default subnetSelectorTerms and securityGroupSelectorTerms if not set Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5509",
    "type": "pullRequest",
    "title": "HOSTEDCP-2256: CPO Refactor Delete component and its resources when predicate changes to false",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5473",
    "type": "pullRequest",
    "title": "HOSTEDCP-2245: CPO Refactor Refactor cluster-node-tuning-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5498",
    "type": "pullRequest",
    "title": "NO-JIRA: add assignServicePrincipal check before assignign roles to WI",
    "body": "What this PR does / why we need it: We should check if the assignServicePrincipal option has been set before assigning service principal roles using az cli. This causes a dependency on AZ cli when executing this command which can cause issues in CI. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4825",
    "type": "pullRequest",
    "title": "HOSTEDCP-1706: feat: add a metric for cluster size override annotation",
    "body": "What this PR does / why we need it: Add a metric to track the rosa hosted clusters which have the `hypershift.openshift.io/cluster-size-override` annotation set. Which issue(s) this PR fixes: Fixes HOSTEDCP-1706( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5490",
    "type": "pullRequest",
    "title": "NO-JIRA: Add instructions for ccoctl and fix minor issues",
    "body": "What this PR does / why we need it: This PR: - adds more instructions and information on the ccoctl tool. It also fixes several minor issues with the instructions related to using the ccoctl here Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5495",
    "type": "pullRequest",
    "title": "OCPBUGS-48688: Add Tenant ID to Azure API & Remove Credentials from CPO",
    "body": "What this PR does / why we need it: This PR: - exposes a field for the tenant ID in the Azure API. This value was originally captured in the Credentials field of the Azure API, but that field will be removed in a future commit - updates the CLI and the HyperShift Operator (HO) to use Tenant ID directly from the HC Azure API spec rather than the previous Credentials secret. References to the Credentials secret, in the CLI and HO, were also removed in this commit - updates control plane operator (CPO) to use Tenant ID directly from the HC Azure API spec rather than the previous Credentials secret. References to the Credentials secret, CPO, were also removed in this commit Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5493",
    "type": "pullRequest",
    "title": "OCPBUGS-48519: fix overwriting PKI operator HCP conditions",
    "body": "The PKI operator is responsible for setting two conditions on the HostedControlPlane: `CertRotation_CustomerAdminKubeconfigSigner_Degraded` and `CertRotation_SREAdminKubeconfigSigner_Degraded`. There are two different controllers that each update one of these conditions. However, both controllers use the same `manager` in the `managedFields`. The kube-apiserver assumes that, for a particular `manager`, _all_ conditions that the manager owns will be included in any update. If the condition is not present, the kube-apiserver assumes the manager intent to be removal of the condition. This results in a situation where the two controllers are removing the others condition. This fixes the issue by using a unique `manager` name per controller so that the kube-apiserver doesn't remove the condition added by the other controller."
  },
  {
    "id": "5417",
    "type": "pullRequest",
    "title": "HOSTEDCP-2169: Add aro scheduler",
    "body": "What this PR does / why we need it: The reason for implementing this scheduler is to help Azure Red Hat OpenShift (ARO) scale to 500 nodes. With this scheduler, ARO can dynamically control the CPU and memory requests for all pods and the Kube API Server (KAS) GoMem limits based on the number of nodes a `HostedCluster` has. This capability is essential for efficiently scaling a `HostedCluster` to 500 nodes. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2169( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5487",
    "type": "pullRequest",
    "title": "OCPBUGS-48532: Fix IsProgressing condition in HostedClusters",
    "body": "What this PR does / why we need it: After 5168, the release image passed to the CVO is an image with a digest (which is needed for offline). Because this doesn't always match the release image specified in the HostedCluster.spec.release.image field, code that relies on comparing the image in CVO status with what's in the spec is now not matching. One effect is that the Progressing condition remains set to \"true\" even if a HostedCluster has completed provisioning. This PR makes the following changes in order to fix it: - Adds code to the HyperShift operator to compare either the image in spec as is or converted to a digest with the image reported by the CVO in status. - Removes the call to obtain the release image for a specific architecture when obtaining an image with digest for the release. - Removes code that uses fmt.Sprintf to obtain an image ref string from a docker reference in favor of ref.String() except in places where we can't rely on ref.String() to give us the expected reference. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48532( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5496",
    "type": "pullRequest",
    "title": "NO-JIRA: switch to resource.k8s.io/v1beta1 after kube 1.32 rebase",
    "body": "This fix is required to unblock the payload jobs Replicates"
  },
  {
    "id": "5488",
    "type": "pullRequest",
    "title": "CNTRLPLANE-187: Remove MachineIdentityID from Azure HyperShift API",
    "body": "What this PR does / why we need it: This PR removes MachineIdentityID from the Azure HyperShift API, CLI, and NodePool controller. This field is not needed for ARO HCP. Which issue(s) this PR fixes: Fixes CNTRLPLANE-187( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5483",
    "type": "pullRequest",
    "title": "OCPBUGS-49370: openstack: update CAPI provider deployment spec",
    "body": "What this PR does / why we need it: `metrics-bind-addr` was deprecated and is currently removed, we should stop using it so we can bump the version of CAPI and CAPO."
  },
  {
    "id": "5489",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix a few bugs in Azure Upstream Docs",
    "body": "What this PR does / why we need it: This PR: - updates the `export USER_ACCOUNT_ID=$(az ad signed-in-user show | jq .id)` command to remove the quotes around the value that were previously being saved - updates the hyperlink for step 1 on the README.md file in the contrib directory. It was previously pointing to the wrong document Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5476",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references (main)",
    "body": "This PR contains the following updates: Change --- `46f4471` - `fa7aa88` quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta `7f1aa2f` - `4584647` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check-oci-ta `650330f` - `241f87f` quay.io/konflux-ci/tekton-catalog/task-init `8fb092d` - `90e1a4f` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `630e0bc` - `9b0138a` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `bd191e5` - `18241f9` quay.io/redhat-appstudio-tekton-catalog/task-buildah `88c4308` - `20a2cd5` quay.io/redhat-appstudio-tekton-catalog/task-clair-scan `785041d` - `9f8ec61` quay.io/redhat-appstudio-tekton-catalog/task-init `590d2b9` - `96a7cfd` quay.io/redhat-appstudio-tekton-catalog/task-sast-snyk-check --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5474",
    "type": "pullRequest",
    "title": "NO-JIRA: Update managed Azure/ARO HCP contrib and upstream documents",
    "body": "What this PR does / why we need it: This PR updates the managed Azure contrib scripts and documents now that all managed identity and workload identity for phase 2 has been merged. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5460",
    "type": "pullRequest",
    "title": "HOSTEDCP-2061: CPO Refactor Refactor cluster-network-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5446",
    "type": "pullRequest",
    "title": "OCPBUGS-48626: openstack: add DNS option to CLI",
    "body": "What this PR does / why we need it: Allow the users to provide the DNS nameservers that will be used when creating the OpenStack subnets. In some environments where DNS forwarding is not enabled, the subnet needs to have DNS nameservers for external resolution, otherwise the Nodepools won't be able to e.g. reach the ignition endpoint. This was already possible before by rendering the HostedCluster spec first but now it's possible to do it via the CLI for a better UX, since this option might be used by a majority of our customers."
  },
  {
    "id": "5472",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump google.golang.org/grpc from 1.69.4 to 1.70.0 in the misc-dependencies group",
    "body": "Bumps the misc-dependencies group with 1 update: google.golang.org/grpc( Updates `google.golang.org/grpc` from 1.69.4 to 1.70.0 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2Release 1.70.0/h2 h1Behavior Changes/h1 ul liclient: reject service configs containing an invalid retryPolicy in accordance with gRFCs a href=\" and a href=\" (a href=\" ul liNote that this is a potential breaking change for some users using an invalid configuration, but continuing to allow this behavior would violate our cross-language compatibility requirements./li /ul /li /ul h1New Features/h1 ul lixdsclient: fallback to a secondary management server (if specified in the bootstrap configuration) when the primary is down is enabled by default. Can be disabled by setting the environment variable codeGRPC_EXPERIMENTAL_XDS_FALLBACK/code to codefalse/code. (a href=\" liexperimental/credentials: experimental transport credentials are added which don't enforce ALPN. (a href=\" ul liThese credentials will be removed in an upcoming grpc-go release. Users must not rely on these credentials directly. Instead, they should either vendor a specific version of gRPC or copy the relevant credentials into their own codebase if absolutely necessary./li /ul /li /ul h1Bug Fixes/h1 ul lixds: fix a possible deadlock that happens when both the client application and the xDS management server (responsible for configuring the client) are using the xds:/// scheme in their target URIs. (a href=\" /ul h1Performance/h1 ul liserver: for unary requests, free raw request message data as soon as parsing is finished instead of waiting until the method handler returns. (a href=\" ul liSpecial Thanks: a href=\" /ul /li /ul h1Documentation/h1 ul liexamples/features/gracefulstop: add example to demonstrate server graceful stop. (a href=\" /ul /blockquote /details details summaryCommits/summary ul lia href=\" Change version to 1.70.0 (a href=\" lia href=\" Cherrypick a href=\" a href=\" a href=\" into 1.70.x (a href=\" lia href=\" experimental/credentials: Add credentials that don't enforce ALPN (a href=\" (a href=\" lia href=\" clustetresolver: Copy endpoints.Addresses slice from DNS updates to avoid dat.../li lia href=\" examples/features/csm_observability: use helloworld client and server instead.../li lia href=\" rbac: add method name to :path in headers (a href=\" lia href=\" cleanup: Fix usages of non-constant format strings (a href=\" lia href=\" cleanup: replace dial with newclient (a href=\" lia href=\" internal/resolver: introduce a new resolver to handle target URI and proxy ad.../li lia href=\" outlierdetection: Support health listener for ejection updates (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions /details"
  },
  {
    "id": "5467",
    "type": "pullRequest",
    "title": "NO-JIRA: Sync v2 code",
    "body": "What this PR does / why we need it: Sync v2 code that was not included in the following PRs: correct aro azureFile config and permissions propagate MANAGED_SERVICE env variable to HCCO v2 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5469",
    "type": "pullRequest",
    "title": "CNTRLPLANE-173: Assign known ARO roles for CP IDs for ARO HCP",
    "body": "What this PR does / why we need it: This PR assigns the appropriate roles for control plane identities where existing ARO HCP roles already exist for ARO HCP. Which issue(s) this PR fixes: Fixes CNTRLPLANE-173( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5471",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/Azure/azure-sdk-for-go/sdk/storage/azblob from 1.5.0 to 1.6.0 in the azure-github-dependencies group",
    "body": "Bumps the azure-github-dependencies group with 1 update: github.com/Azure/azure-sdk-for-go/sdk/storage/azblob( Updates `github.com/Azure/azure-sdk-for-go/sdk/storage/azblob` from 1.5.0 to 1.6.0 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2sdk/storage/azblob/v1.6.0/h2 h21.6.0 (2025-01-23)/h2 h3Features Added/h3 ul liUpgraded service version to code2025-01-05/code./li /ul h2sdk/storage/azblob/v1.6.0-beta.1/h2 h21.6.0-beta.1 (2025-01-13)/h2 h3Features Added/h3 ul liAdded permissions &amp; resourcetype parameters in listblob response./li liAdded BlobProperties field in BlobPrefix definition in listblob response./li /ul h3Bugs Fixed/h3 ul liFix FilterBlob API if Query contains a space character. Fixes a href=\" /ul /blockquote /details details summaryCommits/summary ul lia href=\" add sdk/resourcemanager/cosmos/armcosmos live test (a href=\" lia href=\" sdk/resourcemanager/network/armnetwork live test (a href=\" lia href=\" add sdk/resourcemanager/compute/armcompute live test (a href=\" lia href=\" add sdk/resourcemanager/eventhub/armeventhub live test (a href=\" lia href=\" add sdk/resourcemanager/postgresql/armpostgresql live test (a href=\" lia href=\" Release sdk/resourcemanager/paloaltonetworksngfw/armpanngfw/0.1.0 (a href=\" lia href=\" Fix azidentity troubleshooting guide link (a href=\" lia href=\" azeventhubs Fixing checkpoint store race condition (a href=\" lia href=\" pass along the artifact name so we can override it later (a href=\" lia href=\" Update changelog with latest features (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions /details"
  },
  {
    "id": "5462",
    "type": "pullRequest",
    "title": "PODAUTO-303: Re enable karpenter e2e",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: introduced e2e for karpenter reverted it because it was breaking periodics which run the HO without --tech-preview-no-upgrade This PR re-enable the test with a check to only run when CI sets TECH_PREVIEW_NO_UPGRADE=true and the Hypershift Operator is installed with --tech-preview-no-upgrade Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5455",
    "type": "pullRequest",
    "title": "OCPBUGS-48688: Remove client secret references now Workload Identity is supported",
    "body": "What this PR does / why we need it: This pull request removes client secret references for managed Azure since Workload identity is supported now. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48688( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5468",
    "type": "pullRequest",
    "title": "OCPBUGS-48794: Adds contributor role over VNET for Cloud Provider",
    "body": "What this PR does / why we need it: This PR adds the contributor role over VNET for Cloud Provider. Which issue(s) this PR fixes: Fixes OCPBUGS-48794( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5227",
    "type": "pullRequest",
    "title": "HOSTEDCP-2232: Destroy DHCP Server before PowerVS Cloud Instance deletion",
    "body": "What this PR does / why we need it: This PR adds functionality to delete DHCP server created in PowerVS Cloud Instance before the actual instance deletion. We need it, so that we do not rely on PowerVS Cloud Instance's recursive delete functionality to delete all other dependent resources. Checklist - Subject and description added to both, commit and PR. - This PR was tested locally."
  },
  {
    "id": "5449",
    "type": "pullRequest",
    "title": "NO-JIRA: kubevirt Skip KubeVirtAdvancedMultinetTest for v4.14 and below",
    "body": "The multiple networks feature in the kubevirt platform has been introduced in 4.15, therefore we need to skip it for the e2e test running against v4.14 and below. Need it order for to pass CI. !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5176",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove OpenStack workaround for Ingress Floating IP",
    "body": "What this PR does / why we need it: Remove some technical debt around the Ingress Floating IP reconcile for the OpenStack platform."
  },
  {
    "id": "5461",
    "type": "pullRequest",
    "title": "OCPBUGS-48758: Revert 5404 \"PODAUTO-303: Add the most basic e2e for autoNode via Karpenter\"",
    "body": "Reverts 5404 ; tracked by Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Looks to be failing CI payloads, opening revert to test To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-job periodic-ci-openshift-release-master-ci-4.18-upgrade-from-stable-4.17-e2e-aws-ovn-upgrade ``` CC: @enxebre div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "5418",
    "type": "pullRequest",
    "title": "HOSTEDCP-2176: Enable unused & ineffassign linters in golangci-lint",
    "body": "What this PR does / why we need it: This PR: - This commit enables unused and ineffassign in golangci-lint, which checks Go code for unused constants, variables, functions and types and ineffectual assignments respectively. - Fixes the errrors found by those linters. Which issue(s) this PR fixes: Fixes HOSTEDCP-2176( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5453",
    "type": "pullRequest",
    "title": "OCPBUGS-48708: correct aro azureFile config and permissions",
    "body": "What this PR does / why we need it: - Correct ARO file csi driver cloud config and permissions. Which issue(s) this PR fixes Fixes OCPBUGS-48708( Test record(Manually build the control plane operator image and replcaed in a live cluster verify it works) ```console 79 pass, 13 skip (46m1s) ```"
  },
  {
    "id": "5436",
    "type": "pullRequest",
    "title": "NO-JIRA: add command for retrieving user account id for AKS dev env s...",
    "body": "...etup !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5404",
    "type": "pullRequest",
    "title": "PODAUTO-303: Add the most basic e2e for autoNode via Karpenter",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: The PR include the changes to get the test green: - Drop ineffective readiness probe for karpenter-operator - Relax restart pod validation for karpenter - Add Deployment resources - Add discovery tags to public network and set associatePublicIPAddress in ec2NodeClass when onlyPublic is set in CI - Change the karpenter stub NodePool subnet to use filter instead of id. Otherwise the private link endpoint fails to be created in the publicAndPrivate topology. - Fix clusterID aws tag to avoid multiple karpenter instances to conflict - Ensure karpenter role deletion so it's not leaked after CI runs Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes /hold needs Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5450",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump the misc-dependencies group with 8 updates",
    "body": "What this PR does / why we need it: This PR incorporates and fixes the `make verify` and KubeVirt bump issues resulting from this dependabot PR. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5361",
    "type": "pullRequest",
    "title": "OCPBUGS-48688: Implement Workload Identity in Azure for Data Plane Components Part 4",
    "body": "What this PR does / why we need it: This PR is part 4 of implementing workload identity for data plane components in managed Azure. Specifically this PR only includes changes to the CPO. The PR for part 3 is - Which issue(s) this PR fixes: Fixes HOSTEDCP-1542( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5447",
    "type": "pullRequest",
    "title": "HOSTEDCP-2062: CPO Refactor Refactor kubevirt csi driver",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5440",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/Azure/azure-sdk-for-go/sdk/azidentity",
    "body": "What this PR does / why we need it: Bumps the azure-github-dependencies group with 1 update: github.com/Azure/azure-sdk-for-go/sdk/azidentity( Updates `github.com/Azure/azure-sdk-for-go/sdk/azidentity` from 1.8.0 to 1.8.1 - Release notes( - Changelog( - Commits( --- updated-dependencies: - dependency-name: github.com/Azure/azure-sdk-for-go/sdk/azidentity dependency-type: direct:production update-type: version-update:semver-patch dependency-group: azure-github-dependencies ... Signed-off-by: dependabotbot support@github.com Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4999",
    "type": "pullRequest",
    "title": "HOSTEDCP-1971: HyperShift operator upgrade test for rollout validation",
    "body": "What this PR does / why we need it: This PR adds an upgrade test to validate that a HO upgrade won't cause any unnecessary node rollout. 1. The setup stage creates a HostedCluster and installs an initial HO image. 2. The test stage upgrades the HyprShift Operator to the version under test and validates that the upgrade did not cause a node rollout. Which issue(s) this PR fixes : Fixes HOSTEDCP-1971( How to test : 1. Build the e2e binary ```shell make e2e ``` 2. With your kubeconfig pointing to a fresh cluster run the upgrade-test stage ```shell ./bin/test-e2e -test.run ^TestUpgradeHyperShift$ -test.v -test.timeout 0 \\ --upgrade.run-tests \\ --e2e.hypershift-operator-initial-image \"quay.io/hypershift/hypershift-operator:initial\" --e2e.aws-credentials-file \"${AWS_CREDS}\" \\ --e2e.pull-secret-file \"${PULL_SECRET}\" \\ --e2e.aws-region \"${REGION}\" \\ --e2e.availability-zones \"${REGION}a,${REGION}b,${REGION}c\" \\ --e2e.aws-oidc-s3-bucket-name \"${BUCKET_NAME}\" \\ --e2e.base-domain \"${BASE_DOMAIN}\" \\ --e2e.aws-oidc-s3-credentials ${AWS_CREDS}\\ --e2e.external-dns-credentials ${AWS_CREDS}\\ --e2e.aws-private-credentials-file ${AWS_CREDS}\\ ``` Here's a successful upgrade test run !asciicast( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5423",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Konflux references",
    "body": "This PR contains the following updates: Change --- `2c2d88c` - `46f4471` quay.io/konflux-ci/tekton-catalog/task-build-image-index `11b9ce2` - `b1cdafd` quay.io/konflux-ci/tekton-catalog/task-clair-scan `c12e7a7` - `525ad60` quay.io/konflux-ci/tekton-catalog/task-init `994f816` - `8fb092d` quay.io/konflux-ci/tekton-catalog/task-push-dockerfile-oci-ta `fde1e55` - `87b966c` quay.io/konflux-ci/tekton-catalog/task-sast-shell-check-oci-ta `af93b35` - `694badc` quay.io/konflux-ci/tekton-catalog/task-source-build-oci-ta `35e81a2` - `07df524` quay.io/redhat-appstudio-tekton-catalog/task-buildah `5512aeb` - `88c4308` quay.io/redhat-appstudio-tekton-catalog/task-clair-scan `ad2c646` - `8b6f187` quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies `dc6c765` - `665524d` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5422",
    "type": "pullRequest",
    "title": "Revert \"Revert \"CNTRLPLANE-26: Disable building HO for s390x platform on PR\"\"",
    "body": "Reverts openshift/hypershift5406. s390x builds are failing a lot."
  },
  {
    "id": "5403",
    "type": "pullRequest",
    "title": "OCPBUGS-48510: Allow ARM64 arch deployment on None platform type",
    "body": "What this PR does / why we need it: This PR allows the NodePool API to set ARM64 arch for deployments with None platform type. Which issue(s) this PR fixes (optional, use fixes issue_number(, fixes issue_number, ...) format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-48510("
  },
  {
    "id": "5411",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix dev docs for managed azure",
    "body": "Fix managed azure docs for development"
  },
  {
    "id": "5410",
    "type": "pullRequest",
    "title": "NO-JIRA: Drop openstack create rejection validation",
    "body": "This is dropped to let e2e succeed with the tech-preview-no-upgrade flag enabled !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4587",
    "type": "pullRequest",
    "title": "HOSTEDCP-1542: Implement Workload Identity in Azure for Data Plane Components Part 3",
    "body": "What this PR does / why we need it: This PR is part 3 of implementing workload identity for Azure HCP for data plane components. Specifically this PR only includes changes to the HO & docs. The PR for part 4 is - Which issue(s) this PR fixes: Fixes HOSTEDCP-1542( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5421",
    "type": "pullRequest",
    "title": "NO-JIRA: Add GOWORK=off to clients in Makefile",
    "body": "What this PR does / why we need it: This commit adds the GOWORK=off to the `clients` in the Makefile. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5420",
    "type": "pullRequest",
    "title": "OCPBUGS-45511: Compare contents of user-ca-bundle-config.yaml to the correct configmap",
    "body": "What this PR does / why we need it: PR 4331 added a check in the local ignition provider to validate that the bundle in the machine-config-server configmap under user-ca-bundle-config.yaml matched the bundle in the control plane namespace. However, the comparison was using the wrong configmap. The source of user-ca-bundle-config.yaml is trusted-ca-bundle-managed and not user-ca-bundle. This fix keeps the verification of the hash against user-ca-bundle since that hash is generated by the nodepool controller. However, when comparing the contents of the mcs configmap, it switches to the trusted-ca-bundle-managed configmap, since both should contain the aggregate of .spec.additionalTrustBundle and .spec.configuration.proxy.trustedCA. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-45511( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5412",
    "type": "pullRequest",
    "title": "NO-JIRA: doc/openstack: improve index layout",
    "body": "What this PR does / why we need it: Double-level bullet points don't seem the work fine with the current theme so we just adjust the layout a bit so it's prettier."
  },
  {
    "id": "5310",
    "type": "pullRequest",
    "title": "AUTH-482: set required-scc for openshift workloads",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: This PR pins `privileged` SCC for the `kubevirt-csi-node` in the `openshift-cluster-csi-drivers` namespace. Pinning ensures the workload explicitly uses the required SCC and prevents unintended security vulnerabilities. This is part of the ongoing task to ensure SCC pinning for all workloads in platform namespaces . Which issue(s) this PR fixes: Fixes AUTH-482( and sippy test( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5355",
    "type": "pullRequest",
    "title": "OCPBUGS-48506: Set ownership annotations for TLS artifacts",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: The secrets/configmaps used to store TLS artifacts should have the same annotations as self-hosted version to match TLS registry. See for more infotmation Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5419",
    "type": "pullRequest",
    "title": "NO-JIRA: add information about checking HO and e2e are from main on latest release branch",
    "body": "What this PR does / why we need it: add a part to the doc to remind us to check that the correct version of the HO and e2e are being used on the new release branch after a release cut Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5416",
    "type": "pullRequest",
    "title": "CNTRLPLANE-129: Move Microsoft Repo to CI dir in e2e dockerfile",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Moves the installed Microsoft repository to the dir expected by CI so that it can be found. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-129( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5406",
    "type": "pullRequest",
    "title": "Revert \"CNTRLPLANE-26: Disable building HO for s390x platform on PR\"",
    "body": "Reverts openshift/hypershift5314"
  },
  {
    "id": "5383",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references (main)",
    "body": "What this PR does / why we need it: This PR incorporates and fixes the migration steps that are needed. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4927",
    "type": "pullRequest",
    "title": "OCPBUGS-44960: (OSASINFRA-3643) bump k8s and dependencies",
    "body": "Changes in `go.mod`: Use `github.com/distribution/reference` Bump `github.com/openshift/api` and `client-go` to latest Bump `github.com/openshift/library-go` to latest Bump `github.com/prometheus/common` to `v0.55.0` Bump k8s and deps to `v0.31.1` Bump CAPI to `v1.8.5` Bump `sigs.k8s.io/controller-runtime` to `v0.19.0` Then code changes to adjust with the new versions. Also there is a commit to handle the `CloudLoadBalancerConfig` in AWS PlatformStatus: the default value is handled server-side, not client-side. Also, if featuregate is not enabled, the field doesn't exist in the CRD schema, so the content should be stripped server-side. So now check if the PlatformStatus is nil and if yes, we set it to `&configv1.PlatformStatus{}`. We do the same for `PlatformStatus.AWS` where if nil we set it to `&configv1.AWSPlatformStatus{}`. That way, we leave the controllers to reconcile that object."
  },
  {
    "id": "5400",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump github.com/go-git/go-git/v5 from 5.12.0 to 5.13.0 in /hack/tools",
    "body": "Bumps github.com/go-git/go-git/v5( from 5.12.0 to 5.13.0. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v5.13.0/h2 h2What's Changed/h2 ul libuild: bump github.com/go-git/go-git/v5 from 5.11.0 to 5.12.0 in /cli/go-git by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.22.0 to 0.23.0 by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.23.0 to 0.24.0 by a href=\" in a href=\" liProperly support skipping of non-mandatory extensions by a href=\" in a href=\" ligit: Refine some codes in test and non-test. by a href=\" in a href=\" liplumbing: protocol/packp, client-side filter capability support by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.22.0 to 0.23.0 in /cli/go-git by a href=\" in a href=\" liplumbing: fix sideband demux on flush by a href=\" in a href=\" listorage: dotgit, head reference usually comes first by a href=\" in a href=\" libuild: bump golang.org/x/text from 0.14.0 to 0.15.0 by a href=\" in a href=\" libuild: bump golang.org/x/crypto from 0.22.0 to 0.23.0 by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.24.0 to 0.25.0 by a href=\" in a href=\" ligit: Added an example for Repository.Branches by a href=\" in a href=\" ligit: worktree_commit, Modify checking empty commit. Fixes a href=\" by a href=\" in a href=\" liplumbing: transport/http, Wrap http errors to return reason. Fixes a href=\" by a href=\" in a href=\" libuild: bump golang.org/x/sys from 0.20.0 to 0.21.0 by a href=\" in a href=\" libuild: bump golang.org/x/text from 0.15.0 to 0.16.0 by a href=\" in a href=\" liBumps Go versions and go-billy by a href=\" in a href=\" li_examples: Fixed a dead link COMPATIBILITY.md by a href=\" in a href=\" libuild: bump github.com/jessevdk/go-flags from 1.5.0 to 1.6.1 in /cli/go-git by a href=\" in a href=\" libuild: bump github.com/elazarl/goproxy from v0.0.0-20230808193330-2592e75ae04a to v0.0.0-20240618083138-03be62527ccb by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.25.0 to 0.26.0 by a href=\" in a href=\" liAdd option approximating codegit clean -x/code flag. by a href=\" in a href=\" liRevert &quot;Add option approximating codegit clean -x/code flag.&quot; by a href=\" in a href=\" liFix reference updated concurrently error for the filesystem storer by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.26.0 to 0.27.0 by a href=\" in a href=\" liutils: merkletrie, Align error message with upstream by a href=\" in a href=\" liplumbing: transport/file, Change paths to absolute by a href=\" in a href=\" liplumbing: gitignore, Fix loading of ignored .gitignore files. by a href=\" in a href=\" libuild: bump github.com/skeema/knownhosts from 1.2.2 to 1.3.0 by a href=\" in a href=\" liplumbing: transport/ssh, Add support for SSH a href=\" by a href=\" in a href=\" libuild: run example tests during CI workflow by a href=\" in a href=\" listorage: filesystem, Fix object cache not working due to uninitialised objects being put into cache by a href=\" in a href=\" ligit: Fix fetching missing commits by a href=\" in a href=\" liplumbing: format/packfile, remove duplicate checks in findMatch() by a href=\" in a href=\" ligit: worktree, Fix file reported as codeUntracked/code while it is committed by a href=\" in a href=\" libuild: bump golang.org/x/sys from 0.22.0 to 0.23.0 by a href=\" in a href=\" liplumbing: filemode, Remove check for setting size of .git/index file by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.27.0 to 0.28.0 by a href=\" in a href=\" liFix some lint warning and increase stalebot to 180 days by a href=\" in a href=\" liadjust path extracted from file: url on Windows by a href=\" in a href=\" libuild: bump golang.org/x/sys from 0.23.0 to 0.24.0 by a href=\" in a href=\" liAdd RestoreStaged to Worktree that mimics the behaviour of git restore --staged !-- raw HTML omitted --... by a href=\" in a href=\" liplumbing: signature, support the same x509 signature formats as git by a href=\" in a href=\" lifix: allow discovery of non bare repos in fsLoader by a href=\" in a href=\" libuild: bump golang.org/x/sys from 0.24.0 to 0.25.0 by a href=\" in a href=\" libuild: bump golang.org/x/text from 0.17.0 to 0.18.0 by a href=\" in a href=\" libuild: bump golang.org/x/net from 0.28.0 to 0.29.0 by a href=\" in a href=\" /ul !-- raw HTML omitted -- /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" Merge pull request a href=\" from BeChris/issue680/li lia href=\" Merge pull request a href=\" from go-git/dependabot/go_modules/github.com/elazarl.../li lia href=\" build: bump github.com/elazarl/goproxy/li lia href=\" git: worktree_commit, sanitize author and commiter name and email before crea.../li lia href=\" Merge pull request a href=\" from go-git/dependabot/github_actions/github/codeql-.../li lia href=\" build: bump github/codeql-action from 3.27.9 to 3.28.0/li lia href=\" Merge pull request a href=\" from BeChris/accept_uppercase_hexa_in_pktline_length/li lia href=\" plumbing: Fix invalid reference name error while cloning branches containing .../li lia href=\" plumbing: format/pktline, accept upercase hexadecimal value as pktline length.../li lia href=\" Merge pull request a href=\" from go-git/dependabot/go_modules/golang-org-232a611e2d/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "5399",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump golang.org/x/net from 0.31.0 to 0.33.0 in /hack/tools",
    "body": "Bumps golang.org/x/net( from 0.31.0 to 0.33.0. details summaryCommits/summary ul lia href=\" go.mod: update golang.org/x dependencies/li lia href=\" html: use strings.EqualFold instead of lowering ourselves/li lia href=\" html: avoid endless loop on error token/li lia href=\" route: remove unused sizeof consts/li lia href=\" quic: clean up crypto streams when dropping packet protection keys/li lia href=\" quic: handle ACK frame in packet which drops number space/li lia href=\" Revert &quot;route: change from syscall to x/sys/unix&quot;/li lia href=\" Revert &quot;route: remove unused sizeof consts on freebsd&quot;/li lia href=\" go.mod: update golang.org/x dependencies/li lia href=\" route: remove unused sizeof consts on freebsd/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "5234",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: move pre-removal metrics validation out teardown path",
    "body": "Currently, failures in e2e test cluster infra creation generate a red herring error on `Teardown/ValidateMetricsAreExposed` ``` util.go:1453: Expected results for metric \"hypershift_cluster_silence_alerts\", found none util.go:1466: Failed to validate all metrics --- FAIL: TestCreateCluster/Teardown/ValidateMetricsAreExposed (300.06s) ``` Examples: attempted to fix this but didn't work but `t` in this context is the `Teardown` subtest, which hasn't failed, not the main test, which has failed. This PR moves the `ValidateMetricsAreExposed` check into the normal `EnsureHostedCluster` assertion path. There is a second check here that is done post teardown to make sure the metrics go away, but it is not problematic as it does probably failure checking before executing."
  },
  {
    "id": "5387",
    "type": "pullRequest",
    "title": "NO-JIRA: Add `make lint-fix` to pre-commit hook",
    "body": "What this PR does / why we need it: This commit adds `make lint-fix` to the pre-commit hook so imports are automatically sorted by gci before `make verify` is run in the pre-push hook. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5362",
    "type": "pullRequest",
    "title": "NO-JIRA: Enforce EnsurePSANotPrivileged for 4.19 and later",
    "body": "OpenShiftPodSecurityAdmission feature gate is not enabled by default in 4.18. We need to stop EnsurePSANotPrivileged in 4.18. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5396",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Create Azure HC document",
    "body": "What this PR does / why we need it: This commit just updates minor changes to the document. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5390",
    "type": "pullRequest",
    "title": "OCPBUGS-48216: use rm -f in all CVO cmds for idempotency",
    "body": "Most `rm` invocations already have `-f` but there a few that don't"
  },
  {
    "id": "5373",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump the golang-dependencies and github.com/Azure/azure-sdk-for-go/sdk/azcore",
    "body": "What this PR does / why we need it: This PR fixes up the following dependabot PRs: - - Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: N/A Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5312",
    "type": "pullRequest",
    "title": "HOSTEDCP-2233: CPO Refactor Refactor cluster-storage-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5392",
    "type": "pullRequest",
    "title": "NO-JIRA: docs/nit: fix missing spaces in md breaking rendered html",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Fix missing new line after list in markdown was breaking the rendered list in HTML. Page ref Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - X This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5391",
    "type": "pullRequest",
    "title": "OSASINFRA-3670: doc/openstack: etcd on LVM",
    "body": "What this PR does / why we need it: This PR documents how etcd can be put on LVM storage on the OpenStack platform."
  },
  {
    "id": "5165",
    "type": "pullRequest",
    "title": "NO-JIRA: cmd: dump: include ValidatingAdmissionPolicies in guest cluster dump",
    "body": "help investigation CI failure on `ValidatingAdmissionPolicy` assertions"
  },
  {
    "id": "5363",
    "type": "pullRequest",
    "title": "HOSTEDCP-1542: Introduce e2e flags for Workload Identity",
    "body": "What this PR does / why we need it: This PR contains two commits: - the first commit just sorts the e2e flags into platform specific fields and then alphabetically; this was done to make reading through and maintaining those flags easier - the second commit adds three flags needed for the Workload Identity; nothing is done with these flags just yet; that will be introduced in a follow on PR Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5389",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: don't check the KV's LiveMigratable condition for 4.17",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5353",
    "type": "pullRequest",
    "title": "OCPBUGS-48152: Fix mirror reference image name when ID is set",
    "body": "What this PR does / why we need it: When an imageName is set with the SHA256 and the ICSP/IDMS does not contain a Tag but an ID, the reference image name is using the original name instead of the mirror one. This PR fixes that situation. Which issue(s) this PR fixes : Fixes OCPBUGS-48152("
  },
  {
    "id": "5243",
    "type": "pullRequest",
    "title": "OSASINFRA-3681: improve the doc on OpenStack",
    "body": "What this PR does / why we need it: Improve the doc on OpenStack. /hold"
  },
  {
    "id": "5381",
    "type": "pullRequest",
    "title": "Revert \"OCPBUGS-45265: Use /livez/ping endpoint rather than /version\"",
    "body": "Reverts openshift/hypershift5211; tracked by JIRA ISSUE( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. The original breaks 4.19 nightly with the following test \"sig-authFeature:OpenShiftAuthorization The default cluster RBAC policy should have correct RBAC rules Suite:openshift/conformance/parallel\". Error message: ``` Run 0: Failed expand_less 4s Unknown macro: { fail github.com/openshift/origin/test/extended/authorization/rbac/groups_default_rules.go} Ginkgo exit error 1: exit with code 1} ``` To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of (job/X or job/X, test/Y tuple) to confirm the fix has corrected the problem: /payload-job periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance CC: @jonesbr17"
  },
  {
    "id": "5375",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: improve VAP test assertions",
    "body": "broke our e2e because our assertions in `EnsureValidatingAdmissionPoliciesExists` make the assumption that the only VAPs in the guest cluster are ones that we create. The PR refactors this check to: Not assume no other VAPs exist Not wait for VAPs to exist as this is called from `after()`, as in after the HostedCluster is fully deployed and the VAPs should already be created. It is a bug if they are not created by the time the check runs."
  },
  {
    "id": "5211",
    "type": "pullRequest",
    "title": "OCPBUGS-45265: Use /livez/ping endpoint rather than /version",
    "body": "What this PR does / why we need it: /livez/ping is faster and more reliable than /version. We should prefer /livez/ping when possible. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-45265( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5360",
    "type": "pullRequest",
    "title": "NO-JIRA: Reoncile karpenter aws creds before running the operator",
    "body": "This introduced a circular dependency for the operator and the aws creds !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5357",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump golang.org/x/crypto and golang.org/x/net",
    "body": "What this PR does / why we need it: Bump golang.org/x/crypto and golang.org/x/net to mitigate CVEs `CVE-2024-45337` and `CVE-2024-45338`. Although we don't use the vulnerable functions in our code. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5322",
    "type": "pullRequest",
    "title": "HOSTEDCP-2176: Introduce golangci-lint to make verify and only turn on gci linter",
    "body": "What this PR does / why we need it: This PR introduces golangci-lint to `make verify`. All default linters are turned off at the moment as their is an issue causing the proxy create cluster test to fail that still needs to be tracked down. See for further details. However, it would be nice to introduce golangci-lint now and turn on the gci linter so we can ensure all imports are sorted in all files in a consistent fashion. The ordering of the imports can be found in the _Enable GCI to sort imports_ commit. Which issue(s) this PR fixes: Initial PR for HOSTEDCP-2176( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5356",
    "type": "pullRequest",
    "title": "CNTRLPLANE-68: add flags for setting azure marketplace images in e2e",
    "body": "What this PR does / why we need it: This will allow us to set the azur marketplace settings on azure e2e which is what will be used in prod sector Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-68( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5349",
    "type": "pullRequest",
    "title": "HOSTEDCP-2234: Karpenter auto machine approver",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5341",
    "type": "pullRequest",
    "title": "OCPBUGS-47715: fix disconnected via CLI",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: In many disconnected environments, the execution environment may not have access to the payload image. Adjust the multi-arch check logic to skip the check when the payload is inaccessible. Which issue(s) this PR fixes Fixes OCPBUGS-47715( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes unit tests. - This change includes docs."
  },
  {
    "id": "5247",
    "type": "pullRequest",
    "title": "chore(deps): update dependency mkdocs-material to v9.5.49",
    "body": "This PR contains the following updates: Update --- | mkdocs-material( (changelog( ( mkdocs-material-9.5.49 Compare Source( - Adjusted title color in dark mode for all supported Mermaid.js diagrams - Fixed &8203;7803( Privacy plugin crashes on generated files - Fixed &8203;7781( Mermaid.js flow chart title not visible in dark mode `v9.5.48`( mkdocs-material-9.5.48 Compare Source( - Fixed &8203;7774( Disabling social cards doesn't work `v9.5.47`( mkdocs-material-9.5.47 Compare Source( - Fixed &8203;7750( Numeric tags break search - Fixed &8203;7748( Blog plugin breaks when using future drafts (9.5.45 regression) Thanks go to @&8203;perpil( for their contributions /details --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5286",
    "type": "pullRequest",
    "title": "NO-JIRA: Move oauth kubeadminsecret hash annotation logic from HCCO to CPO",
    "body": "What this PR does / why we need it: This avoids the conflict between HCCO and CPO reconciling the same deployment. All HCP components reconciliation should be done in the CPO Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5203",
    "type": "pullRequest",
    "title": "HOSTEDCP-2199: CPO Refactor Refactor cloud-credential-operator",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5325",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Konflux references (main)",
    "body": "This PR contains the following updates: Change --- `0767c11` - `2c2d88c` quay.io/konflux-ci/tekton-catalog/task-build-image-index `e0f1ec1` - `c2e4e49` quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta `60063fe` - `90dda59` quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies-oci-ta `08ef41d` - `98ccae6` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `26278e5` - `75e882b` quay.io/redhat-appstudio-tekton-catalog/task-build-image-manifest `01c8daa` - `2daae1f` quay.io/redhat-appstudio-tekton-catalog/task-buildah-remote `ac64e40` - `ad2c646` quay.io/redhat-appstudio-tekton-catalog/task-prefetch-dependencies --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5280",
    "type": "pullRequest",
    "title": "OCPBUGS-46354: fix(ho): Add all supported config schemas for NodePool NTO reconcile",
    "body": "What this PR does / why we need it: Fixes OCPBUGS-46354( Observed errors: ``` {\"level\":\"error\",\"ts\":\"2024-12-07T12:38:02Z\",\"msg\":\"Failed to reconcile NodePool\",\"controller\":\"nodepool\",\"controllerGroup\":\"hypershift.openshift.io\",\"controllerKind\":\"NodePool\",\"NodePool\":{\"name\":\"30734861-mynodepool\",\"namespace\":\"master\"},\"namespace\":\"master\",\"name\":\"30734861-mynodepool\",\"reconcileID\":\"a994e171-39d8-4ebe-b36d-d5bf3b32f91c\",\"error\":\"failed to reconcile NTO: failed to build mirror configs: configmap \\\"ignition-config-98-ibm-machineconfig-roks-30734861\\\" yaml document failed validation: error decoding config: no kind \\\"ImageDigestMirrorSet\\\" is registered for version \\\"config.openshift.io/v1\\\" in scheme \\\"/hypershift/hypershift-operator/controllers/nodepool/nto.go:415\\\"\",\"stacktrace\":\"github.com/openshift/hypershift/hypershift-operator/controllers/nodepool.(NodePoolReconciler).Reconcile \\t/hypershift/hypershift-operator/controllers/nodepool/nodepool_controller.go:205 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).Reconcile \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:114 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).reconcileHandler \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:311 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).processNextWorkItem \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:261 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).Start.func2.2 \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:222\"} {\"level\":\"debug\",\"ts\":\"2024-12-07T12:38:02Z\",\"logger\":\"events\",\"msg\":\"failed to reconcile NTO: failed to build mirror configs: configmap \\\"ignition-config-98-ibm-machineconfig-roks-30734861\\\" yaml document failed validation: error decoding config: no kind \\\"ImageDigestMirrorSet\\\" is registered for version \\\"config.openshift.io/v1\\\" in scheme \\\"/hypershift/hypershift-operator/controllers/nodepool/nto.go:415\\\"\",\"type\":\"Warning\",\"object\":{\"kind\":\"NodePool\",\"namespace\":\"master\",\"name\":\"30734861-mynodepool\",\"uid\":\"6890952e-ffe4-4396-8df4-2054dd939a20\",\"apiVersion\":\"hypershift.openshift.io/v1beta1\",\"resourceVersion\":\"422964745\"},\"reason\":\"ReconcileError\"} {\"level\":\"error\",\"ts\":\"2024-12-07T12:38:03Z\",\"msg\":\"Reconciler error\",\"controller\":\"nodepool\",\"controllerGroup\":\"hypershift.openshift.io\",\"controllerKind\":\"NodePool\",\"NodePool\":{\"name\":\"30734861-mynodepool\",\"namespace\":\"master\"},\"namespace\":\"master\",\"name\":\"30734861-mynodepool\",\"reconcileID\":\"a994e171-39d8-4ebe-b36d-d5bf3b32f91c\",\"error\":\"failed to reconcile NTO: failed to build mirror configs: configmap \\\"ignition-config-98-ibm-machineconfig-roks-30734861\\\" yaml document failed validation: error decoding config: no kind \\\"ImageDigestMirrorSet\\\" is registered for version \\\"config.openshift.io/v1\\\" in scheme \\\"/hypershift/hypershift-operator/controllers/nodepool/nto.go:415\\\"\",\"stacktrace\":\"sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).reconcileHandler \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:324 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).processNextWorkItem \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:261 sigs.k8s.io/controller-runtime/pkg/internal/controller.(Controller).Start.func2.2 \\t/hypershift/vendor/sigs.k8s.io/controller-runtime/pkg/internal/controller/controller.go:222\"} ``` Adding all API schemas based on: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-46354( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5323",
    "type": "pullRequest",
    "title": "NO-JIRA: Revert E2E test change which validates the CVO Image propagation",
    "body": "This is reverting a small change done in in order to fix the Upgrade tests on E2E. `hostedCluster.Status.Version` is mirrored up from the CVO and doesn't propagate immediately, so we need to verify the image we pass to `WaitForImageRollout` is present in the status before we check any other thing."
  },
  {
    "id": "5306",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix oauth-v2 and kcm-v2",
    "body": "What this PR does / why we need it: Follow-up of and Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5314",
    "type": "pullRequest",
    "title": "CNTRLPLANE-26: Disable building HO for s390x platform on PR",
    "body": "What this PR does / why we need it: Due to capacity issues in s390x environment, we're instructed to stop building images on PR for s390x Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5313",
    "type": "pullRequest",
    "title": "OCPBUGS-46529: kubevirt, Don't break on hostname NodePort.Address",
    "body": "What this PR does / why we need it: Using a hostname at NodePort service strategy is allowed by the api but the kubevirt provider breaks trying to check if it's an ipv4 or ipv6 to populate a network policy, this change skip that network policy because hostname would be an external address so no network policy is needed. Which issue(s) this PR fixes Fixes OCPBUGS-46529 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5316",
    "type": "pullRequest",
    "title": "CNTRLPLANE-25: Fix valid release image update issue",
    "body": "What this PR does / why we need it: This pull request: - fixes some codespelling errors - gets the latest HCP into memory before we update the Valid Release Image status Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-25( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5311",
    "type": "pullRequest",
    "title": "OCPBUGS-46483: Correctly Reconcile CSO CSI Secrets for Managed Azure Deployments",
    "body": "What this PR does / why we need it: This PR: - removes the double reconciliation of the CSO CSI secrets for managed azure deployments. Previous to the managed identity work merging into the HyperShift repo, we were reconciling the CSO CSI secrets with the Cloud Provider information. Once the managed identity work was added, the reconciliation with the Cloud Provider information wasn't removed. - adds the file path with the certificate name for the CSO CSI secret reconciliation for managed azure deployments. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes ssue(s) this PR fixes : Fixes OCPBUGS-46483( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5168",
    "type": "pullRequest",
    "title": "OCPBUGS-44655,OCPBUGS-43083: Fix IPv6 Disconnected HCP deployments",
    "body": "The issue with the MultiArch check is that it's recovering the manifests without passing through ImageMetadaProvider. I've added a new method to that which recovers the requested manifest and adds it to a new LRU Cache. To pass the ImageMetadataProvider to the RegistryClient, implies to fall in a import cycle issue, so a new interface was created called ManifestProvider, which implement the same GetManifest methods as the original does. Which issue(s) this PR fixes: Fixes: - OCPBUGS-44655( - HO issue determining the cluster payload arch does not checks the ICSP/IDMS - OCPBUGS-43083( - Pods cannot connect to apiserver in IPv6 disconnected hosted cluster Issues Solved - x Detecting MultiArch cannot get the right manifest (original GetManifests is not using the ImageMetadataProvider) - Implemented GetManifests method inside of ImageMetadataProvider - x ImageMetadataProvider does not understand the IDMS with only the domain (exact match works fine - Patched GetOverrideImages to understand IDMS namespace wildcards - x CVO is being override by a EnvVar and not getting the digest from OCP release - Implemented GetDigest method inside of ImageMetadataProvider - x CVO deployment\u2019s payload-script does not contain EOF - x IPv6 does not work, nodes cannot join the KAS - The `IsIPv4` function now accepts IPAddresses instead of only CIDRs."
  },
  {
    "id": "5279",
    "type": "pullRequest",
    "title": "HOSTEDCP-2220: Autonode karpenter",
    "body": "What this PR does / why we need it: This introduces support for an autoNode feature via karpenter: - It introduces a self contained karpenter-operator that is built within the HO image, so its lifecycle is fully decouple from the CPO/OCP version. - Let the HO reconcile the karpenter-operator within the controlplane namespace - The karpenter operator manages karpenter deployment management side and manages CRDs, default nodeclass, and clobber \"service owned\" fields guest side. - Introduces a --auto-node flag for the CLI which also causes a new arn generation. - Expose autoNode with karpenter behind a feature gate within the HC API Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5287",
    "type": "pullRequest",
    "title": "CNTRLPLANE-10: Konflux build CPO only when needed",
    "body": "What this PR does / why we need it: Changes that do not affect the Control Plane Operator should not trigger Konflux builds of the Control Plane Operator Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes CNTRLPLANE-10( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5304",
    "type": "pullRequest",
    "title": "NO-JIRA: Only use public IPs for 4.16 and above",
    "body": "What this PR does / why we need it: Currently CAPI is not allowing instances with Public IPs in 4.15 and earlier. For now, this change only enables public IPs for versions 4.16 and newer."
  },
  {
    "id": "5262",
    "type": "pullRequest",
    "title": "OSASINFRA-3685: openstack: tag CAPI resources with InfraID",
    "body": "What this PR does / why we need it: By default, OpenStack resources created by CAPI will be tagged (in the OpenStack way) with `openshiftClusterID=infraID`. `openshiftClusterID` is a well-known tag prefix in ShiftOnStack IPI. Additional tags can be added via the `HostedCluster.Spec.Platform.OpenStack.Tags` field when creating the HostedCluster with a given YAML file."
  },
  {
    "id": "5277",
    "type": "pullRequest",
    "title": "STOR-2136: Give delete permissions to snapshot-operator role",
    "body": "for removing webhook deployment To be used with but this PR can be merged first, so as not to break CI and stuff."
  },
  {
    "id": "5288",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references (main)",
    "body": "This PR contains the following updates: Change --- `33cc400` - `e0f1ec1` quay.io/konflux-ci/tekton-catalog/task-clair-scan `6e08cf6` - `d782218` quay.io/konflux-ci/tekton-catalog/task-coverity-availability-check-oci-ta `5a1a165` - `f8efb0b` quay.io/konflux-ci/tekton-catalog/task-rpms-signature-scan `e1049e5` - `ac6a35e` quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check-oci-ta `450dc27` - `38c5c41` quay.io/redhat-appstudio-tekton-catalog/task-buildah `93c54d3` - `27d07db` quay.io/redhat-appstudio-tekton-catalog/task-clair-scan `566ae0d` - `0ad98ff` quay.io/redhat-appstudio-tekton-catalog/task-init `4ada994` - `601cc91` quay.io/redhat-appstudio-tekton-catalog/task-summary --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test`. This PR has been generated by MintMaker( (powered by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ1cGRhdGVkSW5WZXIiOiIzOC4xMzIuMC1ycG0iLCJ0YXJnZXRCcmFuY2giOiJtYWluIiwibGFiZWxzIjpbXX0=--"
  },
  {
    "id": "5273",
    "type": "pullRequest",
    "title": "NO-JIRA: set diskStorageAccountType in aks e2e",
    "body": "What this PR does / why we need it: - setting diskSotrageAccountType so that if the validation on the nodepool for this changes it will be caught in the e2e Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5282",
    "type": "pullRequest",
    "title": "CNTRLPLANE-9: Red Hat Konflux update control-plane-operator-main",
    "body": "Pipelines as Code configuration proposal To start the PipelineRun, add a new comment with content `/ok-to-test` For more detailed information about running a PipelineRun, please refer to Pipelines as Code documentation Running the PipelineRun( To customize the proposed PipelineRuns after merge, please refer to Build Pipeline customization("
  },
  {
    "id": "5281",
    "type": "pullRequest",
    "title": "OCPBUGS-44314: Consistently look up and dial cloud API hostnames",
    "body": "What this PR does / why we need it: Before this commit, the konnectivity proxy dialer relied on the connectDirectlyToCloudAPIs boolean to determine whether it should connect directly to hostnames that matched the known cloud API suffixes. However, the resolver used by the dialer was always doing a control plane resolve of the hostnames with cloud API suffixes regardless of the connectDirectlyToCloudAPIs setting. This commit updates the behavior so that both dialer and resolver connect to cloud APIs in the same way. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44314( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5272",
    "type": "pullRequest",
    "title": "OCPBUGS-45595: Updating ose-hypershift-container image to be consistent with ART for 4.19",
    "body": "What this PR does / why we need it: This PR: - Manually fixes the rebase issue with - Updates the rest of our development Dockerfiles to use the same builder image Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5229",
    "type": "pullRequest",
    "title": "NO-JIRA: test/e2e: detect rapidly updating deployments"
  },
  {
    "id": "5222",
    "type": "pullRequest",
    "title": "OCPBUGS-45322: consolidating upgradingConfig/Version nodepool status update from CAPI controller to Conditions controller",
    "body": "What this PR does / why we need it: - we are consolidation some of the logic from the capi controller for setting the updaitngConfig and updatingVersions conditions to the conditions controller so it is only controlled by one controller and so that the logic for setting the status is consistent Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-45322( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5276",
    "type": "pullRequest",
    "title": "OCPBUGS-46342: Allow ARM64 arch deployment on Agent platform",
    "body": "What this PR does / why we need it: This PR allow the NodePool API to set ARM64 arch to Agent deployments. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-46342("
  },
  {
    "id": "5093",
    "type": "pullRequest",
    "title": "OCPBUGS-44438: Remove non-matching feature-gated CVO manifests from payload",
    "body": "What this PR does / why we need it: CVO manifests contain some feature-gated ones: - since at least 4.16, there are feature-gated `ClusterVersion` CRDs - `UpdateStatus` feature is delivered through DevPreview (now) and TechPreview (later) feature set We observed HyperShift CI jobs to fail when adding DevPreview-gated deployment manifests, which was unexpected. Investigating further, we discovered that HyperShift applies these manifests: cluster-version-operator-665c5789d5-8sr59-bootstrap.log( ``` error: error parsing /var/payload/manifests/0000_00_update-status-controller_03_deployment-DevPreviewNoUpgrade.yaml: error converting YAML to JSON: yaml: invalid map key: mapinterface {}interface {}{\".ReleaseImage\":interface {}(nil)} ``` But even without these added manifests, this happens for existing `ClusterVersion` CRD manifests present in the payload: ```console $ ls -1 manifests/clusterversionscrd.yaml manifests/0000_00_cluster-version-operator_01_clusterversions-CustomNoUpgrade.crd.yaml manifests/0000_00_cluster-version-operator_01_clusterversions-Default.crd.yaml manifests/0000_00_cluster-version-operator_01_clusterversions-DevPreviewNoUpgrade.crd.yaml manifests/0000_00_cluster-version-operator_01_clusterversions-TechPreviewNoUpgrade.crd.yaml ``` In a passing HyperShift CI job, the same log( shows that all four manifests are applied instead of just one: ``` customresourcedefinition.apiextensions.k8s.io/clusterversions.config.openshift.io created customresourcedefinition.apiextensions.k8s.io/clusterversions.config.openshift.io configured customresourcedefinition.apiextensions.k8s.io/clusterversions.config.openshift.io configured customresourcedefinition.apiextensions.k8s.io/clusterversions.config.openshift.io configured ``` This likely means that HyperShift hosted clusters end up using TechPreviewNoUpgrade `ClusterVersion` CRD? The proper fix is probably to wire through the `FeatureGate` with desired featureset through `CVOParams` but we would need a bit of selection logic so for now we can just remove entropy by deleting all feature-gated manifests instead of stumbling at them. Which issue(s) this PR fixes: OCPBUGS-44438 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5266",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix expected AWS HC conditions during e2e tests",
    "body": "What this PR does / why we need it: Fix expected AWS HC conditions during e2e tests Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5271",
    "type": "pullRequest",
    "title": "NO-JIRA: Allow multiple yaml def in a file for pre-commit",
    "body": "What this PR does / why we need it: This PR allows multiple yaml definitions to be specified within a single yaml file in the pre-commit check for yaml syntax. The check defaults to only one yaml definition per yaml file without this PR. Here's an example of what happens without this commit: ``` Check for merge conflict strings.........................................Passed Check yaml syntax........................................................Failed - hook id: check-yaml - exit code: 1 expected a single document in the stream in \"cmd/cluster/azure/testdata/zz_fixture_TestCreateCluster_create_with_a_ure_marketplace_image.yaml\", line 1, column 1 but found another document in \"cmd/cluster/azure/testdata/zz_fixture_TestCreateCluster_create_with_a_ure_marketplace_image.yaml\", line 8, column 1 ... ``` Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5269",
    "type": "pullRequest",
    "title": "HOSTEDCP-2203: Create e2e clusters with public IP instances only",
    "body": "What this PR does / why we need it: In order to save on nat gateway costs, this change will switch the default configuration of AWS hosted clusters created for e2e tests to use public IPs for ec2 instances and communicate through the internet gateway. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2203( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5270",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix spelling mistakes from PR 5265",
    "body": "What this PR does / why we need it: This commit fixes a couple of spelling mistakes introduced by PR 5265 Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5245",
    "type": "pullRequest",
    "title": "HOSTEDCP-2215: Expand pre-commit hooks to check on commit and push",
    "body": "What this PR does / why we need it: This PR expands upon our current pre-commit hooks: - all hooks will either run in either the pre-commit stage or pre-push stage - adds pre-push hooks to run `make verify` With pre-commit hooks installed, it looks something like this: ``` % pre-commit run Check for merge conflict strings.....................Passed Check yaml syntax....................................Passed Trim all whitespace from end of lines................Passed Verify codespell.....................................Passed Keep cpo-containerfiles-in-sync......................Passed % git push -f Run make verify..........................................................Passed Run make test............................................................Passed Enumerating objects: 25, done. ... ``` Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2215( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5242",
    "type": "pullRequest",
    "title": "HOSTEDCP-2203: Add support for public only AWS clusters",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Adds a new flag to create cluster aws and create infra aws that enables the creation of a HostedCluster that only uses public subnets for machines. Adds annotation to HostedCluster to indicate that we want machines to be created in a public subnet and get assigned a public IP. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2203( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5265",
    "type": "pullRequest",
    "title": "NO-JIRA: contrib: update route53 zone cleaning utility",
    "body": "This utility is now installed in the `hypershift` namespace of the root CI cluster and a CronJob (daily) to clean up CI related hosted zones and records from the `ci` and `service.ci` zones. The intent is to be non-disruptive to running tests by extracting the list of infraIDs in-use from the VPC list, then use that to find CI related zones/records that don't match an in-use infraID and remove them."
  },
  {
    "id": "5264",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix pre-commit hook issues",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5199",
    "type": "pullRequest",
    "title": "HOSTEDCP-2193: documenting --managed-identities-file flag",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5260",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Konflux References and Perform Migration",
    "body": "What this PR does / why we need it: This PR: - Cherry-picks the commit in - Performs the migration steps listed in the aforementioned PR Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5257",
    "type": "pullRequest",
    "title": "HOSTEDCP-2206: Improve Unit Test Runtime",
    "body": "What this PR does / why we need it: This PR: - reduces the unit test runtime by ~90% from my tests locally - reduces the CI runtime by ~72% - fixes some minor codespelling mistakes picked up by `pre-commit` hooks _\\calculated from 8 runs of this PR vs 8 successful runs of the unit tests without this PR_ --- The majority of the time reduction is due from taking count from 25 to 1. Setting this value to 1 ensures all the unit tests are always run. ``` % go help testflag ... -count n Run each test, benchmark, and fuzz seed n times (default 1). If -cpu is set, run n times for each GOMAXPROCS value. Examples are always run once. -count does not apply to fuzz tests matched by -fuzz. ``` This PR also sets the parallel flag on unit tests according to the number of cores on the machine running the test. More info on the parallel flag can be found here: ``` % go help testflag ... -parallel n Allow parallel execution of test functions that call t.Parallel, and fuzz targets that call t.Parallel when running the seed corpus. The value of this flag is the maximum number of tests to run simultaneously. While fuzzing, the value of this flag is the maximum number of subprocesses that may call the fuzz function simultaneously, regardless of whether T.Parallel is called. By default, -parallel is set to the value of GOMAXPROCS. Setting -parallel to values higher than GOMAXPROCS may cause degraded performance due to CPU contention, especially when fuzzing. Note that -parallel only applies within a single test binary. The 'go test' command may run tests for different packages in parallel as well, according to the setting of the -p flag (see 'go help build'). ``` --- Which issue(s) this PR fixes: Fixes HOSTEDCP-2206( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5220",
    "type": "pullRequest",
    "title": "OCPBUGS-42320: Prevent IgnitionServer from flooding the API server with patch requests",
    "body": "This patch addresses the issue of excessive patch attempts in a short period, which could overwhelm the KAS in the control plane. A new safeguards have been implemented to prevent this scenario which involves a conditional check before executing patch commands that could potentially flood the API. Which issue(s) this PR fixes: Fixes OCPBUGS-42320("
  },
  {
    "id": "5240",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove SP creation/deletion in the HyperShift CLI",
    "body": "What this PR does / why we need it: This PR: - removes the service principal(SP) creation and deletion steps from the HyperShift CLI. The service principals needed to be created and passed in through a file prior to running any create cluster command through the CLI. We were running into Azure quota issues creating new sets of SPs for every test run in the e2es. - removes flags related to the Azure key vault. These flags are no longer needed since we are requiring a JSON file, with the service principle information, to be passed in during cluster creation. - removes any Azure key vault fields since those are populated through the JSON file containing the service principal information. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5258",
    "type": "pullRequest",
    "title": "NO-JIRA: Relax networking cel validation for IBMCloud",
    "body": "This is relaxed to prevent breaking existing clusters with conflicting input !-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5138",
    "type": "pullRequest",
    "title": "NO-JIRA: openstack/e2e: allow to change AZ name",
    "body": "What this PR does / why we need it: In some environments, we'll want to change the name of the availability zone where the nodepool AZ will be tested on. Let's allow that with this change."
  },
  {
    "id": "5166",
    "type": "pullRequest",
    "title": "OCPBUGS-42338: Update KCM node monitor grace period",
    "body": "What this PR does / why we need it: Follow-up to The Kubernetes controller manager default for node monitor grace period is not sufficient to avoid node readiness flaps during brief connectivity problems. Change is restricted to IBMCloud only. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5221",
    "type": "pullRequest",
    "title": "NO-JIRA: e2e: followup cleanup for OpenStack Manila",
    "body": "What this PR does / why we need it: Follow-up cleanup."
  },
  {
    "id": "5195",
    "type": "pullRequest",
    "title": "HOSTEDCP-2181: bump base images in dockerfiles to 4.19",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4700",
    "type": "pullRequest",
    "title": "HOSTEDCP-1958: Integrate codespell in Makefile",
    "body": "What this PR does / why we need it: This PR: 1. Integrates codespell into the Makefile. Run `make verify-codespell` to run it. 2. Fixes all of our current spelling mistakes (~180 misspellings) `codespell` will make sure we correctly spell words in our code comments and in our upstream docs as long as we use `pre-commit`. Which issue(s) this PR fixes: Fixes HOSTEDCP-1958( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - x This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5241",
    "type": "pullRequest",
    "title": "OCPBUGS-44236: Use system trust bundle in CPO IDP https client",
    "body": "What this PR does / why we need it: Before this change, if a custom CA was configured for either the proxy or a particular IDP, the CPO client would get built with an empty bundle that only included the specified CAs but not the system trust bundle. This prevented connections to IDP endpoints with publicly trusted certificates. This changes the https client for IDP endpoins in the CPO to include the system trust bundle in the CAs it trusts. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44236( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5244",
    "type": "pullRequest",
    "title": "HOSTEDCP-2204: adding contributor role to nodepoolManagement SP",
    "body": "What this PR does / why we need it: - Adds contributor role to the role assignments that will be assigned to the nodepoolManagement SP Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2204( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5230",
    "type": "pullRequest",
    "title": "HOSTEDCP-2201: add DNS RG to contributor role assignments and add new flag for skipping role assignments",
    "body": "What this PR does / why we need it: - adds DNS RG to contributor role assignments - adds new flag for skipping role assignments Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2201( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5223",
    "type": "pullRequest",
    "title": "NO-JIRA: openstack/doc: add a requirement for Octavia",
    "body": "What this PR does / why we need it: LB has to be functional on the mgt cluster for kube-api."
  },
  {
    "id": "5239",
    "type": "pullRequest",
    "title": "NO-JIRA: updating ocp release task notes",
    "body": "What this PR does / why we need it: - It adds docs about what to do when a new release is cut. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5216",
    "type": "pullRequest",
    "title": "OCPBUGS-44967: Pass only the certificate name for CNO deployment",
    "body": "What this PR does / why we need it: Pass only the certificate name for the CNO deployment for managed Azure. CNO uses its own certificate path here, This is combined with the certificate name here, Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44967 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5202",
    "type": "pullRequest",
    "title": "OCPBUGS-45189, OCPBUGS-45182: e2e/openstack: adjustments for missing manila apps & pods",
    "body": "What this PR does / why we need it: In `EnsurePodsWithEmptyDirPVsHaveSafeToEvictAnnotations`, we need both `openstack-manila-csi` and `manila-csi-driver-controller`. See: for an example. We were missing `openstack-manila-csi`. In `EnsureSATokenNotMountedUnlessNecessary`, we need to add `csi-driver` and `csi-driver-nfs`. See: These 2 containers have a mount for `kube-api-access-`. Whether it's on a Standalone OCP cluster or in a HostedCluster, we have a race condition for Manila CSI with the NFS driver. The result is openstack-manila-csi-controllerplugin crashes but eventually stabilizes after a restart. We will solve the race condition. For now we need to disable crash detection of openstack-manila-csi-controllerplugin to unblock the presubmit jobs."
  },
  {
    "id": "5160",
    "type": "pullRequest",
    "title": "OCPBUGS-42434: Enable Managed Identity w/ Certificates in HyperShift Control Plane Components",
    "body": "What this PR does / why we need it: This PR enables components in the hosted control plane to authenticate with Azure Cloud through client certificate. These components include: 1. KMS 2. CPO 3. CAPZ 4. Cloud Provider Which issue(s) this PR fixes: Fixes OCPBUGS-42434( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5212",
    "type": "pullRequest",
    "title": "HOSTEDCP-2197: Fix TLS config documentation for disconnected",
    "body": "Which issue(s) this PR fixes: Fixes HOSTEDCP-2197("
  },
  {
    "id": "5217",
    "type": "pullRequest",
    "title": "NO-JIRA: cpov2: revert oauth reconciliation",
    "body": "This is causing a hot rollout of the `oauth-openshift` deployment leading to a very high flake rate in CI. Hot change is the addition/removal of the `hypershift.openshift.io/kubeadmin-secret-hash` annotation that is added by the HCCO and apparently stomped by the new reconciliation logic. xref"
  },
  {
    "id": "4904",
    "type": "pullRequest",
    "title": "OCPBUGS-44968: Reconcile SecretProvider for CSO on ARO HCP",
    "body": "What this PR does / why we need it: Reconcile the SecretProviderClass for the cluster storage operator (CSO) for ARO HCP deployments. The SecretProviderClass is used by the Secrets Store CSI driver to mount a certificate to a volume in the azure-disk-csi-controller and azure-file-csi-controller pod deployments. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44968( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5205",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references (main)",
    "body": "This PR contains the following updates: Change --- `28aaf87` - `8f3b23b` quay.io/redhat-appstudio-tekton-catalog/task-build-image-manifest `570831e` - `60c99bd` quay.io/redhat-appstudio-tekton-catalog/task-buildah-remote `cdf9884` - `566dfa9` | --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test` !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC41NS4yLXJwbSIsInVwZGF0ZWRJblZlciI6IjM4LjU1LjItcnBtIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6W119--"
  },
  {
    "id": "5206",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update dependency mkdocs-material to v9.5.46 (main)",
    "body": "This PR contains the following updates: Update --- | mkdocs-material( (changelog( ( mkdocs-material-9.5.46 Compare Source( - Added support for removing `preload` hints in privacy plugin - Fixed &8203;7734( Code blocks in h5 headlines are uppercased - Fixed &8203;7725( Blog plugin crashing on missing timezone (9.5.45 regression) Thanks go to @&8203;nejch( and @&8203;perpil( for their contributions `v9.5.45`( mkdocs-material-9.5.45 Compare Source( - Reduced size of Docker image through multi-stage build - Fixed &8203;7708( Blog plugin crashing on YAML dates with timezones Thanks go to @&8203;FrancoisCapon( and @&8203;perpil( for their contributions `v9.5.44`( mkdocs-material-9.5.44 Compare Source( - Fixed &8203;7672( Font CSS 404's when using privacy plugin (9.5.43 regression) Thanks go to @&8203;nejch( for their contributions. `v9.5.43`( mkdocs-material-9.5.43 Compare Source( - Added support for external images in SVGs in privacy plugin - Fixed &8203;7651( Privacy plugin doesn't handle quoted URLs in CSS Thanks go to @&8203;nejch( for their contributions `v9.5.42`( mkdocs-material-9.5.42 Compare Source( - Fixed &8203;7625( Invalid encoding of boolean attributes in privacy plugin - Fixed &8203;7624( Crash when disabling privacy plugin (9.5.41 regression) `v9.5.41`( mkdocs-material-9.5.41 Compare Source( - Fixed &8203;7619( Improved tooltip on logo disappears after instant navigation - Fixed &8203;7616( Race condition in built-in privacy plugin when inlining assets - Fixed &8203;7615( Comments and \"Was this page helpful?\" visible when printing `v9.5.40`( mkdocs-material-9.5.40 Compare Source( - Updated Latvian translations - Fixed &8203;7597( Social cards not using site name on home page Thanks go to @&8203;pekkaklarck( and @&8203;klejejs( for their contributions `v9.5.39`( mkdocs-material-9.5.39 Compare Source( - Fixed &8203;7226( not staying on page when using mike's canonical versioning Thanks go to @&8203;ilyagr( for their contributions `v9.5.38`( mkdocs-material-9.5.38 Compare Source( - Added Albanian translations Thanks go to @&8203;gerardkraja( for their contributions `v9.5.37`( mkdocs-material-9.5.37 Compare Source( - Added 4th and 5th level ordered list styles - Fixed &8203;7548( Tags have no spacing in search `v9.5.36`( mkdocs-material-9.5.36 Compare Source( - Fixed &8203;7544( Social cards incorrectly rendering HTML entities - Fixed &8203;7542( Improved support for setting custom list styles `v9.5.35`( mkdocs-material-9.5.35 Compare Source( - Fixed &8203;7498( Search not showing for Vietnamese language `v9.5.34`( mkdocs-material-9.5.34 Compare Source( - Updated Mermaid.js to version 11 (latest) Thanks go to @&8203;manselmi( for their contributions `v9.5.33`( mkdocs-material-9.5.33 Compare Source( - Fixed &8203;7453( Incorrect position of tooltip when sorting table `v9.5.32`( mkdocs-material-9.5.32 Compare Source( - Fixed RXSS vulnerability via deep link in search results - Added support for fetching latest release from GitLab Thanks go to @&8203;joaopalmeiro( for their contributions `v9.5.31`( mkdocs-material-9.5.31 Compare Source( - Fixed &8203;7405( DockerHub missing images 9.5.27 due to change in Alpine/APK `v9.5.30`( mkdocs-material-9.5.30 Compare Source( - Fixed &8203;7380( Navigation icons disappearing on hover in Safari - Fixed &8203;7367( Blog readtime computation includes SVG text content Thanks go to @&8203;sisp( for their contributions `v9.5.29`( mkdocs-material-9.5.29 Compare Source( - Updated Galician translations - Fixed &8203;7362( Annotations in figure captions rendering incorrectly Thanks go to @&8203;mmontes11( for their contributions /details --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- This PR has been generated by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC41NS4yLXJwbSIsInVwZGF0ZWRJblZlciI6IjM4LjU1LjItcnBtIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6W119--"
  },
  {
    "id": "5194",
    "type": "pullRequest",
    "title": "HOSTEDCP-2193: allow reuse of SP for e2e",
    "body": "What this PR does / why we need it: This or adds a flag that we can use while executing the e2e in ci. The addition of this flag will allow us to pass in precreated SP and certs along with keyvault information that will then be used to populate the control plane managed identities field in the HC. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5197",
    "type": "pullRequest",
    "title": "OCPBUGS-44380: Reconcile proxy CA bundle into hosted cluster",
    "body": "What this PR does / why we need it: The openshift controller manager operator syncs the CA bundle that was configured in the global proxy config into a configmap in the openshift-controller-manager namespace. This configmap is then used by the build controller to generate the CA that is mounted into builds for registry access. Because we don't run the controller manager operator in hypershift, this needs to be done by the HCCO. This code adds the reconciliation to the HCCO so that it puts the configmap in the right location. Ref: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44380( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5171",
    "type": "pullRequest",
    "title": "HOSTEDCP-2075: Dns cel e2e",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5192",
    "type": "pullRequest",
    "title": "OCPBUGS-44934: Fix error message when kas is route and hostname is not set",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5188",
    "type": "pullRequest",
    "title": "NO-JIRA: CPO V2 cleanup",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5172",
    "type": "pullRequest",
    "title": "HOSTEDCP-2075: Nodeport address cel",
    "body": "!-- - Please ensure code changes are split into a series of logically independent commits. - Every commit should have a subject/title (What) and a description/body (Why). - Every PR must have a description. - As an example you can use git commit -m\"What\" -m\"Why\" to achieve the requirements above. GitHub automatically recognises the commit description (-m\"Why\") in single commit PRs and adds it as the PR description. - Use the imperative mood( in the subject line for every commit. E.g `Mark infraID as required` instead of `This patch marks infraID as required` (This follows Git\u2019s own built-in conventions). See as an example. - See for more details. Delete this text before submitting the PR. -- What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4903",
    "type": "pullRequest",
    "title": "OCPBUGS-44967: Reconcile SecretProvider for CNCC on ARO HCP",
    "body": "What this PR does / why we need it: Reconcile the SecretProviderClass for the cluster network operator for ARO HCP deployments. The SecretProviderClass is used by the Secrets Store CSI driver to mount a certificate to a volume in the ingress pod deployment. Which issue(s) this PR fixes: Fixes OCPBUGS-44967( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5178",
    "type": "pullRequest",
    "title": "OCPBUGS-44910: openstack: don't reconcile image registry config during bootstrap",
    "body": "What this PR does / why we need it: For platforms where cluster-image-registry-operator (CIRO) needs a PVC to be created, bootstrap needs to happen in CIRO before the registry config is created. For now, this is the case for the OpenStack platform. If the object exist, we reconcile the registry config for other other fields as it should be fine since the PVC would exist at this point. This patch will maintain a list of platforms that require a PVC for CIRO (OpenStack only for now), check whether an image registry config already exist and if it does, skip reconcile to let CIRO bootstrap doing it and creating the needed PVC for CIRO."
  },
  {
    "id": "5191",
    "type": "pullRequest",
    "title": "OCPBUGS-44957: Use fleet manager configmaps to determine placeholder pod node antiaffinity",
    "body": "What this PR does / why we need it: Before this commit, the placeholder controller looked at nodes with hosted cluster labels to determine which fleet manager labels it should exclude for placeholders. However, in the case when a hostedcluster control plane is cleaned up, but the HostedCluster CR itself has not been deleted due to the controlplane namespace not getting cleaned up, there are no longer any nodes with the hostedcluster label, but the hostedcluster is still associated with a particular pair label. Placeholder pods are not prevented from landing on nodes with this same pair label. These nodes cannot be used to allocate to a new HostedCluster because they are still associated with previous HostedCluster. This change modifies the placeholder controller to use the pair association configmaps in the placeholder namespace to determine which pair labels to avoid. This makes it consistent with the scheduler which also looks at the same configmaps to determine whether a fleetmanager pair label is available to use for a new cluster. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44957( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - x This change includes unit tests."
  },
  {
    "id": "5179",
    "type": "pullRequest",
    "title": "OCPBUGS-44698: Create AWS clients on every reconcile instead of at initialization",
    "body": "What this PR does / why we need it: Moves client creation for the private link endpoint controller into the reconcile loop instead of when the reconciler is initially registered. This allows the controller to recover from initial issues assuming a shared vpc role. Adds additional error logging when AWS cloud API calls fail. Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes OCPBUGS-44698( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "4884",
    "type": "pullRequest",
    "title": "OCPBUGS-44964: Reconcile SecretProviderClass for Ingress on ARO HCP",
    "body": "What this PR does / why we need it: Reconcile the SecretProviderClass for the ingress operator for ARO HCP deployments. The SecretProviderClass is used by the Secrets Store CSI driver to mount a certificate to a volume in the ingress pod deployment. Which issue(s) this PR fixes: Fixes OCPBUGS-44964( Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5186",
    "type": "pullRequest",
    "title": "OCPBUGS-44929: e2e: fix manila CSI operator",
    "body": "What this PR does / why we need it: The name of the operator pod is `manila-csi-driver-operator`. This will fix e2e for `e2e-openstack`."
  },
  {
    "id": "5177",
    "type": "pullRequest",
    "title": "OCPBUGS-44326: Separate CPO containerfiles",
    "body": "What this PR does / why we need it: ART machinery checks that the FROM images are consistent in the release payload. Since the Control Plane Operator does go in the release payload, the work I did to have the FROM image references be parametrized for Konflux, trips it up. This PR separates the container files into: - Containerfile.control-plane: For Konflux, using RH catalog/brew - Dockerfile.control-plane: For ART/release-payload To help developers avoid the situation where one changes one but not the other, this commit adds a git pre-commit hook that enforces the only differences to be in the \"^FROM\" lines. In order to install this pre-commit hook, one can run: pipx install pre-commit pre-commit install Then, any new commit that the developer attempts will have to conform to the new hook (and a couple more I added like no whitespace at the end). Which issue(s) this PR fixes Fixes OCPBUGS-44326 Checklist - x Subject and description added to both, commit and PR. - x Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5146",
    "type": "pullRequest",
    "title": "HOSTEDCP-2181: update latest supported version for 4.19 branching",
    "body": "What this PR does / why we need it: update latest supported version to 4.19 for pre branching testing Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes HOSTEDCP-2181( Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "5180",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update konflux references (main)",
    "body": "This PR contains the following updates: Change --- `82da08d` - `570831e` quay.io/redhat-appstudio-tekton-catalog/task-buildah-remote --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR is behind base branch, or you tick the rebase/retry checkbox. \ud83d\udc7b Immortal: This PR will be recreated if closed unmerged. Get config help( if that's undesired. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- To execute skipped test pipelines write comment `/ok-to-test` !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC41NS4yLXJwbSIsInVwZGF0ZWRJblZlciI6IjM4LjU1LjItcnBtIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6W119--"
  },
  {
    "id": "5185",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update dependency mkdocs-mermaid2-plugin to v1.2.1 (main)",
    "body": "This PR contains the following updates: Update --- | mkdocs-mermaid2-plugin( ( Compare Source( - Added: a test framework with MkDocs-Test and pytest - Changed: migrated from `setup.py` to `pyproject.toml` /details --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- This PR has been generated by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC41NS4yLXJwbSIsInVwZGF0ZWRJblZlciI6IjM4LjU1LjItcnBtIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6W119--"
  },
  {
    "id": "5181",
    "type": "pullRequest",
    "title": "NO-JIRA: chore(deps): update dependency mkdocs to v1.6.1 (main)",
    "body": "This PR contains the following updates: Update --- | mkdocs( (changelog( ( Compare Source( Version 1.6.1 (Friday 30th August, 2024) Fixed - Fix build error when environment variable `SOURCE_DATE_EPOCH=0` is set. &8203;3795( - Fix build error when `mkdocs_theme.yml` config is empty. &8203;3700( - Support `python -W` and `PYTHONWARNINGS` instead of overriding the configuration. &8203;3809( - Support running with Docker under strict mode, by removing `0.0.0.0` dev server warning. &8203;3784( - Drop unnecessary `changefreq` from `sitemap.xml`. &8203;3629( - Fix JavaScript console error when closing menu dropdown. &8203;3774( - Fix JavaScript console error that occur on repeated clicks. &8203;3730( - Fix JavaScript console error that can occur on dropdown selections. &8203;3694( Added - Added translations for Dutch. &8203;3804( - Added and updated translations for Chinese (Simplified). &8203;3684( /details --- Configuration \ud83d\udcc5 Schedule: Branch creation - \"after 5am on saturday\" (UTC), Automerge - At any time (no schedule defined). \ud83d\udea6 Automerge: Disabled by config. Please merge this manually once you are satisfied. \u267b Rebasing: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox. \ud83d\udd15 Ignore: Close this PR and you won't be reminded about this update again. --- - !-- rebase-check --If you want to rebase/retry this PR, check this box --- This PR has been generated by Renovate Bot( !--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzOC41NS4yLXJwbSIsInVwZGF0ZWRJblZlciI6IjM4LjU1LjItcnBtIiwidGFyZ2V0QnJhbmNoIjoibWFpbiIsImxhYmVscyI6W119--"
  },
  {
    "id": "5170",
    "type": "pullRequest",
    "title": "HOSTEDCP-2187: CPO Refactor Refactor cluster-policy-controller",
    "body": "What this PR does / why we need it: Which issue(s) this PR fixes (optional, use `fixes issue_number(, fixes issue_number, ...)` format, where issue_number might be a GitHub issue, or a Jira story: Fixes Checklist - Subject and description added to both, commit and PR. - Relevant issues have been referenced. - This change includes docs. - This change includes unit tests."
  },
  {
    "id": "76",
    "type": "pullRequest",
    "title": "OCPCLOUD-2846: Merge (f326c83) into master"
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "OCPBUGS-45494: Updating ose-ibm-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ibm-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ibm-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "80",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Update bertinatto from OWNERS"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "OCPBUGS-53912: bump github.com/golang-jwt/jwt/v4 to v4.5.2"
  },
  {
    "id": "79",
    "type": "pullRequest",
    "title": "STOR-2249: Rebase to upstream 5.2.14 for OCP 4.19",
    "body": "Diff to upstream v5.2.14: Important changes between 5.2.8 (OCP 4.17) and 5.2.14 (OCP 4.19): - Previous releases are not compatible with updated deployment files associated with the current release due to the changes in csi sidecar livenessprobe securityContext changes. driver/blob/master/deploy/kubernetes/driver/kubernetes/manifests/node-server.yaml E.g. If using manifests from old release lets say v5.2.8 and wants to use the latest code, it is recommended to use the latest manifests - Added support for the cross account snapshot restore. - - - Full changelogs: @openshift/storage"
  },
  {
    "id": "78",
    "type": "pullRequest",
    "title": "OCPBUGS-45465: Updating ose-ibm-vpc-block-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ibm-vpc-block-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ibm-vpc-block-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "143",
    "type": "pullRequest",
    "title": "OCPBUGS-55038: IBM VPC set offlineExpansion to false in e2e test manifest",
    "body": "With this change in the test manifest, `./openshift-tests run openshift/csi` passes: ``` 55 pass, 219 skip (46m25s) ``` With these two offline expansion tests skipped: ``` skip k8s.io/kubernetes@v1.32.2/test/e2e/storage/testsuites/volume_expand.go:196: Driver \"vpc.block.csi.ibm.io\" does not support offline volume expansion - skipping Ginkgo exit error 3: exit with code 3 skipped: (2.2s) 2025-04-15T19:11:42 \"External Storage Driver: vpc.block.csi.ibm.io Testpattern: Dynamic PV (block volmode)(allowExpansion) volume-expand Verify if offline PVC expansion works\" ``` ``` skip k8s.io/kubernetes@v1.32.2/test/e2e/storage/testsuites/volume_expand.go:196: Driver \"vpc.block.csi.ibm.io\" does not support offline volume expansion - skipping Ginkgo exit error 3: exit with code 3 skipped: (2.7s) 2025-04-15T19:11:37 \"External Storage Driver: vpc.block.csi.ibm.io Testpattern: Dynamic PV (default fs)(allowExpansion) volume-expand Verify if offline PVC expansion works\" ``` /cherry-pick release-4.18 release-4.17 release-4.16 release-4.15 release-4.14 release-4.13 release-4.12 /cc @openshift/storage"
  },
  {
    "id": "142",
    "type": "pullRequest",
    "title": "OCPBUGS-54482: Bump library-go"
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps for 4.19",
    "body": "Bump all deps for 4.19 Notes: - remove missed replaces cc @openshift/storage"
  },
  {
    "id": "140",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Update bertinatto from OWNERS"
  },
  {
    "id": "137",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 Notes: - Updated calls for functions with new parameter clock cc @openshift/storage"
  },
  {
    "id": "136",
    "type": "pullRequest",
    "title": "OCPBUGS-47121: CVE-2024-45338: bump golang.org/x/net to v0.33.0"
  },
  {
    "id": "135",
    "type": "pullRequest",
    "title": "AUTH-482: set required-scc for openshift workloads",
    "body": "AUTH-482("
  },
  {
    "id": "134",
    "type": "pullRequest",
    "title": "OCPBUGS-45554: Updating ose-ibm-vpc-block-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ibm-vpc-block-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ibm-vpc-block-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "132",
    "type": "pullRequest",
    "title": "OCPBUGS-44978: bump openshift/api",
    "body": "/cc @openshift/storage"
  },
  {
    "id": "107",
    "type": "pullRequest",
    "title": "OCPCLOUD-2852: Merge (0c35eac) into main"
  },
  {
    "id": "106",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that will add make target for updating the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "OCPBUGS-50674: Fix for CVE-2024-45338 in golang.org/x/net/html in main",
    "body": "A flaw was found in `golang.org/x/net/html`. This flaw allows an attacker to craft input to the parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This issue can cause a denial of service. To address this issue, we have upgraded the library to version v0.33.0, which includes a fix for the vulnerability. Affected Library: `golang.org/x/net/html` Current Version: `v0.31.0` Fixed Version: `v0.33.0`"
  },
  {
    "id": "96",
    "type": "pullRequest",
    "title": "OCPBUGS-45691: Updating ose-ibmcloud-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ibmcloud-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ibmcloud-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "95",
    "type": "pullRequest",
    "title": "NO-JIRA: Merge (eed3ac7) into main"
  },
  {
    "id": "61",
    "type": "pullRequest",
    "title": "OCPBUGS-51864: IBMCloud: MAPI replacing unhealthy CP nodes",
    "body": "Change to reconciliation logic to verify master label is not present when reconciling a machine to ensure master machines are not deleted during this process."
  },
  {
    "id": "60",
    "type": "pullRequest",
    "title": "OCPCLOUD-2841: Update K8s to 1.32",
    "body": "Updates dependencies to use k8s 1.32. There were no breaking changes in this update."
  },
  {
    "id": "59",
    "type": "pullRequest",
    "title": "OCPBUGS-45696: Updating ose-ibmcloud-machine-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ibmcloud-machine-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ibmcloud-machine-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1081",
    "type": "pullRequest",
    "title": "CCXDEV-15083: Move the Insights runtime extractor feature to GA",
    "body": "Categories - X Feature Documentation !-- Are these changes reflected in documentation? -- TBD Breaking Changes No References"
  },
  {
    "id": "1079",
    "type": "pullRequest",
    "title": "CCXDEV-14944: remove the upgradeable condition",
    "body": "This PR removes the Upgradeable condition from the Insights Operator so that it does not block cluster-version operator updates. Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - X Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- None Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- None Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1070",
    "type": "pullRequest",
    "title": "CCXDEV-9905: Introduce a new config option for storing archives to persistent volume",
    "body": "!-- Short description of the PR. What does it do? -- This PR adds a new config option for user to specify PVC name where archives produced by on-demand gathering jobs will be stored. It also introduces a cleanup job that removes old archives from the persistent volume. Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - X Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- - `pkg/controller/periodic/job_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References"
  },
  {
    "id": "1080",
    "type": "pullRequest",
    "title": "NO-JIRA: add BaiyangZhou to OWNERS file",
    "body": "!-- Short description of the PR. What does it do? -- This PR adds BaiyangZhou to OWNERS file Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- None Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- None Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References"
  },
  {
    "id": "1076",
    "type": "pullRequest",
    "title": "NO-JIRA: refactor gather commands",
    "body": "!-- Short description of the PR. What does it do? -- This PR implements a new data enhancement to... Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- None Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1075",
    "type": "pullRequest",
    "title": "NO-JIRA: feat: add gatherer name validation to gendocs",
    "body": "This commit adds validation for gatherer names to validate that they follow the naming convention. !-- Short description of the PR. What does it do? -- This PR adds validation for gatherer names to validate that they follow the naming convention. Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- None Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? -- This is the PR that introduced the naming convention to openshift API for our CRDs (DataGather, InsightsDataGather)"
  },
  {
    "id": "1077",
    "type": "pullRequest",
    "title": "CCXDEV-14934: fix: allow running enabled functions from disabled gatherer",
    "body": "This PR ensures that when a gatherer is disabled, users can still explicitly enable specific functions within that gatherer. Categories !-- Select the categories that your PR better fits on -- - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- None Documentation !-- Are these changes reflected in documentation? -- None Unit Tests !-- If it includes new unit tests, list them down bellow -- - pkg/gather/gather_test.go Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog No Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1073",
    "type": "pullRequest",
    "title": "OCPBUGS-51109: Fix bad IPv6 address",
    "body": "Let the kube-rbac-proxy listens on `8443` (without specifying the IP address) In the insights-operator, connect to this port to go through the kube-rbac-proxy This fixes Categories - X Bugfix"
  },
  {
    "id": "1072",
    "type": "pullRequest",
    "title": "OCPBUGS-35196: update the duration validation pattern according to the OpenShift API",
    "body": "!-- Short description of the PR. What does it do? -- This updates the CRDs with the update validation pattern for the Go's duration values. It's based on the Categories !-- Select the categories that your PR better fits on -- - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - no new data Documentation !-- Are these changes reflected in documentation? -- - Unit Tests !-- If it includes new unit tests, list them down bellow -- - ` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "1066",
    "type": "pullRequest",
    "title": "CCXDEV-12875: Enable Insight Operator entitlements for multi arch clusters",
    "body": "!-- Short description of the PR. What does it do? -- This PR implements the gathering of architectures used by nodes and the retrieval of entitlement certificates for each architecture in use. These certificates are then stored in secrets. If only one architecture is present, the secret is named etc-pki-entitlement. If multiple architectures are present, secrets are created with names like etc-pki-entitlement-ARCH, where ARCH represents the specific architecture. Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - X Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive The archive won't change with this feature Documentation No documentation update Unit Tests - pkg/ocm/sca/architectures_gather_test.go - pkg/ocm/sca/sca_test.go Privacy Yes. There are no sensitive data in the newly collected information. Changelog No Breaking Changes Yes/No References"
  },
  {
    "id": "1071",
    "type": "pullRequest",
    "title": "CCXDEV-14824: Upgrade Golang to 1.23",
    "body": "!-- Short description of the PR. What does it do? -- Upgrade Golang version to 1.23.5 Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - `path/to/sample_data.json` Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- - `path/to/file_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "1067",
    "type": "pullRequest",
    "title": "OCPBUGS-48154: Add a liveness probe to the extractor container",
    "body": "The extractor container relies on critctl to collect container information If the crio.service is restarted on the worker nodes when the CA bundle has been updated by the proxy/cluster, the container would not be able to connect anymore on the restarted CRI-O service. Adding a liveness probe that check that crictl works as expected ensure that the container will be killed and restarted with the correct TLS settings to connect to the CRI-O service. This fixes Categories - X Bugfix Breaking Changes No References"
  },
  {
    "id": "1065",
    "type": "pullRequest",
    "title": "NO-JIRA: Add Ondrej user to OWNERS file",
    "body": "summary Adding Ondrej username to the OWNERS file"
  },
  {
    "id": "1055",
    "type": "pullRequest",
    "title": "OCPBUGS-44211: Ignore previous status when disabling alerts",
    "body": "This is bug fix for OCPBUGS-44211( Ignoring the previous status, that can be unknown when starting the Insights Operator, as creating or removing a `PrometheusRule` is an idempotent operation. The described problem is caused because when the Insights Operator starts it doesn't know if the `PrometheusRule` to enable the alert triggering is already existing or not, and it assumes by default that it doesn't exist, so it doesn't try to remove it. With the new approach, the `PrometheusRule` will be removed in any case. Categories - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive N/A Documentation N/A Unit Tests N/A Privacy Yes. There is no new collected information. Changelog No Breaking Changes No References"
  },
  {
    "id": "1053",
    "type": "pullRequest",
    "title": "NO-JIRA: bump up OpenShift versions",
    "body": "!-- Short description of the PR. What does it do? -- Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "1050",
    "type": "pullRequest",
    "title": "OCPBUGS-45926: use joinHostPort to fix IPv6",
    "body": "!-- Short description of the PR. What does it do? -- This PR implements a new data enhancement to... Categories !-- Select the categories that your PR better fits on -- - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - no new data Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- - `path/to/file_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1052",
    "type": "pullRequest",
    "title": "NO-JIRA: minor test update",
    "body": "!-- Short description of the PR. What does it do? -- Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - `path/to/sample_data.json` Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1046",
    "type": "pullRequest",
    "title": "OCPBUGS-45479: avoid possible Go panic when searching existing conditions",
    "body": "!-- Short description of the PR. What does it do? -- Categories !-- Select the categories that your PR better fits on -- - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - no new data Documentation !-- Are these changes reflected in documentation? -- - Unit Tests !-- If it includes new unit tests, list them down bellow -- - `pkg/controller/status/datagather_status_test.go` - extended to cover the problematic case Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1045",
    "type": "pullRequest",
    "title": "NO-JIRA: golanci-lint version update & corresponding fixes",
    "body": "!-- Short description of the PR. What does it do? -- Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- Documentation !-- Are these changes reflected in documentation? -- Unit Tests !-- If it includes new unit tests, list them down bellow -- Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- No References !-- What are related references for this PR? --"
  },
  {
    "id": "1043",
    "type": "pullRequest",
    "title": "OCPBUGS-45047: Avoid to send the same error repeated N times",
    "body": "The current implementation includes the same error several times. This improvement makes to only include one time the error, making it more clear Categories - X Bugfix - Data Enhancement - Feature - Backporting - x Others (CI, Infrastructure, Documentation) Sample Archive N/A Documentation N/A Unit Tests N/A Privacy No Changelog No Breaking Changes No References 1022 OCPBUGS-45047 ("
  },
  {
    "id": "1044",
    "type": "pullRequest",
    "title": "OCPBUGS-45417: Updating ose-insights-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-insights-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-insights-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1039",
    "type": "pullRequest",
    "title": "CCXDEV-14573: sort the JSON schema validation errors",
    "body": "!-- Short description of the PR. What does it do? -- This is adding sorting of the JSON schema validation errors (comming from the third party library) used when validating the remote configuration (originally conditional gathering conditions) Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- no new data Documentation !-- Are these changes reflected in documentation? -- Unit Tests !-- If it includes new unit tests, list them down bellow -- Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes References !-- What are related references for this PR? --"
  },
  {
    "id": "1033",
    "type": "pullRequest",
    "title": "AUTH-482: set required-scc for dataGahtering jobs & pods",
    "body": "!-- Short description of the PR. What does it do? -- This PR implements a new data enhancement to... Categories !-- Select the categories that your PR better fits on -- - Bugfix - Data Enhancement - Feature - Backporting - X Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - `path/to/sample_data.json` Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- - `path/to/file_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "1022",
    "type": "pullRequest",
    "title": "OCPBUGS-45047: LokiStack gatherer",
    "body": "This PR implements a new data enhancement to include the LokiStack custom resources. WIP: Missing examples, just checking with team mates about the provided solution Categories - Bugfix - X Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - `path/to/sample_data.json` Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- - `path/to/file_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes No References"
  },
  {
    "id": "1032",
    "type": "pullRequest",
    "title": "OCPBUGS-45044: insightsoperator.operator.openshift.io resource is cre...",
    "body": "...ate-only !-- Short description of the PR. What does it do? -- This PR implements a new data enhancement to... Categories !-- Select the categories that your PR better fits on -- - X Bugfix - Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - no new data Documentation !-- Are these changes reflected in documentation? -- - Unit Tests !-- If it includes new unit tests, list them down bellow -- Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "1020",
    "type": "pullRequest",
    "title": "NO-JIRA: Add conditional gatherer validation test cases",
    "body": "Those cases are currently in the e2e test suite and can be moved to the unit test level. !-- Short description of the PR. What does it do? -- This PR implements a new data enhancement to... Categories !-- Select the categories that your PR better fits on -- - Bugfix - X Data Enhancement - Feature - Backporting - Others (CI, Infrastructure, Documentation) Sample Archive !-- Are these changes reflected in sample archive? -- - `path/to/sample_data.json` Documentation !-- Are these changes reflected in documentation? -- - `path/to/documentation.md` Unit Tests !-- If it includes new unit tests, list them down bellow -- - `path/to/file_test.go` Privacy !-- Has data anonymization/privacy been considered by CCX? (e.g. external IP addresses) -- Yes. There are no sensitive data in the newly collected information. Changelog !-- Was changelog updated? -- Breaking Changes !-- Does this PR contain breaking changes? Changes in archive file names or structure for example. If so, we should notify other teams using operator's data. -- Yes/No References !-- What are related references for this PR? --"
  },
  {
    "id": "41",
    "type": "pullRequest",
    "title": "Enable FIPS",
    "body": "Build the Go binaries with GOEXPERIMENT=strictfipsruntime"
  },
  {
    "id": "40",
    "type": "pullRequest",
    "title": "New runtimes tests",
    "body": "I added tests with different runtimes versions (the newest and also older)."
  },
  {
    "id": "39",
    "type": "pullRequest",
    "title": "SB 3.4.3 test app and 3.1.4 app simplified",
    "body": "I created SB 3.4.3 test app, add new extractor config for spring boot war packaging and simplified 3.1.4 test app."
  },
  {
    "id": "38",
    "type": "pullRequest",
    "title": "plain-java runtime sample"
  },
  {
    "id": "36",
    "type": "pullRequest",
    "title": "Update README",
    "body": "Change the example in the \"Run the extractor\" section, listing the extractor is making the example more confusing than useful Also update spec document to reflect the correct JSON format. Signed-off-by: Jeff Mesnil jmesnil@redhat.com"
  },
  {
    "id": "35",
    "type": "pullRequest",
    "title": "Update instructions to run the extractor on a cluster",
    "body": "Fix the extract.sh to output a valid JSON file."
  },
  {
    "id": "34",
    "type": "pullRequest",
    "title": "OCPBUGS-45626: Updating ose-insights-runtime-extractor-container image to be consistent with ART for 4.19",
    "body": "Updating ose-insights-runtime-extractor-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-insights-runtime-extractor.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "33",
    "type": "pullRequest",
    "title": "OCPBUGS-45512: Updating ose-insights-runtime-exporter-container image to be consistent with ART for 4.19",
    "body": "Updating ose-insights-runtime-exporter-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-insights-runtime-exporter.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "656",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55743: Extract files one-by-one in logwatch",
    "body": "This is an automated cherry-pick of 654 /assign dtantsur"
  },
  {
    "id": "651",
    "type": "pullRequest",
    "title": "METAL-1327: Update pkgs ocp419 take2"
  },
  {
    "id": "649",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update dependencies for OCP 4.19, part 1"
  },
  {
    "id": "650",
    "type": "pullRequest",
    "title": "NO-JIRA: Sync with upstream metal3/main 2025-03-24"
  },
  {
    "id": "644",
    "type": "pullRequest",
    "title": "METAL-1297: Update ironic-image to the latest commit hash"
  },
  {
    "id": "645",
    "type": "pullRequest",
    "title": "METAL-1299: Do not use openstack packages",
    "body": "They conflict with our owns and we don't use them in production so the builds are completely different between CI and production actually making the tests completely unreliable."
  },
  {
    "id": "641",
    "type": "pullRequest",
    "title": "OCPBUGS-51310: Fix runlogwatch script",
    "body": "Use correct values for read command, and remove colors from output. a pyinotify event looks like this: Event dir=False mask=0x8 maskname=IN_CLOSE_WRITE name=mylogs.gzip path=/shared/log/ironic/deploy pathname=/shared/log/ironic/deploy/mylogs.gzip wd=1 by default the output contains colorize text that is interpreted literally by variable conversion in the tar command, so not only we have to parse it, but we also need to get just raw format output. Signed-off-by: Riccardo Pittau elfosardo@gmail.com (cherry picked from commit 9e2d94ae3e6fd487ed0b59d24e68e0c1c81f16ce)"
  },
  {
    "id": "638",
    "type": "pullRequest",
    "title": "OCPBUGS-50613: Install python3-inotify pkg explicitly",
    "body": "The python3-inotify package is installed as dependency but it should be explicitly mentioned in the packages list to avoid issues like"
  },
  {
    "id": "635",
    "type": "pullRequest",
    "title": "OCPBUGS-49829: Fix runlogwatch failure if LOG_DIR does not exist",
    "body": "Signed-off-by: Riccardo Pittau elfosardo@gmail.com (cherry picked from commit dc60eca6b6189d619d909fbecfb75a124655c81d)"
  },
  {
    "id": "629",
    "type": "pullRequest",
    "title": "OCPBUGS-48737: Sync with upstream metal3 ironic-image 2025-01-30"
  },
  {
    "id": "628",
    "type": "pullRequest",
    "title": "METAL-1266: Switch master branch to main in check-requirements"
  },
  {
    "id": "621",
    "type": "pullRequest",
    "title": "METAL-1253: Remove dependency from sushy package"
  },
  {
    "id": "619",
    "type": "pullRequest",
    "title": "METAL-1251: Remove dependency from ironic-lib",
    "body": "The ironic source code does not depende from ironic-lib anymore."
  },
  {
    "id": "618",
    "type": "pullRequest",
    "title": "OCPBUGS-48172: Bump jinja2 to 3.1.5"
  },
  {
    "id": "614",
    "type": "pullRequest",
    "title": "OCPBUGS-45636: Sync including fix for bug"
  },
  {
    "id": "616",
    "type": "pullRequest",
    "title": "NO-ISSUE: Sync with metal3 upstream 2024-12-16"
  },
  {
    "id": "613",
    "type": "pullRequest",
    "title": "OCPBUGS-45638: Updating ironic-container image to be consistent with ART for 4.19",
    "body": "Updating ironic-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ironic.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "182",
    "type": "pullRequest",
    "title": "OCPBUGS-55315: Delay determining the hostname to put into ignition",
    "body": "Currently, we evaluate the hostname when initializing the agent. Apparently, it's possible for the real hostname to be determined later, which causes a discrepancy between the hostname that is reported in inspection (and set on Machine) and the hostname sent to the instance via Ignition (and thus appearing on Node). This change leaves the early hostname fix where it is but generates hostname for Ignition where it is used."
  },
  {
    "id": "181",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update dependencies for OCP 4.19"
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "METAL-1299: Do not use openstack packages",
    "body": "They conflict with our owns and we don't use them in production so the builds are completely different between CI and production actually making the tests completely unreliable."
  },
  {
    "id": "176",
    "type": "pullRequest",
    "title": "METAL-1297: Update commit hash of ironic-python-agent"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "METAL-1266: Switch master branch to main in check-requirements"
  },
  {
    "id": "174",
    "type": "pullRequest",
    "title": "OCPBUGS-45259: METAL-1251: Update commit hash of ironic-python-agent",
    "body": "- Remove dependency from ironic-lib - Silence errors from modprobe of various IPMI modules"
  },
  {
    "id": "173",
    "type": "pullRequest",
    "title": "OCPBUGS-45475: Updating ironic-agent-container image to be consistent with ART for 4.19",
    "body": "Updating ironic-agent-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ironic-agent.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "100",
    "type": "pullRequest",
    "title": "OCPBUGS-45522: Updating ironic-rhcos-downloader-container image to be consistent with ART for 4.19",
    "body": "Updating ironic-rhcos-downloader-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ironic-rhcos-downloader.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "46",
    "type": "pullRequest",
    "title": "OCPBUGS-45715: Updating ironic-static-ip-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ironic-static-ip-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ironic-static-ip-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "205",
    "type": "pullRequest",
    "title": "OCPBUGS-45700: Updating openshift-enterprise-keepalived-ipfailover-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-keepalived-ipfailover-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-keepalived-ipfailover.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "204",
    "type": "pullRequest",
    "title": "OCPBUGS-45831: Updating ose-egress-http-proxy-container image to be consistent with ART for 4.19",
    "body": "Updating ose-egress-http-proxy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-egress-http-proxy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "201",
    "type": "pullRequest",
    "title": "OCPBUGS-45405: Updating openshift-enterprise-egress-dns-proxy-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-egress-dns-proxy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-egress-dns-proxy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "198",
    "type": "pullRequest",
    "title": "NE-1908: Add instructions for keepalived-ipfailover image testing",
    "body": "Removed old README file and added new README file for keepalived-ipfailover."
  },
  {
    "id": "202",
    "type": "pullRequest",
    "title": "OCPBUGS-45452: Updating openshift-enterprise-egress-router-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-egress-router-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-egress-router.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "203",
    "type": "pullRequest",
    "title": "NO-JIRA: egress: update OWNERS",
    "body": "- `egress/OWNERS`: Add `Thealisyed` and `grzpiotrowski` to the approvers and reviewers Both are members of the Network Ingress/DNS team maintaining this component."
  },
  {
    "id": "39",
    "type": "pullRequest",
    "title": "OCPBUGS-45583: Updating ose-kube-metrics-server-container image to be consistent with ART for 4.19",
    "body": "Updating ose-kube-metrics-server-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-kube-metrics-server.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "116",
    "type": "pullRequest",
    "title": "CNTRLPLANE-248: Merge upstream v0.19.0 release",
    "body": "What OIDC authenticator defaults to using host's root CA pool if CA file is not provided Dependency bumps"
  },
  {
    "id": "115",
    "type": "pullRequest",
    "title": "OCPBUGS-45765: Updating kube-rbac-proxy-container image to be consistent with ART for 4.19",
    "body": "Updating kube-rbac-proxy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: kube-rbac-proxy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "114",
    "type": "pullRequest",
    "title": "AUTH-555: Merge upstream v0.18.2 release",
    "body": "WHAT Releasing token changes to mask them even with the high verbosity in logs Dependency bumps WHY We don't want to log the tokens even if the verbosity is set to high"
  },
  {
    "id": "119",
    "type": "pullRequest",
    "title": "OCPBUGS-52192: bot Bump openshift/kube-state-metrics to v2.15.0",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/kube-state-metrics repo: ``` git fetch --tags if ! git merge refs/tags/v2.15.0 --no-edit; then git checkout --theirs CHANGELOG.md .github/ Dockerfile docs/ go.mod git checkout --ours OWNERS git add CHANGELOG.md .github/ Dockerfile docs/ go.mod OWNERS git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "118",
    "type": "pullRequest",
    "title": "OCPBUGS-45519: Updating kube-state-metrics-container image to be consistent with ART for 4.19",
    "body": "Updating kube-state-metrics-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: kube-state-metrics.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "209",
    "type": "pullRequest",
    "title": "OCPBUGS-45383: Updating ose-kube-storage-version-migrator-container i...",
    "body": "Continuation of which has not updated the go.mod to 1.23, and therefore is failing to verify"
  },
  {
    "id": "59",
    "type": "pullRequest",
    "title": "NO-JIRA: Add awels as approver",
    "body": "Add awels as approver ```release-note NONE ```"
  },
  {
    "id": "58",
    "type": "pullRequest",
    "title": "OCPBUGS-50562: Ensure unpublish works for volumes carried over upgrades",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. Follow the instructions for writing a release note from k8s: -- What this PR does / why we need it: One upgrade consideration missed in PR 130 is that ControllerUnpublish could be called against a VMI-level-hotplugged carry over from an older driver version. In that case, we would not issue a removevolume call at all and fail in ensuring the volume got removed. ControllerPublish doesn't suffer from a similar issue since the volume would just get added on the VM level in addition. Which issue(s) this PR fixes (optional, in `fixes issue number(, fixes issue_number, ...)` format, will close the issue(s) when PR gets merged): Fixes Special notes for your reviewer: Release note: !-- Write your release note: 1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string \"action required\". 2. If no release note is required, just write \"NONE\". -- ```release-note BugFix: Ensure carry over volumes can be removed from VMI following controllerpublish changes ```"
  },
  {
    "id": "53",
    "type": "pullRequest",
    "title": "OCPBUGS-50562: Ensure volume stays attached through reboots",
    "body": "!-- Thanks for sending a pull request! Here are some tips for you: 1. Follow the instructions for writing a release note from k8s: -- What this PR does / why we need it: While this is not stated explicitly in the CSI spec, k8s expects ControllerPublished volumes to stay attached regardless of reboots. Today, we lose the attachment if a reboot is quick enough that a failover to a different node was not initiated (default node.kubernetes.io/unreachable toleration is 5 minutes) and there is no extra invocation of the publish, resulting in an eternal failure. We can align to this implicit guideline by hotplugging on the VM level: Which issue(s) this PR fixes (optional, in `fixes issue number(, fixes issue_number, ...)` format, will close the issue(s) when PR gets merged): Fixes Special notes for your reviewer: Release note: !-- Write your release note: 1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string \"action required\". 2. If no release note is required, just write \"NONE\". -- ```release-note BugFix: Ensure volume stays attached through reboots ```"
  },
  {
    "id": "1368",
    "type": "pullRequest",
    "title": "OCPBUGS-55786: release-4.19 Fixes machineset paused condition nil pointer",
    "body": "This is an automated cherry-pick of 1361 /assign theobarberbany"
  },
  {
    "id": "1367",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55706: fix: use patch for machine/machineset status",
    "body": "Manual backport of Superseeds"
  },
  {
    "id": "1358",
    "type": "pullRequest",
    "title": "OCPBUGS-55424: Added skip for when config not multi nic",
    "body": "OCPBUGS-55424( Changes - Added check for multi network config before running test - Updated multi network tests to have apigroup label - Revert Dependencies -"
  },
  {
    "id": "1360",
    "type": "pullRequest",
    "title": "OCPBUGS-55461: Fix updateMachineSetStatus nil pointer",
    "body": "This change updates the error log to rely on the machineSetCopy, rather than the machineSet passed to be updated. This is because the machineSet may be nil if the update fails, due to the get at the end of updateMachineSetStatus."
  },
  {
    "id": "1359",
    "type": "pullRequest",
    "title": "Revert \"SPLAT-2180: Added conformance label\"",
    "body": "Reverts openshift/machine-api-operator1354"
  },
  {
    "id": "1357",
    "type": "pullRequest",
    "title": "OCPBUGS-55417: Resync CRDs",
    "body": "After the openshift/api changes in we need to revendor and sync CRDs in MAO"
  },
  {
    "id": "1353",
    "type": "pullRequest",
    "title": "OCPBUGS-55083: Updates GCP CredentialsRequest",
    "body": "- Adds compute.images.useReadOnly, which is required for provisioning additional disks."
  },
  {
    "id": "1354",
    "type": "pullRequest",
    "title": "SPLAT-2180: Added conformance label",
    "body": "SPLAT-2180( Changes - Added `Conformance` label to e2e tests (for future way) - Added `Suite:openshift/conformance/parallel` to e2e tests for legacy (current) technique Notes Currently when nightlies run, the new openshift test extensions are being seen, but not ran. Adding the `Conformance` label to the tests so they are included in the parallel suite. openshift-tests-ext has a way for adding your files to parent suites; however, this is not functional at this time. This PR will need to be backported to 4.19"
  },
  {
    "id": "1352",
    "type": "pullRequest",
    "title": "OCPBUGS-55025: fix: nodelink use patch to apply machine's nodeRef",
    "body": "Fix Use patch to apply machine's nodeRef, to retain the `.status.synchronizedGeneration` field previously set by the migration/sync controllers. --- Context I found an conflicting issue between the migration/sync controllers, the nodelink controller and the CPMSO. A cluster with MachineAPIMigration=true is installed - The installer creates control plane machines, which gets registered with the cluster - The installer applies/creates control plane machines objects in the cluster - The migration controller gets notified about a machine event, and reconciles, finds the .status.authoritativeAPI is empty and propagates the value from .spec.authoritativeAPI to it a (logs here) In the meanwhile the CPMSO hasn't started up yet (see logs here) so no owner reference of the CPMSO is set on the control plane machines - The sync controller can now reconcile the machine as it has .status.authoritativeAPI, goes into reconcileMAPIMachinetoCAPIMachine() , hits the if len(mapiMachine.OwnerReferences) == 0 { case here, and carries on to r.convertMAPIToCAPIMachine(mapiMachine), here it errors because control plane machines have the loadbalancers set (we are unable to covert it at this point), so it applies the synchronized=false and synchronizedGeneration=0 (this is crucial) b - The nodelink controller finally wakes up, and tries to set the nodeRef on the control plane machines to the corresponding nodes. But it fails c because it attempts an update to the control plane machine's status (to set the noderef) without specifying the synchronizedGeneration , which was previously and erroneously set, and goes against the openAPI validation we have for the authoritativeAPI synchronizedGeneration status fields. This yields prevents the control plane nodes to go into Running state and renders them un-adoptable by the CPMSO, which goes into Available=False making the entire Cluster initialization to fail, and the installation with it. a ``` I0414 17:22:31.708923 1 machine_migration_controller.go:355 \"Setting AuthoritativeAPI status to \\\"MachineAPI\\\" for resource\" controller=\"MachineMigrationController\" controllerGroup=\"machine.openshift.io\" controllerKind=\"Machine\" Machine=\"openshift-machine-api/ci-op-zd4rxsg5-c9e33-kjczc-master-0\" namespace=\"openshift-machine-api\" name=\"ci-op-zd4rxsg5-c9e33-kjczc-master-0\" reconcileID=\"ad911656-fecc-408b-b472-267f9d0c2a82\" namespace=\"openshift-machine-api\" name=\"ci-op-zd4rxsg5-c9e33-kjczc-master-0\" ``` b ``` E0414 17:22:41.795328 1 controller.go:316 \"Reconciler error\" err=\"failed to convert Machine API machine to Cluster API machine: spec.providerSpec.value.loadBalancers: Invalid value: v1beta1.LoadBalancerReference{v1beta1.LoadBalancerReference{Name:\\\"ci-op-zd4rxsg5-c9e33-kjczc-int\\\", Type:\\\"network\\\"}, v1beta1.LoadBalancerReference{Name:\\\"ci-op-zd4rxsg5-c9e33-kjczc-ext\\\", Type:\\\"network\\\"}}: loadBalancers are not supported\" controller=\"MachineSyncController\" controllerGroup=\"machine.openshift.io\" controllerKind=\"Machine\" Machine=\"openshift-machine-api/ci-op-zd4rxsg5-c9e33-kjczc-master-0\" namespace=\"openshift-machine-api\" name=\"ci-op-zd4rxsg5-c9e33-kjczc-master-0\" reconcileID=\"2c4e9bb8-0947-44ab-9137-04e08d5b9473\" ``` c ``` E0414 17:26:25.242119 1 controller.go:341 \"Reconciler error\" err=\"error updating nodeRef for machine \\\"ci-op-zd4rxsg5-c9e33-kjczc-master-1\\\" and node \\\"ip-10-0-32-19.ec2.internal\\\": error updating machine \\\"ci-op-zd4rxsg5-c9e33-kjczc-master-1\\\": Machine.machine.openshift.io \\\"ci-op-zd4rxsg5-c9e33-kjczc-master-1\\\" is invalid: status.synchronizedGeneration: Invalid value: \\\"object\\\": synchronizedGeneration must not decrease unless authoritativeAPI is transitioning from Migrating to another value\" controller=\"nodelink-controller\" object=\"ip-10-0-32-19.ec2.internal\" namespace=\"\" name=\"ip-10-0-32-19.ec2.internal\" reconcileID=\"e3427d0e-a70b-4aa1-8799-89639410f484\" ```"
  },
  {
    "id": "1347",
    "type": "pullRequest",
    "title": "SPLAT-2051: implement e2e tests for vSphere multi network"
  },
  {
    "id": "1351",
    "type": "pullRequest",
    "title": "SPLAT-2118: Update tests-extensions to pick up new vendor filtering",
    "body": "SPLAT-2118( Changes - Updated openshift-tests-extensions dep to get new vendor filtering logic for external tests. Dependencies - Blocks -"
  },
  {
    "id": "1339",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-52464: webhook to validate marketType field",
    "body": "OCPBUGS-52464( Changes - Validate the marketType field value in webhook. - Added the unittest"
  },
  {
    "id": "1346",
    "type": "pullRequest",
    "title": "SPLAT-2078: Removed VSphereStaticIPs feature gate",
    "body": "SPLAT-2078( Changes - Removed VSphereStaticIPs feature gate Notes After a feature gate has been GA in an OCP release, we are supposed to clean up feature gate usage in the next release. VSphere static IP support GA'd in 4.16, so the intention is to remove the feature gate as part of 4.19."
  },
  {
    "id": "1338",
    "type": "pullRequest",
    "title": "SPLAT-2060: Create e2e tests for vSphere Data Disk feature",
    "body": "SPLAT-2060( Changes - Created new external test extension to origin - Added e2e tests for vSphere data disks Blocks - Notes After this merges, we will need to update origin to register this extension so it runs in future e2e tests. This enhancment is leveraging the following origin framework enhancement:"
  },
  {
    "id": "1326",
    "type": "pullRequest",
    "title": "OCPCLOUD-2882, OCPCLOUD-2889: support AMD SEV_SNP and TDX confidential computing machines on GCP",
    "body": "Implements the same as in - - - openshift/api PR:"
  },
  {
    "id": "1329",
    "type": "pullRequest",
    "title": "OCPCLOUD-2780: Validate aws marketType webhook",
    "body": "add the webhook validation for the \"MarketType\" API field of \"AwsMachineProviderSpec\". Supported PR in"
  },
  {
    "id": "1335",
    "type": "pullRequest",
    "title": "OCPBUGS-51373,OCPBUGS-44671: Updates GCP credentials request",
    "body": "This change adds the compute.images.get and getFromFamily to the credentials request for GCP. It is required by MAPG for checking if a disk is UEFI compatible. See"
  },
  {
    "id": "1328",
    "type": "pullRequest",
    "title": "SPLAT-2000: Added vSphere provisioning mode to data disks",
    "body": "SPLAT-2000( Changes - Added ability to set provisioning mode to data disks Dependencies -"
  },
  {
    "id": "1330",
    "type": "pullRequest",
    "title": "OCPBUGS-49413: add image/read permissions",
    "body": "This is to resolve the permission issue when upgraded from 4.11 - 4.14 . more context on it here( PTAL when time permits."
  },
  {
    "id": "1331",
    "type": "pullRequest",
    "title": "OCPBUGS-51042: Drop oVirt support",
    "body": "Per thread in slack( oVirt support ended in 4.14 and we no longer wish to reference or be able to install oVirt through MAO. CC @sdodson"
  },
  {
    "id": "1327",
    "type": "pullRequest",
    "title": "OCPBUGS-49351: Added vSphere check for max networks",
    "body": "OCPBUGS-49351 Changes - Added check for max network count"
  },
  {
    "id": "1325",
    "type": "pullRequest",
    "title": "OCPCLOUD-2830: Update dependencies to K8s 1.32",
    "body": "This PR updates the MAO dependencies to be inline with K8s 1.32 ahead of 4.19."
  },
  {
    "id": "1323",
    "type": "pullRequest",
    "title": "SPLAT-1800: vSphere host zonal missing operator feature",
    "body": "Follow up to 1285. This PR adds `FeatureGateVSphereHostVMGroupZonal` to the map of features so the command line of the controller pods is set correctly."
  },
  {
    "id": "1290",
    "type": "pullRequest",
    "title": "SPLAT-1811: Add vSphere multi disk support",
    "body": "SPLAT-1811( Changes - Add logic for creating additional disks to new machines Prerequisites - -"
  },
  {
    "id": "1320",
    "type": "pullRequest",
    "title": "OCPBUGS-43608: add webhook for fields that are not working",
    "body": "Add webhook for fields (providerSpec.iamInstanceProfile.arn, providerSpec.iamInstanceProfile.filters, providerSpec.subnet.arn) that are not working, pre-merge tested works! ``` liuhuali@Lius-MacBook-Pro huali-test % oc create -f ms1.yaml Warning: can't use providerSpec.iamInstanceProfile.arn, only providerSpec.iamInstanceProfile.id can be used to reference IAMInstanceProfile machineset.machine.openshift.io/ci-ln-4li4k6b-76ef8-48lkb-worker-us-west-1ca created ``` ``` liuhuali@Lius-MacBook-Pro huali-test % oc create -f ms1.yaml Warning: can't use providerSpec.iamInstanceProfile.filters, only providerSpec.iamInstanceProfile.id can be used to reference IAMInstanceProfile machineset.machine.openshift.io/ci-ln-4li4k6b-76ef8-48lkb-worker-us-west-1ca created ``` ``` liuhuali@Lius-MacBook-Pro huali-test % oc create -f ms1.yaml Warning: can't use providerSpec.subnet.arn, only providerSpec.subnet.id or providerSpec.subnet.filters can be used to reference Subnet machineset.machine.openshift.io/ci-ln-4li4k6b-76ef8-48lkb-worker-us-west-1ca created ```"
  },
  {
    "id": "1316",
    "type": "pullRequest",
    "title": "OCPBUGS-46433: Add cluster-reader to controlplanemachinesets resource",
    "body": "Added cluster-reader permissions to controlplanemachinesets resource"
  },
  {
    "id": "1309",
    "type": "pullRequest",
    "title": "OCPBUGS-44130: Add Azure permissions based on linked actions",
    "body": "Checked code in and for code aligning with these actions. I was not able to find any mention of the properties listed in the provider JSON in either nor The Machine API Operator itself does not appear reference any Azure calls directly, however Machine API Provider for Azure does. Needed Microsoft.Network/networkInterfaces/join/action Microsoft.Network/networkSecurityGroups/join/action Microsoft.Network/loadBalancers/backendAddressPools/join/action Microsoft.Network/loadBalancers/frontendIPConfigurations/join/action Microsoft.Network/publicIPAddresses/join/action Microsoft.Network/virtualNetworks/subnets/join/action Microsoft.Network/loadBalancers/inboundNatRules/join/action Microsoft.Network/applicationSecurityGroups/joinNetworkSecurityRule/action Microsoft.ManagedIdentity/userAssignedIdentities/assign/action Likely Microsoft.Compute/disks/beginGetAccess/action I don't see this explicitly mentioned in our disk management code, but it seems very likely that this is necessary Not Needed Microsoft.Network/publicIPPrefixes/join/action No mention of IP Prefixes found in our code Microsoft.Network/ddosProtectionPlans/join/action No mention of DDOS Protection in our code Microsoft.Network/loadBalancers/inboundNatPools/join/action No mention of NAT Pools found in our code Microsoft.KeyVault/vaults/deploy/action No mention of vaults in our code Microsoft.Network/applicationGateways/backendAddressPools/join/action No mention of application gateways in our code. However, NICs have mention of network.BackendAddressPools. These only seem to be added to load balancers. Microsoft.Network/gatewayLoadBalancerAliases/join/action No mention of gateway load balancers or aliases in our code Microsoft.Network/applicationSecurityGroups/joinNetworkSecurityRule/action No mention of network security rules within the application security group code; this may be a newer feature, since I don't even see a reference to network security rules for ASGs in the SDK Microsoft.Network/applicationSecurityGroups/joinIpConfiguration/action No mention of IP configurations in our application security group code, though there are IP configurations for load balancers"
  },
  {
    "id": "1285",
    "type": "pullRequest",
    "title": "SPLAT-1800: Add support for vSphere host and vm group based zonal",
    "body": "Changes Misc required change: - Added RealClock to NewKubeRecorder and NewLoggingEventRecorder Changes: - Added FeatureGateVSphereHostVMGroupZonal - Added modifyVMGroup which adds or removes a virtual machine from the vCenter cluster's vm-host group associated with the failure domain - Added validation for the length of a vm-group name - Added vm-host group tests Additional PRs - - - - - - - -"
  },
  {
    "id": "1317",
    "type": "pullRequest",
    "title": "AUTH-482: set required-scc for openshift workloads",
    "body": "completion for AUTH-482: set required-scc for openshift workloads 1308("
  },
  {
    "id": "1315",
    "type": "pullRequest",
    "title": "SPLAT-1940: Refactored vsphere featuregate parameters",
    "body": "SPLAT-1940( Changes - Enhanced vsphere modules to use FeatureGate mutable map for passing around feature gates instead of using each individual feature gate as a boolean. - Added static ip CRDs for tests. Due to CRD not being pullable from github due to no .go files, these were added to third_party for this purpose."
  },
  {
    "id": "1310",
    "type": "pullRequest",
    "title": "OCPBUGS-45480: Updating ose-machine-api-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-api-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-api-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "1308",
    "type": "pullRequest",
    "title": "AUTH-482: set required-scc for openshift workloads",
    "body": "This PR sets the required SCC explicitly on each workload in openshift- namespaces. The SCC chosen is the one that the pods are getting admitted with, so no change expected there. This is to protect the pods from getting admitted with a different custom SCC than the one intended."
  },
  {
    "id": "5035",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55809: Use auto=start only for IPsec out connections",
    "body": "This is an automated cherry-pick of 5017 /assign pperiyasamy"
  },
  {
    "id": "5031",
    "type": "pullRequest",
    "title": "OCPBUGS-44757: Revert \"OCPBUGS-44757: decrease leases for kubelet on azure\"",
    "body": "This is an automated cherry-pick of 5030 /assign rphillips"
  },
  {
    "id": "5013",
    "type": "pullRequest",
    "title": "Revert \"NO-ISSUE: debug podman on PIS\"",
    "body": "Reverts openshift/machine-config-operator5003"
  },
  {
    "id": "5010",
    "type": "pullRequest",
    "title": "OCPBUGS-44757: decrease leases for kubelet on azure"
  },
  {
    "id": "5003",
    "type": "pullRequest",
    "title": "NO-ISSUE: debug podman on PIS",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "5005",
    "type": "pullRequest",
    "title": "MCO-1635: Add new runbook for HighOverallControlPlaneMemory to alert",
    "body": "- What I did Added a runbook I wrote to the HighOverallControlPlaneMemory Alert - How to verify it Trigger HighOverallControlPlaneMemory on cluster. Alert should now display associated runbook. - Description for the changelog Added to alert as a runbook_url."
  },
  {
    "id": "5009",
    "type": "pullRequest",
    "title": "OCPBUGS-55388: MSBIC should not update windows machinesets",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- We should skip windows machinesets for boot image updates. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "5011",
    "type": "pullRequest",
    "title": "MCO-1645: API & client-go bumps for MCN V1 API updates",
    "body": "- What I did Bump the API dependency to & the client-go dependency to Steps taken: - `go get github.com/openshift/api@9b80d67473bc15d85312ffda09dcde489c8e0545` - `go mod tidy` - `go get github.com/openshift/client-go@5f55ff6979a17ab49a12d181aa3c542372d6917d` - `go mod tidy` - `go mod vendor` - `go mod verify` - How to verify it Tests should pass. - Description for the changelog MCO-1645( API & client-go bumps for MCN V1 API updates"
  },
  {
    "id": "4992",
    "type": "pullRequest",
    "title": "MCO-1519: Adapt MCO code to use V1 MCN API",
    "body": "Merge Plan - This should merge _simultaneously with_ - - - What I did This updates references to MachineConfigNode's v1alpha1 API to instead reference the v1 API created in - How to verify it - Validate MCN functionality in a live cluster using the following Clusterbot launch command: ```launch 4.19,openshift/api2273,openshift/machine-config-operator4992 gcp,techpreview``` - Origin tests should run. See payload tests run on - Description for the changelog MCO-1519( update MCN API references from v1alpha1 to v1"
  },
  {
    "id": "4999",
    "type": "pullRequest",
    "title": "OCPBUGS-50905: Leverage shared node.env for both AWS providerID and hostname units",
    "body": "Up until now, the providerID unit would create a drop in file while executing, which it turns out is bad. Sometimes starting kubelet would pick up this drop in, other times it wouldn't. This updates the scripts to share the node.env file which we have seen is reliably consumed by kubelet."
  },
  {
    "id": "4963",
    "type": "pullRequest",
    "title": "OCPBUGS-51273: Don't crashloop for HAProxy init container",
    "body": "Previously we just crashlooped when the HAProxy init container failed, which is a normal, expected condition when HAProxy starts before CoreDNS. This is causing issues in CI because having a pod crash more than 3 times in a row is considered a failure. While it usually doesn't take that long for it to pass, we are hitting a weird timing issue during upgrades when the node is just about to reboot after MCO updates the pod definitions and it's taking longer than normal because ostree is updating the node at the same time. Since this is just a case of everything behaving as expected, let's stop failing the pod for an expected situation. This change puts the api-int call in a loop so it will just run until coredns is ready and we'll never trigger any error reporting just because of harmless timing issues. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "5002",
    "type": "pullRequest",
    "title": "NO-JIRA: Update Envtest assets to 1.32.1",
    "body": "The bootstrap-unit is failing because it's using older assets, this should resolve the issue"
  },
  {
    "id": "4724",
    "type": "pullRequest",
    "title": "OCPBUGS-44732: Support for br-ex with DHCP and static DNS",
    "body": "Currently the only supported combination is either DHCP or static IP on the default gateway interface. This leads to the scenario when IP address from DHCP and static DNS address is not working (the custom DNS is just ignored). With this change we allow to have DNS configured manually no matter where the IP address of the interface comes from. In principle this should be done using k-nmstate operator and its global DNS configuration, but it seems there are scenarios where we want this functionality already at installation time. Closes: OCPBUGS-44732"
  },
  {
    "id": "4987",
    "type": "pullRequest",
    "title": "OCPBUGS-55043: Fix PollUntilContextTimeout in syncRenderConfig",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Ensured that the errors in the PollUntilContextTimeout aren't used for an immediate exit. - How to verify it Existing e2es/units should pass. I don't think this needs pre merge QE."
  },
  {
    "id": "4995",
    "type": "pullRequest",
    "title": "OCPBUGS-55231: MCO should fall back to us-east-1 for AWS bootimages if no region specific-AMI exists",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Adds a default region fallback if the cluster's region specific AMI is not found during boot image update. This mirrors the installer's behavior( - How to verify it Existing e2es should pass and OKD installs should succeed."
  },
  {
    "id": "4986",
    "type": "pullRequest",
    "title": "OCPBUGS-49675, OCPBUGS-55039: In OCL. Usbguard service fails when we install the usbguard extension: IPsec tmpfile.d directives missing when enabling IPsec in OCL",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added the missing tmpfiles.d configurations ipsec and modified permissions for usbguard configuration. This is a patch and will be modified once is backported into rhel. - How to verify it 1. Opt into OCL 2. Apply a machine config to enable usbguard and ipsec 3. Ensure that the extensions are properly installed - Description for the changelog !-- Added the missing tmpfiles.d configurations ipsec and modified permissions for usbguard configuration. --"
  },
  {
    "id": "4983",
    "type": "pullRequest",
    "title": "OCPBUGS-54592: Only populate `LastFailedGeneration` & `LastFailedGenerationError` on PIS failure",
    "body": "Closes: OCPBUGS-54592 - What I did This refactors some code originally written in to address OCPBUGS-54872. Due to the overlap of OCPBUGS-54592 (this PR's intended target) and OCPBUGS-54872 (fixed previously), no other code changes were required. - How to verify it 1. Apply a valid PIS and make sure the PIS ref in the MCN is reporting correctly. Note that since the application is successful, no `LastFailedGeneration` or `LastFailedGenerationError` value should be populated. detailssummaryExample Valid PIS/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/openshift-release-dev/ocp-release@sha256:513cf1028aa1a021fa73d0601427a0fbcf6d212b88aaf9d76d4e4841a061e44e - name: quay.io/openshift-release-dev/ocp-release@sha256:61eae2d261e54d1b8a0e05f6b5326228b00468364563745eed88460af04f909b /pre /details ``` $ oc apply -f pis-file $ oc describe machineconfignode/node-name ... Status: ... Pinned Image Sets: Current Generation: 1 Desired Generation: 1 Name: test-pinned .... ``` 2. Apply an invalid PIS and make sure the PIS ref in the MCN is reporting correctly. Note that since the application will fail, both the `LastFailedGeneration` and `LastFailedGenerationError` value should be populated. detailssummaryExample Invalid PIS/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079 - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:fd3692eff21338e900a244dfe62152c959b84d73f2dd4503893de0f3fae61b0b /pre /details ``` $ oc apply -f pis-file $ oc describe machineconfignode/node-name ... Status: ... Pinned Image Sets: Desired Generation: 2 Last Failed Generation: 2 Last Failed Generation Error: failed to execute podman manifest inspect for \"quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079\": exit status 125 Name: test-pinned .... ``` - Description for the changelog OCPBUGS-54592: Only populate LastFailedGeneration & LastFailedGenerationError values in MCN on PIS failure"
  },
  {
    "id": "4997",
    "type": "pullRequest",
    "title": "OCPBUGS-55234: kubelet: readonly mounts for criometricsproxy"
  },
  {
    "id": "4830",
    "type": "pullRequest",
    "title": "OCPBUGS-48469: Fix CoreDNS static pod bring-up on cloud platforms",
    "body": "Fixes: OCPBUGS-48469 - What I did 1. Updated CoreDNS Corefile errors for cloud platforms needing alternate in-cluster DNS when UserProvisionedDNS is enabled via the install-config 2. Updated the list of directories to include the location of the CoreDNS files for cloud platforms 3. Updated test data and unit tests for UserProvisionedDNS enabled on GCP. - How to verify it Set `UserProvisionedDNS` to `Enabled` for GCP via install-config and start installation - Description for the changelog Fixed issues with CoreDNS Corefile and template path for cloud platforms when UserProvisionedDNS is enabled. Added test_data for GCP with all the UserProvisionedDNS configuration to better test this path."
  },
  {
    "id": "4902",
    "type": "pullRequest",
    "title": "MCO-1584: Opt-in boot image updates for AWS & GCP by default",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - The operator will begin to opt-in clusters for boot image updates by default on AWS and GCP, except for cases where the cluster already has an existing boot image update configuration. - The operator will populate a new API field called `ManagedBootImagesStatus` in the `MachineConfiguration` object's status. This will reflect the `spec.managedBootImages` of the object. When the `spec.managedBootImages` is empty, it will reflect the cluster defaults. On platforms that have no boot image updates support, the `managedBootImagesStatus` field will be empty. Currently, only AWS and GCP will be opt-ed in by default. Following are some examples: Scenario: No admin configuration and the current release does not opt-in by default: ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: None ``` Scenario: No admin configuration and the current release does opt-in by default: ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: All ``` Regardless of the default-on behavior of the release, if the admin were to add a configuration, the status must reflect that in the next update. ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: managedBootImages: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: Partial partial: machineResourceSelector: matchLabels: {} status: managedBootImagesStatus: machineManagers: - resource: machinesets apiGroup: machine.openshift.io selection: mode: Partial partial: machineResourceSelector: matchLabels: {} ``` Scenario: When the current release does not have boot image updates support: ``` apiVersion: operator.openshift.io/v1 kind: MachineConfiguration spec: status: ``` - How to verify it - Bring up a cluster with this PR on the GCP/AWS platform. You should see the cluster come up with boot image updates enabled. Edit the `MachineConfiguration` to opt-out the cluster by using \"None\" example above. You can also set it to a different configuration such as the partial mode. The operator should not attempt to overwrite this configuration. - Repeat the above procedure on any other platform, you should not see the operator attempt to opt-in the cluster to boot image updates by default. - Bring up a cluster on GCP/AWS on a build without this PR. Set the `MachineConfiguration.Spec.ManagedBootImages` object to a value of your choosing. Upgrade the cluster to a build with this PR and check the `MachineConfiguration` object. The operator should not attempt to overwrite the configuration you chose pre-upgrade. - Bring up a cluster on GCP/AWS on a build without this PR. Leave `MachineConfiguration.Spec.ManagedBootImages` field undefined. Upgrade the cluster to a build with this PR and check the `MachineConfiguration` object. The operator should have opt-ed in your cluster to boot image updates."
  },
  {
    "id": "4977",
    "type": "pullRequest",
    "title": "MCO-1615: MCN status update degraded",
    "body": "- What I did This change adds the logic to properly report the already existing NodeDegraded condition as part of the MCN status. The logic, based on a function defer, simple checks if the MCD `update` failed and report accordingly. - How to verify it - Deploy a cluster created from an image that contains this change. - Create a MC that is invalid (but reconciliable). The next one is a good example: ```yaml apiVersion: machineconfiguration.openshift.io/v1 kind: MachineConfig metadata: labels: machineconfiguration.openshift.io/role: worker name: 99-invalid-mc spec: config: ignition: version: 3.5.0 storage: files: - contents: source: data:text/plain;charset=utf-8;base64,SSBhbSB2ZXJzaW9uIDEK path: /usr/lib/test-file34.txt ``` - Wait for the MCN to start the update - When the MCP is set as `Degraded` check the status of the MCN that started the update and ensure the `NodeDegraded` condition is set to `True` and that the error message is descriptive - Remove the freshly added conflictive MC - Wait for the MCP to recover from the `Degraded` state - Check back the MCN and ensure the `NodeDegraded` condition is set to `False` - Description for the changelog Report MCN's `NodeDegraded` condition based on the MCD update result."
  },
  {
    "id": "4971",
    "type": "pullRequest",
    "title": "MCO-1509: Enable OCL for disconnected workflow",
    "body": "Closes !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Grab the /etc/containers/registries.conf and /etc/containers/policy.json files from the node and mount it into the builder pod so that buildah can use it during the build process. Note: mirrors only work for image pulls and not for image push. So the mirror here will be used when doing the FROM BaseOSImage part in the Containerfile during the build. - How to verify it Replace the value of `BaseOSImage` with a registry/image that doesn't exist. Set up an IDMS, something like this with the mirror and source configured: ``` apiVersion: config.openshift.io/v1 kind: ImageDigestMirrorSet metadata: name: builder-test spec: imageDigestMirrors: - mirrors: - quay.io/umohnani8/mirror-base source: quay.io/umohnani8/og-base mirrorSourcePolicy: AllowContactingSource ``` Create a MachineOSConfig. The mirrors should be resolved and the build process should pull the base image from your mirrored location. I verified this by looking at the build logs and by ensure my \"source\" registry/image didn't actually exist. So the only way it could pull the image is from the mirror. Note mirrors only work on image pulls and not for image push. So the registry to push to should be the actual registry and not something that is mirrored. I don't think there is a way for me to add an e2e test for this, so will have to rely on QE testing for this feature. - Description for the changelog Mount the registries.conf and policy.json with mirror configuration the build pod so it can used during the image build process. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4975",
    "type": "pullRequest",
    "title": "MCO-1558, OCPBUGS-34745: Add support to rebuild and prune OCL images",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Closes Closes Please provide the following information: -- - What I did Add a check to ensure that we rebuild an image if the MOSB exists but the image was deleted from the registry. Also delete the image from the registry when a MOSB is deleted. If the image is currently applied to the node or desired by a node, then the image will not be deleted from the registry even if the MOSB is deleted. - How to verify it Create a MOSC and then create an MC to create another MOSB. Now delete the image from the first MOSB and then delete the MC, this should cause OCL to move back to the previous MOSB. But since the image doesn't exist for it anymore it will rebuild it. Do the same but where the image exists, for this case it won't rebuild and just reuse the existing image. Delete a MOSB and it should delete the image in the registry as well. Note: the renderedImagePushSecret should have enough permissions to be able to delete images for this to work. - Description for the changelog Add support to rebuild and prune OCL images. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4938",
    "type": "pullRequest",
    "title": "OCPEDGE-1690: add dual-replica templates",
    "body": "This PR adds support for TNF(two node fencing) topology templates and installs them when corresponding cluster type is detected"
  },
  {
    "id": "4924",
    "type": "pullRequest",
    "title": "OCPBUGS-53408: wait for build and ensure OS image is actually new",
    "body": "- What I did Occasionally, there is a delay between the time that a new rendered MachineConfig is produced and OCL begins a build. However, a couple of things happen in the interim: - The RenderController updates the MachineConfigPool. Because of the delay mentioned above, the NodeController begins updating all of the nodes with only the new rendered MachineConfig. The OS image remains the same because the NodeController is not ensuring that the image pullspec on the MachineOSConfig is the same as the MachineOSBuild. - Because of the work done to the MCD in the original check that we had to determine whether the image pullspecs were the same is no longer present. Additionally, the logic change there makes it possible for an OS update to always occur whenever OCL is enabled, further bypassing that check. This fixes the behavior by making the following changes. 1. Update the Node Controller to ensure that the both the MachineOSBuild's MachineConfig reference matches the MCP's current rendered MachineConfig while also checking that the MachineOSConfig's image pullspec matches the MachineOSBuild's. In the situation where the MachineOSBuild's pullspec is empty, this check will fail and the Node Controller will requeue. 2. Update the MCD so that even when OCL is enabled, if the OS images are the same, the OS update process is skipped. - How to verify it This bug is difficult to reproduce. However, it seems to occur when multiple OCL-enabled pools are updating simultaneously. - Description for the changelog Wait for build and ensure OS image is actually new"
  },
  {
    "id": "4982",
    "type": "pullRequest",
    "title": "OCPBUGS-54872: Make sure generation fields in MCN do not have a value of 0",
    "body": "Closes: OCPBUGS-54872 - What I did This updates the part of `generateAndApplyMachineConfigNodes` that create's an MCN's `Status.PinnedImageSets` object to only set `LastFailedGeneration` to a real (non-default) value. This is needed due to a validation change being made for the V1 MCN API (ref( - How to verify it _What to look for:_ - Confirming functionality is still working as intended with the new validation rules, including confirmation that no new errors are reported. - Make sure \"generation\" values are never 0. 1. Launch a cluster using the changes in this PR and the dummy API PR( mocking the validation rule updates being imposed for the MCN V1 API. ``` launch 4.19.0-0,openshift/api2272,openshift/machine-config-operator4982 aws,techpreview ``` 2. Make sure MCN is still behaving as expected on valid MC application. a. MCN should transition through conditions. b. `ObservedGeneration` value should increment. c. Observed functionality should overall be consistent with before this change. detailssummaryExample MC/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: MachineConfig metadata: labels: machineconfiguration.openshift.io/role: worker name: 99-worker-testfile spec: config: ignition: version: 3.2.0 storage: files: - contents: source: data:,hello%20world%0A mode: 420 path: /home/core/test /pre /details 3. Make sure PIS status is being reported correctly for a valid PIS application. a. Note that `LastFailedGeneration` should not report a value of `0`. detailssummaryExample Valid PIS/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/openshift-release-dev/ocp-release@sha256:513cf1028aa1a021fa73d0601427a0fbcf6d212b88aaf9d76d4e4841a061e44e - name: quay.io/openshift-release-dev/ocp-release@sha256:61eae2d261e54d1b8a0e05f6b5326228b00468364563745eed88460af04f909b /pre /details ``` $ oc apply -f pis-file $ oc describe machineconfignode/node-name ... Status: ... Pinned Image Sets: Current Generation: 1 Desired Generation: 1 Name: test-pinned .... ``` 4. Make sure PIS status is being reported correctly for an invalid PIS application. a. Note that `LastFailedGeneration` should reflect that the PIS application has failed and `LastFailedGenerationError` should be populated. detailssummaryExample Invalid PIS/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079 - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:fd3692eff21338e900a244dfe62152c959b84d73f2dd4503893de0f3fae61b0b /pre /details ``` $ oc apply -f pis-file $ oc describe machineconfignode/node-name ... Status: ... Pinned Image Sets: Desired Generation: 2 Last Failed Generation: 2 Last Failed Generation Error: failed to execute podman manifest inspect for \"quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079\": exit status 125 Name: test-pinned .... ``` - Description for the changelog OCPBUGS-54872: Make sure generation fields in MCN do not have a value of 0"
  },
  {
    "id": "4962",
    "type": "pullRequest",
    "title": "MCO-1544: Update MCO code to use MCN\u2019s updated v1alpha1 API",
    "body": "- What I did - Version bumps - API bump pulls in changes from & - Client-go bump pulls in changes from - Pull in changes made to the MCN API. - Remove references to statuses `MachineConfigNodeUpdateCompatible` and `MachineConfigNodeUpdateReloaded`. - Remove references to `LastFailedGenerationErrors` field. Add new `LastFailedGenerationError` field. - Generalize the message when `MachineConfigNodePinnedImageSetsDegraded` condition is `True`. - Remove unused `getPinnedImageSetSpecForPools` function to cleanup remaining `MachineConfigNodeSpecPinnedImageSet` references. - How to verify it 1. Launch 4.19 cluster with this code and the API code part of with tech preview enabled. Note that the API PR version is needed due to the v1 CRD deployments. Using ClusterBot, an example launch command is: ``` launch 4.19,openshift/machine-config-operator4962,openshift/api2257 aws,techpreview ``` 2. Observe updated fields in MCN objects. _`UPDATECOMPATIBLE` and `RELOADEDCRIO` should not be in the output of `oc get machineconfignode -o wide`._ ```console $ oc get machineconfignode -o wide NAME POOLNAME DESIREDCONFIG CURRENTCONFIG UPDATED UPDATEPREPARED UPDATEEXECUTED UPDATEPOSTACTIONCOMPLETE UPDATECOMPLETE RESUMED UPDATEDFILESANDOS CORDONEDNODE DRAINEDNODE REBOOTEDNODE UNCORDONEDNODE ip-10-0-125-181.us-west-1.compute.internal master rendered-master-d51baee5aae85f41def583ae900f00d3 rendered-master-d51baee5aae85f41def583ae900f00d3 True False False False False False False False False False False ip-10-0-29-132.us-west-1.compute.internal master rendered-master-d51baee5aae85f41def583ae900f00d3 rendered-master-d51baee5aae85f41def583ae900f00d3 True False False False False False False False False False False ip-10-0-5-15.us-west-1.compute.internal worker rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 True False False False False False False False False False False ip-10-0-59-235.us-west-1.compute.internal worker rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 True False False False False False False False False False False ip-10-0-59-8.us-west-1.compute.internal master rendered-master-d51baee5aae85f41def583ae900f00d3 rendered-master-d51baee5aae85f41def583ae900f00d3 True False False False False False False False False False False ip-10-0-92-170.us-west-1.compute.internal worker rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 rendered-worker-1ddf0545a57e0ea7eaebd1fb6a15bc99 True False False False False False False False False False False ``` _The conditions list of a MachineConfigNode should not include items with type `UpdateCompatible` or `ReloadedCRIO`._ ```console $ oc describe machineconfignode/ip-10-0-110-176.us-west-2.compute.internal Name: ip-10-0-110-176.us-west-2.compute.internal Namespace: Labels: none Annotations: none API Version: machineconfiguration.openshift.io/v1alpha1 Kind: MachineConfigNode Metadata: Creation Timestamp: 2025-04-03T22:08:41Z Generation: 2 Owner References: API Version: v1 Kind: Node Name: ip-10-0-110-176.us-west-2.compute.internal UID: f3d946e9-24d4-4b96-b4a7-4536d79c73a8 Resource Version: 18006 UID: 7f03657f-d52a-4a48-b835-370f22fc773a Spec: Config Version: Desired: rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb Node: Name: ip-10-0-110-176.us-west-2.compute.internal Pool: Name: worker Status: Conditions: Last Transition Time: 2025-04-03T22:08:41Z Message: All pinned image sets complete Reason: AsExpected Status: False Type: PinnedImageSetsProgressing Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the UpdatePrepared phase Reason: NotYetOccurred Status: False Type: UpdatePrepared Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the UpdateExecuted phase Reason: NotYetOccurred Status: False Type: UpdateExecuted Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the UpdatePostActionComplete phase Reason: NotYetOccurred Status: False Type: UpdatePostActionComplete Last Transition Time: 2025-04-03T22:09:55Z Message: Action during update to rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb: Uncordoned Node as part of completing upgrade phase Reason: Uncordoned Status: False Type: UpdateComplete Last Transition Time: 2025-04-03T22:09:55Z Message: Action during update to rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb: In desired config . Resumed normal operations. Reason: Resumed Status: False Type: Resumed Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the Drained phase Reason: NotYetOccurred Status: False Type: Drained Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the AppliedFilesAndOS phase Reason: NotYetOccurred Status: False Type: AppliedFilesAndOS Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the Cordoned phase Reason: NotYetOccurred Status: False Type: Cordoned Last Transition Time: 2025-04-03T22:08:41Z Message: This node has not yet entered the RebootedNode phase Reason: NotYetOccurred Status: False Type: RebootedNode Last Transition Time: 2025-04-03T22:09:55Z Message: Node ip-10-0-110-176.us-west-2.compute.internal Updated Reason: Updated Status: True Type: Updated Last Transition Time: 2025-04-03T22:09:55Z Message: Action during update to rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb: UnCordoned node. The node is reporting Unschedulable = false Reason: UpdateCompleteUncordoned Status: False Type: Uncordoned Last Transition Time: 2025-04-03T22:08:41Z Message: All is good Reason: AsExpected Status: False Type: PinnedImageSetsDegraded Config Version: Current: rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb Desired: rendered-worker-8c82b2aa30e5b7d400201f40ebd660fb Observed Generation: 3 Events: none ``` 3. Apply a valid MC and watch the MCN object throughout the update to see `MachineConfigNodeUpdateRebooted` as a parent phase. - Note that there are now two update paths: - If an update requires a reboot, the post action complete phase will not transition through the unknown -- true -- false phase, only the rebooted node phase will. - If an update does not require a reboot, the post action complete phase will transition through the unknown -- true -- false phase, and the rebooted node phase will not. - To see the following outcomes, apply an MC that requires a node reboot. - To see the post action complete phase transition, trigger an update that will not cause a reboot of the node (ex. a node disruption policy update). _Before the update_ ``` Last Transition Time: 2025-04-03T22:08:12Z Message: This node has not yet entered the RebootedNode phase Reason: NotYetOccurred Status: False Type: RebootedNode ``` _During the reboot_ ``` Message: Upgrade requires a reboot. Reason: RebootedNode Status: Unknown Type: RebootedNode ``` _After successful reboot_ ``` Message: Node has rebooted Reason: RebootedNode Status: True Type: RebootedNode ``` 4. Apply an invalid PIS, such as the one below. ``` apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079 - name: quay.io/rh-ee-ijanssen/machine-config-operator@sha256:fd3692eff21338e900a244dfe62152c959b84d73f2dd4503893de0f3fae61b0b ``` _The error message in the `PinnedImageSetsDegraded` MCN conditions and PIS status reference should now be a generalized message and the `LastFailedGenerationErrors` field should now be a string type field called `LastFailedGenerationError`._ ``` $ oc describe machineconfignode ip-10-0-36-180.us-east-2.compute.internal ... Status: Conditions: Last Transition Time: 2025-04-03T12:27:06Z Message: node is prefetching images: ip-10-0-36-180.us-east-2.compute.internal Reason: ImagePrefetch Status: True Type: PinnedImageSetsProgressing ... Last Transition Time: 2025-04-03T12:27:07Z Message: One or more PinnedImageSet is experiencing an error. See PinnedImageSet list for more details Reason: PrefetchFailed Status: True Type: PinnedImageSetsDegraded ... Pinned Image Sets: Desired Generation: 2 Last Failed Generation: 2 Last Failed Generation Error: failed to execute podman manifest inspect for \"quay.io/rh-ee-ijanssen/machine-config-operator@sha256:65d3a308767b1773b6e3ead2ec1bcae499dde6ef085753d7e20e685f78841079\": exit status 125 Name: test-pinned ``` 5. Apply a valid PIS, such as the one below. ``` apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/openshift-release-dev/ocp-release@sha256:513cf1028aa1a021fa73d0601427a0fbcf6d212b88aaf9d76d4e4841a061e44e - name: quay.io/openshift-release-dev/ocp-release@sha256:61eae2d261e54d1b8a0e05f6b5326228b00468364563745eed88460af04f909b ``` _The MCN conditions and PIS status reference should report as before._ _Note that the new MCN API validation requires that `LastFailedGenerationError` is populated when a `LastFailedGeneration` value is reported. Since the default `LastFailedGeneration` of 0 always showed on a successful PIS application (as tested in cluster version `4.19.0-0.nightly-arm64-2025-03-21-080021`), an empty string for `LastFailedGenerationError` is now also being reported. This will not be fixed in this PR as it is a result of an existing bug (see OCPBUG-54592( ``` ... Status: Conditions: Last Transition Time: 2025-04-03T11:53:06Z Message: All pinned image sets complete Reason: AsExpected Status: False Type: PinnedImageSetsProgressing ... Last Transition Time: 2025-04-03T11:53:06Z Message: All is good Reason: AsExpected Status: False Type: PinnedImageSetsDegraded ... Pinned Image Sets: Current Generation: 1 Desired Generation: 1 Last Failed Generation: 0 Last Failed Generation Error: Name: test-pinned ... ``` - Description for the changelog MCO-1544( Update MCO code to use MCN\u2019s updated v1alpha1 API"
  },
  {
    "id": "4932",
    "type": "pullRequest",
    "title": "OCPBUGS-53425: Make mtu-migration run after wait-for-primary-ip",
    "body": "When NMState is used to manage br-ex, we need mtu-migration to run after the wait-for-primary-ip service so we know the network is ready to go. If not, the script can have trouble getting the current configuration. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4970",
    "type": "pullRequest",
    "title": "OCPBUGS-54611: pkg/operator/status: Drop kubelet skew guard",
    "body": "The kubelet skew guard is from 1471d2c4e7 (2658). But the Kube API server also landed a similar guard in openshift/cluster-kube-apiserver-operator@9ce4f74775 (openshift/cluster-kube-apiserver-operator1199). openshift/enhancements@0ba744e750 (openshift/enhancements762) had shifted the proposal from MCO-guards to KAS-guards, so I'm not clear on why the MCO guard landed. This pull request drops it, to consolidate around the KAS-side guard. Closes: OCPBUGS-54611 - What I did Dropped the MCO's kubelet-skew guard, because the Kube API server's kubelet-skew guard is enough on its own. - How to verify it 1. Install a 4.19 cluster. 2. Create a MachineConfigPool where you override the RHCOS image to use one from 4.17 (maybe there's some fancy MCO way to do this?). 3. The cluster's `kube-apiserver` ClusterOperator will be `Upgradeable=False`, and `oc adm upgrade` will point out the old Nodes. Without this fix, the `machine-config` ClusterOperator will be `Upgradeable=True`, but will have a `reason` and `message` complaining about the old Node versions. With this fix, the `machine-config` ClusterOperator will still be `Upgradeable=True`, but will not complain about the old-kubelet/Node complaints. - Description for the changelog Probably not worth a change-log entry, because so few folks are likely to bump up against these skew constraints, and we're not adding or removing a guard at the OCP level, just simplifying the OCP-scoped messaging by consolidating around the KAS-side wording."
  },
  {
    "id": "4857",
    "type": "pullRequest",
    "title": "OCPBUGS-50535,OCPBUGS-54384: kubelet-service: narrow down restorecon path",
    "body": "- What I did Previously the `restorecon` command was applies on /var/lib/kubelet/ This caused the command to hang forever on a stale NFS volumes. To minimize the affect of the command this command suggest few things: 1. Narrowing down the path so the command will take affect only for the concrete use case we aware of, where pod-resources changes its label due to: 2. Add the `-i` flag which ignores the path if it doesn't exist. This is done to make sure we're not failing the service in case of missing path. Fixes: OCPBUGS-50535( - How to verify it 1. Check the new kubelet.service updated correctly. 2. Verify the service is not hanging on stale NFS mounts anymore. - Description for the changelog Narrow down restorecon command's path running as part of kubelet systemd service"
  },
  {
    "id": "4933",
    "type": "pullRequest",
    "title": "OCPBUGS-54175: Add /etc/docker/certs.d to template",
    "body": "OLMv1 uses containers/images/v5 which looks in the /etc/docker/certs.d directory for certificates used in image fetching. It is necessary for local registries as well as additional CAs specified in images.config. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added /etc/docker/certs.d to template - How to verify it Ensure /etc/docker/certs.d exists after cluster startup - Description for the changelog Add /etc/docker/certs.d to template !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4976",
    "type": "pullRequest",
    "title": "MCO-1587: Add runbook for ExtremelyHighIndividualControlPlaneMemory",
    "body": "- What I did Added a runbook I wrote to the ExtremelyHighIndividualControlPlaneMemory Alert - How to verify it Trigger ExtremelyHighIndividualControlPlaneMemory on cluster. Alert should now display associated runbook. - Description for the changelog Added to alert as a runbook_url."
  },
  {
    "id": "4969",
    "type": "pullRequest",
    "title": "OCPBUGS-49737: GCP: Include the gcp-routes.service for all GCP installs",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did The openshift-gcp-routes service is required eve during GCP installs with in-cluster DNS. During some early work on the in-cluster DNS feature, I had concluded that this service may not be necessary. After testing the in-cluster DNS further it is clear that this service is required even in this case. - How to verify it Enable `userProvisionedDNS` via install-config for GCP platform - Description for the changelog !-- Allows openshift-gcp-routes service to run on all GCP installs whether we use the cloud default DNS or in-cluster DNS. --"
  },
  {
    "id": "4948",
    "type": "pullRequest",
    "title": "OCPBUGS-52656: Update the MCN PIS status of only the primary pool",
    "body": "- What I did Do not add the same PIS to the MCNStatusPIS for separate different MCPs - How to verify it 1) Create a custom MCP 2) Add a worker node to the custom MCP 3) Create a PIS targeting the Worker MCP 4) Look at the MCD logs and ensure no error like \"Failed to update MCN status\" pops up - Description for the changelog !-- Update the status of only the primary pool --"
  },
  {
    "id": "4965",
    "type": "pullRequest",
    "title": "OCPBUGS-54570: Drop broken feature which statically configures DHCP addresses",
    "body": "NetworkManager dispatcher scripts 30-static-dhcp and 30-static-dhcpv6 modify the NetworkManager connection of the OVS interface ovs-if-br-ex in case of a infinite DHCP lease: They will change ipv4.method and ipv6.method from auto to manual in order to statically assign DHCP addresses etc. The purpose of this feature was to enable nodes to keep their network configuration and network connectivity when their DHCP server becomes unavailable for any reason 0. For example, this allowed users to deploy OpenShift nodes with \"static\" ip addresses, i.e. ip addresses with infitite DHCP leases, using an initial DHCP server that would then be removed once the cluster is up. However, the changes by the dispatcher scripts to NM connection ovs-if-br-ex were saved to disk which conflicts with the rollback behaviour of configure-ovs.sh (ovs-configuration.service): OVN-Kubernetes configuration is rolled back and (re)generated on every boot, to take in account any changes that have possibly been applied in the standard configuration sources. In OpenShift releases without PR 4877 2, the NM connection file for ovs-if-br-ex in /etc/NetworkManager/system-connections will not be removed during rollback which causes conflicts when changes have been applied in the standard configuration sources. With PR 4877 2, the NM connection file is removed during rollback, defeating the purpose of this feature. Nowadays, OpenShift has proper support for static ip addresses built-in and this inf-lease-to-static feature has not been documented since 4.9. Both dispatcher scripts were only kept due to the \"no breaking changes\" policy in OpenShift. However, because of the conflict with configure-ovs.sh's rollback feature, those dispatcher scripts could finally be removed. 0 1 2"
  },
  {
    "id": "4959",
    "type": "pullRequest",
    "title": "CORENET-5524: Modify regex for ipsec showstates command",
    "body": "The Libreswan 5.2 uses a slightly updated string for displaying established child SAs for an IPsec connection. So this PR updates ipsec showstates command with right regex value. The modified command is harmless and can also work well with Libreswan 4.x version."
  },
  {
    "id": "4833",
    "type": "pullRequest",
    "title": "OCPBUGS-49894: Ensure proxy config exists when reverting from OCL to non-OCL",
    "body": "- What I did I added the proxy config to the revert systemd service that gets written whenever one reverts from OCL to non-OCL. This is needed for the same reason that the revert systemd mechanism is; after rebooting into the factory OS, all of the configs are gone and the node effectively needs to be re-bootstrapped. While this works, the proxy config was not being recognized since it was effectively not there. Additionally, this moves file management for all of the files needed into the RevertService implementation and outputs these files as part of the Ignition config that gets written to disk. This consolidates that process and makes things a bit easier to reason about. Note: This PR is based upon which must land before this PR does. - How to verify it 1. Bring up a cluster with OCL and a proxy config. 2. Create a MachineOSConfig for a given pool and wait for the build to complete. 3. Once the build is complete, label a node so that it joins the OCL-enabled pool. 4. Once the node has rebooted into the OCL image, move the node back to the non-OCL-enabled pool. 5. The node should revert back to the non-OCL configuration. - Description for the changelog Ensure proxy config exists when reverting from OCL to non-OCL"
  },
  {
    "id": "4964",
    "type": "pullRequest",
    "title": "OCPNODE-3020: Remove `cgroupv1` references",
    "body": "Remove the references of `cgroupv1` - Do not support setting of `cgroupMode` field to `v1` of the `nodes.config.openshift.io` object - Remove the `cgroupv1` deprecation message References: API PR - Enhancement Proposal -"
  },
  {
    "id": "4960",
    "type": "pullRequest",
    "title": "MCO-1627: Get rid of setting mcn.Spec.PinnedImageSets field",
    "body": "MCN.Spec.PinnedImageSets should not exist. There is no benefit to it existing as a \"psuedo\" Status that we don't react to"
  },
  {
    "id": "4922",
    "type": "pullRequest",
    "title": "OCPBUGS-38869: Update desired config in MCN on OCL update",
    "body": "Closes: OCPBUGS-38869 - What I did This adds an MCN spec update during the OCL update flow to ensure the desired config version is properly set when OCL is enabled. - How to verify it 1. Create a cluster and enable OCL. 2. Apply an MC targeting the MCP with OCL enabled. 3. Watch the MCN objects during the MC application. - The DESIREDCONFIG column in the `oc get machineconfignode` output should update properly. - The spec.configVersion.desired value in the `oc describe machineconfignode/node-name` output should update properly. - Description for the changelog OCPBUGS-38869: Update desired config in MCN on OCL update"
  },
  {
    "id": "4807",
    "type": "pullRequest",
    "title": "OCPBUGS-48675, OCPBUGS-48808, OCPBUGS-46421: Ensure build job is deleted when rebuild is triggered",
    "body": "Ensure that the build job under the MOSB is deleted before deleting the MOSB when the rebuild annotation is added to the MOSC. This ensures proper cleanup so that the build can start again. Closes Closes Closes !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Ensure job is cleaned up when rebuild is triggered. - How to verify it Follow the steps in the bug l With this fix, the rebuild should be triggered. - Description for the changelog Ensure rebuild is actually triggered when the rebuild annotation is added to the MOSC. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4934",
    "type": "pullRequest",
    "title": "MCO-1522: Adapt MCO to use PIS V1 API",
    "body": "Bumps the API version Bumps the client-go version Modify the MCC, MCD and Tests to include the V1 PIS API"
  },
  {
    "id": "4941",
    "type": "pullRequest",
    "title": "OCPBUGS-54161: use the same success criteria for OCL e2e tests",
    "body": "- What I did There was a potential discrepancy in the success / fail criteria for batchv1.Jobs in our E2E tests which could potentially explain why the `TestControllerEventuallyReconciles` test frequently fails. The following serves as a potential remedy: - Set some of the values such as maxBackoff and completions as constants so that we can adjust them more easily in the future since we'll only have to adjust them in one place. - Exported the `MapJobToBuildStatus()` function from `imagebuilder` and modified the `TestControllerEventuallyReconciles` to use that plus the various MachineOSBuild statuses in order to determine whether a job is successful or not. - How to verify it Run e2e-gcp-op-ocl - Description for the changelog Use the same success criteria for OCL e2e tests"
  },
  {
    "id": "4903",
    "type": "pullRequest",
    "title": "MCO-1579: Bump ignition to 3.5",
    "body": "- What I did The machine-config-operator now accepts Ignition 3.5 configs and allows nodes to reach the MCS asking for 3.5 config or earlier versions, generated by converting the 3.5 configuration to the requested version, if supported. To achieve this the following changes were done in this PR: - Bump the Ignition dependency to v2.20.0, that implements Ignition 3.5 - Change all the code (mainly imports) to use as the default Ignition config type the 3.5 one instead of the 3.4 - Add the conversion methods for 3.5 to 2.2 and 3.5 to 3.4 - Add the 3.5 version in the MCS - Update the UTs to test 3.5 like any previous version - How to verify it - Deploy a cluster created from an image that contains this change. - Check that the rendered configurations are both, master and worker, Ignition 3.5 ones. - Ensure that all the generated MCs are Ignition 3.5 too. The kubelet MCs can be used as reference. - Create a new Ignition 3.5 MC for the worker pool and check that both, the user defined MC and the worker rendered config are Ignition 3.5. - Follow this( section in the HACKING.md and curl the MCs to get the config for both pools in versions: 3.5, 3.4 and 2.2. - Description for the changelog Bump of the default Ignition version from 3.4 to 3.5. All configurations are now stored, by default, in Ignition 3.5."
  },
  {
    "id": "4949",
    "type": "pullRequest",
    "title": "NO-ISSUE: MCN changes for API validation",
    "body": "- What I did Update the `NotYetSet` constant used throughout the upgrade monitor to match the validation enforced by the updated MCN API( - How to verify it Launch cluster with this and the API PR. ``` launch 4.19,openshift/api2201,openshift/machine-config-operator4949 aws,techpreview ``` - Description for the changelog Upgrade monitor: Update default NotYetSet placeholder constant"
  },
  {
    "id": "4886",
    "type": "pullRequest",
    "title": "OCPNODE-2340: update (Cluster)Imagepolicy PKI config to policy.json",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Update controller code to rollout PKI configuration from ClusterImagePolicy and ImagePolicy CRD to policy.json - How to verify it - enable featuregate `featureSet: DevPreviewNoUpgrade` - script ( certificate chain for PKI - create test clusterimagepolicy or imagepolicy. ```yaml apiVersion: config.openshift.io/v1alpha1 kind: ClusterImagePolicy metadata: name: pki-policy spec: scopes: - example.com policy: rootOfTrust: policyType: PKI pki: caRootsData: base64 encoding of generated root-ca.pem caIntermediatesData: base64 encoding of generated intermediate-ca.pem pkiCertificateSubject: email: subjectAltName email hostname: subjectAltName DNS ``` - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4914",
    "type": "pullRequest",
    "title": "OCPBUGS-52827: Fixing typos for MachineConfigNode",
    "body": "Closes : OCPBUGS-52827 - What I did Fixed typos for MachineConfigNode. - How to verify it N/A - Description for the changelog OCPBUGS-52827: Fixes typos for MachienConfigNode"
  },
  {
    "id": "4870",
    "type": "pullRequest",
    "title": "OCPBUGS-51130: In OCL. Cannot install extensions",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Installs fuse-overlayfs and configures it in storage.conf for rootless containers. - How to verify it 1. opt into OCL 2. create and apply a MC that has ext enabled - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4854",
    "type": "pullRequest",
    "title": "OCPBUGS-52280, SDN-5330: Add ipsec connect wait service",
    "body": "The IPsec upgrade CI job (`e2e-aws-ovn-ipsec-upgrade`) is never passing and failing with api connection disruptive events and some cluster operator are unavailable for more than allowed period. so we are addressing those issues with this PR by fixing two things. Add ipsec connect wait service When node goes for a reboot on an IPsec enabled cluster, once it comes up, after ovn-ipsec-host pod is deployed, the ovs-monitor-ipsec process deployed by the pod parses /etc/ipsec.d/openshift.conf file, makes pluto daemon to establish IKE SAs with peer nodes, but these are established after kubelet is started, workload pods scheduled on this node would fail communicating with other node pods until IPsec SAs are established. So the commit e96fe31 adds wait-for-ipsec-connect.service systemd service which depends on ipsecenabler.service created by IPsec machine config. This new service loads existing IPsec connections created by OVN/OVS into pluto daemon with \"auto=start\" option and waits upto 3 minutes until IPsec tunnels are established. This gives a better chance IPsec SAs are established even before kubelet is started and when ovn-ipsec-host pod comes up later, it doesn't have to do anything for existing IPsec connections. The wait-for-ipsec-connect.service service is added into the base template to avoid two reboots during upgrade if it goes into IPsec machine configs rendered by the network operator. Add crio dependency for ipsec.service We noticed pluto is tearing down established IPsec connections in parallel with crio stopping all pod containers which includes stopping api server pod container. It happens when node reboot initiated for rendering new machine configs at the time of OCP upgrade. This creates api connection disruptions in the cluster, these disruptions are generating events, caught by origin monitor tests and failing IPsec upgrade CI lane and it may also cause noticeable temporary pod traffic failure during upgrade for IPsec enabled cluster. Hence the commit fcf67a9 adds Before=crio.service dependency on the ipsec.service so that pluto daemon is stopped after the shutdown of crio service, all pod containers are stopped on the node. This gives enough room for clients to gracefully move to another control plane node for API connections. Big thanks to @igsilya for helping to troubleshoot and fixing this problem."
  },
  {
    "id": "4822",
    "type": "pullRequest",
    "title": "OCPNODE-2842: Set Upgradeable=False when cluster is on cgroup v1",
    "body": "- What I did Added code to set the cluster operator's status to `Upgradeable=False` when a cluster is found to be on cgroup v1 - How to verify it Update the `CgroupMode` field of ndes.config object to `v1` and verify that the MCO cluster operator's status has the `Upgradeable=False` condition - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: -- Cgroupsv1 support deprecation condition/message has been added in the last release and this PR helps in updating all the clusters to cgroup v2 before upgrading to ocp 4.19 References: - Enhancement Proposal: - API PR:"
  },
  {
    "id": "4915",
    "type": "pullRequest",
    "title": "\"NO-ISSUE: ensure that client configs are not mutable\"",
    "body": "- What I did This fixes a bug in CreateLongLivedPullSecret() where the base rest.Config was being mutated. Now, any calls to clientset.GetRestConfig() will get a copy of the config that can be mutated without affecting the original config. - How to verify it Run the test-ocl job. Also, run the onclustertesting devex helper, which is where this was occurring. - Description for the changelog Ensure that client configs are not mutable"
  },
  {
    "id": "4876",
    "type": "pullRequest",
    "title": "MCO-1501: Add support for custom MCPs in MCN",
    "body": "- What I did This work adds support for custom MCPs in MCN. The update makes use of the previously existing `GetPrimaryPoolForNode` function to get the pool a node is associated with. - How to verify it _Test for standard case_ 1. Create a custom MCP named `infra` and add a worker node to the new MCP. 2. View the `machineconfignode` object for the `infra` node and check that the pool name matches. ``` $ oc describe machineconfignode node-name ... Spec: ... Pool: Name: infra ``` 3. Check that the pool names are properly populated for all `machineconfignode`. ``` $ oc get machineconfignode NAME POOLNAME DESIREDCONFIG CURRENTCONFIG UPDATED ip-10-0-101-100.us-west-2.compute.internal infra rendered-infra-xxxxx rendered-infra-xxxxx True ... ``` _Test node with multiple labels_ 1. Create 2 MCPs named `infra` and `custom` and add one worker node to each new MCP. 2. Add the `custom` label to the the node part of the `infra` MCP. ``` oc label node node-name node-role.kubernetes.io/custom= ``` 3. View the `machineconfignode` object for the node part of the `infra` pool and check that the pool name is properly populating as `infra`. _Note that the node will not be a part of `custom`, as that label was added after the node joined the `infra` pool and the node can only be a part of one MCP._ ``` $ oc describe machineconfignode node-name ... Spec: ... Pool: Name: infra ``` 4. Check that the pool names are properly populated for all `machineconfignode`. ``` $ oc get machineconfignode NAME POOLNAME DESIREDCONFIG CURRENTCONFIG UPDATED ip-10-0-101-100.us-west-2.compute.internal infra rendered-infra-xxxxx rendered-infra-xxxxx True ip-10-0-113-251.us-west-2.compute.internal custom rendered-custom-xxxxx rendered-custom-xxxxx True ... ... ``` 5. Remove the `infra` label from the infra node. This will force the node to become part of the `custom` MCP due to that label on the node. ``` oc label node node-name-2 node-role.kubernetes.io/infra- ``` 6. View the `machineconfignode` object for the node previously part of the `infra` pool and check that the pool name is now properly populating as `custom`. ``` $ oc describe machineconfignode node-name ... Spec: ... Pool: Name: custom ``` 7. Check that the pool names are properly populated for all `machineconfignode`. ``` $ oc get machineconfignode NAME POOLNAME DESIREDCONFIG CURRENTCONFIG UPDATED ip-10-0-101-100.us-west-2.compute.internal custom rendered-custom-xxxxx rendered-custom-xxxxx True ip-10-0-113-251.us-west-2.compute.internal custom rendered-custom-xxxxx rendered-custom-xxxxx True ... ``` _Test by deleting MCP_ 1. Create a custom MCP named `custom` and add a worker node to the new MCP. Validate the `machineconfignode` for the node in the new MCP. 2. Remove the custom pool labels from the nodes and delete the `custom` MCP. This will force the node previously part of the pool to become part of the default `worker` pool. ``` $ oc label node node-name node-role.kubernetes.io/custom- $ oc delete mcp/custom ``` 3. View the `machineconfignode` object for the node part previously part of the `custom` pool and check that the pool name is now properly populating as `worker`. ``` $ oc describe machineconfignode node-name ... Spec: ... Pool: Name: worker ``` 4. Check that the pool names are properly populated for all `machineconfignode`. ``` $ oc get machineconfignode NAME POOLNAME DESIREDCONFIG CURRENTCONFIG UPDATED ip-10-0-101-100.us-west-2.compute.internal worker rendered-worker-xxxxx rendered-worker-xxxxx True ... ``` - Description for the changelog MCO-1501( Added support for custom MCPs in MCN"
  },
  {
    "id": "4912",
    "type": "pullRequest",
    "title": "OCPBUGS-53085: Add scc label to arbitor crio-metrics-proxy",
    "body": "I think we missed this originally since those PRs were being worked on around the same time. Fixes e.g. Marking no-jira since we don't need to backport anything (and arbiter hasn't yet GA'ed) cc @eggfoobar"
  },
  {
    "id": "4907",
    "type": "pullRequest",
    "title": "OCPBUGS-51150: daemon: ensure ostree-finalize-staged is started before rebooting",
    "body": "This works around the race condition in libostree identified in Since we're conveniently already running `reboot` via `systemd-run`, we can just inline more requirements to ensure that the transient unit doesn't start until `ostree-finalize-staged.service` has been started. Fixes:"
  },
  {
    "id": "4609",
    "type": "pullRequest",
    "title": "OCPBUGS-44185: Race in configure-ovs.sh affects bonding interface configuration.",
    "body": "Bonded network configurations with mode=active-backup and fail_over_mac=follow are not functioning due to a race when activating network profiles. activate_nm_connections() attempts to activate all its generated profiles that are not currently in the \"active\" state. As autoconnect-slaves is set, once br-ex is activated the bond and all its slaves are automatically activated. Their state is set to \"activating\" until they become active. The \"activating\" state is not tested for therefor some of the subordinate profiles maybe activated multiple times causing a race in the bonding driver and incorrectly configuring the bond. Link: Fixes: 4605 Please provide the following information: Please see Testing: verify a 2 slave bond with mode=active-backup and fail_over_mac=follow converts to a working OVS config. The slaves should not have the same MAC. Other configs should be tested as well. pull request for inclusion in the changelog: Fix race in configure-ovs.sh that affects bonding interface configuration."
  },
  {
    "id": "4900",
    "type": "pullRequest",
    "title": "OCPBUGS-52213: Update ObservedGeneration in KubeletConfig",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did kubelet_config_controller: Update ObservedGeneration - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4866",
    "type": "pullRequest",
    "title": "RHEL-79554: Consolidate OpenStack and PowerVS hostname handling into mco-hostname script",
    "body": "- What I did This change simplifies hostname management for OpenStack and PowerVS platforms by consolidating their handling into the existing `mco-hostname` script. Introduces `set_openstack_hostname` and `set_powervs_hostname` functions in `mco-hostname` which until now was only used by GCP. Removes the standalone `openstack-afterburn-hostname` script and replaces its invocation with `mco-hostname --openstack`. Updates OpenStack and PowerVS systemd service units to call `mco-hostname` instead of using individual scripts. Renames `afterburn-hostname.service.yaml` to `openstack-hostname.service.yaml` and `powervs-hostname.service.yaml` for clarity. Ensures `RemainAfterExit=yes` is set in relevant services to persist hostname changes. This refactoring reduces redundancy, improves maintainability, and aligns hostname configuration across platforms. - How to verify it Ensure that afterburn hostname service is not in error state and that the hostname is correctly set. - Description for the changelog Fix issue with afterburn hostname retrieval by avoiding /dev/stdout in PowerVS."
  },
  {
    "id": "4885",
    "type": "pullRequest",
    "title": "MCO-1485: MCO:1486: MCO-1324: Attempt stub Ignition upgrade",
    "body": "- What I did - If a `MachineSet` enrolled for boot image updates has a spec 2 Ignition stub, the boot image controller will attempt to upgrade it to the latest Ignition version used by the MCO(which at the moment, is `3.4.0`). - If the upgrade fails, the boot image controller will degrade and abort the boot image update. When an upgrade is successful, the timestamp and new version is annotated on the secret object. - The boot image controller will no longer hardcode an update enrolled `MachineSet` to `-managed` stub. The e2e tests have been adjusted accordingly. - As is now fixed, we can directly use the `releaseVersion` in the `coreos-bootimages` configmap instead of the one written into the configmap by the MCO. - Added an e2e to verify the stub upgrade behavior - How to verify it - Manually edit the Ignition stub in a `-user-data` secret to use a spec 2 stub. This link( should give you an idea of what a spec 2 stub should look like. Reference the secret in a `MachineSet` object and then opt-in said `MachineSet` for boot image updates. - Check the MCC logs to ensure that the stub upgrade successfully took place. This should also be apparent by examining the contents and the annotation on the `-user-data` secret. - Scale up a node that uses this Ignition stub. This should succeed. Error modes: I haven't been able to test this, because I'm not sure how to create an un-upgradeable 2.2 stub. Once could reference this \"invalid stub\" in a `MachineSet` enrolled for boot image updates, and this should result in a degrade."
  },
  {
    "id": "4895",
    "type": "pullRequest",
    "title": "MCO-1537: Add MCDRebootError runbook to prometheus rules",
    "body": "Please provide the following information: - What I did Added a runbook I wrote to the MCDRebootError Alert - How to verify it Trigger MCDRebootError on cluster. Alert should now display associated runbook. - Description for the changelog Added alert as a runbook_url."
  },
  {
    "id": "4896",
    "type": "pullRequest",
    "title": "NO-JIRA: Update the MCS iptables debug command in docs",
    "body": "- What I did Updated the HACKING docs to remove the usage of the OPENSHIFT-BLOCK-OUTPUT iptables chain, that no longer exists. - How to verify it In a running cluster, run the `oc debug` command in a node and follow the modified HACKING.md instructions. - Description for the changelog The OPENSHIFT-BLOCK-OUTPUT chain does not exist anymore. Now, to unblock the connectivity to the MCS the two rules that target its ports (22623 and 22624) in the forward chain should be removed."
  },
  {
    "id": "4825",
    "type": "pullRequest",
    "title": "OCPBUGS-43896: add revert logic to OCL path in MCD",
    "body": "- What I did If a problem occurs while attempting to reboot a given node while OCL is enabled, the degradation message did not indicate what the problem was. Instead, it would indicate a problem with rpm-ostree because it would attempt to reapply the same image, which it can't do. Additionally, the MCDRebootError metric was not being surfaced in certain cases (although I did not actually observe this to be the case). To remedy this, I did the following: - Refactored the onClusterBuildUpdate() function in the MCD to include more state restorations in the event of an error. Additioanlly, this function now uses the applyOSChanges() method which includes benefits such as additional eventing and metrics. - Refactored the finalizeOCLRevert() function to do more state restorations. - Modified the machineConfigDiff object to include a boolean oclEnabled field which will allow us to use that information. This includes the creation of a new constructor just for OCL cases. - How to verify it 1. Bring up a cluster. 2. Enable OCL. 3. Break reboots on one of the worker nodes by doing something like: `$ oc debug node-name -- chroot /host sh -c \"mount -o remount,rw /usr; mv /usr/bin/systemd-run /usr/bin/systemd-run2\"` 4. Move that worker node into the layered pool. 5. Wait for the MCDRebootError to appear in the Alerts / Metrics part of the web UI console. There should also be a message on the node object which indicates the cause of the failure. 6. Fix the reboot process by doing something like: `$ oc debug node-name -- chroot /host sh -c \"mount -o remount,rw /usr; mv /usr/bin/systemd-run2 /usr/bin/systemd-run\"`. 7. The node should eventually reboot into the correct configuration / image. When that happens, the degradation message should be cleared from the node object. Additionally, the MCDRebootError alert / metric should clear. - Description for the changelog Make MCDRebootErrors clearer for OCL"
  },
  {
    "id": "4797",
    "type": "pullRequest",
    "title": "MCO-1515: Kube bump to 1.32",
    "body": "Bumped dependencies: ``` go get -u k8s.io/api go get -u k8s.io/code-generator go get -u k8s.io/component-base go get -u k8s.io/kube-proxy go get -u k8s.io/utils go get -u k8s.io/klog go get -u k8s.io/klog/v2 go get -u sigs.k8s.io/controller-runtime go get -u github.com/openshift/build-machinery-go go get -u sigs.k8s.io/controller-tools go get -u github.com/openshift/api go get -u github.com/openshift/client-go go get -u github.com/openshift/library-go go get -u k8s.io/cri-api go get -u k8s.io/kubectl go get -u k8s.io/kubelet make go-deps ``` operator.go: NewKubeRecorder now needs a Passive clock as an argument status.go: SetStatusConditions now needs a Passive clock as an argument Dockerfile: Multi arch builds for 1.32 golang is not yet supported, hence reverting"
  },
  {
    "id": "4767",
    "type": "pullRequest",
    "title": "OPNET-629: Mark haproxy unhealthy if no healthy backends",
    "body": "Previously we avoided doing this because of potential issues in unhealthy clusters where backends were flapping and we didn't want to trigger failovers. However, given the nature of the firewall rule monitor check that approach was not effective anyway and allowing HAProxy to report its own status to the monitor is much more robust than relying on API calls being routed correctly when API rollouts are happening. This is being implemented as a separate monitor endpoint because we don't want the Kubelet liveness probes to fail just because there are no backends (which is an expected state in early cluster deployment). That would trigger unnecessary crash loops. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4861",
    "type": "pullRequest",
    "title": "OCPBUGS-44602: Set ownerReference for OCL build objects",
    "body": "Closes OCPBUGS-44602( !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Set an owenrship hierarchy for the OCL build objects created to ensure that everything is linked and cleaned up properly. Here is how the ownerships are created: - MOSC owns the MOSB - MOSB owns the Job - Job owns the configmaps and secrets - How to verify it Create a MOSC and delete the build objects to verify that their dependencies are cleaned up. Also, run `oc get object -o yaml` to ensure that the ownerReference is set for them. - Description for the changelog Add ownerReferences for OCL build objects !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4877",
    "type": "pullRequest",
    "title": "OCPBUGS-41489: configure-ovs workaround for ovs-if-br-ex bug",
    "body": "Due to some unexpected behavior when applying NMState configuration, the ovs-if-br-ex connection profile is being persisted to /etc/NetworkManager/system-connections when it shouldn't be. By default, configure-ovs only cleans the /run directory, but if we also clean /etc even when it's not supposed to be used then it will unblock a number of users who are currently hitting this bug. This also swaps the order of the master and slave-type parameter in the nmcli call since we discovered the previous ordering is ineffective. With the removal of the spurious nmconnection file it's likely that this doesn't matter, but it won't hurt to have it there. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4811",
    "type": "pullRequest",
    "title": "OCPBUGS-48810: Ensure that build jobs are always reconciled",
    "body": "- What I did If the machine-os-builder pod is stopped and a running job completes simultaneously, it is possible that the machine-os-builder pod will ignore it once it has been rescheduled. Although the build controller is aware of the existence of the job object, because it has not transitioned state, it is ignored. To avoid this, we check each added job object and reconcile it accordingly by updating the MachineOSBuild status according to our state transition rules. Note: This needs to be rebased and land after openshift/machine-config-operator4756 does because it is based upon those changes. - How to verify it One could verify this by terminating the machine-os-builder pod at approximately the same time as a build job completes. In that situation, the MachineOSBuild should be updated after the machine-os-builder pod is rescheduled and begins running. Also, the unit test suite has an added test for this specific scenario. - Description for the changelog Ensure that build jobs are always reconciled"
  },
  {
    "id": "4868",
    "type": "pullRequest",
    "title": "No-Issue: Remove OCL Extensions test",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did We will be switching to using the legacy method of installing extensions instead of doing it in the containerfile for OCL. Remove the test as it is failing constantly and blocking PRs Reference bug - How to verify it The e2e-ocl tests should pass now - Description for the changelog Remove ocl extensions test !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4843",
    "type": "pullRequest",
    "title": "OCPEDGE-1493: Add 2no-ha extension support required by Two Node OpenShift",
    "body": "See: - Description for the changelog Add 2no-ha extension support required by Two Node OpenShift"
  },
  {
    "id": "4856",
    "type": "pullRequest",
    "title": "OCPBUGS-50849: add RHEL variant to IsEL() check",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added an additional case for the isEL() check to account for the changes in `/etc/os-release` from RHCOS layers EP( Some more context here: - How to verify it The test listed in the bug, `periodic-ci-openshift-openshift-tests-private-release-4.19-multi-nightly-gcp-ipi-ovn-ipsec-arm-mixarch-f14` should succeed. I don't think there is a way to directly run it from this PR, so @sergiordlr will be doing this test manually via the QE private deck. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4873",
    "type": "pullRequest",
    "title": "NO-ISSUE: increase WaitForPoolComplete() timeout",
    "body": "Bumping the test timeout by 5 minutes since we are seeing a lot of failures on this particular `PollUntilContextTimeout` call in `e2e-gcp-op`"
  },
  {
    "id": "4864",
    "type": "pullRequest",
    "title": "OCPBUGS-51009: OSUpdateStarted event should only be emitted on actual OS updates",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - Stopped emitting `OSUpdateStarted` events for a specific scenario: there are some extensions currently in use, but no extension installs/uninstalls are taking place. In such cases, `rpm-ostree update` is not run and no OS updates are happening. I suspect this a special case that we accounted for that is no longer in use. - Made the `OSUpdateStarted` event's message a bit more verbose for easier debugging. - How to verify it - Existing units/e2es should pass, this should not break extension functionality. - Not sure this needs pre merge QE testing. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4823",
    "type": "pullRequest",
    "title": "OCPBUGS-47743: Update cluster-reader ClusterRole permissions",
    "body": "- What I did - Update the cluster-reader ClusterRole to have read-only permissions (get, list, and watch). - How to verify it _Testing permission updates:_ 1. Use this PR to launch a cluster. 2. View the cluster-reader permissions in the Openshift UI by going to `User Management` &8594; `Roles` &8594; `cluster-reader` _Testing that functionality remained unchanged:_ - x Tests pass - x The cluster-reader permissions for the `machineconfignodes` resource were originally updated in 4062, so I tested that this permission change did not re-introduce the bug fixed in that PR. - x This updates the permissions for the `machineosconfigs`and `machineosbuilds` resouces, so general OCL functionality was tested. - x Test that updates to Prometheus metrics originally introduced in 3537 still work as intended with updated auth permissions. - Description for the changelog OCPBUGS-47743: Update cluster-reader ClusterRole permissions"
  },
  {
    "id": "4778",
    "type": "pullRequest",
    "title": "OCPBUGS-45459: Remove trailing period from Openstack provided hostnames",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Fixed an issue where hostnames with a trailing dot were not properly handled Based on - How to verify it 1. Provide a hostname with a trailing dot in the configuration. 2. Ensure the trailing dot is stripped and the correct hostname is set. - Description for the changelog !-- Remove trailing periods from Openstack provided hostnames pull request for inclusion in the changelog: 4778 --"
  },
  {
    "id": "4850",
    "type": "pullRequest",
    "title": "OCPBUGS-47629: /etc/crio/crio.conf.d/00-default should contain runtime_root for runc",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Master, Worker and Arbiter /etc/crio/crio.conf.d/00-default contains runtime_root for runc - How to verify it Instructions in JIRA - Description for the changelog !-- crio: Master, Worker and Arbiter /etc/crio/crio.conf.d/00-default contains runtime_root for runc --"
  },
  {
    "id": "4863",
    "type": "pullRequest",
    "title": "OCPBUGS-49394: Fix SELinux failures running afterburn-hostname",
    "body": "SELinux is preventing the afterburn binary in OpenStack's afterburn-hostname from writing anywhere useful. Instead we invoke the afterburn service and read its output. Closes: OCPBUGS-49394"
  },
  {
    "id": "4844",
    "type": "pullRequest",
    "title": "OCPBUGS-50599: Enforce VIPs to be collocated at the same host",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did When using dual-stack with OpenStack, both IPv4 and IPv6 share the same Neutron Port and this makes OVN thinks that both addresses are associated to the same Node, but that might not always be true as keepalived can put them in separate Nodes. To change that, let's make sure the API VIPs stays together through state changes, the same goes for Ingress VIPs. - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4810",
    "type": "pullRequest",
    "title": "OCPBUGS-49347: Degraded machine-config CO due to ManagedBootImages update when upgrading an OCL cluster",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- Closes: - What I did - I've moved the \"stamp the boot images\" function call into `syncMachineConfiguration`. It was originally called in `syncRequiredMachineConfigPools`, but in cases where the master pool update(for example, OCL upgrades) took a long time and due to the ordering of the syncs, there were potential scenarios where the stamps would be never applied. By placing this into `syncMachineConfiguration`, this should be no longer take place. - I've also updated the call to only explicitly check for master pools, instead of \"required\" pools(which has really just been master pools, but made things confusing) - How to verify it - This is hard to reproduce based on the bug, but OCL upgrades should be a good way to stress test this. - Existing e2es should pass. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4814",
    "type": "pullRequest",
    "title": "OCPBUGS-33894: Avoid dumping Go struct in potentially user-facing reason annotation",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - Use nodeName instead of node in error message for setting node annotations. On a degraded node, such an error would result in the entire node object to be dumped in the node's annotation which was not user friendly. - I also changed retry mechanism to use a backoff of `retry.DefaultRetry`, instead of `retry.DefaultBackoff` which is recommended for conflicts. - How to verify it - Reading through the bug, this seems to surface during upgrades/installs when the APIServer goes unavailable/nodes have high activity. It may be useful to simulate such conditions and see if the errors resurface. - I suppose one could also explore ways to make the API update calls from the MCO to fail to simulate a retry error scenario. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4710",
    "type": "pullRequest",
    "title": "OCPBUGS-44618: In OCL, MCPs are reporting Updating=false while the image is being built",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: 44618\" Please provide the following information: -- - What I did added mcp reporting status to follow mosb's - How to verify it 1. Enable techpreview 2. Create a MOSC 3. watch mcp status change NOTE mcp will not degrade if a build fails. - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4834",
    "type": "pullRequest",
    "title": "OCPBUGS-49959: Panic in the MCC when using OCL v1 GA",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- This change sets up the event handlers after the listers are created, so we shouldn't be running into panics described in the bug. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4846",
    "type": "pullRequest",
    "title": "NO-ISSUE: Add isabella-janssen to OWNERS as approver & reviewer",
    "body": "- What I did Added myself as an approver & reviewer to the code owners file. - How to verify it N/A - Description for the changelog OWNERS: Add isabella-janssen as approver & reviewer"
  },
  {
    "id": "4839",
    "type": "pullRequest",
    "title": "OCPBUGS-31778: Update format verbs for alert logs",
    "body": "Closes: OCPBUGS-31778( - What I did - Updated select log messages to use %q format verbs - How to verify it N/A - Description for the changelog OCPBUGS-31778: Update format verbs for daemon alert logs"
  },
  {
    "id": "4838",
    "type": "pullRequest",
    "title": "OCPBUGS-50002: MCC complains about v1 MachineOSConfig in default featureset",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did I accidentally switched out the tech preview informer factory for the default informer factory as part of This swaps it back. - How to verify it - In the default feature set mode, there shouldn't any failed informer watches on the v1 MachineOSConfig objects( ``` E0207 02:33:17.847220 1 reflector.go:158 \"Unhandled Error\" err=\"github.com/openshift/client-go/machineconfiguration/informers/externalversions/factory.go:125: Failed to watch v1.MachineOSConfig: failed to list v1.MachineOSConfig: the server could not find the requested resource (get machineosconfigs.machineconfiguration.openshift.io)\" ``` - Existing e2es should pass. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4832",
    "type": "pullRequest",
    "title": "MCO-1492: Add new runbook for SystemMemoryExceedsReservation to alert",
    "body": "- What I did Added a runbook I wrote to the Alert - How to verify it Trigger SystemMemoryExceedsReservation on cluster. Alert should now display associated runbook. - Description for the changelog Added to alert as a runbook_url."
  },
  {
    "id": "4817",
    "type": "pullRequest",
    "title": "OCPBUGS-43552: maxUnavailable value is not honored when disabling OCL",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added an additional check in `isNodeDone` to verify that a node rolling back is not mistakenly considered as done updating. - How to verify it As the bug states, this is hard to reproduce, but the typical reproduction path is: 1. Configure maxUnavailable=2 in the worker pool 2. Create a MOSC resource for the worker pool and wait for the images to be applied 3. Remove the MOSC 4. Check if maxUnavailable value is honored It takes several tries(5+) for this to cause the bug, as it relies on the daemon being slow _enough_ to react to the controller's node annotation updates, it's really a luck of the draw. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4828",
    "type": "pullRequest",
    "title": "OCPBUGS-49731: Correct MachineConfig documentation on sysstat extension support",
    "body": "- What I did Updated the MachineConfig documentation to reflect when `sysstat` extension support was added. - How to verify it \"Add sysstat as RHCOS extension\" epic( references 4.18 as the release version. - Description for the changelog OCPBUGS-49731: Correct MachineConfig documentation on sysstat extension support"
  },
  {
    "id": "4821",
    "type": "pullRequest",
    "title": "OCPEDGE-1585: Revert \"OCPEDGE-1419 Add ksan-storage extension\"",
    "body": "This reverts commit 302b6f0c5eb34d2dade80ab930cfdb96f26313fe. - Description for the changelog KubeSAN project is no longer under development."
  },
  {
    "id": "4815",
    "type": "pullRequest",
    "title": "OCPBUGS-49436: Make resolv-prepender env file optional",
    "body": "With the EnvironmentFile set to mandatory, this service fails if it gets triggered by the path unit before the dispatcher script has populated the env file. We don't want that, so this patch makes the file optional and will allow the service to run if it's not there. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4812",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove etc-pki-entitlement cruft",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - Removed some old code that dealt with copy etc-pki-entitlement secrets. This is now handled by the operator in which merged recently. - Fixed a couple of places where old \"PodImageBuilder\" was being assigned to `ImageBuilderType`. This isn't used anywhere in the controller, so it didn't break anything, but we should clean this up. - How to verify it Existing e2es should pass. QE testing shouldn't be needed since this is just removing test/devex code. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4791",
    "type": "pullRequest",
    "title": "OCPBUGS-48250: MCO CO degrades are stuck on until master pool updates complete",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added a clear CO degrade function, which is called after a successful invocation of an operator sync function. - How to verify it On a build without this fix: 1. Degrade the operator. I did this is by scaling down the CVO and editing the `releaseVersion` field in the `machine-config-operator-images` configmap to a bad value. This will cause `syncRenderConfig` to fail and degrade the operator(visible in the CO object and operator logs). 2. Now, deploy an MC update to the master pool. This will cause the operator to be stuck in `syncRequiredMachineConfigPool` sync function, where it'll wait until the master pool completes the update. 3. While the master pool is still updating, restore the `releaseVersion` back to the original value. You should see the operator log clear up shortly, but the CO will continue to be degraded. Once the master pool is done updating, the CO degrade will clear up. On a build with this fix: Repeat steps 1 to 4 above. This time, you should notice that the CO degrade will clear up shortly after restoring `releaseVersion`, without having to wait for the master pool to complete the update. Note: The update needs to be applied to a master pool because the `syncRequiredMachineConfigPools` function will only \"trap\" the operator for master pool updates. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4798",
    "type": "pullRequest",
    "title": "OCPBUGS-46072: create /run/nodeip-configuration before use",
    "body": "With nmstate `br-ex` creation using static IP, it looks like the systemd boot ordering can change and we can attempt to run `30-resolv-prepender` before `nodeip-configuration.service`. When `30-resolv-prepender` runs it tries to touch a file in `/run/nodeip-configuration` when it does not exist. ```log nm-dispatcher2409: touch: cannot touch '/run/nodeip-configuration/br-ex-up': No such file or directory ``` The quick fix is to always mkdir before touching, then we don't have to track the global state of `/run/nodeip-configuration`"
  },
  {
    "id": "4756",
    "type": "pullRequest",
    "title": "MCO-1437: MCO-1476: MCO-1477: MCO-1284: Adapt MCO to OCL v1 API",
    "body": "This PR does the following: - bumps client-go to capture OCL v1 API helpers - reconciles machine-os-builder and the operator to handle OCL v1 API - reconciles existing units/e2es to handle OCL v1 API - adds a global pull secret cloning mechanism since `BaseImagePullSecret` is optional in v1 API How to test/verify: - TechPreview should be enabled - All existing units/e2es should pass - OCL workflows should be tested with v1 CRs(v1alpha1 CRDs will no longer work). Note: This PR should be tested and merged along with Clusterbot incantation: ``` launch openshift/machine-config-operator4756,openshift/api2134 techpreview ```"
  },
  {
    "id": "4794",
    "type": "pullRequest",
    "title": "MGMT-19337: enable injection of custom kubelet labels via env var in base template",
    "body": "Related to !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did added CUSTOM_KUBELET_LABELS env var to --node-labels parameter for kubelet in master node's template The use case is a CAPI bootstrap provider install openshift need to advertise a given provider ID via label, so that the infrastructure provider can set the actual provider ID once verified. - How to verify it add CUSTOM_KUBELET_LABELS=mydummylabel=myvalue to any of the environmental files used by kubelet (possibly /etc/kubernetes/kubelet-envs) - Description for the changelog Inject master node labels via CUSTOM_KUBELET_LABELS env var in base template !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4735",
    "type": "pullRequest",
    "title": "MCO-643: MCO-645: Reintroduce MCS CA rotation",
    "body": "This PR re-applies the work done in 4669, which was reverted in 4713. We should only land this after How to verify: In addition to passing existing e2es and verification done in 4669 , agent installations should succeed. The recently added test in the MCO repo which tests agent workflows(`ci/prow/e2e-agent-compact-ipv4`) should give us a good signal on this."
  },
  {
    "id": "4763",
    "type": "pullRequest",
    "title": "OCPBUGS-34586: Auto-recover from MC with invalid extension",
    "body": "Fixes: OCPBUGS-34586 - What I did Add extension validation to controller's machine config validation function to catch the extension error before the daemon attempts to start updating nodes. - How to verify it Example MC with an invalid extension `1-worker-extension.yaml`: ``` apiVersion: machineconfiguration.openshift.io/v1 kind: MachineConfig metadata: labels: machineconfiguration.openshift.io/role: worker name: 80-worker-extensions spec: config: ignition: version: 3.2.0 extensions: - badName ``` Auto-recovery by deleting MC 1. Apply MC ``` $ oc apply -f 1-worker-extension.yaml ``` 2. Wait for MCP to be in degraded state ``` $ oc get mcp NAME CONFIG UPDATED UPDATING DEGRADED worker rendered-worker-XXXX True False True ``` 3. Delete MC ``` $ oc delete mc/80-worker-extensions ``` 4. MCP should no longer be in a degraded state & nodes should update to new rendered config. ``` $ oc get mcp NAME CONFIG UPDATED UPDATING DEGRADED worker rendered-worker-XXXX True False False ``` Auto-recovery by reapplying MC with valid extension 1. Apply MC with invalid extension 2. Wait for MCP to be in degraded state 3. Update the MC to have a valid extension (example: change `badName` to `usbguard`) & apply it 4. MCP should no longer be in a degraded state & nodes should update to new rendered config with valid extension 5. Check that new extension was installed on the node ``` $ oc debug node/ip-10-0-91-65.us-west-2.compute.internal sh-5.1 chroot /host sh-5.1 rpm -q usbguard usbguard-1.0.0-15.el9.aarch64 ``` - Description for the changelog OCPBUGS-34586: Auto-recover from MC with invalid extension"
  },
  {
    "id": "4367",
    "type": "pullRequest",
    "title": "OCPBUGS-29067: GCP Custom-DNS: Update services that run on control plane nodes",
    "body": "!-- Fixes OCPBUGS-29067 Please provide the following information: -- - What I did 1. Added a update-dns-server script that adds DNS servers to /etc/NetworkManager/conf.d/dns-servers.conf. This script is run as part of gcp-update-dns.service which is also added as part of this PR. This service should run when the DNSType on the GCP platform is set to \"ClusterHosted\". 2. The `openshift-gcp-routes` service does not need to run when DNSType is \"ClusterHosted\". So, enable it conditionally - How to verify it Start an IPI Install on GCP with userProvisionedDNS=true - Description for the changelog Creates a gcp-update-dns.service that updates DNS configuration when GCP's DNSType is \"ClusterHosted\" Conditionally runs the `openshift-gcp-routes` service"
  },
  {
    "id": "4795",
    "type": "pullRequest",
    "title": "OCPBUGS-48566: Enable nmstate-configuration on all platforms",
    "body": "While we don't necessarily expect this to be used everywhere yet, we at least need to have it on platform None since that is used for a lot of baremetal deployments with assisted. There's not really any reason it can't be used on all platforms either. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4723",
    "type": "pullRequest",
    "title": "MCO-466: Improve erroring where there is a bootstrap/in-cluster master config mismatch",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - Added better error collection for this failure mode. The diff between the configs are logged in the daemon and written to disk at `/etc/machine-config-daemon/bootstrapconfigdiff` to aid in debug for an MCO developer. - When the CO is currently degraded due to a `syncRequiredMachineConfigPools` failure, it does not populate the message for that case. I've updated the propagation of the condition messages to facilitate this. This shouldn't need QE testing and existing e2es should be sufficient. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4675",
    "type": "pullRequest",
    "title": "OCPEDGE-1313: feat: added assets for arbiter node role",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Added initial support for the arbiter node role. The arbiter role currently mimics the master node in configuration, so we are copying the same assets for master and using it for arbiter. This feature is currently for TechPreview but before we hit GA we will re-work this approach to remove duplication. See: - How to verify it This feature will only work on baremetal HighlyAvailableArbiter control plane topology clusters. When running on those deployments, an MCP for arbiter and MCs for arbiter deployments should be present. Otherwise no trace of Arbiter should be present in the generated configs. - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4792",
    "type": "pullRequest",
    "title": "OCPEDGE-1419: Add ksan-storage extension",
    "body": "- What I did The KubeSAN operator requires the addition of 2 host level dependencies: `lvm2-lockd` and `sanlock` in order to manage shared LVM volumeGroup access. - Added `ksan-storage` extension - How to verify it Post boot, the extensions can be queried on each node via `rpm -qa sanlock'` - Description for the changelog Added host-level support for kubesan operator"
  },
  {
    "id": "4746",
    "type": "pullRequest",
    "title": "MGMT-19337: enable injection of custom kubelet labels via env var for master nodes",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did added CUSTOM_KUBELET_LABELS env var to --node-labels parameter for kubelet in master node's template The use case is a CAPI bootstrap provider install openshift need to advertise a given provider ID via label, so that the infrastructure provider can set the actual provider ID once verified. - How to verify it add `CUSTOM_KUBELET_LABELS=mydummylabel=myvalue` to any of the environmental files used by kubelet (possibly `/etc/kubernetes/kubelet-envs`) - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: -- Inject master node labels via CUSTOM_KUBELET_LABELS env var"
  },
  {
    "id": "4761",
    "type": "pullRequest",
    "title": "OCPBUGS-41489: Specify interface type when adding ovs-port",
    "body": "We already do this in a few other places, but not on these two calls. Under some circumstances, this is causing ovs-configuration to fail until manual intervention is done. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4554",
    "type": "pullRequest",
    "title": "OCPBUGS-38809: Update machine-config-daemon-pull.service to use custom policy for Podman 4.4.1",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Update machine-config-daemon-pull.service.yaml to not use sigstore policy.json if pdman version is less than 4.4.1. it will use `/etc/machine-config-daemon/policy-for-old-podman.json` to skip the default `openshift` clusterimagepolicy verifications. - How to verify it Using reproduce steps in the bug description copied-machineset-modified-flgjt running using 4.5 base image ``` $ oc get machines.machine.openshift.io -n openshift-machine-api NAME PHASE TYPE REGION ZONE AGE ci-ln-cihng1k-76ef8-zm6hv-master-0 Running m6a.xlarge us-east-1 us-east-1d 97m ci-ln-cihng1k-76ef8-zm6hv-master-1 Running m6a.xlarge us-east-1 us-east-1f 97m ci-ln-cihng1k-76ef8-zm6hv-master-2 Running m6a.xlarge us-east-1 us-east-1d 97m ci-ln-cihng1k-76ef8-zm6hv-worker-us-east-1d-cvlhk Running m6a.xlarge us-east-1 us-east-1d 93m ci-ln-cihng1k-76ef8-zm6hv-worker-us-east-1d-m8rwb Running m6a.xlarge us-east-1 us-east-1d 93m ci-ln-cihng1k-76ef8-zm6hv-worker-us-east-1f-hfr6n Running m6a.xlarge us-east-1 us-east-1f 93m copied-machineset-modified-flgjt Running m6a.xlarge us-east-1 us-east-1f 23m $ oc describe machines.machine.openshift.io copied-machineset-modified-flgjt -n openshift-machine-api | grep Address Addresses: Address: 10.0.80.21 Address: ip-10-0-80-21.ec2.internal Address: ip-10-0-80-21.ec2.internal $ oc get nodes NAME STATUS ROLES AGE VERSION ip-10-0-110-241.ec2.internal Ready control-plane,master 98m v1.31.3 ip-10-0-36-200.ec2.internal Ready control-plane,master 97m v1.31.3 ip-10-0-40-0.ec2.internal Ready worker 89m v1.31.3 ip-10-0-61-193.ec2.internal Ready control-plane,master 97m v1.31.3 ip-10-0-7-226.ec2.internal Ready worker 90m v1.31.3 ip-10-0-75-34.ec2.internal Ready worker 90m v1.31.3 ip-10-0-80-21.ec2.internal Ready worker 18m v1.31.3 ``` - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4780",
    "type": "pullRequest",
    "title": "OCPBUGS-48195: use new buffer for decoding clusterOverridePolicyJSON",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Fix the bug where ImagePolicy fails to roll out for different namespaces due to a decoding error. - How to verify it Apply ImagePolicy objects for different namespaces, the files under /etc/crio/policies will bu updated for all corresponding namespaces. - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4774",
    "type": "pullRequest",
    "title": "OCPBUGS-45928,OCPBUGS-46531: crio: drop crun subcgroup",
    "body": "historically crun has run with a subcgroup to allow it to own the cgroup configuration of a container this is more idiomatic with systemd's single owner rule. The problem is the subcgroup means there is an extra cgroup for cadvisor to read metrics for, so moving to crun by default actually increases cpu usage. Dropping the subcgroup (with a new cri-o knob and this annotation) fixes this regression. This reverts commit 9e8ecf447684b399f5172853d5790eb420588ed9, which was a revert of the original commit. CRI-O has now been fixed to not panic when this field is set."
  },
  {
    "id": "4771",
    "type": "pullRequest",
    "title": "MCO-1449: Add MCDPivotError runbook to prometheus rules",
    "body": "Please provide the following information: - What I did Added a runbook I wrote to the MCDPivotError Alert - How to verify it Trigger MCDPivotError on cluster. Alert should now display associated runbook. - Description for the changelog Added to alert as a runbook_url."
  },
  {
    "id": "4760",
    "type": "pullRequest",
    "title": "MCO-1482: pkg/operator/status: Drop PoolUpdating as an Upgradeable=False condition",
    "body": "956e7874dc (4012) had added the \"this should no longer trigger when adding a node to a pool\" comment, but unfortunately, it's still triggering. For example, in this serial 4.19 run1: ```console $ curl -s Feature:MachinesSerial Managed cluster should grow and decrease when scaling different machineSets simultaneously Timeout:30mapigroup:machine.openshift.io Suite:openshift/conformance/serial\" passed: (5m42s) 2024-12-16T00:57:49 \"sig-cluster-lifecycleFeature:MachinesSerial Managed cluster should grow and decrease when scaling different machineSets simultaneously Timeout:30mapigroup:machine.openshift.io Suite:openshift/conformance/serial\" ``` confirmed via MCC logs: ```console $ curl -s Pool workerzone=us-central1-f: node ci-op-k8c03v6z-9149a-r27w7-worker-f-t7rmb: changed annotation machineconfiguration.openshift.io/currentConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:35.430252 1 node_controller.go:584 Pool workerzone=us-central1-f: node ci-op-k8c03v6z-9149a-r27w7-worker-f-t7rmb: changed annotation machineconfiguration.openshift.io/desiredConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:36.174629 1 node_controller.go:584 Pool workerzone=us-central1-a: node ci-op-k8c03v6z-9149a-r27w7-worker-a-f7hkj: changed annotation machineconfiguration.openshift.io/currentConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:36.174738 1 node_controller.go:584 Pool workerzone=us-central1-a: node ci-op-k8c03v6z-9149a-r27w7-worker-a-f7hkj: changed annotation machineconfiguration.openshift.io/desiredConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:41.296273 1 node_controller.go:584 Pool workerzone=us-central1-b: node ci-op-k8c03v6z-9149a-r27w7-worker-b-554bt: changed annotation machineconfiguration.openshift.io/currentConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:41.296306 1 node_controller.go:584 Pool workerzone=us-central1-b: node ci-op-k8c03v6z-9149a-r27w7-worker-b-554bt: changed annotation machineconfiguration.openshift.io/desiredConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:47.106173 1 node_controller.go:584 Pool workerzone=us-central1-c: node ci-op-k8c03v6z-9149a-r27w7-worker-c-hshj2: changed annotation machineconfiguration.openshift.io/currentConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 I1216 00:55:47.106201 1 node_controller.go:584 Pool workerzone=us-central1-c: node ci-op-k8c03v6z-9149a-r27w7-worker-c-hshj2: changed annotation machineconfiguration.openshift.io/desiredConfig = rendered-worker-6d0e61dc44f24db3272625b901024ed2 ``` In this commit, I'm dropping the code that had been moving the ClusterOperator to `Upgradeable=False` on `PoolUpdating` entirely, instead of hoping that it doesn't trip. I haven't dug into why the code had still been tripping. But we want to stay `Upgradeable=True` while new nodes scale in, because clusters where nodes are joining should still be able to update to 4.(y+1). There are node-vs.-control-plane skew issues that should block updates to 4.(y+1), but they're enforced by the Kube API server operator (openshift/cluster-kube-apiserver-operator/pull/1199), and don't need the MCO chipping in. 1: - Description for the changelog The machine-config ClusterOperator no longer goes `Upgradeable=False` on `PoolUpdating` when new Nodes join the cluster."
  },
  {
    "id": "4726",
    "type": "pullRequest",
    "title": "MCO-81: Emit events to warn about failing drains",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Add a couple of events to indicate drain failure in the MCC. Currently drain failures causes a prom alert, which isn't helpful for data aggregation in CI. - How to verify it On failing drain, in addition to logs, we should also see events emitted. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4741",
    "type": "pullRequest",
    "title": "NO-ISSUE: Add AUTHFILE option to make image",
    "body": "When building the mco image, add an AUTHFILE check to allow users to specify a different file from the default one for the authentication to be used during the build process. This is something I kept having to change manually because I use a different location for my openshift auth and not the default one that podman looks at. !-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Add AUTHFILE option to make image to allow specifying a file path for the auth needed during build - How to verify it run make image AUTHFILE=path/to/auth file and the podman build command outputed should have `--authfile=path/you/specified` - Description for the changelog Add AUTHFILE option to make image to allow specifying a file path for the auth needed during build !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4772",
    "type": "pullRequest",
    "title": "OCPEDGE-1559: bump(ocp/api,ocp/client-go)",
    "body": "bumped openshift/api to pull in new arbiter node enum and latest changes for MCO bumped openshift/client-go to pull in latest additions for MCO"
  },
  {
    "id": "4770",
    "type": "pullRequest",
    "title": "TRT-1926: Revert 4765 \"crio: drop crun subcgroup\"",
    "body": "Reverts 4765 ; tracked by TRT-1926( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. We are seeing cri-o panic in jobs after this and the cri-o package bump landed, which seems to be impacting nodes and causing some tests to fail. To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload 4.19 blocking nightly ``` CC: @haircommander div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "4757",
    "type": "pullRequest",
    "title": "OCPBUGS-33144: Add clarification to invalid maxUnavailable alert",
    "body": "- What I did Add `\"maxUnavailable\"` to error string alerting users of invalid type definition. - How to verify it Update `maxUnavailable` to an invalid value: ``` $ oc patch mcp/worker --patch '{\"spec\": {\"maxUnavailable\":\"2\"}}' --type=merge ``` Watch the `machine-config-controller` pod logs: ``` $ oc logs -n openshift-machine-config-operator -c machine-config-controller pod-name -f Error syncing machineconfigpool worker: \"maxUnavailable\" invalid value for IntOrString: invalid type: string is not a percentage ``` - Description for the changelog OCPBUGS-33144: Add clarification to invalid maxUnavailable alert"
  },
  {
    "id": "4764",
    "type": "pullRequest",
    "title": "OCPBUGS-38749: add timeout error to applyManifest retry list",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- Added one more error to the retry list for applyManifest, so we don't immediately degrade. This is follow-up from as merging that uncovered these failures. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4765",
    "type": "pullRequest",
    "title": "OCPBUGS-45928,OCPBUGS-46531: crio: drop crun subcgroup",
    "body": "historically crun has run with a subcgroup to allow it to own the cgroup configuration of a container this is more idiomatic with systemd's single owner rule. The problem is the subcgroup means there is an extra cgroup for cadvisor to read metrics for, so moving to crun by default actually increases cpu usage. Dropping the subcgroup (with a new cri-o knob and this annotation) fixes this regression."
  },
  {
    "id": "4753",
    "type": "pullRequest",
    "title": "MCO-1470: Incorporates upstream devex helper changes for OCL testing",
    "body": "- What I did This takes @dkhater-redhat's work in and incorporates changes I had to make to my helpers repository in order to make the tests pass for This also repackages the helpers slightly into a `devex/` folder in the MCO repo's root and removes a few of the `hack/` scripts that the `devex/` helpers replace. This is intended to land after does. - How to verify it The unit test suite provides some test coverage for the devex helpers. Additionally, the verify target will compile the helpers in CI as a smoke test. - Description for the changelog Incorporates upstream devex helper changes for OCL testing"
  },
  {
    "id": "4752",
    "type": "pullRequest",
    "title": "OCPBUGS-46052: machine-os-builder deployment missing openshift.io/required-scc annotation",
    "body": "- What I did Added required-scc annotation to machineosbuilder manifest - How to verify it passes from CI for: - e2e-aws-ovn-ocb-techpreview - e2e-aws-ovn-upgrade-ocb-techpreview"
  },
  {
    "id": "4718",
    "type": "pullRequest",
    "title": "MCO-1451: Merge \"Zack's Scripts\"",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4750",
    "type": "pullRequest",
    "title": "MCO-1416: Update timeouts & improve debuggability of ocl e2e tests",
    "body": "- What I did - Undo timeout updates made here( - Pull in Zack's work( that updates the OCL e2e test suite \"to leave objects in-situ whenever the test suite is being run in OpenShift CI\" with the intent to capture the test cluster's state to improve test debugging. - How to verify it Verified in Zack's PR( - Description for the changelog MCO-1416( Update timeouts & improve debuggability of ocl e2e tests"
  },
  {
    "id": "4731",
    "type": "pullRequest",
    "title": "MCO-113: Preserve previous boot MCD log",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did The daemon will begin to save its logs right before shutdown at `/etc/machine-config-daemon/previous-logs/`. I'm hoping that we can update the must gather tool so that it is able to scoop up this log file. I also wanted this to be a backportable solution so I tried to keep it out of the critical path, on encountering an error the daemon logs it, but it's not fatal. - How to verify it - Roll out an MC change that causes a node reboot. A cluster upgrade should also trigger this. - On reboot, debug into the node, and you should see the previous daemon logs saved at `/etc/machine-config-daemon`: ``` sh-5.1 ls /etc/machine-config-daemon/previous-logs/openshift-machine-config-operator_machine-config-daemon-qmgx4_a2b53ce6-ac08-4211-b93f-c1286d4e0554/machine-config-daemon/ 0.log 1.log ``` If you're lucky, you might also the see the daemon logs indicate successful save. Since this happens late in the daemon shutdown process, the line does get lost occasionally: ``` 2024-12-04T18:55:32.588709698+00:00 stderr F I1204 18:55:32.588667 12126 daemon.go:2930 Daemon logs from /var/log/pods/openshift-machine-config-operator_machine-config-daemon-qmgx4_a2b53ce6-ac08-4211-b93f-c1286d4e0554 preserved at /etc/machine-config-daemon/previous-logs/openshift-machine-config-operator_machine-config-daemon-qmgx4_a2b53ce6-ac08-4211-b93f-c1286d4e0554 2024-12-04T18:55:32.588804462+00:00 stderr F I1204 18:55:32.588787 12126 daemon.go:1400 Shutting down MachineConfigDaemon ``` !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4739",
    "type": "pullRequest",
    "title": "OCPBUGS-45496: Prevent undesired MOSBs from building",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did reconciler: only build mosb's currently targeted by the MCP In OCPBUGS-45496, here are the steps which lead to the failure of the creation of an MOSB upon the addition of a new MC: 1) An MC with erroneous contents not caught by the API validations creates a rendered-MC which triggers a MOSB build and fails as expected with an error 2) This erroneous MOSB keeps getting added to the rate limited worker queue till it hits the max retries. Then it is forgotten from the queue and is subjected to a backoff time to get added back again 3) In the meantime if the erroneous MC is deleted and a new valid MC is added targetting the same MCP, a valid MOSB build starts 4) When the erroneous mosb enters the queue again and sees that there already exists another not successfull MOSB in build, it cancels all other builds. Hence the valid MOSB is cancelled and the erroneous MOSB is re-triggerred again. Since it will never be able to start the build and fail again the steps 2 and 4 keep happening. Any new MC will fail to successfully create a MOSB and trigger a build. Thus the solution is to check upon the MOSB sync whether the MCP and rendered-MC that the MOSB targets even exists anymore. If not we don't need to build it. - How to verify it 1) Create an erroneous MC which is still valid by the API server. Example (adding an unsupported extension as a systemd unit) 2) Wait till a rendered-MC and MOSB appears and fails 3) Remove the erroneous MC 4) Add a valid MC (for example supported extension or a core user ssh keys change) 5) The valid MC should trigger a MOSB and build successfully - Description for the changelog !-- Prevent undesired MOSBs from building --"
  },
  {
    "id": "4727",
    "type": "pullRequest",
    "title": "OCPBUGS-42636: Wait to render for other MC generating sub-controllers",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Instead of the render controller just waiting on the controllerConfig status to reach completed (which requires template controller status to be completed), the render controller also should wait on the status of containerRuntime config and kubeletConfig - How to verify it - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4740",
    "type": "pullRequest",
    "title": "OCPBUGS-45860: daemon: add nil check for annotation fetching",
    "body": "Theoretically this shouldn't be empty by the time it gets to here, but in the error stacktrace: we see this function panicking. This seems to have actually been the second place where we hit this function in that logic loop? i.e. loadNodeAnnotations - getNodeAnnotation - getNodeAnnotationExt should have panicked if either node or node.Annotations is empty, but for some reason it didn't. Weird. Also the fact that we have not seen this before makes it extra odd. In either case, for safety reasons, we shouldn't be attempting to dereference a potentially nil pointer anyways, so let's just make this quick fix."
  },
  {
    "id": "4707",
    "type": "pullRequest",
    "title": "OCPBUGS-27477: Pausing Master MCP results in Alerts",
    "body": "- What I did Update the event message on pause of required pool where no updates are outstanding. - How to verify it Pause a required machine config pool: ```bash $ oc patch mcp/master --patch '{\"spec\": {\"paused\":true}}' --type=merge ``` Watch the `machine-config-operator` pod logs: ```bash $ oc logs -n openshift-machine-config-operator -c machine-config-operator pod-name -f Starting MachineConfigOperator Event(v1.ObjectReference{Kind:\"ClusterOperator\", Namespace:\"openshift-machine-config-operator\", Name:\"machine-config\", UID:\"a22bdfc5-84c1-4063-b66d-87f4e86815e2\", APIVersion:\"\", ResourceVersion:\"\", FieldPath:\"\"}): type: 'Warning' reason: 'OperatorDegraded: RequiredPoolsFailed' Failed to resync 4.18.0-0.nightly-arm64-2024-11-06-051902 because: the required MachineConfigPool master was paused with no pending updates but no futher syncing will occur until it is unpaused ``` - Description for the changelog OCPBUGS-27477: Update warning message on pause of required MCP."
  },
  {
    "id": "4730",
    "type": "pullRequest",
    "title": "MCO-1416: Increase timeouts in OCL e2e tests",
    "body": "- What I did Increase the timeouts in different stages of the ocl e2e tests. - How to verify it N/A - Description for the changelog MCO-1416( Increase timeouts in OCL e2e tests"
  },
  {
    "id": "4729",
    "type": "pullRequest",
    "title": "OCPBUGS-45306: Remove trailing periods from AWS provided hostnames",
    "body": "- What I did This ensures that any DHCP option set, configured with a trailing period (which must be done using the AWS CLI, and not the console), does not prevent nodes from joining the cluster. With the previous logic, the nodename passed would contain a trailing period, which is not compatible with Kube's validation of object names. This new logic ensures that we trim any trailing periods prior to passing the hostname over to kubelet - How to verify it Create an AWS cluster with a custom DHCP option set. Ensure the custom domain name in the option set includes a trailing period (`foo.bar.baz.`), and then spin up new nodes. They should join the cluster with a node name, missing the trailing period. - Description for the changelog !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4706",
    "type": "pullRequest",
    "title": "OCPBUGS-39199: clusteroperator/machine-config blips Degraded=True during upgrade test",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Add a short retry for the operator image version check before degrading. - How to verify it This is hard to manually verify, but we should no longer see failures of the sort listed in the bug. Existing e2es should pass and this retry should not have a discernible performance impact. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4699",
    "type": "pullRequest",
    "title": "MCO-1416: Create OCL e2e Test Suite & Remove Unneeded Helper",
    "body": "- What I did - Moved the OCL test files from the `test/e2e-techpreview` folder to a new `test/e2e-ocl` folder. - Removed the unneeded `MustHaveFeatureGatesEnabled` function. - How to verify it Test the Makefile update by running `make test-e2e-ocl`. ```bash $ make test-e2e-ocl --quiet Installing go-junit-report 2024/11/21 09:47:57 All required featuregates OnClusterBuild MachineConfigNodes present! === RUN TestOnClusterBuildsOnOKD helpers_test.go:630: OCP detected, skipping test TestOnClusterBuildsOnOKD helpers_test.go:631: --- SKIP: TestOnClusterBuildsOnOKD (0.08s) === RUN TestOnClusterBuildsCustomPodBuilder ... ``` - Description for the changelog MCO-1416( Separate OCL e2e tests from tech preview and remove unneeded helper"
  },
  {
    "id": "4681",
    "type": "pullRequest",
    "title": "OCPBUGS-44995: Update the storage.conf configuration file template",
    "body": "- What I did Updated current storage.conf configuration file template to reflect changes made over time to the upstream dependencies such as containers/storage package, etc. The changes include: - Move the `size` attribute from the `storage` table into the specific file system driver table - Update the `runroot` property from the `storage` table to reflect changes to the temporary directory default location - Mention the `storage.options` table `Remap-User/Group` settings precedence over `Remap-UIDs/GIDs` when both are set - Remove the `storage.options.thinpool` table entirely, as the support for DeviceMapper driver has been removed - Disable the partial container image downloads as it is still considered an experimental feature that should be opt-in - Add `use_hard_links` and `ostree_repos` properties to `storage.options.pull_options` table with their default values Related: - - - - - - - How to verify it Run a test OpenShift cluster using ClusterBot that references this Pull Request, or manually apply configuration file changes against a running CRI-O instance and reload the configuration file or restart the service itself. - Description for the changelog Update the storage.conf configuration file template to reflect changes made over time to the upstream dependencies."
  },
  {
    "id": "4698",
    "type": "pullRequest",
    "title": "OCPBUGS-38749: add retry on error for apply functions",
    "body": "!-- If this is a bug fix, make sure your description includes \"Fixes: xxxx\", or \"Closes: xxxx\" Please provide the following information: -- - What I did Adds a retry on error for applying the MCC deployment, the MCD daemonset and the MCS daemonset. I also took this opportunity to clean up some pointer library references. - How to verify it These error logs mentioned in the bug is quite rare( so it may be hard to verify this. Regardless, it should help clean up such failures. !-- Write a short (one line) summary that describes the changes in this pull request for inclusion in the changelog: --"
  },
  {
    "id": "4685",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fix 3 typos",
    "body": "- What I did Corrected minor English language typos in PrometheusRule alert definitions. Specifically: - Changed \"tallys\" to \"tallies\" in KubeletHealthState.. - Changed \"specially\" to \"especially\" in ExtremelyHighIndividualControlPlaneMemory. - Changed \"miutes\" to \"minutes\" in SystemMemoryExceedsReservation. - How to verify it N/A - Description for the changelog Fixed minor typos and improved readability in PrometheusRule alert definitions for the machine-config-operator in OpenShift."
  },
  {
    "id": "4694",
    "type": "pullRequest",
    "title": "MCO-1165: rebuild annotation",
    "body": "- What I did I added the ability for a cluster admin to request that the currently active MachineOSBuild be rebuilt. This is done by adding the annotation `machineconfiguration.openshift.io/rebuild` to the MachineOSConfig. - How to verify it 1. Bring up an OpenShift cluster. 2. Opt into on-cluster layering by creating a MachineOSConfig. 3. Wait for the build to complete. 4. Add the annotation `machineconfiguration.openshift.io/rebuild` onto the MachineOSConfig. 5. The controller should delete the current MachineOSBuild and a new one should be started in its place. - Description for the changelog Adds rebuild functionality for OCL"
  },
  {
    "id": "131",
    "type": "pullRequest",
    "title": "OCPBUGS-44031: Verify tls while pulling down IPA",
    "body": "This image was originally pulled down without tls verify in ironic-image and the flag was then carried around as the code moved. Remove the flag. Depends on"
  },
  {
    "id": "133",
    "type": "pullRequest",
    "title": "OCPBUGS-45710: Use go version 1.23 and OCP 4.19 base image",
    "body": "Remove unmaintained golint linters replaced by unused"
  },
  {
    "id": "63",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55934:Dummy change to force a rebuild for 4.19",
    "body": "This is an automated cherry-pick of 62 /assign dtantsur"
  },
  {
    "id": "54",
    "type": "pullRequest",
    "title": "NO-JIRA: Change to new host"
  },
  {
    "id": "51",
    "type": "pullRequest",
    "title": "OCPBUGS-50910: Decompress pxe file only if it's a valid compressed file"
  },
  {
    "id": "46",
    "type": "pullRequest",
    "title": "OCPBUGS-44889: Allow external configuration of download host for production builds",
    "body": "Would need to go in tandem with"
  },
  {
    "id": "49",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update OWNERS"
  },
  {
    "id": "48",
    "type": "pullRequest",
    "title": "OCPBUGS-45474: Updating ose-machine-os-images-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-os-images-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-os-images.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "45",
    "type": "pullRequest",
    "title": "NO-ISSUE: Fix shellcheck"
  },
  {
    "id": "87",
    "type": "pullRequest",
    "title": "OCPBUGS-55284: OpenShift Only: TEMPORARY: pin FRR version to known working rpm",
    "body": "There are multiple issues around the latest 8.5.3-4.el9_4.2 related to BFD, we pin the version to the known good one until it is fixed, otherwise we keep shipping a non-working image. to be backported until 4.16"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "Syncmetallb 04042025",
    "body": "sync upstream"
  },
  {
    "id": "79",
    "type": "pullRequest",
    "title": "Align to upstream",
    "body": "Align to upstream 11/3/25"
  },
  {
    "id": "78",
    "type": "pullRequest",
    "title": "Syncoperator03032025",
    "body": "Sync upstream"
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "OCPBUGS-45545: Updating ose-frr-container image to be consistent with ART for 4.19",
    "body": "Updating ose-frr-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-frr.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "75",
    "type": "pullRequest",
    "title": "Sync OWNERS with MetalLB",
    "body": "sync OWNERS with MetalLB"
  },
  {
    "id": "72",
    "type": "pullRequest",
    "title": "Align upstream 13/1/25",
    "body": "Aligning with upstream"
  },
  {
    "id": "411",
    "type": "pullRequest",
    "title": "release-4.19 NO-JIRA: fix: update monitoring and virtualization routes to avoid overriding console routes",
    "body": "This is an automated cherry-pick of 410 /assign PeterYurkovich"
  },
  {
    "id": "409",
    "type": "pullRequest",
    "title": "release-4.19: NO-JIRA: bound table scroll and column alignment 409",
    "body": "This is an automated cherry-pick of 402 /assign PeterYurkovich"
  },
  {
    "id": "406",
    "type": "pullRequest",
    "title": "release-4.19 NO-JIRA: feature: upgrade react router to v5 compat",
    "body": "This is an automated cherry-pick of 400 /assign PeterYurkovich"
  },
  {
    "id": "398",
    "type": "pullRequest",
    "title": "NO-JIRA: fix(incidents): performance improvements for incidents page",
    "body": "1. Add memoization for parse url params function because it was called too often. 2. Wrapped chart data calculations in memoization to avoid recalculations if the values are the same 3. Wrapped getOpacity and isHidden in useCallback to reduce the number of rerenders"
  },
  {
    "id": "394",
    "type": "pullRequest",
    "title": "OCPBUGS-48533: Reset variables when making orthongonal selections",
    "body": "This PR looks to fix an issue which caused the new variables to be appended onto the old variable values. The SingleTypeaheadDropdown is currently used in 3 places: - DashboardDropdown - LegacyVariableDropdown - VariableDropdown (Perses) All three of theses locations want the new values to replace the old ones whenever new data is found, so the `clearOnNewItems` has been set to default to true"
  },
  {
    "id": "399",
    "type": "pullRequest",
    "title": "OU-765: Don't break if cluster doesn't exist",
    "body": "This PR looks to provide guards on alerts and silences which prevent breaking pages when the cluster label or matcher doesn't exist"
  },
  {
    "id": "396",
    "type": "pullRequest",
    "title": "OU-767: Allow filtering by cluster name",
    "body": "This PR looks to recover from a regression of a previous bug. It adds back a type so that the filter is able to be used, and then also allows for all items to be matched when no filters are set."
  },
  {
    "id": "395",
    "type": "pullRequest",
    "title": "OU-750: update the metrics typeahead to look pf-6 native",
    "body": "This PR looks to update the metrics typeahead dropdown to look PF-6( native"
  },
  {
    "id": "397",
    "type": "pullRequest",
    "title": "OCPBUGS-54292: Show column headings on metrics page",
    "body": "This PR looks to fix the column headings on the metrics page such that the full titles are shown. Before: !Screenshot From 2025-04-23 21-26-53( After: !Screenshot From 2025-04-23 21-27-28("
  },
  {
    "id": "390",
    "type": "pullRequest",
    "title": "OU-760: Requests UX changes post PF-6",
    "body": "There were 3 changes requested from UX after our PF-6( upgrade: 1. Add spacing around the silences matchers !Screenshot From 2025-04-22 12-34-06( !Screenshot From 2025-04-22 12-34-43( !Screenshot From 2025-04-22 12-36-35( 2. Use a monospace font on the metrics table !Screenshot From 2025-04-22 12-37-03( 3. Place the \"clear filters\" button on the same line as the filters. After reviewing Patternfly components, these filters fell under the \"toolbar\" umbrella, which places the filters on a separate line, so this change wasn't needed."
  },
  {
    "id": "392",
    "type": "pullRequest",
    "title": "OU-729,OU-723: Add label typeahead",
    "body": "Re-add label typeahead to the filters by only aggregating the alerts after the filtering has been done so that the labels on the individual alerts are available to be filtered on. This PR also looks to add cluster name truncation after 50 characters to prevent dialog sprawl across the page. !Screenshot From 2025-04-22 15-52-25("
  },
  {
    "id": "393",
    "type": "pullRequest",
    "title": "OU-757: Show cluster column heading on acm silences page",
    "body": "This PR look to give the acm silences page a column width for the cluster column so it shows up. !Screenshot From 2025-04-22 15-38-48("
  },
  {
    "id": "389",
    "type": "pullRequest",
    "title": "OU-703: fix states filter in aggregated row",
    "body": "The aggregated alert row was showing filtered states In the example `VMCannotBeEvicted` DEMO BEFORE Silenced state is there even tho we filtered by state firing img width=\"1639\" alt=\"Screenshot 2025-04-22 at 17 09 28\" src=\" / DEMO AFTER"
  },
  {
    "id": "391",
    "type": "pullRequest",
    "title": "OU-752: Clear out old queries when loading queries from URL",
    "body": "This PR looks to clear out zombie queries from the store when loading queries from the URL in the query browser."
  },
  {
    "id": "384",
    "type": "pullRequest",
    "title": "RHINENG-16773: fixed silence alerts data form not filled with alert details",
    "body": "1) fixed the issue that happened when user clicks on Silence alert button - the silence alert form wasn't populated by data 2) did some cleanup and removed unused stuff from the file !image( !image("
  },
  {
    "id": "383",
    "type": "pullRequest",
    "title": "OU-702: re-add csv button for aggregated alert list",
    "body": "Demo img width=\"1917\" alt=\"Screenshot 2025-04-17 at 11 11 26\" src=\" / CSV example openshift (8).csv("
  },
  {
    "id": "380",
    "type": "pullRequest",
    "title": "OU-659: PF-6 Migration"
  },
  {
    "id": "379",
    "type": "pullRequest",
    "title": "OU-678: fix: allow to set refresh interval to off",
    "body": "This allows to set the auto refresh to off. Taken from the pf6 changes to be able to backport it."
  },
  {
    "id": "375",
    "type": "pullRequest",
    "title": "OU-724: remove dependency on deleted image"
  },
  {
    "id": "362",
    "type": "pullRequest",
    "title": "OU-660: Remove console CSS and Align with Patternfly components",
    "body": "This PR is generally made up of two sections: 1. commits that start with `sync` which are used to update the `web/src/components/console` components to their 4.18 state. 2. commits that start with `align`, `remove`, `keep`, etc which are used in the removal of the `.co-`, `.ocs-`, and `.odc` css classes and replacing them with Patternfly native components. The following sections contain before and after images of the changes from 4.18 - PF5 native changes. Of note, the reactiveness of the pages was demonstrated to @fkargbo and approved, but would be difficult to screenshot. Recording of the meeting is available upon request details summary Alerting Page /summary !Alerting-4 18( 4.18 !Alerting-PF5( PF-5( /details details summary Silences Page /summary !Silences-4 18( 4.18 !Silences-PF5( PF-5( /details details summary Alert rules Page /summary !Alert rules-4 18( assets/bb8f1dde-9011-405b-968f-24b8a835b1ba) 4.18 !Alert rules-PF5( PF-5( /details details summary Alert details Page /summary !Alert details one-4 18( !Alert details two-4 18( 4.18 !Alert details one-PF5( !Alert details two-PF5( PF-5( /details details summary Silence details Page /summary !Silence details-4 18( 4.18 !Silence details-PF5( PF-5( /details details summary Alert rule details Page /summary !Alert rule details-4 18( 4.18 !Alert rule details-PF5( PF-5( /details details summary Silence form Page /summary !Silence form-4 18( 4.18 !Silence form-PF5( PF-5( /details details summary Perses Dashboards /summary !Perses Dashboards( PF-5( /details details summary Incidents Page /summary !Incidents one( !Incidents two( !Incidents three( PF-5( /details"
  },
  {
    "id": "369",
    "type": "pullRequest",
    "title": "OCPBUGS-52592: Fix \"Export as CSV\"",
    "body": "JIRA Context `const isSpan = (item) = item?.title?.props?.children;` The optional chaining operator `?.` gracefully handles undefined `item` by not throwing errors and allowing `item?.title?.props?.children` to result as `undefined`."
  },
  {
    "id": "367",
    "type": "pullRequest",
    "title": "OU-700: don't show metrics links in acm perspective",
    "body": "Don't show metrics links in the acm perspective since the metrics page isn't present"
  },
  {
    "id": "365",
    "type": "pullRequest",
    "title": "COO-768: add plugin proxy to perses proxy path",
    "body": "This PR, adds the plugin proxy path before the perses proxy so requests to datasources are proxied correctly"
  },
  {
    "id": "363",
    "type": "pullRequest",
    "title": "COO-759: update datasource whenerver the csrf token changes",
    "body": "This PR looks to fix an issue which prevented the datasources from updating whenever a CSRF cookie was changed, thus leading to authentication errors."
  },
  {
    "id": "359",
    "type": "pullRequest",
    "title": "RHINENG-12634: incident utils typescript conversion",
    "body": "RHINENG-12634( Converted JS to TS with more typings and small updates of some of the functions Removed some of the functionality for Days filters that work with filter chips, it was unnecessary because days filter doesn't create filter chips."
  },
  {
    "id": "348",
    "type": "pullRequest",
    "title": "CNV-55987: Aggregated alerts",
    "body": "Demo Fix for inner table sticky header After some discussion and Foday redesign img width=\"1915\" alt=\"Screenshot 2025-03-10 at 09 38 16\" src=\" /"
  },
  {
    "id": "360",
    "type": "pullRequest",
    "title": "COO-684: add mui/material as is required as peer dependency",
    "body": "This PR adds the material ui dependency so it can be fetched by cachito for hermetic builds"
  },
  {
    "id": "358",
    "type": "pullRequest",
    "title": "OU-681: fix typo in the predefined metrics list"
  },
  {
    "id": "356",
    "type": "pullRequest",
    "title": "OU-499: remove deprecated components",
    "body": "This PR removes deprecated components and replaces them with the current versions"
  },
  {
    "id": "355",
    "type": "pullRequest",
    "title": "NO-JIRA: fix virtualization persepective perses extension point"
  },
  {
    "id": "353",
    "type": "pullRequest",
    "title": "OU-618: Various Perses Updates",
    "body": "Second set of changes for Perses These various commits fix issues found in Evelyn's testing doc( remove the redux dependency, address the flickering issue on refetch (kinda) and standardizes URL parameter adjustments on the `use-query-param` pacakge. First commit has a primary focus on removing the redux dependency for perses dashboards and fixing the dashboards url to be a v2 rather than `perses-dashboards`. It also changes the URL from having the format from `dashboards/v2/{dashboard_name}` to `dashboards/v2?dashboard={dashboard_name}`. Since there are now project as containers for lists of dashboards it doesn't make sense to have the `{dashboard_name}` as the root parameter. In the future we can discuss if `dashboards/v2/{project_name}/{dashboard_name}` will be better, but that will depend on the UX flows decided upon for the customizable dashboards. --- Second commit removes a duplicate poller for alerts. As soon as we can it would be best to just centralize on react-query to not have to manually handle all the polling. --- Third commit fixes a bug which prevented variables from loading when refreshing the legacy dashboards pages. The basic flow of the bug was that the when selecting `Observe Dashboards` or when selecting another dashboard the `changeLegacyDashboard` function is called. But because the dashboardName is already selected when refreshing, the function isn't called. A first load variable has been created to call the function on the first load. --- Fourth commit adds virt perspective extension points and changes _Perses Dashboards_ to _Dashboards (Perses)_ in perspective where both dashboard pages are available (admin, virt) but leaves the title as _Dashboards_ in the acm perspective. --- Fifth commit fixes an issue which didn't take the dashbaord url parameter into account when using the developer perspective. --- Sixth commit fixes a typo and updates the \"dashboard exists but is empty\" state so that it doesn't mention an edit button. --- Seventh commit fixes an issue with reactivity caused by setting query parameters outside of `use-query-params`. Although the new parameters would be found on a refresh, their changes weren't recognized for reactivity. This led to odd behavior such as the new duration of a time range being reactive, but the \"deleteEndTime\" not causing the end time to also update. --- Eighth commit sets the default refresh time to \"No refresh\" after inspecting perses, the issue with flickering when refreshing comes from upstream. We should look to solve this issue upstream in the future, but set the refresh interval to default to off for now to prevent flickering from happening frequently."
  },
  {
    "id": "354",
    "type": "pullRequest",
    "title": "NO-JIRA: use ocp base images for ci"
  },
  {
    "id": "351",
    "type": "pullRequest",
    "title": "NO-JIRA: add incidents header",
    "body": "This PR looks to add a header for the incidents page. !image("
  },
  {
    "id": "350",
    "type": "pullRequest",
    "title": "OU-618: Embed Perses Dashboards into Monitoring Plugin",
    "body": "This PR looks to embed Perses Dashboards into the monitoring plugin. It refactors much of the dashboard code to allow sharing of the heading and variable selectors. Development Environment Development Environment can be set up by running an instance of Perses using: ```sh podman run --name perses -p 127.0.0.1:8080:8080 persesdev/perses ``` details summaryExample Transformed Dashboard/summary This dashboard can be imported into Perses for testing purposes, as shown in the video ```json { \"kind\": \"Dashboard\", \"metadata\": { \"name\": \"a164a7f0339f99e89cea5cb47e9be617\", \"createdAt\": \"0001-01-01T00:00:00Z\", \"updatedAt\": \"0001-01-01T00:00:00Z\", \"version\": 0, \"project\": \"\" }, \"spec\": { \"display\": { \"name\": \"Kubernetes / Compute Resources / Workload\" }, \"variables\": { \"kind\": \"ListVariable\", \"spec\": { \"display\": { \"hidden\": false }, \"allowAllValue\": false, \"allowMultiple\": false, \"sort\": \"alphabetical-asc\", \"plugin\": { \"kind\": \"PrometheusLabelValuesVariable\", \"spec\": { \"labelName\": \"cluster\", \"matchers\": \"up{job=\\\"kube-state-metrics\\\"}\" } }, \"name\": \"cluster\" } }, { \"kind\": \"ListVariable\", \"spec\": { \"display\": { \"hidden\": false }, \"allowAllValue\": false, \"allowMultiple\": false, \"sort\": \"alphabetical-asc\", \"plugin\": { \"kind\": \"PrometheusLabelValuesVariable\", \"spec\": { \"labelName\": \"namespace\", \"matchers\": \"kube_namespace_status_phase{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\"}\" } }, \"name\": \"namespace\" } }, { \"kind\": \"ListVariable\", \"spec\": { \"display\": { \"hidden\": false }, \"allowAllValue\": true, \"allowMultiple\": false, \"sort\": \"none\", \"plugin\": { \"kind\": \"PrometheusLabelValuesVariable\", \"spec\": { \"labelName\": \"workload_type\", \"matchers\": \"namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}\" } }, \"name\": \"type\" } }, { \"kind\": \"ListVariable\", \"spec\": { \"display\": { \"hidden\": false }, \"allowAllValue\": false, \"allowMultiple\": false, \"sort\": \"alphabetical-asc\", \"plugin\": { \"kind\": \"PrometheusLabelValuesVariable\", \"spec\": { \"labelName\": \"workload\", \"matchers\": \"namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload_type=~\\\"$type\\\"}\" } }, \"name\": \"workload\" } } , \"panels\": { \"0_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"CPU Usage\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25 }, \"yAxis\": { \"format\": { \"unit\": \"decimal\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"1_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"CPU Quota\" }, \"plugin\": { \"kind\": \"Table\", \"spec\": { \"columnSettings\": { \"header\": \"Time\", \"hide\": true, \"name\": \"Time\" }, { \"header\": \"CPU Usage\", \"name\": \"Value A\" }, { \"header\": \"CPU Requests\", \"name\": \"Value B\" }, { \"header\": \"CPU Requests %\", \"name\": \"Value C\" }, { \"header\": \"CPU Limits\", \"name\": \"Value D\" }, { \"header\": \"CPU Limits %\", \"name\": \"Value E\" }, { \"header\": \"Pod\", \"name\": \"pod\" }, { \"header\": \"\", \"name\": \"/./\" } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) /sum( kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) /sum( kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"cpu\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } } } }, \"2_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Memory Usage\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25 }, \"yAxis\": { \"format\": { \"unit\": \"bytes\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"3_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Memory Quota\" }, \"plugin\": { \"kind\": \"Table\", \"spec\": { \"columnSettings\": { \"header\": \"Time\", \"hide\": true, \"name\": \"Time\" }, { \"header\": \"Memory Usage\", \"name\": \"Value A\" }, { \"header\": \"Memory Requests\", \"name\": \"Value B\" }, { \"header\": \"Memory Requests %\", \"name\": \"Value C\" }, { \"header\": \"Memory Limits\", \"name\": \"Value D\" }, { \"header\": \"Memory Limits %\", \"name\": \"Value E\" }, { \"header\": \"Pod\", \"name\": \"pod\" }, { \"header\": \"\", \"name\": \"/./\" } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) /sum( kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"sum( container_memory_working_set_bytes{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", container!=\\\"\\\", image!=\\\"\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) /sum( kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", resource=\\\"memory\\\"} on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=\\\"$workload\\\", workload_type=~\\\"$type\\\"} ) by (pod) \", \"seriesNameFormat\": \"\" } } } } } }, \"4_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Current Network Usage\" }, \"plugin\": { \"kind\": \"Table\", \"spec\": { \"columnSettings\": { \"header\": \"Time\", \"hide\": true, \"name\": \"Time\" }, { \"header\": \"Current Receive Bandwidth\", \"name\": \"Value A\" }, { \"header\": \"Current Transmit Bandwidth\", \"name\": \"Value B\" }, { \"header\": \"Rate of Received Packets\", \"name\": \"Value C\" }, { \"header\": \"Rate of Transmitted Packets\", \"name\": \"Value D\" }, { \"header\": \"Rate of Received Packets Dropped\", \"name\": \"Value E\" }, { \"header\": \"Rate of Transmitted Packets Dropped\", \"name\": \"Value F\" }, { \"header\": \"Pod\", \"name\": \"pod\" }, { \"header\": \"\", \"name\": \"/./\" } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } }, { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"\" } } } } } }, \"5_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Receive Bandwidth\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"format\": { \"unit\": \"bytes/sec\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"5_1\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Transmit Bandwidth\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"format\": { \"unit\": \"bytes/sec\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"6_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Average Container Bandwidth by Pod: Received\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"format\": { \"unit\": \"bytes/sec\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(avg(irate(container_network_receive_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"6_1\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Average Container Bandwidth by Pod: Transmitted\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"format\": { \"unit\": \"bytes/sec\" }, \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(avg(irate(container_network_transmit_bytes_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"7_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Rate of Received Packets\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"7_1\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Rate of Transmitted Packets\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_packets_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"8_0\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Rate of Received Packets Dropped\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_receive_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } }, \"8_1\": { \"kind\": \"Panel\", \"spec\": { \"display\": { \"name\": \"Rate of Transmitted Packets Dropped\" }, \"plugin\": { \"kind\": \"TimeSeriesChart\", \"spec\": { \"legend\": { \"mode\": \"list\", \"position\": \"bottom\", \"values\": }, \"visual\": { \"areaOpacity\": 1, \"connectNulls\": false, \"display\": \"line\", \"lineWidth\": 0.25, \"stack\": \"all\" }, \"yAxis\": { \"min\": 0 } } }, \"queries\": { \"kind\": \"TimeSeriesQuery\", \"spec\": { \"plugin\": { \"kind\": \"PrometheusTimeSeriesQuery\", \"spec\": { \"query\": \"(sum(irate(container_network_transmit_packets_dropped_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\"}$__rate_interval) on (namespace,pod) group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", workload=~\\\"$workload\\\", workload_type=~\\\"$type\\\"}) by (pod)) \", \"seriesNameFormat\": \"pod\" } } } } } } }, \"layouts\": { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"CPU Usage\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 1, \"width\": 24, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/0_0\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"CPU Quota\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 9, \"width\": 24, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/1_0\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Memory Usage\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 17, \"width\": 24, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/2_0\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Memory Quota\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 25, \"width\": 24, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/3_0\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Current Network Usage\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 33, \"width\": 24, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/4_0\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Bandwidth\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 41, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/5_0\" } }, { \"x\": 12, \"y\": 41, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/5_1\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Average Container Bandwidth by Pod\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 49, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/6_0\" } }, { \"x\": 12, \"y\": 49, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/6_1\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Rate of Packets\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 57, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/7_0\" } }, { \"x\": 12, \"y\": 57, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/7_1\" } } } }, { \"kind\": \"Grid\", \"spec\": { \"display\": { \"title\": \"Rate of Packets Dropped\", \"collapse\": { \"open\": true } }, \"items\": { \"x\": 0, \"y\": 65, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/8_0\" } }, { \"x\": 12, \"y\": 65, \"width\": 12, \"height\": 7, \"content\": { \"$ref\": \"/spec/panels/8_1\" } } } } , \"duration\": \"1h\" } } ``` /details In conjunction with the instructions for running the monitoring-plugin with features documented here( Demo Other Fixes This PR also fixes some issues with the dashboard and metric dropdowns which prevent them from showing the times selected accurately."
  },
  {
    "id": "347",
    "type": "pullRequest",
    "title": "OU-643: fix filter dropdpdowns to match patterfly correct use, remove deprecated dropdown components"
  },
  {
    "id": "349",
    "type": "pullRequest",
    "title": "rhineng-16008: add cutoff for alerts timestamps",
    "body": "Due to the limitations of how the API works when we request alerts data we can \"catch\" alerts data for the other incidents. Specifically the time before/after the chosen/selected incident starts/ends. To avoid showing this data I need to introduce a cut-off time, and make sure we're not showing alerts for the time when the chosen incident is not \"happening\" Before !image( After !image("
  },
  {
    "id": "343",
    "type": "pullRequest",
    "title": "RHINENG-10537:incidents page remove longstanding filter",
    "body": "According to the discussion between engineers I need to remove long standing filter and everything related to it"
  },
  {
    "id": "340",
    "type": "pullRequest",
    "title": "RHINENG-10537:Voronoi container review branch",
    "body": "1. Refactored big function that was responsible for creating intervals/detecting/transitions/gaps and much more for the Incidents chart. Now it has several functions, and it's easier to read. They all have JSdoc so they are easier to understand 2. Refactored big function that was responsible for creating intervals/detecting gaps and much more for the Alerts chart. 3. Added 'nodata' values to 'gaps' and 'empty intervals in the chart. Now the tooltip won't appear if you hover over empty space in the chart. It is done both for the Incidents and Alerts chart. 4. Different type of tooltip container is used for both the incidents and Alerts charts, it work better overall. 5. Small naming changes"
  },
  {
    "id": "341",
    "type": "pullRequest",
    "title": "RHINENG-10537: fix incidents page loading state issue",
    "body": "Removed setter for loading state from the filter - it was forcing the table into an incorrect state when the user selected the same days that were already chosen in the filter"
  },
  {
    "id": "336",
    "type": "pullRequest",
    "title": "NO-JIRA: Incidents page small fixes",
    "body": "1) added '---' to the chart tooltip in case if alert is firing 2) fixed the toggle for the day's filter, it was getting stuck in the expanded state."
  },
  {
    "id": "332",
    "type": "pullRequest",
    "title": "OU-649: fix net/http vulnerable dependency"
  },
  {
    "id": "334",
    "type": "pullRequest",
    "title": "RHINENG-15594: fix tooltip in row details",
    "body": "1) fixed the logic of how we add the \"alertsEndFiring\" prop, previously, the values were not sorted, so it could differ from the actual last timestamp. Now it properly assigns it. 2) Improved logic of when we add the tooltip to the Link in the alert expanded details in the table. Now if we don't have rule OR if the alert is resolved - we make the link non clickable and add a tooltip with helper text."
  },
  {
    "id": "333",
    "type": "pullRequest",
    "title": "RHINENG-15501: Fixing incidents filter issues with severeties and long standing",
    "body": "1) The old logic for processing severity was dependent on src_severity, it is unreliable. With how we combine incidents into 1 object depending on group id the src_severity could be \"warning\" even though there are timestamps with \"2\" in the second index which marks 'critical'. I updated the logic to mark the incident as critical/warning/info if we have at least 1 timestamp with critical/warning/info. 2)Updated filter logic to make sure that long standing is Additive. That means by default we return everything except long standing"
  },
  {
    "id": "331",
    "type": "pullRequest",
    "title": "RHINENG-15582: Incidents dark theme support",
    "body": "Dark theme support for incidents page: 1) added hook made by Andreas for other openshift project 2)Pass theme value to the charts and calculate the following things: 1. Color of chart bars for all 3 types 2. Text of axis 3. Text of legend 4. Legend's color Also, I updated the logic for the OnClick functionality in the Incidents chart. Now, we use fillOpacity props instead of using switch-case and fill props. !image("
  },
  {
    "id": "330",
    "type": "pullRequest",
    "title": "RHINENG-15284: sync alert chart to main filter",
    "body": "I added 2 filter cases to manage the state of alerts chart: 1) state when the chosen incident is not passing filters or the is no data - we force the empty state through alerts is loading 2) state when the chosen incident is in the filtered data - we show the incident Also, I removed dispatch(setAlertsAreLoading({ alertsAreLoading: true })); from the days filter because it is causing issues (if you choose the same day filter - it forces the loading state. IncidentsPage sync is already updated in such way that it doesn't need it - changing days already triggers everything we need."
  },
  {
    "id": "329",
    "type": "pullRequest",
    "title": "RHINENG-15501: hotfix because filter requirement were updated",
    "body": "Alberto requested a change in long standing filter"
  },
  {
    "id": "306",
    "type": "pullRequest",
    "title": "OU-644: Finish Alerting Refactor",
    "body": "/hold Since OU-561( was completed without finishing the refactor, this PR looks to finalize the Alerting refactor. Pulling out the final two pages into their own files, and removing the routing entrypoint of the monitoring UI from the alerting.tsx file to a new router.tsx file. We should hold this PR until everyone is back in January"
  },
  {
    "id": "325",
    "type": "pullRequest",
    "title": "OU-645: Fix virtualization perspective routes and routing",
    "body": "During the last rebase and merge a number of small issues cropped up with the virtualization perspective routes and routing which makes them generally unsynced. This PR looks to bring them back in line. Virtualization perspectives after these changes can be seen here( This PR should be merged before 306 to prevent issues with backporting to 4.18."
  },
  {
    "id": "326",
    "type": "pullRequest",
    "title": "NO-JIRA: Don't attempt to access potentially undefined variable"
  },
  {
    "id": "324",
    "type": "pullRequest",
    "title": "NO-JIRA: fixed function for incident chart colors",
    "body": "during one of the rebases/merges I lost a return of the function that regulate color for incidents chart fixing it here"
  },
  {
    "id": "323",
    "type": "pullRequest",
    "title": "RHINENG-15501: Improve incidents filter logic and sync",
    "body": "1) Added redux state for filtered data (will be used in syncing states) 2) Removed recent filter and renamed persistent back to long standing (why oh god why) 3) Updated filters logic according to the ticket description 4) SYNC (in PROGRESS!!!)"
  },
  {
    "id": "319",
    "type": "pullRequest",
    "title": "RHINENG-15284: Sync alerts chart and incidents table with days filter",
    "body": "The issue This PR fixes 2 major things: 1) I updated the logic for creating bars for the alert chart. Now the bar respects the gaps in time and the bars are created accordingly and not smushed all together into 1 line 2) I added more logic to how we manage loading states for the alerts chart and incidents table. Now if the date changes - we force loading states so the component won't render BEFORE we get new data from the API. Previously there was an issue that was causing the component to render again with old data, without waiting for the API calls to resolve. Smaller things I added in this PR: I added unselect logic to the \"onclick\" function that fires when the user clicks on an incident in the incident chart. I replaced the PF color variables because of the bug when PF loses its styles and these variables doesn't work"
  },
  {
    "id": "304",
    "type": "pullRequest",
    "title": "OU-433: Split the Dashboard Page between perses and legacy"
  },
  {
    "id": "322",
    "type": "pullRequest",
    "title": "RHINENG-15362: Sort the bars in the charts based on their first timestamp",
    "body": "Sort the bars in the charts based on their first timestamp"
  },
  {
    "id": "321",
    "type": "pullRequest",
    "title": "NO-JIRA: revert reset all filters button",
    "body": "After some discussions with PM's we came up with a decision to revert this change"
  },
  {
    "id": "316",
    "type": "pullRequest",
    "title": "RHINENG-15190: fix gap in incident charts",
    "body": "updated logic for organizing intervals of the same severity for the bar chart generation"
  },
  {
    "id": "307",
    "type": "pullRequest",
    "title": "OCPBUGS-47535: use pf v5 variables and table component",
    "body": "This PR: - Replaces all usages of patternfly variables and classes of V4 with V5 - Updates the patternfly table from V4 to V5 - Upgrades patternfly react table and charts packages Smoke tested with"
  },
  {
    "id": "317",
    "type": "pullRequest",
    "title": "OU-630: Add Needed Virtualization Perspective Changes",
    "body": "This change adds a new redux reducer which is exclusive to the monitoring-plugin, as well as the extension points needed for the virtualization perspective."
  },
  {
    "id": "314",
    "type": "pullRequest",
    "title": "OCPBUGS-48142: Fix Dev Perspective Alert URL namespace",
    "body": "Fixes an issue which prevented the namespace from being populated in the alert URL located in the silences page. This was due to the namespace not being passed in to the URL generator function"
  },
  {
    "id": "312",
    "type": "pullRequest",
    "title": "Revert \"OU-588: Move Incidents Tab to Alerting Page \"",
    "body": "Reverts openshift/monitoring-plugin303"
  },
  {
    "id": "310",
    "type": "pullRequest",
    "title": "RHINENG-15114: incidents page fixed date style inconsistency",
    "body": "Fixed dates inconsistency on Incidents Page !image( !image( !image("
  },
  {
    "id": "311",
    "type": "pullRequest",
    "title": "RHINENG-15115: update hideshow graph button",
    "body": "Change text of the hide/show button depending on the state. If graphs are hidden then its \"Show graph\" !image( !image("
  },
  {
    "id": "309",
    "type": "pullRequest",
    "title": "RHINENG-15096: incidents page reset filters fix",
    "body": "!image( Rename clear all filters button to reset all filters because it fits better with the function"
  },
  {
    "id": "303",
    "type": "pullRequest",
    "title": "OU-588: Move Incidents Tab to Alerting Page",
    "body": "Related JIRA Description - Relocate the Incidents tab from Observe Incidents to Observe Alerting Incidents tab. - the frontend use a proxy `/api/proxy/plugin/monitoring-console-plugin/backend/features` to fetch the list of features enabled from the golang backend( Cluster Observability Operator configures the proxy here( This is an initial solution. The long-term solution( is to modify the openshift/console-dynamic-plugin-sdk horizontalNav( so that the prop `contextId` is exposed. This will allow the file `incidents.patch.json` to create a extension that will hook into the horizontalNav by the contextId. Testing Locally tested using the following instructions : 1. In the first terminal run `make start-frontend` 2. In the second terminal run `make start-feature-backend` 3. In the third terminal run `make start-feature-console` 4. Incidents feature should now be enabled. Navigate to Admin perspective Observe Alerts Alerts Tab should now show 'Incidents' In-cluster testing using the following instructions: 1. With ClusterBot run the command: `launch 4.18,openshift/monitoring-plugin303 aws` 2. Enable Incidents in the cluster: - Use this branch for testing: It hacks the `script deploy-acm.sh` to deploy incidents instead. OR use this command to enable incidents `helm template charts/openshift-console-plugin --set plugin.image=quay.io/rh-ee-pyurkovi/incidents:latest --set plugin.features.incidents.enabled=true` - Run in the terminal `$ make deploy-acm` (this deploys the incident because we hack-ily modified `deploy-acm.sh` in step 2) Screenshots/Demos img width=\"1512\" alt=\"image\" src=\" / Figure 1. BEFORE - Incidents is under the Observe section. img width=\"1490\" alt=\"image\" src=\" / Figure 2 AFTER - The screenshot shows that the 'Incidents' Tab is now under Observe Alerting. The section Observe Incidents has been removed. Figure 3. Video (~0:22 seconds duration), show Incidents Tab relocation with local testing (at localhost:9000). Figure 4. Video (~0:27 second duration) shows Incidents Tab relocation within cluster testing."
  },
  {
    "id": "296",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove duplicate parameter",
    "body": "/hold Until 288 is merged Clean up some tech debt when we are passing the namespace into the component as a prop, but the useActiveNamespace is already called."
  },
  {
    "id": "288",
    "type": "pullRequest",
    "title": "OCPBUGS-45896: Fix admin console alert detail graph",
    "body": "When retrieving the prometheus URL to query, the embedded query-browser was using the passed in namespace in the admin console (which can exist) when it should instead not be passing in any namespace, as the query will go against the whole cluster not a specific namespace"
  },
  {
    "id": "300",
    "type": "pullRequest",
    "title": "OCPBUGS-46083: fix button spacing on silence form"
  },
  {
    "id": "290",
    "type": "pullRequest",
    "title": "NO-JIRA: Run webpack with a different port",
    "body": "We use some scripts to run monitoring plugin in a different port sometimes. It would be cool to have this env in the configuration so we don't have to manually edit the code locally."
  },
  {
    "id": "295",
    "type": "pullRequest",
    "title": "OCPBUGS-45174: Fix bounds on bar chart",
    "body": "This PR looks to solve an issue which led the length of an individual bar on a bar chart to exceed the bounds of the bar chart. Before: !Screenshot 2024-12-11 at 9 40 51 AM( After: !Screenshot 2024-12-11 at 9 40 08 AM( Minimum Dashboard Reproduction: details summarybMinimum Dashboard Reproduction/b/summary ```yaml kind: ConfigMap apiVersion: v1 metadata: labels: console.openshift.io/dashboard: 'true' console.openshift.io/odc-dashboard: 'true' name: world-dashboard namespace: openshift-config-managed data: etcd.json: )) by (node)\" } , \"title\": \"title\", \"type\": \"grafana-piechart-panel\" } } ``` /details"
  },
  {
    "id": "291",
    "type": "pullRequest",
    "title": "OCPBUGS-45816: Fix inverted dropdown toggle",
    "body": "When adding the ACM alerting UI, a new `getObserveState` function was needed to differentiate between the `monitoring-plugin` and the `monitoring-console-plugin`. In that transition, a _.isEmpty was left out thus leading to a non-empty state being truthy and the \"Show all Series\" and \"Hide all Series\" labels being inverted. Diff for the ACM alerting UI change here( This will link to the right line, but its a large webpage so may take a second to load"
  },
  {
    "id": "292",
    "type": "pullRequest",
    "title": "OCPBUGS-45801: Allow editing the until field on the silence edit page",
    "body": "This PR looks to bring the fix added in openshift/console13926 to the monitoring plugin. As correctly predicted by @kyoto here( now that we have moved from Patternfly 4 to 5, this fix is needed in the monitoring-plugin as well."
  },
  {
    "id": "286",
    "type": "pullRequest",
    "title": "OU-561: Use AlertsRulesDetailPage from `monitoring-plugin`",
    "body": "/hold Fixes: !-- For e.g Fixes: -- Solution Description: !-- Describe your code changes in detail and explain the solution -- - Remove `AlertRulesDetailsPage` from console - Add a route in monitoring-plugin to enable it - Remove code related to routes that are no longer provided by console repo Screen shots / Gifs for design review: !-- If change affects UI in any way, tag @openshift/team-devconsole-ux and add screenshots/gifs -- !image( The only change to the AlertsRulesDetailPage in the developer perspective is that it will no longer have a namespace selector. Since the selected alert is already namespaced, it didn't make sense to swap namespaces while focused on a specific AlertRule. Unit test coverage report: !-- Attach test coverage report -- n/a Test setup: !-- If any setup required to test this PR, mention the details -- Host the monitoring dynamic plugin locally by running ```sh ./bin/bridge -plugins monitoring-plugin= -i18n-namespaces=plugin__monitoring-plugin -branding openshift console backend yarn dev console/frontend and monitoring-plugin/web ``` Browser conformance: !-- To mark tested browsers, use x -- - x Chrome - x Firefox - Safari"
  },
  {
    "id": "266",
    "type": "pullRequest",
    "title": "OU-432: Merge Perses dashboards with current dashboards list",
    "body": "Description On the dashboard page, list Perses( dashboards in the dropdown. This PR only lists the dashboards in the dropdown; the dashboard is not rendered when you click on the dropdown item. img width=\"1512\" alt=\"OU-539_demo_list_perses_dashboards_ocp\" src=\" Figure 1. Perses dashboards are listed in the dashboard page dropdown (e.g., \"testproject / dashboard1\" and \"testproject / dashboard2\"). The dashboards are displayed as \"project name\" / \"dashboard name\". The tag, by default, is \"perses.\" Related Issue Testing This PR was only tested locally during development. To setup the test: 1. Launch a perses container `docker run --name perses -d -p 127.0.0.1:8080:8080 persesdev/perses`. See for information. 2. Navigate to ` which will take you to the local Perses instance. Create a project and a dashboard for it. 3. Start the monitoring-plugin (`make start-frontend` and in a separate terminal `make start-console`). `make start-console` is proxying localhost:8080 (our local perses instance). 4. There is a bug in the OCP console that prevents the Dashboard page from fetching the OCP dashboards specs -- to circumvent (with a hack-y solution) I've created a mock API response that serves the specs in this branch which you can merge in to the PR : 5. Navigate to ` (our local OCP instance). Go to Observe Dashboards Dropdown, the dashboards you created in the local perses instance should now be listed in the dropdown. Figure 2. Video demo of testing (~1:45 minutes). Shows perses dashboards are listed in the Dashboard page dropdown."
  },
  {
    "id": "287",
    "type": "pullRequest",
    "title": "NO-JIRA: tidy go dependencies"
  },
  {
    "id": "282",
    "type": "pullRequest",
    "title": "OU-499: Port CONSOLE-4124, ODC-7655, CONSOLE-4127 to dynamic plugin",
    "body": "port from - - - Also migrated `KebabDropdown`: What changed: - Metrics: - Timespan dropdown !image( - All kebab menus !image( - Monitoring Dashboard: - Dashboard selector !image( - All kebab menus !image( - Create silence form - Silence for dropdown !image("
  },
  {
    "id": "284",
    "type": "pullRequest",
    "title": "OCPBUGS-45661: Updating monitoring-plugin-container image to be consistent with ART for 4.19",
    "body": "Updating monitoring-plugin-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: monitoring-plugin.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "285",
    "type": "pullRequest",
    "title": "RHINENG-14555: Update for the filters and default state for the filters",
    "body": "added more filters. 'Recent' (everything that is not older than 7 days. 'Persistent' (everything that started more than 7 days ago). Informative, Warning, Critical - self-explanatory. Resolved - if the last timestamp is older than 10 minutes - it is resolved. Firing - If the last timestamp is younger than 10 minutes - it is firing. Connected filters to redux store Updated function for filtering"
  },
  {
    "id": "281",
    "type": "pullRequest",
    "title": "NO-JIRA: multiple components in tooltip for incidents"
  },
  {
    "id": "283",
    "type": "pullRequest",
    "title": "RHINENG-14523: (fix) update expanded details",
    "body": "Now the kebab actions are disabled if there is no rule for this alert Plus I added a small margin to the text in the table so they would not stick to the icons."
  },
  {
    "id": "280",
    "type": "pullRequest",
    "title": "RHINENG-14585: Remove pending alerts from processing and add another value to the unique key"
  },
  {
    "id": "279",
    "type": "pullRequest",
    "title": "RHINENG-14677: fix filters for incidents",
    "body": "Fixed filters not working. You can find recordings of the filters fix in the ticket below"
  },
  {
    "id": "264",
    "type": "pullRequest",
    "title": "OCPBUGS-35726: fix cert/key file reload"
  },
  {
    "id": "275",
    "type": "pullRequest",
    "title": "NO-JIRA: fix incidents filter width",
    "body": "Fix width of incidents filter"
  },
  {
    "id": "276",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix feature flagged DX",
    "body": "This PR adds better DX for running the monitoring-plugin with features enabled while developing. This doesn't exactly add hot reloading, but the page does refresh when changes are made to the frontend"
  },
  {
    "id": "274",
    "type": "pullRequest",
    "title": "RHINENG-14523: Fix expanded row won't render without rule details + firing logic update",
    "body": "1) Updated sample resolution to 288 per day, which allows us to see data from incidents much faster ~10 minutes now 2) Updated logic that gathers rows for expanded details table. If, for some reason, there is no rule matching the alert name - we disable the link to that rule + add a tooltip with helper text. We disable kebab actions as well. 3)Updated logic that renders firing/resolved icon in expanded details 4)Updated logic that gathers components for the main table. Now, it has an additional step - it reads the alerts assigned to the \"component\" and checks their \"alertstate\", if at least 1 alert has a firing status - the component will have a firing status. If all of the alerts assigned to the \"component\" are resolved - the component will have a resolved state. Based on that firing/resolved we show a different icon in the main table."
  },
  {
    "id": "273",
    "type": "pullRequest",
    "title": "NO-JIRA: Upgrade incidents dropdown",
    "body": "this PR upgrades the incidents type dropdown filter to use PF5"
  },
  {
    "id": "270",
    "type": "pullRequest",
    "title": "RHINENG-14524: incidents charts update cursor and",
    "body": "A small improvement that makes the chart height adjust automatically depending on the number of rows. Values could be adjusted later after reviews and QA Also I updated the charts tooltip because this one is less buggy and doesn't cover the bars"
  },
  {
    "id": "269",
    "type": "pullRequest",
    "title": "NO-JIRA: Remove extra copy that fails"
  },
  {
    "id": "92",
    "type": "pullRequest",
    "title": "OCPBUGS-45601: Updating ose-multus-admission-controller-container image to be consistent with ART for 4.19",
    "body": "Updating ose-multus-admission-controller-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-multus-admission-controller.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "268",
    "type": "pullRequest",
    "title": ": OCPBUGS-55091: CNI subdirectory chaining for composable CNI chaining",
    "body": "Includes bumps to libcni as well as net-attach-def client"
  },
  {
    "id": "267",
    "type": "pullRequest",
    "title": "TRT-2057: Properly structure empty CNI result",
    "body": "For a previous fix of returning an empty CNI result when pods are not found, the CNI result wasn't properly structured. This fixes the structuring."
  },
  {
    "id": "264",
    "type": "pullRequest",
    "title": "OCPBUGS-54153: Ds merge 3/24",
    "body": "cc @dougbtv"
  },
  {
    "id": "263",
    "type": "pullRequest",
    "title": "OCPBUGS-53087: Tolerate issues writing network status annotation on CNI ADD",
    "body": "This change adds toleration for such errors like: ``` failed to query/update the pod pod-name-here in out of cluster comm: pod \"pod-name-here\" not found ``` During CNI ADD. ~While this change is a trade off in terms of debugability for RBAC, it's potentially noisy in scaled clusters when it is working properly.~ (edit: that's not the case anymore after I updated my code)"
  },
  {
    "id": "258",
    "type": "pullRequest",
    "title": "OCPBUGS-45037: Bring in getpodcontext (fix cache miss carry)",
    "body": "Reverts carry 713f28b51aeda2d3278c24062c5b7619bc1c8a63 Brings in changes from: context for getpod: and getlivepod to avoid cache misses (to patch carry with upstream):"
  },
  {
    "id": "67",
    "type": "pullRequest",
    "title": "OCPBUGS-52411: Updating ose-multus-networkpolicy-container image to be consistent with ART for 4.19",
    "body": "Updating ose-multus-networkpolicy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: multus-networkpolicy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "66",
    "type": "pullRequest",
    "title": "OCPBUGS-44354: Sync 20250204",
    "body": "Despite 64 being intended to be the first merge-based sync with upstream, the merge-commit has not been created and this PR contains all the upstream commit hashes. Real changes, which can be browsed on the `File changes` tab, relate to the u/s PR: - - - -"
  },
  {
    "id": "65",
    "type": "pullRequest",
    "title": "OCPBUGS-45384: Updating ose-multus-networkpolicy-container image to be consistent with ART for 4.19",
    "body": "Updating ose-multus-networkpolicy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: multus-networkpolicy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "356",
    "type": "pullRequest",
    "title": "OCPBUGS-54422: Ds merge 4/3",
    "body": "ds merge w controller watcher fix for nads without ip-range for fast ranges"
  },
  {
    "id": "353",
    "type": "pullRequest",
    "title": "OCPBUGS-53397: Upstream sync 20-03-2025",
    "body": "Upstream sync 23-03-2025"
  },
  {
    "id": "349",
    "type": "pullRequest",
    "title": "OCPBUGS-52415: replace entrypoint",
    "body": "I removed the entrypoint from the dockerfile when adding node-slice-controller, this adds it back cc @dougbtv"
  },
  {
    "id": "346",
    "type": "pullRequest",
    "title": "NP-1128: Ds merge 2/25/25",
    "body": "ds merge containing bumps, dockerfile updates, and host-name resolution fix for fast ranges cc @dougbtv"
  },
  {
    "id": "341",
    "type": "pullRequest",
    "title": "NP-1100: Add nodeslicecontroller to dockerfile",
    "body": "Adds node-slice-controller package to packages built in the dockerfile, we need this to enable fast ranges"
  },
  {
    "id": "322",
    "type": "pullRequest",
    "title": "OKD-232: fix entrypoint.sh for new SCOS builds",
    "body": "Builds of OKD starting with 4.16 are based on CentOS Stream but the images identify as centos in /etc/os-release: ``` NAME=\"CentOS Stream\" VERSION=\"9\" ID=\"centos\" VERSION_ID=\"9\" ``` See also"
  },
  {
    "id": "327",
    "type": "pullRequest",
    "title": "NP-1110: Allow go vet to be skipped",
    "body": "Move go vet into skip static, go vet does not have permission to run in the ci cluster, which is where we call the make test-skip-static"
  },
  {
    "id": "326",
    "type": "pullRequest",
    "title": "NP-1110: Remove build from make test-skip-static"
  },
  {
    "id": "325",
    "type": "pullRequest",
    "title": "NP-1110: Carry Add test dockerfile",
    "body": "To run e2e tests in prow cluster we need the entire whereabouts binary in the final image build. we want to add a dockerfile just for testing that we can use here that we dont use anywhere else since it takes the image size from ~600mb to ~1gb rename dockerfile dirs to point to openshift instead of k8snetworkplumbingwg"
  },
  {
    "id": "323",
    "type": "pullRequest",
    "title": "NP-1111: replace ls line"
  },
  {
    "id": "321",
    "type": "pullRequest",
    "title": "NP-1111: Commit for test logs temp"
  },
  {
    "id": "319",
    "type": "pullRequest",
    "title": "Carry OCPBUGS-45854: Add test dockerfile",
    "body": "To run e2e tests in prow cluster we need the entire whereabouts binary in the final image build. we want to add a dockerfile just for testing that we can use here that we dont use anywhere else since it takes the image size from ~600mb to ~1gb"
  },
  {
    "id": "318",
    "type": "pullRequest",
    "title": "NP-1108: Carry Add test dockerfile",
    "body": "To run e2e tests in prow cluster we need the entire whereabouts binary in the final image build. we want to add a dockerfile just for testing that we can use here that we dont use anywhere else since it takes the image size from ~600mb to ~1gb C @dougbtv"
  },
  {
    "id": "317",
    "type": "pullRequest",
    "title": "NP-1107: Ds merge 11/27/2024",
    "body": "Small ds merge to bring in makefile changes for testing and some version bumps"
  },
  {
    "id": "487",
    "type": "pullRequest",
    "title": "MCO-1648: MCO-1649: Add `machineconfignodes` and `pinnedimagesets` to must-gather",
    "body": "This adds the `MachineConfigNodes` and `PinnedImageSets` resources to must gathers. To test: 1. Launch a 4.19 cluster with tech preview enabled. ``` launch 4.19.0-0.ci-2025-04-28-053740 aws,techpreview ``` 2. Apply a PIS. detailssummaryExample PIS/summary pre apiVersion: machineconfiguration.openshift.io/v1 kind: PinnedImageSet metadata: name: test-pinned labels: machineconfiguration.openshift.io/role: \"worker\" spec: pinnedImages: - name: quay.io/openshift-release-dev/ocp-release@sha256:513cf1028aa1a021fa73d0601427a0fbcf6d212b88aaf9d76d4e4841a061e44e - name: quay.io/openshift-release-dev/ocp-release@sha256:61eae2d261e54d1b8a0e05f6b5326228b00468364563745eed88460af04f909b /pre /details ``` $ oc apply -f pis-file ``` 3. Create the must-gather from the updated `gather_ppc` script. ``` ./collection-scripts/gather_ppc ``` 4. See the resources in the created must-gather. ``` must-gather -- cluster-scoped-resources ---- machineconfiguration.openshift.io ... ------ machineconfignodes -------- ip-10-0-0-9.ec2.internal.yaml -------- ip-10-0-58-49.ec2.internal.yaml -------- ip-10-0-7-211.ec2.internal.yaml -------- ip-10-0-43-205.ec2.internal.yaml -------- ip-10-0-66-94.ec2.internal.yaml -------- ip-10-0-78-97.ec2.internal.yaml ... ------ pinnedimagesets -------- test-pinned.yaml ```"
  },
  {
    "id": "479",
    "type": "pullRequest",
    "title": "CNF-16640: Changes for FRR-K8s Deployed via CNO",
    "body": "In 4.19 frr-k8s is moved in its own namespace deployed by CNO. Here we move all the collection logic in a separate script and remove the frr related logic (and frr-k8s) from metallb."
  },
  {
    "id": "481",
    "type": "pullRequest",
    "title": "no-jira: Remove davemulford from collection-scripts/OWNERS file."
  },
  {
    "id": "462",
    "type": "pullRequest",
    "title": ": no-jira: Update Makefile and Add Testing Info",
    "body": "Update the Makefile to allow users to build the image with their changes using podman. Update the Readme to add instructions on how to test changes."
  },
  {
    "id": "468",
    "type": "pullRequest",
    "title": "NO-ISSUE: gather additional MCO debug artifacts",
    "body": "This PR gathers a few debug artifacts pertaining to the machine-config-daemon implemented by openshift/machine-config-operator4723 and openshift/machine-config-operator4731. It also gathers the MachineConfiguration object, which is an singleton operator level object used to configure the MCO."
  },
  {
    "id": "464",
    "type": "pullRequest",
    "title": "OCPBUGS-44264: Collect all clustercsidriver resources",
    "body": "ClusterCSIDriver objects are small, let's collect them all. We expect that there 4 ClusterCSIDriver instances in a cluster at max (e.g. Azure Disk, Azure File, SMB and SecretStore) and the instances are small. Gathering these objects is important because we already gather Deployment, DaemonSets and other objects of CSI drivers by generic must-gather, and ClusterCSIDriver objects complement those info with managementState, cipherSuites, and various condition statuses for each CSI driver."
  },
  {
    "id": "466",
    "type": "pullRequest",
    "title": "OCPBUGS-45363: Update to use 4.19 image",
    "body": "/assign @ardaguclu"
  },
  {
    "id": "465",
    "type": "pullRequest",
    "title": "OCPBUGS-44857: Separate resources with comma to fix malformed inspect",
    "body": "Fix for: `oc adm inspect --all-namespaces` command was malformed, so its resources were never gathered."
  },
  {
    "id": "66",
    "type": "pullRequest",
    "title": "OCPBUGS-45827: Updating ose-network-interface-bond-cni-container image to be consistent with ART for 4.19",
    "body": "Updating ose-network-interface-bond-cni-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-network-interface-bond-cni.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "104",
    "type": "pullRequest",
    "title": "OCPBUGS-45826: Updating ose-network-metrics-daemon-container image to be consistent with ART for 4.19",
    "body": "Updating ose-network-metrics-daemon-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-network-metrics-daemon.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "NO-JIRA: Fix JIRA queries",
    "body": "- We migrated our jira project from SDN to CORENET - Somehow the filter \"filter in (Unresolved)\" is broken now, along with others that we use: . Let's fix that with \"resolution = Unresolved\". Note: the full query we use to retrieve unassigned bugs still has references to SDN filters for what concerns upstream issues tracked in our jira project. In order to fix that, I'll need to create new filters on jira first and once that is done I will open a separate PR."
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "NO-JIRA: Add Peng",
    "body": "``` $ ./network_bugs_overview -q - Found 264 bugs in 36.8s with the query: project=OCPBUGS and component in (\"networking\", \"networking / openshift-sdn\", \"networking / ovn-kubernetes\", \"networking / cloud-network-config-controller\", \"networking / ingress-node-firewall\", \"networking / cluster-network-operator\", \"networking / network-tools\") and status in (\"NEW\", \"ASSIGNED\", \"POST\", \"ON_DEV\") - Found 14 bugs in 3.0s with the query: project = SDN AND \"Epic Link\" = SDN-4175 AND Summary ~ \"upstream-\" AND filter in (Unresolved) AND assignee != \"bbennett@redhat.com\" AND assignee is not EMPTY Rank of developers least overloaded (today) 2025-01-14: ======================================================== Developer Points Bugs New Assigned Post Backports SAST/ART Total --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- 1 jtanenba 0 0 0 0 0 1 0 1 2 misalunk 110 2 2 0 0 0 0 2 3 npinaeva 321 6 4 2 0 0 1 7 4 pepalani 520 7 3 2 2 1 0 8 5 sseethar 962 17 12 3 2 0 1 18 6 arghosh 1322 8 4 2 2 0 0 8 7 jluhrsen 1347 15 11 3 1 0 0 15 8 trozet 1411 7 3 3 1 1 0 8 9 pdiak 1531 10 3 3 4 3 2 15 10 mkennell 1840 13 9 2 2 0 0 13 11 rravaiol 2110 4 4 0 0 0 0 4 12 pliu 2234 11 9 0 2 2 0 13 13 jcaamano 2333 11 9 2 0 1 2 14 --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- team 111 73 22 16 9 6 126 external 3875 68 56 5 7 1 1 70 sdn-team-bot 2294 44 44 0 0 0 2 46 --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- TOTAL 223 173 27 23 10 9 242 Points are calculated according to bug priority: - blocker: 10000 - critical: 1000 - major: 100 - normal: 10 - minor: 1 - undefined: 1 ```"
  },
  {
    "id": "136",
    "type": "pullRequest",
    "title": "OCPBUGS-45318: change containerRuntime from runc to crun",
    "body": "The containerRuntime changed from runc to crun from 4.18, so we need to update network-tools utils. /cc @npinaeva PTAL, thanks so much ^ ^"
  },
  {
    "id": "135",
    "type": "pullRequest",
    "title": "OCPBUGS-45757: Updating ose-network-tools-container image to be consistent with ART for 4.19",
    "body": "Updating ose-network-tools-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-network-tools.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "134",
    "type": "pullRequest",
    "title": "NO-JIRA: Add miheer and render dev names without \"rhn-support-\" prefix",
    "body": "``` Rank of developers least overloaded (today) 2024-11-25: ======================================================== Developer Points Bugs New Assigned Post Backports SAST/ART Total --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- 1 misalunk 10 1 1 0 0 0 0 1 2 npinaeva 211 4 2 2 0 0 1 5 3 mkennell 230 5 1 3 1 0 0 5 4 pepalani 730 10 3 3 4 3 0 13 5 sseethar 1023 15 11 2 2 0 1 16 6 arghosh 1210 4 0 2 2 1 0 5 7 rravaiol 1220 5 4 1 0 0 0 5 8 jluhrsen 1240 7 5 1 1 0 0 7 9 jtanenba 1420 7 7 0 0 1 0 8 10 pdiak 1602 9 4 2 3 2 0 11 11 jcaamano 2232 9 7 2 0 1 1 11 12 trozet 3322 10 5 3 2 3 0 13 --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- team 86 50 21 15 11 3 100 external 5660 26 11 6 9 3 1 30 sdn-team-bot 864 36 36 0 0 0 1 37 --- ------------ -------- ------ ----- ---------- ------ ----------- ---------- ------- TOTAL 148 97 27 24 14 5 167 ```"
  },
  {
    "id": "237",
    "type": "pullRequest",
    "title": "CNV-57493: Validate if the namespace is configured for a primary UDN",
    "body": "Description 1. display error if no namespace can be selected and guide user to create a new namespace 2. filter out namespaces without the label `k8s.ovn.org/primary-user-defined-network` 3. select active namespace only if it has the label 4. if there is only one namespace matching the criteria then select it. Demo !Screenshot From 2025-04-28 13-25-21("
  },
  {
    "id": "233",
    "type": "pullRequest",
    "title": "CNV-60065: fix cudn input name",
    "body": "the input was not changing the state and cudn got created with the original generated name. The `name` prop was overlapping with `react-hook-form` library `register` method"
  },
  {
    "id": "236",
    "type": "pullRequest",
    "title": "OCPBUGS-49395: adding translations"
  },
  {
    "id": "229",
    "type": "pullRequest",
    "title": "Upload i18n translations scripts",
    "body": "Took some scripts from console to upload translations"
  },
  {
    "id": "231",
    "type": "pullRequest",
    "title": "CNV-59853: remove co-m-table-grid and dropdown-kebab-pf classes",
    "body": "- replaces `co-m-table-grid` and related classes with PatternFly `Table` - removes `dropdown-kebab-pf` classes Before: img width=\"1429\" alt=\"Screenshot 2025-04-14 at 11 38 33\" src=\" / img width=\"1429\" alt=\"Screenshot 2025-04-14 at 11 38 22\" src=\" / After: img width=\"1450\" alt=\"Screenshot 2025-04-14 at 10 51 15\" src=\" / img width=\"1429\" alt=\"Screenshot 2025-04-14 at 11 18 18\" src=\" /"
  },
  {
    "id": "228",
    "type": "pullRequest",
    "title": "CNV-58647: update PatternFly Modal to new version",
    "body": "- Updates PF Modal to new version. - replaces `variant=\"type\"` with `SomeVariant.type` - removes unnecessary `type=\"button\"` on PF Buttons"
  },
  {
    "id": "227",
    "type": "pullRequest",
    "title": "CNV-58320: remove console classes which changed styling",
    "body": "Removes `co-m-pane__body`, `co-m-nav-title`, replaces heading elements with `Title`"
  },
  {
    "id": "223",
    "type": "pullRequest",
    "title": "add adam to the approves"
  },
  {
    "id": "221",
    "type": "pullRequest",
    "title": "CNV-56305: upgrade Network UI to PatternFly 6",
    "body": "Updates Networking console plugin to PatternFly 6. Found an unused file: `/src/views/udns/list/components/ProjectSelector.tsx` so I deleted it"
  },
  {
    "id": "224",
    "type": "pullRequest",
    "title": "CNV-58015: fix delete label row",
    "body": "Correctly deletes label row. Before: After:"
  },
  {
    "id": "222",
    "type": "pullRequest",
    "title": "Upgrade dockerfile for node 18 and 4.19"
  },
  {
    "id": "218",
    "type": "pullRequest",
    "title": "CNV-56436: show ipam lifecycle correctly with new spec",
    "body": "Before img width=\"210\" alt=\"Screenshot 2025-02-11 at 21 45 16\" src=\" / After img width=\"210\" alt=\"Screenshot 2025-02-11 at 21 44 49\" src=\" /"
  },
  {
    "id": "216",
    "type": "pullRequest",
    "title": "OCPBUGS-41964: No default path in the route creation form",
    "body": "Do not use a default path. IT's not a required parameter to create route"
  },
  {
    "id": "217",
    "type": "pullRequest",
    "title": "CNV-56236: fix cudn modal form titles",
    "body": "We had two FormGroup components nested. Now we have FormSection (Projects label) with FormGroup inside (match labels) Before img width=\"1920\" alt=\"Screenshot 2025-02-11 at 16 32 43\" src=\" / After img width=\"1920\" alt=\"Screenshot 2025-02-11 at 16 30 31\" src=\" /"
  },
  {
    "id": "214",
    "type": "pullRequest",
    "title": "OCPBUGS-42135: Update documentation links",
    "body": "1. consolidate documentation links in one file 2. provide links for routes and multiple networks with upstream/downstream switching 3. provide static k8s links to network services and ingress"
  },
  {
    "id": "212",
    "type": "pullRequest",
    "title": "CNV-56336: fix ipam lifecycle with new spec",
    "body": "Just before UDN GA, they changed the spec structure a little bit Alert !image (2)("
  },
  {
    "id": "210",
    "type": "pullRequest",
    "title": "CNV-56076: create cudn from empty state",
    "body": "There was no CUDN creation button in the empty state. Before img width=\"1634\" alt=\"Screenshot 2025-02-10 at 09 47 41\" src=\" / After img width=\"1634\" alt=\"Screenshot 2025-02-10 at 09 46 21\" src=\" /"
  },
  {
    "id": "206",
    "type": "pullRequest",
    "title": "CNV-55744: Fix nads with no label",
    "body": "Nad with no label is crashing the nad list as `Object.keys` throw an exception when the input is undefined"
  },
  {
    "id": "203",
    "type": "pullRequest",
    "title": "OCPBUGS-45803: Fix weight width",
    "body": "Service weight is a number input between 0 and 255 so there is no reason should be so big Before img width=\"1623\" alt=\"Screenshot 2025-01-29 at 10 58 12\" src=\" / After img width=\"826\" alt=\"Screenshot 2025-01-29 at 10 53 53\" src=\" / img width=\"826\" alt=\"Screenshot 2025-01-29 at 10 56 57\" src=\" /"
  },
  {
    "id": "202",
    "type": "pullRequest",
    "title": "CNV-55457: Remove project modal",
    "body": "Removing the custom project modal with udn creation flow as networking team found some issues with that. They have to implement a mechanism to create project with primary udn with just one HTTP request. Having to do two requests ( one for creating the project and one for creating the udn) is having some issues. This issue is not UI related as the same thing happens with cli What people will see after this img width=\"826\" alt=\"Screenshot 2025-01-28 at 16 43 46\" src=\" /"
  },
  {
    "id": "197",
    "type": "pullRequest",
    "title": "CNV-55234: do not show all namesapces in cudn namespace column",
    "body": "Seems like the cudn works on all the namespaces. At least take the namespace column empty at this point so there is no confusion about the resource namespace and the namespace that cudn manage Before img width=\"1904\" alt=\"Screenshot 2025-01-24 at 12 13 49\" src=\" / After img width=\"1904\" alt=\"Screenshot 2025-01-24 at 12 13 12\" src=\" /"
  },
  {
    "id": "178",
    "type": "pullRequest",
    "title": "CNV-55129: Disable udn button",
    "body": "Disable button udn creation when no namespace is selected img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 04 57\" src=\" / img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 05 00\" src=\" / img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 05 06\" src=\" / img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 05 10\" src=\" /"
  },
  {
    "id": "190",
    "type": "pullRequest",
    "title": "CNV-54828: fix udn create button",
    "body": "The udn create modal creates only primary udns and you should not be able to create multiple primary udns for one namespace. If you select a namespace, do not let the user create a namespace primary udn if one already exists img width=\"1904\" alt=\"Screenshot 2025-01-22 at 15 50 32\" src=\" / img width=\"1904\" alt=\"Screenshot 2025-01-22 at 15 50 36\" src=\" /"
  },
  {
    "id": "183",
    "type": "pullRequest",
    "title": "OCPBUGS-48421: add CIRD subnmet description",
    "body": "img width=\"1904\" alt=\"Screenshot 2025-01-21 at 11 06 52\" src=\" /"
  },
  {
    "id": "181",
    "type": "pullRequest",
    "title": "OCPBUGS-48440: show MTU and sort on list",
    "body": "img width=\"1904\" alt=\"Screenshot 2025-01-20 at 15 21 44\" src=\" /"
  },
  {
    "id": "189",
    "type": "pullRequest",
    "title": "OCPBUGS-48677: fix nad misspelled",
    "body": "nad name misspelled"
  },
  {
    "id": "180",
    "type": "pullRequest",
    "title": "CNV-55085: remove layer configuration",
    "body": "Remove the indent for layer configuration as it is confusing Before img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 52 54\" src=\" / After img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 42 34\" src=\" /"
  },
  {
    "id": "179",
    "type": "pullRequest",
    "title": "CNV-55239: Cluster udn through matchlabel",
    "body": "img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 27 09\" src=\" /"
  },
  {
    "id": "191",
    "type": "pullRequest",
    "title": "CNV-54825: do not allow deleting udns",
    "body": "remove the delete action as you don't want people to delete udns"
  },
  {
    "id": "185",
    "type": "pullRequest",
    "title": "OCPBUGS-48676: replace edit with save"
  },
  {
    "id": "184",
    "type": "pullRequest",
    "title": "OCPBUGS-48665: fix service name"
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "CNV-55131: remove the primary name to the udn creation form",
    "body": "img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 05 00\" src=\" / img width=\"1904\" alt=\"Screenshot 2025-01-20 at 14 05 10\" src=\" /"
  },
  {
    "id": "173",
    "type": "pullRequest",
    "title": "CNV-54827: fix select label on ClusterUserDefinedNetwork",
    "body": "Before img width=\"1074\" alt=\"Screenshot 2025-01-10 at 10 33 07\" src=\" / After img width=\"1074\" alt=\"Screenshot 2025-01-10 at 10 32 24\" src=\" /"
  },
  {
    "id": "174",
    "type": "pullRequest",
    "title": "OCPBUGS-48206: fix path-to-regex CVE",
    "body": "`path-to-regex` from `0.1.7` (used by `express` that was used by `webpack-dev-server`) to `0.1.12`"
  },
  {
    "id": "163",
    "type": "pullRequest",
    "title": "OCPBUGS-44823: hide udn navbar when udn is not installed",
    "body": "WIthout UDN CRD installed img width=\"285\" alt=\"Screenshot 2025-01-08 at 17 12 31\" src=\" / With UDN CRD installed img width=\"293\" alt=\"Screenshot 2025-01-08 at 17 13 57\" src=\" /"
  },
  {
    "id": "162",
    "type": "pullRequest",
    "title": "CNV-54111: mark NAD managed by UDN",
    "body": "img width=\"1256\" alt=\"Screenshot 2025-01-08 at 16 52 54\" src=\" / img width=\"1612\" alt=\"Screenshot 2025-01-08 at 16 55 00\" src=\" /"
  },
  {
    "id": "164",
    "type": "pullRequest",
    "title": "OCPBUGS-48185: Bump nanoid from 3.3.7 to 3.3.8",
    "body": "Bumps nanoid( from 3.3.7 to 3.3.8. details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h23.3.8/h2 ul liFixed a way to break Nano ID by passing non-integer size (by a href=\" /ul /blockquote /details details summaryCommits/summary ul lia href=\" Release 3.3.8 version/li lia href=\" Update size limit/li lia href=\" Fix pool pollution, infinite loop (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "OCPBUGS-48073: Bump dompurify from 2.4.9 to 2.5.8",
    "body": "Bumps dompurify( from 2.4.9 to 2.5.8. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2DOMPurify 2.5.8/h2 ul liFixed two conditional sanitizer bypasses discovered by a href=\" and a href=\" liUpdated the attribute clobbering checks to prevent future bypasses, thanks a href=\" /ul h2DOMPurify 2.5.7/h2 ul liFixed an issue with comment detection and possible bypasses with specific config settings, thanks a href=\" liRemoved the codeforeignObject/code element from the list of HTML entry-points, thanks a href=\" /ul h2DOMPurify 2.5.6/h2 ul liFixed an issue with the execution logic of attribute hooks to prevent bypasses, thanks a href=\" liFixed a minor problem with the bower file pointing to the wrong dist path/li liUpdated several development dependencies/li /ul h2DOMPurify 2.5.5/h2 ul liFixed a minor issue with the dist paths in codebower.js/code, thanks a href=\" liFixed a minor issue with sanitizing HTML coming from copy&amp;paste Word content, thanks a href=\" /ul h2DOMPurify 2.5.4/h2 ul liFixed a bug with latest codeisNaN/code checks affecting MSIE, thanks a href=\" liFixed the tests for MSIE and fixed related test-runner/li /ul h2DOMPurify 2.5.3/h2 ul liFixed several mXSS variations found by and thanks to a href=\" &amp; a href=\" liAdded better configurability for comment scrubbing default behavior/li liAdded better hardening against Prototype Pollution attacks, thanks a href=\" liFixed some smaller issues in README and other documentation/li /ul h2DOMPurify 2.5.2/h2 ul liAddressed and fixed a mXSS variation found by a href=\" liAddressed and fixed a mXSS variation found by a href=\" Kues/a of Assetnote/li liUpdated tests for older Safari and Chrome versions/li /ul h2DOMPurify 2.5.1/h2 ul liFixed an mXSS sanitizer bypass reported by a href=\" liAdded new code to track element nesting depth/li liAdded new code to enforce a maximum nesting depth of 255/li liAdded coverage tests and necessary clobbering protections/li /ul pstrongNote that this is a security release and should be upgraded to immediately. Please also note that further releases may follow as the underlying vulnerability is apparently new and further variations may be discovered./strong/p h2DOMPurify 2.5.0/h2 ul liAdded new setting codeSAFE_FOR_XML/code to enable better control over comment scrubbing/li liUpdated the LICENSE file to show the accurate year number/li liUpdated several build and test dependencies/li /ul /blockquote /details details summaryCommits/summary ul lia href=\" test: Updated a custom element test for IE11 on Windows 10/li lia href=\" test: Trying to work around a false alert in IE11 Win 8.1/li lia href=\" chore: Preparing 2.5.8 release/li lia href=\" fix: Added same attribute clobbering check for 2.x branch/li lia href=\" fix: Fixed two conditional bypasses discovered by a href=\" and a href=\" lia href=\" Update README.md/li lia href=\" Update README.md/li lia href=\" Update README.md/li lia href=\" chore: Preparing 2.5.7 release/li lia href=\" chore: Preparing 2.5.6 release/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "160",
    "type": "pullRequest",
    "title": "OCPBUGS-48072: Bump cross-spawn from 7.0.3 to 7.0.6",
    "body": "Bumps cross-spawn( from 7.0.3 to 7.0.6. details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h3a href=\" (2024-11-18)/h3 h3Bug Fixes/h3 ul liupdate cross-spawn version to 7.0.5 in package-lock.json (a href=\" /ul h3a href=\" (2024-11-07)/h3 h3Bug Fixes/h3 ul lifix escaping bug introduced by backtracking (a href=\" /ul h3a href=\" (2024-11-07)/h3 h3Bug Fixes/h3 ul lidisable regexp backtracking (a href=\" (a href=\" /ul /blockquote /details details summaryCommits/summary ul lia href=\" chore(release): 7.0.6/li lia href=\" chore: upgrade standard-version/li lia href=\" fix: update cross-spawn version to 7.0.5 in package-lock.json/li lia href=\" chore: fix build status badge/li lia href=\" chore(release): 7.0.5/li lia href=\" fix: fix escaping bug introduced by backtracking/li lia href=\" chore: remove codecov/li lia href=\" chore: replace travis with github workflows/li lia href=\" chore(release): 7.0.4/li lia href=\" fix: disable regexp backtracking (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "152",
    "type": "pullRequest",
    "title": "OCPBUGS-46553: fix ports as number instead of strings",
    "body": "Ports can be a name or number. The name should be alphanumeric and with at least an a-z character. If it's a number, we should parse it. Before img width=\"1221\" alt=\"Screenshot 2024-12-20 at 12 06 34\" src=\" / After img width=\"1221\" alt=\"Screenshot 2024-12-20 at 12 03 48\" src=\" /"
  },
  {
    "id": "154",
    "type": "pullRequest",
    "title": "OCPBUGS-46557: fix project displayName and description",
    "body": "the create project request is differently represented respect to the project created. The create project request wants: ```{ metadata: { name }, displayName, description } ``` img width=\"1232\" alt=\"Screenshot 2024-12-20 at 12 44 37\" src=\" / img width=\"1232\" alt=\"Screenshot 2024-12-20 at 12 44 43\" src=\" /"
  },
  {
    "id": "153",
    "type": "pullRequest",
    "title": "CNV-50554: fix create button position",
    "body": "Before img width=\"1920\" alt=\"Screenshot 2024-12-20 at 12 32 09\" src=\" / After img width=\"1920\" alt=\"Screenshot 2024-12-20 at 12 29 21\" src=\" / img width=\"1920\" alt=\"Screenshot 2024-12-20 at 12 29 26\" src=\" / img width=\"1920\" alt=\"Screenshot 2024-12-20 at 12 31 37\" src=\" /"
  },
  {
    "id": "151",
    "type": "pullRequest",
    "title": "OCPBUGS-45050: UI crash accessing a Service in pending state",
    "body": "Services in pending state had no ips assigned, which resulted to a crash when a ServiceIPsRow component tried to read those undefined ips. Conditional unwrap of the ips fixed this issue. Restructed the component ServiceAddress. Before: After:"
  },
  {
    "id": "150",
    "type": "pullRequest",
    "title": "CNV-46603: select projects with multitypeahead",
    "body": "For user is difficult to use matchLabels. Use Project selection with `matchExpressions` use `matchExpressions` also to add projects to a ClusterUDN in the project creation modal Before img width=\"1915\" alt=\"Screenshot 2024-12-09 at 17 07 44\" src=\" After"
  },
  {
    "id": "148",
    "type": "pullRequest",
    "title": "Updating networking-console-plugin-container image to be consistent with ART for 4.19",
    "body": "Updating networking-console-plugin-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: networking-console-plugin.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "142",
    "type": "pullRequest",
    "title": "CNV-46603: search project by name and fix select height",
    "body": "Before img width=\"1920\" alt=\"Screenshot 2024-11-28 at 16 03 56\" src=\" After img width=\"1920\" alt=\"Screenshot 2024-11-28 at 16 02 19\" src=\""
  },
  {
    "id": "146",
    "type": "pullRequest",
    "title": "CNV-46603: Create project modal with ClusterUDN creation",
    "body": "Select ClusterUDN Using this option we'll add the needed labels to the project to respect the ClusterUDN matchLabels. (We can't edit the project directly but if we patch the namespace, the project will get the labels) img width=\"1920\" alt=\"Screenshot 2024-11-29 at 17 49 36\" src=\" img width=\"1920\" alt=\"Screenshot 2024-11-29 at 17 49 39\" src=\" img width=\"1920\" alt=\"Screenshot 2024-11-29 at 17 51 59\" src=\""
  },
  {
    "id": "145",
    "type": "pullRequest",
    "title": "CNV-46603: Cluster UDN modal creation",
    "body": "Create Cluster UDN let the user choose the matchlabels and show the selected projects img width=\"1920\" alt=\"Screenshot 2024-12-02 at 10 46 38\" src=\" img width=\"1920\" alt=\"Screenshot 2024-12-02 at 10 46 54\" src=\" img width=\"1920\" alt=\"Screenshot 2024-12-02 at 10 55 53\" src=\""
  },
  {
    "id": "147",
    "type": "pullRequest",
    "title": "run kubevirt-plugin using start-console",
    "body": "Run kubevirt-plugin using the start-console.sh script needs img width=\"1920\" alt=\"Screenshot 2024-11-29 at 18 28 39\" src=\""
  },
  {
    "id": "143",
    "type": "pullRequest",
    "title": "CNV-52127: remove `t` calls that are not within components",
    "body": "h2 id=\"feature-fix\"CONSOLE Features and Fixes:/h2 h2 id=\"solution-description\"Solution description/h2 !-- Describe your code changes in detail and explain the solution or functionality -- There was a race condition between reading the i18n resource json and trying to translate certain keys, notably ones where the `t` function is called within a constant instead of another React hook or React component. This PR moves the calling of those `t` functions to when they're used by the React components h2 id=\"reviewers-and-assignees\"Reviewers and assignees:/h2 /cc @upalatucci Additional info There should be additional checks in the dynamic plugins (e.g., running `e2e-gcp-console`) so that i18n issues don't happen as often (as it did this time and with other plugins). pinging @rhamilto @spadgett about implementing that h2 id=\"screenshots\"Screen shots / gifs / design review:/h2 !-- Add screenshots or gifs for visual changes. Be sure to include before and after where relevant -- n/a"
  },
  {
    "id": "137",
    "type": "pullRequest",
    "title": "CNV-46603: add CUDN kind",
    "body": "Followup on to add `ClusterUserDefinedNetwork` to list / forms !image( !image( !image("
  },
  {
    "id": "42",
    "type": "pullRequest",
    "title": "OCPCLOUD-2847: Merge (1771fdb) into main"
  },
  {
    "id": "41",
    "type": "pullRequest",
    "title": "OCPBUGS-45615: Updating ose-nutanix-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-nutanix-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-nutanix-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "90",
    "type": "pullRequest",
    "title": "OCPCLOUD-2842: Update dependencies to k8s 1.32"
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "OCPBUGS-54317: fixing CVE-2025-22868",
    "body": "OCPBUGS-54317: fixing CVE-2025-22868 Bump k8s.io dependencies to v1.32"
  },
  {
    "id": "100",
    "type": "pullRequest",
    "title": "OCPBUGS-53245: Fix link-local addresses being added to machine",
    "body": "AOS 5.10 added the new capability of dynamically learning IP addresses used by virtual machines. As a result, APIPA (autoconfigured) IP addresses are now being returned from prism nutanix client. This PR filters out the link-local IP range from the returned IPs before constructing the node addresses."
  },
  {
    "id": "89",
    "type": "pullRequest",
    "title": "OCPBUGS-50710: fixing CVE-2024-45338",
    "body": "OCPBUGS-47268 Fix CVE-2024-45338 - Denial of Service on golang.org/x/net/html"
  },
  {
    "id": "87",
    "type": "pullRequest",
    "title": "OCPBUGS-45560: Updating ose-nutanix-machine-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-nutanix-machine-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-nutanix-machine-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "OCPBUGS-49845: Prevent storage layer retries for methods with side effects."
  },
  {
    "id": "313",
    "type": "pullRequest",
    "title": "OCPBUGS-48333: Update dependencies to address CVE-2024-24786"
  },
  {
    "id": "282",
    "type": "pullRequest",
    "title": "no-jira: OWNERS: add Krzys (ibihim) and Ilias (liouk) as reviewers",
    "body": "What Add to owners: - ibihim - liouk Remove from owners: - sttts - stlaz Why sttts and stlaz left the org. ibihim and liouk are the current maintainers."
  },
  {
    "id": "289",
    "type": "pullRequest",
    "title": "OCPBUGS-44319: Fix oauth-proxy e2e-component tests",
    "body": "- We\u2019re unable to find a stable and accessible OAuth-proxy image, which is causing a bug that we haven\u2019t fully resolved yet. @ibihim made a PR to address this , but it\u2019s not a complete solution since the image path doesn\u2019t seem consistently available. - @ibihim tried referencing the OAuth-proxy image from the OpenShift openshift namespace, but it didn\u2019t work reliably. - There\u2019s an imagestream for OAuth-proxy in the openshift namespace, which we might be able to reference in tests, but you're not certain of the correct Docker URL format for it. Also, it\u2019s possible that there are permission issues, which could be why the image isn\u2019t accessible when referenced this way."
  },
  {
    "id": "169",
    "type": "pullRequest",
    "title": "OCPBUGS-43610,CONSOLE-4434: update login templates to use PF6 and add validation",
    "body": "Related PRs: Brief description of changes: - Updated templates to use PF6 - Update Red Hat font to 4.1.0( - Minified HTML output and removed unused CSS, this reduces bits sent through the wire by ~26% - Disabled login button after \"log in\" is pressed or if there is no username/password in the input box Deployment preview:"
  },
  {
    "id": "154",
    "type": "pullRequest",
    "title": "OCPBUGS-35294: Add French and Spanish localization for login screen",
    "body": "/assign @stlaz"
  },
  {
    "id": "1137",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55704: implements registries.d file as specified in containers/image docs",
    "body": "This is an automated cherry-pick of 1131 /assign aguidirh"
  },
  {
    "id": "1133",
    "type": "pullRequest",
    "title": "OCPBUGS-54891: Fix mirroring images with tag&digest in charts",
    "body": "Description This PR applies a fix such as in 911 to helm's local_stored_collector Github / Jira issue: OCPBUGS-54547( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Performed a MirrorToDisk with the same ISC as in the Jira issue successfully. Added 3 unit tests : M2D, D2M, M2M Expected Outcome No failures"
  },
  {
    "id": "1127",
    "type": "pullRequest",
    "title": "OCPBUGS-54653: delete: continue on errors",
    "body": "Description This change makes the delete command work on a best-effort basis: it will generate a file and delete the images it can and return all errors found at the end instead of stopping on the first error. Github / Jira issue: OCPBUGS-54653 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? See PR comments. Expected Outcome `oc-mirror --v2 delete` doesn't stop at the first failure."
  },
  {
    "id": "1073",
    "type": "pullRequest",
    "title": "OCPBUGS-50617: oc-mirror does not create signature files",
    "body": "Description This fix addresses the issue in signature verification for rc (release-candidate) images but skips engineering candidate images (this will be updated once we have the full cosign feature implemented in oc-mirror refer to OCPSTRAT-1869( ) An update to this issue is check if we can get a digest from the image by tag Github / Jira issue: OCPBUGS-50617( Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Verified locally using the following imagesetconfig ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: graph: true release: quay.io/openshift-release-dev/ocp-release@sha256:e0907823bc8989b02bb1bd55d5f08262dd0e4846173e792c14e7684fbd476c0d ``` Then with the following imagesetconfig ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: graph: true release: quay.io/openshift-release-dev/ocp-release:4.19.0-ec.1-x86_64 ``` Expected Outcome This should pass the signature verification and also create and download the relevant signature files for the first imagesetconfig In the d2m phase inspect the working-dir/signatures directory as well as working-dir/cluster-resources directory"
  },
  {
    "id": "1119",
    "type": "pullRequest",
    "title": "CLID-307,CLID-308,CLID-309,CLID-347,CLID-246,CLID-310: feat/adds signatures to the archive",
    "body": "Description This PR implements the cosign tag-based signature mirroring epic CLID-289( The code changes on this PR allows to mirror all cosign signatures associated with a container image together with the image when copying from source to destination. Github / Jira issue: CLID-307( CLID-308( CLID-309( CLID-347( CLID-246( CLID-310( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - x New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - x This change requires a documentation update on openshift docs How Has This Been Tested? With the following ImageSetConfiguration: ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: channels: - name: stable-4.18 minVersion: 4.18.1 maxVersion: 4.18.1 graph: true operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.18 packages: - name: aws-load-balancer-operator additionalImages: - name: quay.io/rh_ee_aguidi/multi-platform-container:latest helm: repositories: - name: cosigned url: charts: - name: cosigned version: 0.1.23 ``` Run all the flows (`m2d`/`d2m and `m2m`) Expected Outcome In the destination registry, all the signatures for releases and additional images should have a new tag for the signature with its blobs."
  },
  {
    "id": "1086",
    "type": "pullRequest",
    "title": "CLID-321: Add annotations to resources generated by oc-mirror v2",
    "body": "Description This PR helps add an annotation to all cluster resources generated by oc-mirror. Right now the annotation is `author: oc-mirror` , but let's discuss what is the right annotation to use. This way, on a cluster, when users need to remove/update/view IDMS/ITMS/CatalogSource generated by oc-mirror they could use: ```bash oc get idms -o jsonpath='{.items?(@.metadata.annotations.createdBy==\"oc-mirror v2\").metadata.name}' ``` Github / Jira issue: CLID-321( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - x New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? I tested this only for additionalImages. ```yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: additionalImages: - name: registry.redhat.io/ubi9/ubi-micro:latest ``` Expected Outcome ```yaml --- apiVersion: config.openshift.io/v1 kind: ImageTagMirrorSet metadata: annotations: createdAt: Thursday, 05-Jun-25 10:00:50 UTC createdBy: oc-mirror v2 oc-mirror_version: v0.2.0-alpha.1-407-g0d8b76a name: itms-generic-0 spec: imageTagMirrors: - mirrors: - sherinefedora:5000/ubi9 source: registry.redhat.io/ubi9 status: {} ```"
  },
  {
    "id": "1124",
    "type": "pullRequest",
    "title": "CLID-352: images: add integration tests image",
    "body": "Description This image will be used in Prow to run the integration tests. Github / Jira issue: CLID-352( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? See Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1062",
    "type": "pullRequest",
    "title": "OCPBUGS-49880: cli: return distinct error codes depending on failure",
    "body": "Description The `oc-mirror` return code now reflects the category of the copy failure: 1: generic error 2: release image error 4: operator image error 8: additional image error 16: helm image error So a return code of `12` means there were operator and additional image copy errors (4 + 8). Because release image errors are fatal, when one happens the return code will always be `2`. Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - x This change requires a documentation update on openshift docs How Has This Been Tested? 1. Release image copy error: ```bash ... \u2717 (0s) Collecting catalog registry.redhat.io/redhat/redhat-operator-index:v4.16 2025/02/03 22:43:14 WARN : OperatorImageCollector catalog unable to retrieve auth token: invalid username/password: unauthorized: Please login to the Red Hat Registry using your Customer Portal credentials. Further instructions can be found here: : SKIPPING 2025/02/03 22:43:14 INFO : \ud83d\udd0d collecting additional images... 2025/02/03 22:43:14 INFO : \ud83d\udd0d collecting helm images... 2025/02/03 22:43:14 INFO : \ud83d\udd02 rebuilding catalogs 2025/02/03 22:43:14 INFO : \ud83d\ude80 Start copying the images... 0 / 193 (2s) ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 0 % \u2717 () ocp-v4.0-art-dev@sha256:0a9d409693d25a9fbaf70a6c3f75abfcb54e3c9070e608b84da519aa7d874440 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:0800280100d6e3376a4c4afe98d724a032e7a05aff5b49dbaef0651c51d3f357 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:072942d3febcbe1f3035991b8df66eea15197084211e2f638dac043e490962e8 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:0395b06b99a78cf783f05d32fd0cf2d9f6d968c4fdf8253eeee008acacb6985d \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:0319c91da24478e97006d34dde4e45d68ec8b0c0022d2032557c96cde5295f96 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:021aa92489672492a14b30690c735c9e9597e7e79a2c0e78362d32543ee3d370 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:054d439588812645b13d719ac27304db00802b6ef3b692bd53d91fd88422338c \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:0328838b74e5b6e521ff7873d846829ce9a06dc2b4c4acf5957fb169c2c3a494 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:0003f19dcff2060a3d3692753772fe1ebaac9e4bc7bd8c78bb9870ab82a5bd64 \u27a1 cache \u2717 (2s) ocp-v4.0-art-dev@sha256:06c93951661e3bdad3964a8485291b97e93f6675c25acfc8399c35d3b59b95fa \u27a1 cache 2025/02/03 22:43:17 INFO : === Results === 2025/02/03 22:43:17 INFO : \u2717 0 / 192 release images mirrored: Some release images failed to be mirrored - please check the logs 2025/02/03 22:43:17 INFO : \u2717 0 / 1 additional images mirrored: Some additional images failed to be mirrored - please check the logs 2025/02/03 22:43:17 ERROR : Worker error mirroring image quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:021aa92489672492a14b30690c735c9e9597e7e79a2c0e78362d32543ee3d370 error: initializing source docker://quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:021aa92489672492a14b30690c735c9e9597e7e79a2c0e78362d32543ee3d370: reading manifest sha256:021aa92489672492a14b30690c735c9e9597e7e79a2c0e78362d32543ee3d370 in quay.io/openshift-release-dev/ocp-v4.0-art-dev: unauthorized: access to the requested resource is not authorized 2025/02/03 22:43:17 INFO : \ud83d\udce6 Preparing the tarball archive... 2025/02/03 22:43:19 INFO : mirror time : 22.086540093s 2025/02/03 22:43:19 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror 2025/02/03 22:43:19 ERROR : Worker some errors occurred during the mirroring. Please review ~/Downloads/oc-mirror-issue-ret/working-dir/logs/mirroring_errors_20250203_224317.txt for a list of mirroring errors. You may consider: removing images or operators that cause the error from the image set config, and retrying keeping the image set config (images are mandatory for you), and retrying mirroring the failing images manually, if retries also fail. $ echo $? 2 ``` Expected Outcome Exit codes other than `1`."
  },
  {
    "id": "1120",
    "type": "pullRequest",
    "title": "OCPBUGS-52471: Fix OOM at filtering catalogs",
    "body": "Description The exact fix for this is in catalogFilter19( (by @r4f4 :bowing_woman: ) and catalogFilter20( The root cause is that each channel entry had 90+ skips, and that the algorithm for filtering was adding entries to the list of entries to be analyzed without checking if these entries were already part of the list. Github / Jira issue: OCPBUGS-52471( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? A unit test in catalog-filter is added Using imagesetconfiguration from the jira comment( (@komish thank you) Without the fix: ``` \u276f systemd-run --scope -p MemoryMax=10G -p MemoryHigh=12G ~/prjs/github.com/openshift/oc-mirror/bin/oc-mirror --v2 --config oomisc.yaml file://data/oom/ Running as unit: run-u2406.scope; invocation ID: 5d487f140ee64c6b877401bac893b0be 2025/03/20 15:10:53 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/20 15:10:53 INFO : \u2699\ufe0f setting up the environment for you... 2025/03/20 15:10:53 INFO : \ud83d\udd00 workflow mode: mirrorToDisk 2025/03/20 15:10:53 INFO : \ud83d\udd75 going to discover the necessary images... 2025/03/20 15:10:53 INFO : \ud83d\udd0d collecting release images... 2025/03/20 15:10:53 INFO : \ud83d\udd0d collecting operator images... \u280f (17m40s) Collecting catalog registry.redhat.io/redhat/community-operator-index:v4.16 fish: Job 1, 'systemd-run --scope -p MemoryMa...' terminated by signal SIGKILL (Forced quit) ``` With the fix (barely used 1GB memory): ``` \u276f systemd-run --scope -p MemoryMax=10G -p MemoryHigh=12G ~/prjs/github.com/openshift/oc-mirror/bin/oc-mirror --v2 --config oomisc.yaml file://data/oom/ Running as unit: run-u2385.scope; invocation ID: 21b87226a7b14ae9a083be606f71cacf 2025/03/20 15:05:56 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/20 15:05:56 INFO : \u2699\ufe0f setting up the environment for you... 2025/03/20 15:05:56 INFO : \ud83d\udd00 workflow mode: mirrorToDisk 2025/03/20 15:05:56 INFO : \ud83d\udd75 going to discover the necessary images... 2025/03/20 15:05:56 INFO : \ud83d\udd0d collecting release images... 2025/03/20 15:05:56 INFO : \ud83d\udd0d collecting operator images... \u2713 (59s) Collecting catalog registry.redhat.io/redhat/community-operator-index:v4.16 2025/03/20 15:06:56 INFO : \ud83d\udd0d collecting additional images... ``` Expected Outcome No out of memory."
  },
  {
    "id": "1109",
    "type": "pullRequest",
    "title": "OCPBUGS-52960: v2: fix setting version during build",
    "body": "Description We were specifying the wrong path to the `version` pkg during build, resulting in the `oc-mirror --v2 version` command having no version info: ``` \u276f ./bin/oc-mirror --v2 version 2025/03/11 13:27:13 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/11 13:27:13 INFO : \u2699\ufe0f setting up the environment for you... WARNING: This version information is deprecated and will be replaced with the output from --short. Use --output=yaml Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` oc-mirror --v2 version ``` Expected Outcome Version info in the output: ``` \u276f ./bin/oc-mirror --v2 version 2025/03/11 13:28:13 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/11 13:28:13 INFO : \u2699\ufe0f setting up the environment for you... WARNING: This version information is deprecated and will be replaced with the output from --short. Use --output=yaml|json to get the full version. Client Version: version.Info{Major:\"\", Minor:\"\", GitVersion:\"v0.0.0-unknown-40a885eb\", GitCommit:\"40a885eb\", GitTreeState:\"clean\", BuildDate:\"2025-03-11T12:27:49Z\", GoVersion:\"go1.23.6\", Compiler:\"gc\", Platform:\"linux/amd64\"} ```"
  },
  {
    "id": "1115",
    "type": "pullRequest",
    "title": "OCPBUGS-52978: delete: fix typo in --help output",
    "body": "Description s/cahce/cache Github / Jira issue: OCPBUGS-52978 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ```fish \u276f ./bin/oc-mirror --v2 delete --help ... --generate Used to generate the delete yaml for the list of manifests and blobs , used in the step to actually delete from local cache and remote registry ``` Expected Outcome The output says \"cache\" instead of \"cahce\""
  },
  {
    "id": "1110",
    "type": "pullRequest",
    "title": "OCPBUGS-52969: remove TechPreview mentions of v2 in --help",
    "body": "Description As of 4.18, oc-mirror --v2 is GA. Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` $ oc-mirror --help $ oc-mirror --v2 --help ``` Expected Outcome No mentions of v2 being TechPreview."
  },
  {
    "id": "1105",
    "type": "pullRequest",
    "title": "OCPBUGS-52588: fix: error when no related image was found",
    "body": "Description If no related was found for a catalog, the collection for this catalog should fail instead of passing as it is currently happening. Github / Jira issue: OCPBUGS-52588( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? With the following ImageSetConfiguration (which contains only one invalid operator): ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.17 packages: - name: netscaler-operator ``` Expected Outcome `m2d` should fail: ``` aguidi@fedora:~/go/src/github.com/aguidirh/oc-mirror$ ./bin/oc-mirror -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-52588.yaml file://alex-tests/ocpbugs-52588 --v2 2025/03/10 17:21:52 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/10 17:21:52 INFO : \u2699\ufe0f setting up the environment for you... 2025/03/10 17:21:52 INFO : \ud83d\udd00 workflow mode: mirrorToDisk 2025/03/10 17:21:52 INFO : \ud83d\udd75 going to discover the necessary images... 2025/03/10 17:21:52 INFO : \ud83d\udd0d collecting release images... 2025/03/10 17:21:52 INFO : \ud83d\udd0d collecting operator images... \u2717 (1m21s) Collecting catalog registry.redhat.io/redhat/redhat-operator-index:v4.17 2025/03/10 17:23:14 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror 2025/03/10 17:23:14 ERROR : collect catalog \"registry.redhat.io/redhat/redhat-operator-index:v4.17\": no related images found ``` `m2m` should fail: ``` aguidi@fedora:~/go/src/github.com/aguidirh/oc-mirror$ ./bin/oc-mirror -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-52588.yaml --workspace file://alex-tests/ocpbugs-52588 docker://localhost:6000 --dest-tls-verify=false --v2 2025/03/10 17:25:58 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/03/10 17:25:58 INFO : \u2699\ufe0f setting up the environment for you... 2025/03/10 17:25:58 INFO : \ud83d\udd00 workflow mode: mirrorToMirror 2025/03/10 17:25:58 INFO : \ud83d\udd75 going to discover the necessary images... 2025/03/10 17:25:58 INFO : \ud83d\udd0d collecting release images... 2025/03/10 17:25:58 INFO : \ud83d\udd0d collecting operator images... \u2717 (1m4s) Collecting catalog registry.redhat.io/redhat/redhat-operator-index:v4.17 2025/03/10 17:27:03 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror 2025/03/10 17:27:03 ERROR : collect catalog \"registry.redhat.io/redhat/redhat-operator-index:v4.17\": no related images found ```"
  },
  {
    "id": "1093",
    "type": "pullRequest",
    "title": "OCPBUGS-50680: v2/operator: refactor operator FilteredCollector",
    "body": "Description Refactor the FilteredCollector for Operators so we can return errors in case we fail to collect some operator. We still try to collect all operators but we return all errors found at the end of collection. Github / Jira issue: OCPBUGS-50680 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1098",
    "type": "pullRequest",
    "title": "no-jira: v2/manifest/oci-manifest: refactor and dedup the code",
    "body": "Description Introduce a generic `json`/`yaml` parser functions Refactor and dedup code in oci-manifest.go Fixed unit tests to match error and/or return value Add more unit tests Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1104",
    "type": "pullRequest",
    "title": "no-jira: stop `wraperr` linter from treating our code as external lib",
    "body": "Description We just want to check for error wrapping in errors coming from external libs, not our own code (for now). This should avoid unnecessary around wrapping our own errors. Github / Jira issue: Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome No `wrapcheck` lint errors from our own code."
  },
  {
    "id": "1097",
    "type": "pullRequest",
    "title": "OCPBUGS-51328: Fix CVE-2025-27144",
    "body": "Description Bumps go-jose to 4.0.5 Github / Jira issue: OCPBUGS-51217( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Automated tests pass"
  },
  {
    "id": "1100",
    "type": "pullRequest",
    "title": "CLID-325,OCPBUGS-52349: adds cpu and memory profiling / removes the race from build target",
    "body": "Description This PR removes the `-race` from the build target on the Make file to improve the performance. Also this PR adds the cpu and memory profiling. Both profiles are enabled by using `--cpu-prof` and `--mem-prof` flags during the workflows (m2m/d2m/m2m). Two new profile files are generated at the same place where the command line was run named `cpu.prof` and `mem.prof`. Both files will be used by the new bash script command `run_and_pprof.sh` added under `v2/hack/`. The bash script will launch a web browser on `127.0.0.1:6775` for cpu profiling, `127.0.0.1:6776` for mem profiling and `127.0.0.1:6775` for diff profiling, where the graphs can be analysed. In the web browser it is possible to filter the graphs, for example by `focus`, `ignore` or `show_from`. These filters the graph only for specific areas of the code or ignore some specific area. They accept the package name, the file name or a regex. In order to check performance improvements the bash script contains a `-d` option where it is possible to compare two profiles of the same kind. See more flags available here( Github / Jira issue: CLID-325( / OCPBUGS-52349( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - x New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Run an oc-mirror flow by using the bash script: ``` Usage: ./v2/hack/run_and_pprof.sh -m -c -d diff_base_file1 diff_base_file2 -no-run -- oc-mirror args -m Enable memory profiling (--mem-prof) -c Enable CPU profiling (--cpu-prof) -d diff_base_file1 diff_base_file2 Specify two files for comparison with -diff_base -no-run Skip running oc-mirror -- Delimit script arguments from oc-mirror arguments oc-mirror args Arguments to be passed to oc-mirror ``` ``` ./v2/hack/run_and_pprof.sh -m -c -- -c ./alex-tests/alex-isc/isc.yaml file://alex-tests/pprof --v2 ``` Expected Outcome collector phase is faster The web browser should open with the graphs based on the profiling specified (`-c`, `-m`, `-d`)."
  },
  {
    "id": "1092",
    "type": "pullRequest",
    "title": "CLID-203,OCPBUGS-26771: fixes CVE-2024-0406",
    "body": "Description This PR fixes mholt/archiver: path traversal vulnerability by replacing `github.com/mholt/archiver/v3` with `github.com/aguidirh/archiver/v3 v3.5.0-ocmirror1` which contains an additional commit( on CVE-2024-0406( branch (based on v3.5.0) to fix the CVE. Github / Jira issue: CLID-203( / OCPBUGS-26771( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? `govulncheck ./...` Expected Outcome No vulnerability found."
  },
  {
    "id": "1054",
    "type": "pullRequest",
    "title": "\"NO-JIRA: Bump the pip group across 2 directories with 3 updates(",
    "body": "Updates the requirements on ansible( cryptography( and jinja2( to permit the latest version. Updates `ansible` to 11.2.0 details summaryCommits/summary ul lia href=\" Ansible 11.2.0: Dependencies, changelog and porting guide (a href=\" lia href=\" Updated changelogs and porting guides. (a href=\" lia href=\" Revert cisco.meraki pin (a href=\" lia href=\" Add cisco.meraki constraint also to Ansible 9, which is used in antsibull-cor.../li lia href=\" Add cisco.meraki constraint also to Ansible 8, which is used in antsibull-bui.../li lia href=\" Pin cisco.meraki to &lt; 2.20.0. (a href=\" lia href=\" Remove EOL'ed Ansible versions from CI matrix. (a href=\" lia href=\" Remove cisco.asa from Ansible 12 (a href=\" lia href=\" Ansible 9.13.0: Dependencies, changelog and porting guide (a href=\" lia href=\" Ansible 10.7.0: Dependencies, changelog and porting guide (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `cryptography` to 44.0.0 details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote p44.0.0 - 2024-11-27/p precode BACKWARDS INCOMPATIBLE: Dropped support for LibreSSL &lt; 3.9. Deprecated Python 3.7 support. Python 3.7 is no longer supported by the Python core team. Support for Python 3.7 will be removed in a future ``cryptography`` release. Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.4.0. macOS wheels are now built against the macOS 10.13 SDK. Users on older versions of macOS should upgrade, or they will need to build ``cryptography`` themselves. Enforce the :rfc:`5280` requirement that extended key usage extensions must not be empty. Added support for timestamp extraction to the :class:`~cryptography.fernet.MultiFernet` class. Relax the Authority Key Identifier requirements on root CA certificates during X.509 verification to allow fields permitted by :rfc:`5280` but forbidden by the CA/Browser BRs. Added support for :class:`~cryptography.hazmat.primitives.kdf.argon2.Argon2id` when using OpenSSL 3.2.0+. Added support for the :class:`~cryptography.x509.Admissions` certificate extension. Added basic support for PKCS7 decryption (including S/MIME 3.2) via :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_der`, :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_pem`, and :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_smime`. p.. _v43-0-3:/p p43.0.3 - 2024-10-18br / /code/pre/p ul liFixed release metadata for codecryptography-vectors/code/li /ul p.. _v43-0-2:/p p43.0.2 - 2024-10-18/p precode Fixed compilation when using LibreSSL 4.0.0. p.. _v43-0-1:/p p43.0.1 - 2024-09-03br / /code/pre/p ul liUpdated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.3.2./li /ul p.. _v43-0-0:/p p43.0.0 - 2024-07-20/p !-- raw HTML omitted -- /blockquote p... (truncated)/p /details details summaryCommits/summary ul lia href=\" remove deprecated call (a href=\" lia href=\" Bump version for 44.0.0 (a href=\" lia href=\" chore(deps): bump maturin from 1.7.4 to 1.7.5 in /.github/requirements (a href=\" lia href=\" chore(deps): bump libc from 0.2.165 to 0.2.166 (a href=\" lia href=\" Bump x509-limbo and/or wycheproof in CI (a href=\" lia href=\" Bump BoringSSL and/or OpenSSL in CI (a href=\" lia href=\" fixed metadata in changelog (a href=\" lia href=\" Prohibit Python 3.9.0, 3.9.1 -- they have a bug that causes errors (a href=\" lia href=\" Add support for decrypting S/MIME messages (a href=\" lia href=\" chore(deps): bump libc from 0.2.164 to 0.2.165 (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / Updates `jinja2` to 3.1.5 details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h23.1.5/h2 pThis is the Jinja 3.1.5 security fix release, which fixes security issues and bugs but does not otherwise change behavior and should not result in breaking changes compared to the latest feature release./p pPyPI: a href=\" Changes: a href=\" Milestone: a href=\" ul liThe sandboxed environment handles indirect calls to codestr.format/code, such as by passing a stored reference to a filter that calls its argument. a href=\" liEscape template name before formatting it into error messages, to avoid issues with names that contain f-string syntax. a href=\" a href=\" liSandbox does not allow codeclear/code and codepop/code on known mutable sequence types. a href=\" liCalling sync coderender/code for an async template uses codeasyncio.run/code. a href=\" liAvoid unclosed codeauto_aiter/code warnings. a href=\" liReturn an codeaclose/code-able codeAsyncGenerator/code from codeTemplate.generate_async/code. a href=\" liAvoid leaving coderoot_render_func()/code unclosed in codeTemplate.generate_async/code. a href=\" liAvoid leaving async generators unclosed in blocks, includes and extends. a href=\" liThe runtime uses the correct codeconcat/code function for the current environment when calling block references. a href=\" liMake code: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore dependency name major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself) - `@dependabot ignore dependency name minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself) - `@dependabot ignore dependency name` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself) - `@dependabot unignore dependency name` will remove all of the ignore conditions of the specified dependency - `@dependabot unignore dependency name ignore condition` will remove the ignore condition of the specified dependency and ignore conditions You can disable automated security fix PRs for this repo from the Security Alerts page( /details"
  },
  {
    "id": "1083",
    "type": "pullRequest",
    "title": "no-jira: v2: update golangci-lint config",
    "body": "Description Some options have been deprecated for a while and have been moved to different sections. Github / Jira issue: Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - x Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1087",
    "type": "pullRequest",
    "title": "OCPBUGS-50963: v2: don't clean cluster resources on dry-run mode",
    "body": "Description The --dry-run mode implies no changes to existing resources like previously generated cluster-resources. Github / Jira issue: OCPBUGS-50963 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` $ touch oc-mirror-data/working-dir/cluster-resources/DONOTDELETEME $ ./bin/oc-mirror --v2 --config isc.yaml --from file:///oc-mirror-data/ docker://localhost:5000/ocpbugs-50963 --dry-run $ test -f oc-mirror-data/working-dir/cluster-resources/DONOTDELETEME $ echo $? 0 $ ./bin/oc-mirror --v2 --config isc.yaml --from file:///oc-mirror-data/ docker://localhost:5000/ocpbugs-50963 $ test -f oc-mirror-data/working-dir/cluster-resources/DONOTDELETEME $ echo $? 1 ``` Expected Outcome working-dir/cluster-resources are not deleted when in `--dry-run` mode."
  },
  {
    "id": "1068",
    "type": "pullRequest",
    "title": "OCPBUGS-50476: v2/cli: always stop local registry and close registry.log",
    "body": "Description The local registry was not being gracefully shutdown and in some cases the `registry.log` file was closed while `logrus` was still trying to write to it: ``` 2025/02/05 21:50:45 INFO : mirror time : 29.768175677s 2025/02/05 21:50:45 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror Failed to write to log, write /oc-mirror-issue-ret/working-dir/logs/registry.log: file already closed Failed to write to log, write /oc-mirror-issue-ret/working-dir/logs/registry.log: file already closed Failed to write to log, write /oc-mirror-issue-ret/working-dir/logs/registry.log: file already closed Failed to write to log, write /oc-mirror-issue-ret/working-dir/logs/registry.log: file already closed Failed to write to log, write /oc-mirror-issue-ret/working-dir/logs/registry.log: file already closed ``` Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1080",
    "type": "pullRequest",
    "title": "OCPBUGS-44103: bump oc fork version",
    "body": "Description The bumped version can now handle the `ocischema.DeserializedImageIndex` manifest type. Without this fix, oc-mirror v1 fails with: ``` oc-mirror failed with error: the manifest type ocischema.DeserializedImageIndex is not supported ``` Github / Jira issue: OCPBUGS-44103 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` $ yq e /tmp/isc.yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v1alpha2 mirror: operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.16 packages: - name: openstack-operator channels: - name: stable-v1.0 minVersion: 1.0.4 maxVersion: 1.0.4 $ ./bin/oc-mirror --config /tmp/isc.yaml file:////oc-mirror-ocpbugs-49990-2 ``` Expected Outcome No `DeserializedImageIndex` errors."
  },
  {
    "id": "1070",
    "type": "pullRequest",
    "title": "OCPBUGS-49990: v2/release: error out for kubevirt/graph image errors",
    "body": "Description If requested by users in the ImageSetConfiguration and these resources are not found, either in the mirror or in the local cache, `oc-mirror` should error out instead of just printing a warning and continuing. Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1077",
    "type": "pullRequest",
    "title": "OCPBUGS-50685: fix: make the spinner trigger after semaphore is released",
    "body": "Description Before this fix the spinner was being triggered before the semaphore was locked. Because of that the output was giving the wrong feeling that even when `--parallel-images=1`, two images were being triggered. Github / Jira issue: OCPBUGS-50685( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? m2d with `--parallel-images=1` ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-50685.yaml file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-50685 --v2 --parallel-images=1 ```` Expected Outcome Only one go-routine triggered at a time."
  },
  {
    "id": "1049",
    "type": "pullRequest",
    "title": "OCPBUGS-50559: v2: disable spinners when not running in a tty",
    "body": "Description If oc-mirror is run behind a CI/CD pipeline or if output is redirected to a file/pipe, the spinners' output is not shown and it looks like oc-mirror is not making any progress. By using a regular log line instead, we can still show some progress logs in those cases. Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? m2d with `| grep ''` to force a non-tty output. Expected Outcome Log lines are printed as images are copied (or fail to copy)."
  },
  {
    "id": "1072",
    "type": "pullRequest",
    "title": "OCPBUGS-50503: oc-mirror fails with error `unknown image: reference n...",
    "body": "...ame is empty` Description This fix addresses the issue when using digest based release images in the ImageSetConfig. Github / Jira issue: OCPBUGS-50503( Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Tested locally using this ImageSetConfig ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: graph: true release: quay.io/openshift-release-dev/ocp-release@sha256:e0907823bc8989b02bb1bd55d5f08262dd0e4846173e792c14e7684fbd476c0d ``` Execute a mirror-to-mirror ``` bin/oc-mirror --config release-digest.yaml --workspace file://release-test docker://localhost:5000/release-test --v2 --dest-tls-verify=false ``` Executed m2d and d2m Expected Outcome In all flows oc-mirror should execute without any errros"
  },
  {
    "id": "1071",
    "type": "pullRequest",
    "title": "OCPBUGS-49991: fixes bundle related images being skipped",
    "body": "Description This PR fixes the bug where a bundle related image could be skipped during the collection. The operator would not work as expected because of missing related images. Github / Jira issue: OCPBUGS-49991( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? With the following ImageSetConfiguration: ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: registry.redhat.io/redhat/community-operator-index:v4.13 packages: - name: openshift-nfd-operator - name: kuadrant-operator - name: argocd-operator ``` Run `m2d` Expected Outcome Only the `argocd-operator` will be mirrored. The `openshift-nfd-operator` and `kuadrant-operator` will be skipped on the collector phase because of issues on its related images. NOTE: this PR does not add the errors on the collector phase to the error file. This behavior will be added in a future PR."
  },
  {
    "id": "1069",
    "type": "pullRequest",
    "title": "NO-JIRA: only save graph data if it's valid json",
    "body": "Description If we save the graph data to disk before checking it's valid, we can run into unmarshaling errors later like: ``` 2025/02/05 02:14:36 ERROR : GetReleaseReferenceImages error list APIRequestError: channel \"stable-4.16\": ResponseInvalid: invalid character 'a' after top-level value ``` Just returning unmarshaling errors is not very useful information: ``` ResponseInvalid: invalid character 'a' after top-level value ``` Let's add more context to that error when reading graph data from the working dir so we know which is the offending file. Github / Jira issue: Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1043",
    "type": "pullRequest",
    "title": "OCPBUGS-49803: v2/cli: share common flag options",
    "body": "Description Move parallel flags to CopyOptions Fix display of default values in --help Share common flag options Annotate type of some flag options for shell completion Github / Jira issue: OCPBUGS-49803 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? 1. m2d: `$ ./bin/oc-mirror --v2 --config ~/Downloads/isc.yaml file://~/Downloads/oc-mirror-issue-flags --authfile ~/prjs/clusters/pull-secret --cache-dir ~/Downloads/oc-mirror-cache/` 2. d2m: `$ ./bin/oc-mirror --v2 --config ~/Downloads/isc.yaml --workspace file://~/Downloads/oc-mirror-issue-flags --authfile ~/prjs/clusters/pull-secret --cache-dir ~/Downloads/oc-mirror-cache/ docker://localhost:5000/mirror-data-flags --dest-tls-verify=false` 3. delete --generate: `$ ./bin/oc-mirror --v2 delete --generate --cache-dir ~/Downloads/oc-mirror-cache/ --config ~/Downloads/disc.yaml --workspace file://~/Downloads/oc-mirror-issue-flags docker://localhost:5000/mirror-data-flags` 4. delete: ` $ ./bin/oc-mirror --v2 delete --delete-yaml-file ~/Downloads/oc-mirror-issue-flags/working-dir/delete/delete-images.yaml --cache-dir ~/Downloads/oc-mirror-cache/ --dest-tls-verify=false docker://localhost:5000/mirror-data-flags --log-level debug` Expected Outcome Everything working as before."
  },
  {
    "id": "1063",
    "type": "pullRequest",
    "title": "OCPBUGS-49798: exposes the parallel-layers flag",
    "body": "Description This PR adds the flag parallel-layers to the `--help` Github / Jira issue: OCPBUGS-49798( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` oc-mirror --v2 --help ``` ``` oc-mirror delete --v2 --help ``` Expected Outcome The `parallel-layers` flag should be show in both commands above."
  },
  {
    "id": "1060",
    "type": "pullRequest",
    "title": "OCPBUGS-49730: fixes the infinite loop when no images to mirror",
    "body": "Description There was a bug with an infinite loop when there was no images to mirror. Github / Jira issue: OCPBUGS-49730( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? With the following ImageSetConfiguration (where the catalog path on disk does not exist) ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/openshift-tests-private/redhat-operator-index targetCatalog: \"ocicatalog73452\" targetTag: \"v16\" packages: - name: cluster-kube-descheduler-operator ``` Run the m2d ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-49730.yaml file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-49730 --v2 ``` Expected Outcome The flow should stop before the mirroring with the following message: ``` 2025/02/03 14:06:23 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/02/03 14:06:23 INFO : \u2699\ufe0f setting up the environment for you... 2025/02/03 14:06:23 INFO : \ud83d\udd00 workflow mode: mirrorToDisk 2025/02/03 14:06:23 INFO : \ud83d\udd75 going to discover the necessary images... 2025/02/03 14:06:23 INFO : \ud83d\udd0d collecting release images... 2025/02/03 14:06:23 INFO : \ud83d\udd0d collecting operator images... \u2717 () Collecting catalog oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/openshift-tests-private/redhat-operator-index 2025/02/03 14:06:23 WARN : OperatorImageCollector catalog invalid source name oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/openshift-tests-private/redhat-operator-index: lstat /home/aguidi/go/src/github.com/aguidirh/oc-mirror/openshift-tests-private: no such file or directory : SKIPPING 2025/02/03 14:06:23 INFO : \ud83d\udd0d collecting additional images... 2025/02/03 14:06:23 INFO : \ud83d\udd0d collecting helm images... 2025/02/03 14:06:23 INFO : \u2757 No images to mirror... 2025/02/03 14:06:23 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror 2025/02/03 14:06:23 ERROR : no images to copy aguidi@fedora:~/go/src/github.com/aguidirh/oc-mirror ```"
  },
  {
    "id": "1061",
    "type": "pullRequest",
    "title": "no-jira: v2/local_stored_collector: fix missing log argument",
    "body": "Description This change fixes the missing argument in the following log message: ``` 2025/02/03 15:58:07 WARN : unable to find graph image in local cache: SKIPPING. %!v(MISSING) ``` Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1058",
    "type": "pullRequest",
    "title": "OCPBUGS-49723: v2/clusterresources: remove ClusterCatalog namespace",
    "body": "Description It is a cluster-wide resource, so we don't need to set the namespace. Github / Jira issue: OCPBUGS-49723 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1047",
    "type": "pullRequest",
    "title": "CLID-300: Update catalog filtering doc",
    "body": "This is a simple doc update. Takes into account the fact that filtering by bundle selection has been removed"
  },
  {
    "id": "1053",
    "type": "pullRequest",
    "title": "CLID-306: upgrades dependencies",
    "body": "Description This PR upgrade some dependencies following the dependabot suggestions. Github / Jira issue: CLID-306( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` make clean make tidy make build make test ``` workflows tested: ``` m2d + d2m + delete (with and without --force-cache-delete=true) ``` ``` m2m + delete (without --force-cache-delete=true since there is no cache storage in m2m) ``` Currently running basic tests to check if everything is still working. Expected Outcome All commands above worked fine."
  },
  {
    "id": "1048",
    "type": "pullRequest",
    "title": "CLID-306: upgrades dependencies",
    "body": "Description This PR upgrade some dependencies following the dependabot suggestions. Github / Jira issue: CLID-306( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` make clean make tidy make build make test ``` workflows tested: ``` m2d + d2m + delete (with and without --force-cache-delete=true) ``` ``` m2m + delete (without --force-cache-delete=true since there is no cache storage in m2m) ``` Expected Outcome All commands above worked fine."
  },
  {
    "id": "1045",
    "type": "pullRequest",
    "title": "CLID-303: disables the selected bundle feature",
    "body": "Description The selected bundle feature was released in the Tech Preview of oc-mirror v2. This PR disables this feature since it could cause issues when selecting a bundle which does not contains everything necessary to run the operator. Github / Jira issue: CLID-303( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - x Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Ran the following workflows: `m2d/d2m` `m2m` `delete --generate` `delete` (with and without `--force-cache-delete` flag) ImageSetConfiguration with and without the field `bundles` Expected Outcome All the flows above should successfully pass, except the one without the field `bundles`."
  },
  {
    "id": "1041",
    "type": "pullRequest",
    "title": "CLID-301: add --cache-dir to delete command",
    "body": "Description This is a fallout of 41c0161728e1b0ed1a63172f36bcc53424dbb09c Github / Jira issue: Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ``` $ ./bin/oc-mirror --v2 delete --generate --cache-dir /tmp/ -c ~/Downloads/disc.yaml --workspace file://~/Downloads/mirror-v2-data docker://localhost:5000 2025/01/24 12:30:47 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/01/24 12:30:47 INFO : \u2699 setting up the environment for you... 2025/01/24 12:30:47 INFO : \ud83d\udd00 workflow mode: diskToMirror / delete 2025/01/24 12:30:47 INFO : \ud83d\udd75 going to discover the necessary images... 2025/01/24 12:30:47 INFO : \ud83d\udd0d collecting release images... ... ``` Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1036",
    "type": "pullRequest",
    "title": "OCPBUGS-45059: fixes the delete when catalog mirrored with v1 from disk (oci://)",
    "body": "Description When an operator catalog was mirrored with v1 and the catalog was on disk (oci:// on the ImageSetConfiguration) the delete feature was not working properly. The changes on this PR is to fix this bug. Github / Jira issue: OCPBUGS-45059( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? With the following ImageSetConfiguration from oc-mirror v1 ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v1alpha2 mirror: operators: - catalog: oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/testying/redhat-operator-index targetCatalog: \"ocicatalog73452\" targetTag: \"v16\" packages: - name: cluster-kube-descheduler-operator ``` Run mirror to mirror (m2m): ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-45059-v1.yaml docker://localhost:6000/437311 --dest-skip-tls --dest-use-http ``` Then with the following ImageSetConfiguration from oc-mirror v2 ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/testying/redhat-operator-index targetCatalog: \"ocicatalog73452\" targetTag: \"v16\" packages: - name: cluster-kube-descheduler-operator ``` Run mirror to disk (m2d): ``` ./bin/oc-mirror --v2 -c ./alex-tests/alex-isc/ocpbugs/ocpbugs-45059-v2.yaml file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-45059-v2 ``` Then with the following DeleteImageSetConfiguration ``` kind: DeleteImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 delete: operators: - catalog: oci:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/testying/redhat-operator-index targetCatalog: \"ocicatalog73452\" targetTag: \"v16\" packages: - name: cluster-kube-descheduler-operator ``` Run the diskToMirror delete generate ``` ./bin/oc-mirror delete --generate --delete-v1-images -c /home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/alex-isc/ocpbugs/ocpbugs-45059-v2-delete.yaml --workspace file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-45059-v2 docker://localhost:6000/437311 --v2 ``` And lastly, the delete ``` ./bin/oc-mirror delete --delete-yaml-file /home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-45059-v2/working-dir/delete/delete-images.yaml docker://localhost:6000/437311 --v2 --dest-tls-verify=false ``` Expected Outcome All the tags from the destination should be deleted (except the operator catalog image)"
  },
  {
    "id": "1035",
    "type": "pullRequest",
    "title": "OCPBUGS-45240: CLID-301: add --cache-dir command line option",
    "body": "Description This should be easier for users to find since it's shown in the output of `--help` compared to the `OC_MIRROR_CACHE` env var. Github / Jira issue: CLID-301( Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - x New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ```bash $ ./bin/oc-mirror --v2 --help ... Flags: --authfile string path of the authentication file. Default is ${XDG_RUNTIME_DIR}/containers/auth.json --cache-dir string oc-mirror cache directory -c, --config string Path to imageset configuration file $ OC_MIRROR_CACHE=/home/ ./bin/oc-mirror --v2 --cache-dir /tmp/ -c ~/Downloads/isc.yaml file:///tmp/banana 2025/01/23 13:31:44 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/01/23 13:31:44 INFO : \u2699 setting up the environment for you... 2025/01/23 13:31:44 ERROR : either OC_MIRROR_CACHE or --cache-dir can be used but not both $ ./bin/oc-mirror --v2 --cache-dir ~/Downloads -c ~/Downloads/isc.yaml file://~/Downloads/mirror-cache-test 2025/01/23 13:35:31 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/01/23 13:35:31 INFO : \u2699 setting up the environment for you... 2025/01/23 13:35:31 INFO : \ud83d\udd00 workflow mode: mirrorToDisk 2025/01/23 13:35:31 INFO : \ud83d\udd75 going to discover the necessary images... 2025/01/23 13:35:31 INFO : \ud83d\udd0d collecting release images... ^C $ test -e ~/Downloads/.oc-mirror/.cache/ $ echo $? 0 ``` The unit tests set the cache dir to `/tmp/` and they are still passing. Expected Outcome Location of the cache dir can be set via the `--cache-dir` flag."
  },
  {
    "id": "1034",
    "type": "pullRequest",
    "title": "OCPBUGS-45161: Generate ClusterCatalog resources for operator catalogs",
    "body": "Description Generate ClusterCatalog resources as needed when managing operators with OLM v1. Github / Jira issue: OCPBUGS-45161 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - x This change requires a documentation update on openshift docs How Has This Been Tested? ```bash Mirror to disk: $ ./bin/oc-mirror --v2 --config ~/Downloads/isc.yaml file://~/Downloads/mirror-v2-data Disk to mirror: $ ./bin/oc-mirror --v2 --config ~/Downloads/isc.yaml --from file://~/Downloads/mirror-v2-data docker://localhost:5000/mirror-v2-data ... 2025/01/22 16:18:09 INFO : \ud83d\udcc4 Generating CatalogSource file... 2025/01/22 16:18:09 INFO : ~/Downloads/mirror-v2-data/working-dir/cluster-resources/cs-redhat-operator-index-v4-16.yaml file created 2025/01/22 16:18:09 INFO : \ud83d\udcc4 Generating ClusterCatalog file... 2025/01/22 16:18:09 INFO : ~/Downloads/mirror-v2-data/working-dir/cluster-resources/cc-redhat-operator-index-v4-16.yaml file created ``` Expected Outcome ```bash $ yq e ~/Downloads/mirror-v2-data/working-dir/cluster-resources/cc-redhat-operator-index-v4-16.yaml ``` ```yaml apiVersion: olm.operatorframework.io/v1 kind: ClusterCatalog metadata: name: cc-redhat-operator-index-v4-16 namespace: openshift-marketplace spec: priority: 0 source: image: ref: localhost:5000/mirror-v2-data/redhat/redhat-operator-index:v4.16 type: Image status: {} ```"
  },
  {
    "id": "1028",
    "type": "pullRequest",
    "title": "OCPBUGS-48602,OCPBUGS-48603: fixes CVEs upgrading go-git dependency",
    "body": "Description This PR upgrades the dependency go-git in order to fix the CVES listed below. Github / Jira issue: OCPBUGS-48602( and OCPBUGS-48603( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? `make clean` `make tide` `make build` `make test` Expected Outcome All commands above should finish successfully."
  },
  {
    "id": "1002",
    "type": "pullRequest",
    "title": "OCPBUGS-47688: Fix ITMS and IDMS generated when mirror dest contains ...",
    "body": "...release namespace Description The IDMS and ITMS applied to the cluster were not allowing the clusters to find the right mirrors for release images. Update of the cluster was failing with `manifest unknown` issues. The problem was coming from the way we construct the sources and mirrors in IDMS/ITMS, where we favor namespace scoped references to repository scoped references. Ex: when mirroring to `sherinefedora:5000/openshift-release-dev/ocp-release`, the release image `quay.io/openshift-release-dev/ocp-release:4.17.9-x86_64` is mirrored to `sherinefedora:5000/openshift-release-dev/ocp-release/openshift/release-images:4.17.9-x86_64` The IDMS should instruct container runtimes to replace `quay.io/openshift-release-dev/ocp-release` by `sherinefedora:5000/openshift-release-dev/ocp-release/openshift/release-images` . Prior to the bug, IDMS contained `sherinefedora:5000/openshift-release-dev/ocp-release/openshift` for namespace `quay.io/openshift-release-dev` Github / Jira issue: OCPBUGS-47688( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Perform mirror to mirror using the following command: ```bash ./bin/oc-mirror --v2 -c config_logs/bugs.yaml docker://sherinefedora:5000/openshift-release-dev/ocp-release --workspace file:///home/skhoury/45580/ ``` imagesetconfiguration: ```yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: channels: - name: stable-4.17 type: ocp minVersion: 4.17.9 maxVersion: 4.17.9 ``` Expected Outcome IDMS file ```yaml apiVersion: config.openshift.io/v1 kind: ImageDigestMirrorSet metadata: name: idms-release-0 spec: imageDigestMirrors: - mirrors: - sherinefedora:5000/openshift-release-dev/ocp-release/openshift/release-images source: quay.io/openshift-release-dev/ocp-release - mirrors: - sherinefedora:5000/openshift-release-dev/ocp-release/openshift/release source: quay.io/openshift-release-dev/ocp-v4.0-art-dev ``` ITMS file ```yaml apiVersion: config.openshift.io/v1 kind: ImageTagMirrorSet metadata: name: itms-release-0 spec: imageTagMirrors: - mirrors: - sherinefedora:5000/openshift-release-dev/ocp-release/openshift/release-images source: quay.io/openshift-release-dev/ocp-release ```"
  },
  {
    "id": "1016",
    "type": "pullRequest",
    "title": "OCPBUGS-48513: e2e: use same version of crane as in go.mod",
    "body": "Description `go install` ignores go.mod, so it's possible to install a version not compatible with the system Golang version when using `@latest`. This should fix the following error in CI for older branches: ``` /go/src/github.com/openshift/oc-mirror/test/e2e/operator-test.17343 /go/src/github.com/openshift/oc-mirror go: downloading github.com/google/go-containerregistry v0.20.3 go: github.com/google/go-containerregistry/cmd/crane@latest: github.com/google/go-containerregistry@v0.20.3 requires go = 1.23.0 (running go 1.22.9; GOTOOLCHAIN=local) /go/src/github.com/openshift/oc-mirror/test/e2e/lib/util.sh: line 17: PID_DISCONN: unbound variable ``` Github / Jira issue: OCPBUGS-48513 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Running `install_deps` from `main` should install crane version `v0.20.0` as specified in the `go.mod` instead of `v0.20.3`. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "960",
    "type": "pullRequest",
    "title": "OCPBUGS-44799,CLID-181,CLID-204: new concurrent worker using channels",
    "body": "Description This PR includes: Performance Improvements on batch package new Implementation Improvement % :------: ----: 10m55s 54.35% 3m27s 36.11% 12m32s 32.86% 1.2s 88.24% 1.2s 88.35% Math Formula: Difference = Old Time - New Time Improvement Percentage = (Difference / Old Time) 100 GUI changes during the batch - Same results format for copy and delete - Added Overall progress bar to show the percentage and time of the entire mirroring/deleting process - Changed the progress bar to show only the component name + digest/tag instead of the whole origin - Changed the progress bar to show where the image is going (`cache` (m2d) OR `host/namespace` (d2m or m2m)) - Simplified flags - max-parallel-downloads flag was removed - renamed parallel-batch-images flag to parallel-images flag Instead of 3 flags now there are only 2, where `parallel-images` indicates how many images can be mirrored/deleted in parallel and `parallel-layers` indicates how many layers of an image can be mirrored/deleted in parallel. Added sort mechanism for all image types In this way it is possible to sort the order that the images should be mirrored/deleted by priority. Added KuberVirt image as mandatory From now if kubevirt image mirroring fails, the entire workflow fails since this kind of image is mandatory for OCP releases New emoji package A package to keep all emojis being used in oc-mirror. It will allow to change emojis easily and also make the reuse easier. Refactorings Some pieces of the code were refactored to keep things simpler to understand Fixes: OCPBUGS-44799( CLID-181( CLID-204( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - x New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - x This change requires a documentation update How Has This Been Tested? With the following ImageSetConfiguration ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: channels: - name: stable-4.13 minVersion: 4.13.10 maxVersion: 4.13.10 graph: true operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.15 packages: - name: aws-load-balancer-operator - name: 3scale-operator - name: node-observability-operator additionalImages: - name: registry.redhat.io/ubi8/ubi:latest - name: registry.redhat.io/ubi9/ubi@sha256:20f695d2a91352d4eaa25107535126727b5945bff38ed36a3e59590f495046f0 helm: repositories: - name: podinfo url: charts: - name: podinfo version: 5.0.0 - name: sbo url: ``` Run: m2d ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/isc.yaml file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-44799 --v2 ``` d2m ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/isc.yaml --from file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-44799 docker://localhost:6000 --v2 --dest-tls-verify=false ``` m2m ``` ./bin/oc-mirror -c ./alex-tests/alex-isc/isc.yaml --workspace file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-44799 docker://localhost:6000 --v2 --dest-tls-verify=false ``` With the following DeleteImageSetConfiguration ``` kind: DeleteImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 delete: platform: channels: - name: stable-4.13 minVersion: 4.13.10 maxVersion: 4.13.10 graph: true operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.15 packages: - name: aws-load-balancer-operator - name: 3scale-operator - name: node-observability-operator additionalImages: - name: registry.redhat.io/ubi8/ubi:latest - name: registry.redhat.io/ubi9/ubi@sha256:20f695d2a91352d4eaa25107535126727b5945bff38ed36a3e59590f495046f0 helm: repositories: - name: podinfo url: charts: - name: podinfo version: 5.0.0 - name: sbo url: ``` Run: delete generate ``` ./bin/oc-mirror delete --generate --v2 -c ./alex-tests/alex-isc/isc-delete.yaml docker://localhost:6000 --workspace file:///home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-44799 ``` delete ``` ./bin/oc-mirror delete --delete-yaml-file /home/aguidi/go/src/github.com/aguidirh/oc-mirror/alex-tests/ocpbugs-44799/working-dir/delete/delete-images.yaml docker://localhost:6000 --v2 --dest-tls-verify=false ``` Expected Outcome All workflows should finish successfully The new overall progress bar should show together with the new dynamic way of showing only the images being mirrored/deleted Results of the mirroring is in the same format of the results of deleting on the console output"
  },
  {
    "id": "1007",
    "type": "pullRequest",
    "title": "OCPBUGS-48541: OWNERS: add myself to reviewers",
    "body": "Description Add myself to the reviewers list. Github / Jira issue: Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration. Expected Outcome Please describe the outcome expected from the tests."
  },
  {
    "id": "1004",
    "type": "pullRequest",
    "title": "OCPBUGS-44714: don't clear cluster-resources dir on `delete --generate`",
    "body": "Description The manifests which are generated under working-dir/cluster-resources (IDMS,ITMS etc) shouldn't be deleted automatically. Github / Jira issue: OCPBUGS-44714 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? ```bash $ touch /mirror-v2-data/working-dir/cluster-resources/do-not-delete-me.txt $ ./bin/oc-mirror delete --generate --v2 -c /tmp/disc.yaml docker://example.com --workspace file:///mirror-v2-data $ test -e /mirror-v2-data/working-dir/cluster-resources/do-not-delete-me.txt ``` Expected Outcome Files under working-dir/cluster-resources are not deleted."
  },
  {
    "id": "997",
    "type": "pullRequest",
    "title": "OCPBUGS-47453: Use a newer sha256 key to verify release signatures",
    "body": "Description Release images got trusted-key bumps in the OCPBUGS-35528( / cluster-update-keys57( series to pivot from SHA-1 to SHA-256 self-signatures. The fix consists in changing the hard coded key using the value from cluster-update-keys57( A deeper change to the way that oc-mirror v2 collects release images should be done in order to implement a longer term solution by extracting the key from the payload first, and using that key to verify the release signature next. This is postponed to a later date. cc @wking Github / Jira issue: OCPBUGS-47453( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Success in dry run mirror2Disk with channels ranging from stable-4.14 to stable-4.17 on Fedora41 Success in dry run mirror2Disk with image set config from the jira ticket on an ec2 machine running ami-0c1fc64ecebed0465 (RHEL-9.4.0_HVM-20240423-x86_64-62-Hourly2-GP3) use v2/internal/e2e/infra_demo terraform to spin up the ec2 quickly clone oc-mirror repo on the ec2 use `export DISABLE_CGO=1` before doing `make build` :warning: I was not able to reproduce the issue on the RHEL9 system before applying the fix. My test only confirms that we can verify release signatures using the new key, but DOES NOT definitively confirm it fixes the issue. Expected Outcome release images should be mirrored correctly"
  },
  {
    "id": "996",
    "type": "pullRequest",
    "title": "no-jira: make: also fmt/vet the v2 module",
    "body": "Description Include the v2 module in `make fmt/vet` Github / Jira issue: Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? `make fmt && make vet` Expected Outcome The v2 module is included"
  },
  {
    "id": "995",
    "type": "pullRequest",
    "title": "OCPBUGS-45215: cli: fix log level validation",
    "body": "Description `error` is a valid log level but it was not being considered during level validation. Github / Jira issue: OCPBUGS-45215 Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) How Has This Been Tested? ```bash $ ./bin/oc-mirror --config /dev/null file:///dev/null --v2 --log-level banana 2025/01/08 12:41:08 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/01/08 12:41:08 INFO : \u2699\ufe0f setting up the environment for you... 2025/01/08 12:41:08 ERROR : log-level has an invalid value banana , it should be one of (info,debug,trace,error) $ ./bin/oc-mirror --config /dev/null file:///dev/null --v2 --log-level error 2025/01/08 12:41:20 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2025/01/08 12:41:20 INFO : \u2699\ufe0f setting up the environment for you... 2025/01/08 12:41:20 ERROR : config GVK not recognized: /, Kind= ``` Expected Outcome \"error\" is accepted as a valid log level."
  },
  {
    "id": "988",
    "type": "pullRequest",
    "title": "OCPBUGS-43489: Fix for deleting of local cache using --force-cache-de...",
    "body": "...lete flag Description This addresses the issue when using the --force-cache-delete flag when executing a delete for images on a remote registry Github / Jira issue: OCPBUGS-43489 NB This fix reverts the changes made in OCPBUGS-44448 - (the route cause actually was a problem with the Delete Destination ) Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Tested using the following ImageSetConfig ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: graph: true Required for the OSUS ooperator architectures: - amd64 - s390x channels: - name: stable-4.15 minVersion: '4.15.38' maxVersion: '4.15.38' shortestPath: true helm: repositories: - name: sbo url: additionalImages: - name: registry.redhat.io/ubi8/ubi:latest - name: quay.io/openshifttest/hello-openshift@sha256:61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27 operators: - catalog: registry.redhat.io/redhat/redhat-operator-index@sha256:a44ae9bb5ff9a4a988a8bf219011c463c4f9e764f0d9aced17b2d399729ebd4a packages: - name: devworkspace-operator ``` The DeleteImageSetConfig to use ``` kind: DeleteImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 delete: platform: graph: true Required for the OSUS ooperator architectures: - amd64 - s390x channels: - name: stable-4.15 minVersion: '4.15.38' maxVersion: '4.15.38' shortestPath: true helm: repositories: - name: sbo url: additionalImages: - name: registry.redhat.io/ubi8/ubi:latest - name: quay.io/openshifttest/hello-openshift@sha256:61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27 operators: - catalog: registry.redhat.io/redhat/redhat-operator-index@sha256:a44ae9bb5ff9a4a988a8bf219011c463c4f9e764f0d9aced17b2d399729ebd4a packages: - name: devworkspace-operator ``` Execute a mirror to disk and then a disk to mirror workflow Execute the delete generate command (using the deleteimagesetconfig) ``` bin/oc-mirror delete --config delete-ying.yaml --generate --workspace file://ocpbugs-43489 docker://localhost:5000/ocpbugs-43489/abc --v2 --dest-tls-verify=false ``` And finally execute the actual delete with --force-cache-delete flag ``` bin/oc-mirror delete --v2 --delete-yaml-file ocpbugs-43489/working-dir/delete/delete-images.yaml docker://localhost:5000/ocpbugs-43489 --dest-tls-verify=false --src-tls-verify=false --loglevel info ``` NB - take note that the destination `docker://localhost:5000/ocpbugs-43489` is set correctly for all workflows (disk to mirror, generate and delete) - this was one of the route cause for the deletion of local cache not to work. The delete functionality i.e using --delete-yaml-file flag) will check for each entry in the delete-file if the destination was set correctly. NB - I also tested using mirror to mirror (note that as their is no data in cache using the --force-cache-delete flag will fail) for this workflow. This was just to ensure in mirror to mirror mode the remote registry delete will still work Expected Outcome Console output has been truncated for brevity !! ``` bin/oc-mirror delete --v2 --delete-yaml-file ocpbugs-43489/working-dir/delete/delete-images.yaml --force-cache-delete=true docker://localhost:5000/ocpbugs-43489 --dest-tls-verify=false --src-tls-verify=false --loglevel info 2024/12/16 17:42:38 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2024/12/16 17:42:38 INFO : \u2699\ufe0f setting up the environment for you... 2024/12/16 17:42:38 INFO : \ud83d\udd00 workflow mode: diskToMirror / delete 2024/12/16 17:42:38 INFO : \ud83d\udc40 Reading delete file... 2024/12/16 17:42:38 INFO : \ud83d\ude80 Start deleting the images... 2024/12/16 17:42:38 INFO : images to delete 420 ... 2024/12/16 17:42:41 INFO : === Results === 2024/12/16 17:42:41 INFO : \u2705 420 / 420 images deleted successfully 2024/12/16 17:42:41 INFO : delete time : 3.276656776s devworkspace/devworkspace-operator-bundle devworkspace/devworkspace-project-clone-rhel8 devworkspace/devworkspace-rhel8-operator openshift/graph-image openshift/release openshift/release-images openshift4/ose-kube-rbac-proxy openshifttest/hello-openshift redhat/redhat-operator-index redhat/redhat-operator-index: marking manifest sha256:a44ae9bb5ff9a4a988a8bf219011c463c4f9e764f0d9aced17b2d399729ebd4a redhat/redhat-operator-index: marking blob sha256:2db11a9c3610869faeb35965d609de00c16efb086576efc4f5b79ec56a928e35 redhat/redhat-operator-index: marking blob sha256:3059f6068401e6b82194cb486bf75573bd18356796e1010a73d575704723cc31 redhat/redhat-operator-index: marking blob sha256:6b7b2d301bf29dd5fcbffe73060e5b0b6fe970b13a56fd85349c0533cbcab7ab redhat/redhat-operator-index: marking blob sha256:cf6e7635d7d4d047eca9fe2a7b2c48415aa597677d230cbb9767d3aa776cbb6e redhat/redhat-operator-index: marking blob sha256:1afd94375c6c02855cdb7db70b4e951cd93797ab6d210034f2d13918e293afa4 redhat/redhat-operator-index: marking blob sha256:b8f54f04d135cc6f405bf8cecf9aa22b22ad2538353a4a46997d8b60330c6442 redhat/redhat-operator-index: marking manifest sha256:b2126ab21a373bfe79b24f2038b951781bf0091401dfaa0bfa6972fdb62b8ae5 redhat/redhat-operator-index: marking blob sha256:be751f1d8444f5b4235abf1e32ea6d5d65f99b2a49d246a40533f3fb754bd852 redhat/redhat-operator-index: marking blob sha256:d2e660c9d793d805f0bf62ed924d4b81bb06351ca5776f0aa9add281528c6893 redhat/redhat-operator-index: marking blob sha256:38c7eb68cd95287b725e731f02fda4c78a3301aa74693762ad3b9a3074a0c8f6 redhat/redhat-operator-index: marking blob sha256:fbdc7da75f8f14a7ea7c64f849eac3d94b25f9c3722d0d237c38022f34c1ba76 redhat-developer/servicebinding-operator ubi8/ubi ubi8-minimal manifest eligible for deletion: {devworkspace/devworkspace-project-clone-rhel8 sha256:b7b541a2000546f10f141fe203d1f4bb5487e40d51f967033caf3ea7e9ac9cf4 } manifest eligible for deletion: {devworkspace/devworkspace-project-clone-rhel8 sha256:cdba9117ea59418f24035a7782b47631a9f68e310a6c821e00b3f49661f24bc6 } manifest eligible for deletion: {devworkspace/devworkspace-project-clone-rhel8 sha256:e9919811707fa7955865850148d91b31f3ab9b445f627fe1df9af08ca9d677e4 } manifest eligible for deletion: {devworkspace/devworkspace-rhel8-operator sha256:8b88e6b3914241689af2c233fcd39ef135b373b2704cc3a45e933d82ef4cad69 } manifest eligible for deletion: {devworkspace/devworkspace-rhel8-operator sha256:aff078de40769006b1c3857774fa85571a8b1b04b604c2d63a73aea59b5c0920 } manifest eligible for deletion: {devworkspace/devworkspace-rhel8-operator sha256:fb864e2ca88f4f868f0e0b3ae60712016131aec26f0196e3ae3a6b3c3567b53b } manifest eligible for deletion: {openshift/graph-image sha256:8084e8528cbb8a1ab5da588efa6948919eac32f5e41a8fa4e641995423b3cc59 } manifest eligible for deletion: {openshift/graph-image sha256:a6ad2753e2a5f7b7063c075e70d5b4da9c3519bc833bc75c46c5dcc06f51270e } manifest eligible for deletion: {openshift/graph-image sha256:c41dda107b857123829bcf6d1cc4831d76793113b92a9b841b638331e25debfc } manifest eligible for deletion: {openshift/graph-image sha256:cdee0bdea2f335c3c8673ac8ead42bbb060bcf13495703763ed62ea8896fc582 } manifest eligible for deletion: {openshift4/ose-kube-rbac-proxy sha256:0fdf642f5a9fdc1faa2aa8be2c74424920f725dba666ba5fea0d18792be541d2 } manifest eligible for deletion: {openshift4/ose-kube-rbac-proxy sha256:56d60955e60b698e93a51b266910908099510320bc4b7e8e2b5d9db9a57af2d4 } manifest eligible for deletion: {openshift4/ose-kube-rbac-proxy sha256:bba75f2509f2da9905b97657c5c42349ac942ffd5dbad0bf849688894cdb2712 } manifest eligible for deletion: {openshift4/ose-kube-rbac-proxy sha256:f93025a2014c3d7b6a311d8037410bfba1c68ba945ba78e36a75e9f8b61203b6 } manifest eligible for deletion: {openshifttest/hello-openshift sha256:685a0ca5f33d9f921966c9d9f5922e266affbf93dde0c156709ecdea362f88f4 } manifest eligible for deletion: {openshifttest/hello-openshift sha256:a51d6da571b2e1f57249f4d966af65cbfb361dad66cde7121c1bb656ab196269 } manifest eligible for deletion: {redhat/redhat-operator-index sha256:c79a10b46d5cf13cac12767ad37f585e0ad01defab67bbfb684cc62f15e740ab a9c5719b4fa96a801ed763b824fc3e53 sha256-a44ae9bb5ff9a4a988a8bf219011c463c4f9e764f0d9aced17b2d399729ebd4a} manifest eligible for deletion: {redhat/redhat-operator-index sha256:f9a3306bc971f66fbe2a867430e52219089da141b360794557bf45a8169d5766 a9c5719b4fa96a801ed763b824fc3e53 sha256-a44ae9bb5ff9a4a988a8bf219011c463c4f9e764f0d9aced17b2d399729ebd4a} manifest eligible for deletion: {ubi8/ubi sha256:17b8ee77f5c03bedf40bfe23557d35f2c2f67be11b78a8a7a6aec0db4d818a25 } manifest eligible for deletion: {ubi8/ubi sha256:2c7b6717d87dc33cffe01729e1e10e17e61f5792c7347c4d3bf2c22c0b5d134c } manifest eligible for deletion: {ubi8/ubi sha256:37e0f1200d58f83d58c52a0fde105926033d0c9fedc067b78bdcd4fea5d1bb98 } manifest eligible for deletion: {ubi8/ubi sha256:645731ab048d175d849e67d8685474833ea399da327212744c1e6cb2fc1c1b82 } manifest eligible for deletion: {ubi8-minimal sha256:71aa34f37215ba9201587c834776212b86ec9a72ab3d83a77e6a00dbb535e043 } manifest eligible for deletion: {ubi8-minimal sha256:a49924d9d685a35b2d0817ffe9c84f3429d97e9ad29ed3816c389f45564c9e19 } manifest eligible for deletion: {ubi8-minimal sha256:a6a6611a34a96eead491bc3c611a82da4bb4ce47950657346f796eb55611e18d } manifest eligible for deletion: {ubi8-minimal sha256:f230ad5c30adc6210195636fb6d3dae89fe7ac64a5e107edcdf9a70cf3e5539b } 12 blobs marked, 795 blobs and 26 manifests eligible for deletion ... 2024/12/16 17:42:43 INFO : \ud83d\udcdd Remember to execute a garbage collect (or similar) on your remote repository 2024/12/16 17:42:43 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror ```"
  },
  {
    "id": "990",
    "type": "pullRequest",
    "title": "OCPBUGS-45580: Fix Mirror2Disk not including the rebuilt catalog in t...",
    "body": "Description The root cause for this issue is that the Mirror 2 Disk doesn't include the rebuilt catalog in the archive. Therefore, when Disk 2 Mirror attempts to copy the rebuilt catalog from the cache (should be regenerated from the archive) to the destination registry, it was not found: manifest unknown Github / Jira issue: OCPBUGS-45580( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - Code Improvements (Refactoring, Performance, CI upgrades, etc) - Internal repo assets (diagrams / docs on github repo) - This change requires a documentation update on openshift docs How Has This Been Tested? Using the same steps described in the bug. Expected Outcome Disk to mirror should pass"
  },
  {
    "id": "986",
    "type": "pullRequest",
    "title": "NO-JIRA: Updating oc-mirror-plugin-container image to be consistent with ART for 4.19",
    "body": "Description Currently oc-mirror have two ci files (Dockerfile.art and Dockerfile.ci), one for cachito (obs build) and another for prow. Since the PR 980 opened by openshift-bot was missing the Dockerfile.ci I am opening this one manually to upgrade the golang version on the second file as well. @joepvd is it possible to change the openshift-bot to pick both files? Fixes (issue) Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? The tests will run on the PR itself under the images job. Expected Outcome Images job on prow should pass successfully."
  },
  {
    "id": "987",
    "type": "pullRequest",
    "title": "NO-JIRA: pull request template update",
    "body": "Description Adding some new types of changes to the template."
  },
  {
    "id": "981",
    "type": "pullRequest",
    "title": "OCPBUGS-44901: Align tag format for additionalImages and operators",
    "body": "Description This issue addresses the standard for all mirrored images on digest for both additonalImages and operators They will follow the tag as \"algorithm-digest\" i.e If I mirrored this additionalimage ``` quay.io/openshifttest/hello-openshift@sha256:61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27 ``` I should expect the tag to be in the form of ``` destination-registry/openshifttest/hello-openshift/sha256-61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27 ``` And the same applies to operators. The standard has already been applied to release images and helm chart images Fixes OCPBUGS-44901 Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Use the following isc ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: additionalImages: - name: registry.redhat.io/ubi8/ubi:latest - name: quay.io/openshifttest/hello-openshift@sha256:61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27 operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.15 packages: - name: devworkspace-operator ``` Execute a mirror to disk and disk to mirror Once completed inspect the remote registry (as below) NB Repeat the process for M2M (and inspect the tags as below) Expected Outcome ``` curl jq {\"name\":\"ocpbugs-44901/devworkspace/devworkspace-operator-bundle\",\"tags\":\"sha256-ceffc304833a94c89925da2b3bd5fe08b3286a650be48ee2b2f1a4bf144fb2f8\"} curl {\"name\":\"ocpbugs-44901/devworkspace/devworkspace-project-clone-rhel8\",\"tags\":\"sha256-3617aed739692e98404debff8d79334860bbd0d936b25ce7b2e865889a6564fb\"} curl {\"name\":\"ocpbugs-44901/devworkspace/devworkspace-rhel8-operator\",\"tags\":\"sha256-d4bf8d3bede52ce4c329a133969f423673dedba76308f7b216793014c245cebd\"} curl {\"name\":\"ocpbugs-44901/openshift4/ose-kube-rbac-proxy\",\"tags\":\"sha256-4488f5fdf6f10a551fe046e62cd4f3d856530cfb15831f7e1e2de531e7f2caeb\"} curl {\"name\":\"ocpbugs-44901/ubi8-minimal\",\"tags\":\"sha256-b93deceb59a58588d5b16429fc47f98920f84740a1f2ed6454e33275f0701b59\"} curl {\"name\":\"ocpbugs-44901/openshifttest/hello-openshift\",\"tags\":\"sha256-61b8f5e1a3b5dbd9e2c35fd448dc5106337d7a299873dd3a6f0cd8d4891ecc27\"} ``` NB Only additionalImages that are digest based have the tag \"sha256-xxx..\" Only operators and bundles that are digest based have the tag \"sha256-xxx...\""
  },
  {
    "id": "979",
    "type": "pullRequest",
    "title": "OCPBUGS-42849: Assign a static name to the release signature configmap",
    "body": "Description Fixes OCPBUGS-42849 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Unit test added M2M produces confimap containing name Expected Outcome unit tests pass"
  },
  {
    "id": "982",
    "type": "pullRequest",
    "title": "OCPBUGS-43825: Fix graph image not deletable if mirrored by m2m",
    "body": "Description Fixes OCPBUGS-43825 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Performed the scenario described in the bug: M2M with graph = true, followed by delete workflow Expected Outcome No warnings appear during `delete --generate` delete-images.yaml contains the graph image"
  },
  {
    "id": "980",
    "type": "pullRequest",
    "title": "OCPBUGS-45687: Updating oc-mirror-plugin-container image to be consistent with ART for 4.19",
    "body": "Updating oc-mirror-plugin-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: oc-mirror-plugin.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "978",
    "type": "pullRequest",
    "title": "OCPBUGS-44033: Failed to mirror ocp payload using digest",
    "body": "Description This bugfix addresses the issue when mirroring a release that use a digest rather than a tag Fixes OCPBUGS-44033 Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Use the following isc ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: release: registry.ci.openshift.org/ocp/release@sha256:a29a109f286c77aecb71906696830c2f48c9b6ba0df77b88a7fb5c4399f3334a ``` 1. Execute a simple m2m command ``` bin/oc-mirror --config ocpbugs-44033.yaml --workspace file://ocpbugs-44033 docker://localhost:5000/ocpbugs-44033 --v2 --dest-tls-verify=false ``` 2. Execute a disk to mirror ``` bin/oc-mirror --config ocpbugs-44033.yaml --from file://ocpbugs-44033 docker://localhost:5000/ocpbugs-44033 --v2 --dest-tls-verify=false ``` 3. Repeat for mirror to disk and then disk to mirror Expected Outcome Mirroring should pass for all scenarios"
  },
  {
    "id": "967",
    "type": "pullRequest",
    "title": "OCPBUGS-44449: Fix batch info log for delete scenario",
    "body": "Description Fixes OCPBUGS-44449( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Successfully run delete all the way Expected Outcome Success"
  },
  {
    "id": "969",
    "type": "pullRequest",
    "title": "OCPBUGS-43275: De-duplicate release images when several releases are ...",
    "body": "...chosen Description Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change. Fixes (issue) Type of change Please delete options that are not relevant. - Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Please describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration Expected Outcome Please describe the outcome expected from the tests"
  },
  {
    "id": "968",
    "type": "pullRequest",
    "title": "OCPBUGS-44448: Skip deletion of images with same source and different...",
    "body": "Description The root cause of this issue lies in the fact that the same image (referenced by digest) is used multiple times in the release but as different components. Example in release 4.15.38 that I tested, `quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf7fa8cad688bd513c6672260ed5fb2154ae8c7daa00872c16001d2905e9bede` can be found 44 times in the image-references file. The delete-images.yaml file generated will contain things like: ```yaml - imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf7fa8cad688bd513c6672260ed5fb2154ae8c7daa00872c16001d2905e9bede imageReference: docker://sherinefedora:5000/44448/openshift/release:4.15.38-s390x-aws-cloud-controller-manager type: ocpReleaseContent - imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf7fa8cad688bd513c6672260ed5fb2154ae8c7daa00872c16001d2905e9bede imageReference: docker://sherinefedora:5000/44448/openshift/release:4.15.38-s390x-aws-cluster-api-controllers type: ocpReleaseContent - imageName: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf7fa8cad688bd513c6672260ed5fb2154ae8c7daa00872c16001d2905e9bede imageReference: docker://sherinefedora:5000/44448/openshift/release:4.15.38-s390x-aws-ebs-csi-driver type: ocpReleaseContent ``` Therefore, the first delete will succeed, but the second one on-wards will fail. The fix consists in adding a map in the concurrentBatch worker, that keeps track of images deleted by their origin reference (the digest), so that we only delete such an image once, regardless of whether it is recognized by multiple tags at the destination. Fixes OCPBUGS-44448( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: architectures: - \"s390x\" channels: - name: stable-4.15 type: ocp ``` At the time of the test, the latest OCP release in stable 4.15 was 4.15.38. I performed M2D+D2M+DeleteGenerate+Delete Expected Outcome No errors in any steps"
  },
  {
    "id": "959",
    "type": "pullRequest",
    "title": "OCPBUGS-43731,OCPBUGS-44836:Ability to generate delete-images.yaml with v1 tags",
    "body": "Description This PR attempts to provide a way forward for customers who are looking to use oc-mirror v2 delete functionality for cleaning up artifacts previously mirrored with oc-mirror v1. For images referenced by digest, and not by tag, v1 and v2 both attribute a tag to prevent the mirrored image from being deleted because it's not referenced. But they do so in a different way: for operator images v1 uses oc underneath, which applies a hash( on the complete image reference v2 uses the digest as the hash for release images: both v1 and v2 use the tagging convension for release components for helm charts v1 uses `latest` v2 uses a combination of digest algorithm and digest (`sha256-23242534546`) for additional images v1 uses `latest` v2 uses the image digest In order to force oc-mirror v2 to generate v1-like tags, the user can now use the flag `--delete-v1-images` . This tag is only allowed for the delete workflow, and MUST be combined with the `--generate` flag. See below for the steps to delete v1 mirrored operators. Fixes OCPBUGS-43731( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Step1 use v1 to do a mirror to mirror ```bash $ ./bin/oc-mirror -c config_logs/bugs.yaml docker://localhost:5000/43731 --dest-skip-tls --dest-use-http ``` with the following ISC ```yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v1alpha2 mirror: operators: - catalog: registry.redhat.io/redhat/redhat-operator-index:v4.15 packages: - name: sandboxed-containers-operator platform: channels: - name: stable-4.17 helm: repositories: - name: sbo url: additionalImages: List of additional images to be included in imageset - name: registry.redhat.io/ubi8/ubi@sha256:d497966ce214138de5271eef321680639e18daf105ae94a6bff54247d8a191a3 ``` :warning: Keep the mapping.txt for later use for verification purposes. Step2 use v2 for a mirror to disk starting from the mirrored catalog ```bash ./bin/oc-mirror --v2 -c config_logs/bugs.yaml docker://sherinefedora:5000/43731 --workspace file:///home/skhoury/clid261d ``` with the following ISC ```yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: sherinefedora:5000/43731/redhat/redhat-operator-index:v4.15 packages: - name: sandboxed-containers-operator platform: channels: - name: stable-4.17 helm: repositories: - name: sbo url: additionalImages: List of additional images to be included in imageset - name: registry.redhat.io/ubi8/ubi@sha256:d497966ce214138de5271eef321680639e18daf105ae94a6bff54247d8a191a3 ``` :eyes: Notice that the catalog used is coming from the mirror registry: in fact, redhat catalog tags are updated almost every day, and the v4.15 mirrored last month will probably contain different image digests than the v4.15 of today. Step3 use v2 to generate the delete-images.yaml file ```bash ./bin/oc-mirror delete --generate --v2 -c config_logs/bugs.yaml docker://sherinefedora:5000/43731 --workspace file:///home/skhoury/clid261d --delete-v1-images ``` with the following DISC ```yaml kind: DeleteImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 delete: operators: - catalog: sherinefedora:5000/43731/redhat/redhat-operator-index:v4.15 packages: - name: sandboxed-containers-operator platform: channels: - name: stable-4.17 helm: repositories: - name: sbo url: additionalImages: List of additional images to be included in imageset - name: registry.redhat.io/ubi8/ubi@sha256:d497966ce214138de5271eef321680639e18daf105ae94a6bff54247d8a191a3 ``` Expected Outcome The images found in the v1 mapping.txt file should all also be found in delete-images.yaml (except the catalog image) ```bash for i in `cat /home/skhoury/clid261d/working-dir/delete/delete-images.yaml .imageReference| cut -d: -f4`; do grep $i oc-mirror-workspace/results-1732188843/mapping.txt ; done ```"
  },
  {
    "id": "963",
    "type": "pullRequest",
    "title": "OCPBUGS-44818: Fix mirroring catalogs with full:true",
    "body": "Description Also fixes the spinner staying stuck when errors happen during collection of operators. Introduces a `ToRebuild`(bool) to the `CatalogFilterResult` struct, which is used to handover catalogs between the collection phase and the rebuild phase. With this flag, the catalogs in full:true (no need for rebuild) will be skipped at the rebuild phase. A benefit from this commit is to save time by not rebuilding catalogs that are already rebuilt in a previous mirroring. Fixes OCPBUGS-44818( Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? M2D + D2M / M2M with ```yaml kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: operators: - catalog: quay.io/skhoury/light-catalog:latest full: true ``` Expected Outcome Success"
  },
  {
    "id": "966",
    "type": "pullRequest",
    "title": "OCPBUGS-42862: oc-mirror fails to find the image-references",
    "body": "Description This fix addresses the issue when an mirroring using \"_internal oc-mirror reserved or key words_\" as an example release-images in the destination or --from paths Fixes OCPBUGS-42862 Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Use the following cli ``` bin/oc-mirror --config ocpbugs-42862.yaml file://ocpbugs-42862/release-images --v2 ``` If somehow the client does a m2d and then copies the tar to a directory in the enclave and calls it with a keyword (as an example below - it should also fail) ``` bin/oc-mirror --config ocpbugs-42862.yaml --from file:///home/lzuccarelli/some-new-directory/release-images docker://localhost:5000/ocpbugs-42862 --dry-run --v2 ``` Expected Outcome Should fail (in both cases indicated above) ``` 2024/11/28 16:10:34 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2024/11/28 16:10:34 INFO : \u2699\ufe0f setting up the environment for you... 2024/11/28 16:10:34 ERROR : the destination contains an internal oc-mirror keyword 'release-images' ``` And in the second case ``` 2024/11/28 16:15:38 INFO : \ud83d\udc4b Hello, welcome to oc-mirror 2024/11/28 16:15:38 INFO : \u2699\ufe0f setting up the environment for you... 2024/11/28 16:15:38 ERROR : the path set in --from flag contains an internal oc-mirror keyword 'release-images' ```"
  },
  {
    "id": "962",
    "type": "pullRequest",
    "title": "OCPBUGS-44789: Fix mirroring OCI catalogs multiple times",
    "body": "Description The catalog reference used for oci catalogs should remain the original one for multiple reasons: firstly, this reference is the one found in the ISC , and that executor.RebuildCatalogs will use to find the filtered catalog from map CatalogToFBCMap secondly, because the OCI image copied into the working-dir is transformed into a single arch one! so when batch is going to mirror from that location, we will start mirroring mono-arch instead of multi-arch Fixes OCPBUGS-44789 Type of change Please delete options that are not relevant. - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? m2d + d2m as well as m2m multiple times for the imagesetconfig shared in OCPBUGS-44789 Expected Outcome no errors"
  },
  {
    "id": "961",
    "type": "pullRequest",
    "title": "OCPBUGS-44033: Failed to mirror ocp payload using digest",
    "body": "Description This bugfix addresses the issue when mirroring a release that use a digest rather than a tag Fixes OCPBUGS-44033 Type of change - x Bug fix (non-breaking change which fixes an issue) - New feature (non-breaking change which adds functionality) - Breaking change (fix or feature that would cause existing functionality to not work as expected) - This change requires a documentation update How Has This Been Tested? Use the following isc ``` kind: ImageSetConfiguration apiVersion: mirror.openshift.io/v2alpha1 mirror: platform: release: registry.ci.openshift.org/ocp/release@sha256:0fb444ec9bb1b01f06dd387519f0fe5b4168e2d09a015697a26534fc1565c5e7 ``` Execute a simple m2m command ``` bin/oc-mirror --config ocpbugs-44033.yaml --workspace file://ocpbugs-44033 docker://localhost:5000/ocpbugs-44033 --v2 --dest-tls-verify=false ``` Expected Outcome Mirroring should not fail ``` ... 2024/11/26 16:27:07 INFO : Mirroring is ongoing. No errors. \u2713 177/190 : (2s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:cf24f7665d164b2e3072ddb22a3410ba802bf19d5c67638a84bc5faf4452f1fa \u2713 178/190 : (4s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8e9c384093ed57093afd85831b0b932e8f7d54b6db3fe76ded349034d6e1c739 \u2713 179/190 : (3s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e0c6795c4a1c47da7a1308840a924044cdfb8df3c56f760e8c099ad5d750d33a \u2713 180/190 : (3s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b038d74748371a5f828725fd1811f7c1069583c52c68832fd149b1dadfaa984b \u2713 181/190 : (3s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e6a12ce366320476be0f57d369871b9411043513c4fcd8e539df22329e8a1875 \u2713 182/190 : (2s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6303cf83d18dbc6ab715c6706d12c8423119f036b71bcfe5558ca9a5a9fa82ad \u2713 183/190 : (3s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2915ddea2c7c0dd6c9a3fce0c7d9e4bcc8eaf94aa6638a2f439995d447165614 \u2713 184/190 : (9s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e20c4652cec4d6dbc099888cc64470759bf75ffd7146e5142b2fad18a71b637a 2024/11/26 16:27:16 INFO : Mirroring is ongoing. No errors. \u2713 185/190 : (13s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d07a34786003bec5a112bce8b17c4c3fc6a11af7dfa28330257bbd3921b4291a \u2713 186/190 : (9s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7d3bd3b48ba2c71c736a756a017893e18cb2e4844d7eacbf516e2a16b654e106 \u2713 187/190 : (5s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d130ddc2af17753a89bc57a03cf8ce09098ecea619916e2805b389a7eeff24f4 \u2713 188/190 : (4s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ca9469f7b970be7a7e7a0d89070b5aac982b7313d1d2461c9dd045b4844ac71c \u2713 189/190 : (6s) quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:bf5afce4ddfc76dc8e85ff5b416f56136f8582892d4453a130d7f5a411b4b916 \u2713 190/190 : (2s) registry.ci.openshift.org/ocp/release@sha256:0fb444ec9bb1b01f06dd387519f0fe5b4168e2d09a015697a26534fc1565c5e7 2024/11/26 16:27:29 INFO : === Results === 2024/11/26 16:27:29 INFO : \u2705 190 / 190 release images mirrored successfully 2024/11/26 16:27:29 INFO : \ud83d\udcc4 Generating IDMS file... 2024/11/26 16:27:29 INFO : ocpbugs-44033/working-dir/cluster-resources/idms-oc-mirror.yaml file created 2024/11/26 16:27:29 INFO : \ud83d\udcc4 No images by tag were mirrored. Skipping ITMS generation. 2024/11/26 16:27:29 INFO : \ud83d\udcc4 No catalogs mirrored. Skipping CatalogSource file generation. 2024/11/26 16:27:29 INFO : mirror time : 2m15.603468848s 2024/11/26 16:27:29 INFO : \ud83d\udc4b Goodbye, thank you for using oc-mirror ```"
  },
  {
    "id": "322",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@a7ab445( Geiger( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@cbfd655( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@0e1005d( Short( Chan-Tse openshift/operator-framework-operator-controller@181bad3( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "315",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@543f099( Tofel( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@3d2f87e( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@189753e( Short( Chan-Tse openshift/operator-framework-operator-controller@ad55882( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "312",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@c54b571( Bump urllib3 from 2.3.0 to 2.4.0 (1915)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@53257d9( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@5e224f7( Short( Chan-Tse This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "309",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@76da454( Bump helm.sh/helm/v3 from 3.17.2 to 3.17.3 (1913)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@33fd97a( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@d09063d( Short( Chan-Tse This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "308",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@0bcdd61( Bump github.com/prometheus/client_golang (1909)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@a7251b1( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@02b3fd6( Short( Chan-Tse This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "306",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@1f0b4f2( Goncalves da Silva( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@f3dbb99( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@e958af7( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "305",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@d3aec37( Bump mkdocs-material from 9.6.10 to 9.6.11 (1888)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@502824d( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@049971e( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "303",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@db164cc( Keister( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@6439776( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@508b72a( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "300",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@a2ae8b8( Keister( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@8d22019( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@6fed7bd( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "299",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@19eacb0( Bump platformdirs from 4.3.6 to 4.3.7 (1877)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@1cc99d4( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@c4343e2( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "298",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@0c87596( Bump github.com/BurntSushi/toml from 1.4.0 to 1.5.0 (1872)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@07c012f( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@c93410a( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "294",
    "type": "pullRequest",
    "title": "OCPBUGS-52616,OCPBUGS-52267,OCPBUGS-53019: Synchronize From Upstream Repositories through PR1871",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@ef348ee( Macedo( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@9894278( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@31180a2( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge"
  },
  {
    "id": "290",
    "type": "pullRequest",
    "title": "OCPBUGS-23055: Synchronize From Upstream Repositories through PR1811",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@7fc18c6( Gottipati( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@da85ed1( &lt;carry&gt;: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@c253c24( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label do-not-merge/hold"
  },
  {
    "id": "285",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@63472e0( Keister( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@98ab61b( &lt;carry&gt;: Add OpenShift specific files( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "282",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@01755a8( Ochieng( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@f9e1fad( &lt;carry&gt;: Add OpenShift specific files( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "279",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@a6de9f9( Bump github.com/containerd/containerd from 1.7.25 to 1.7.26 (1819)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@c6daebf( &lt;carry&gt;: Add OpenShift specific files( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "278",
    "type": "pullRequest",
    "title": "OCPBUGS-52928,OCPBUGS-52929: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@1573846( Tofel( The `vendor/` directory has been updated and the following commits were carried: The following commits have been squashed into a single commit Commit Message - - openshift/operator-framework-operator-controller@c5c26c9( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@012f18b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@904ddf8( Tofel( Radchuk openshift/operator-framework-operator-controller@7105ba6( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@d394ab1( Rinis( Automation Release Team2025-02-24 20:17:16 openshift/operator-framework-operator-controller@5a127f2( Short( Automation Release Team2025-02-24 20:17:18UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-24 20:17:20 openshift/operator-framework-operator-controller@c3f1b01( Lanford( Radchuk openshift/operator-framework-operator-controller@d1ba78e( Short( Short openshift/operator-framework-operator-controller@0031460( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-24 20:17:27 openshift/operator-framework-operator-controller@c076e2d( Radchuk( Automation Release Team2025-02-24 20:17:31UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-24 20:17:33UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-24 20:17:36UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-24 20:17:39UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-24 20:17:44UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-24 20:17:49UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-24 20:17:54UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-24 20:17:59UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-24 20:18:04UPSTREAM: &lt;carry&gt;: Enable OCP metrics collection by default Date Author - - 2025-02-26 12:05:14Todd Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label kind/sync /hold"
  },
  {
    "id": "277",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@4ecef20( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@97de94b( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@56abfd3( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@3bd47c5( Tofel( Radchuk openshift/operator-framework-operator-controller@28bd1c9( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@bf85c97( Rinis( Automation Release Team2025-02-21 00:06:33 openshift/operator-framework-operator-controller@610d216( Short( Automation Release Team2025-02-21 00:06:35UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-21 00:06:37 openshift/operator-framework-operator-controller@f090802( Lanford( Radchuk openshift/operator-framework-operator-controller@bc15b7f( Short( Short openshift/operator-framework-operator-controller@6cdfd9b( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-21 00:06:45 openshift/operator-framework-operator-controller@f513e60( Radchuk( Automation Release Team2025-02-21 00:06:49UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-21 00:06:51UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-21 00:06:54UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-21 00:06:57UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-21 00:07:01UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-21 00:07:06UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-21 00:07:10UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-21 00:07:15UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-21 00:07:19UPSTREAM: &lt;carry&gt;: Enable OCP metrics collection by default| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "276",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@9b888eb( Bump mkdocs-material from 9.6.4 to 9.6.5 (1797)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@a2acd64( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@2f83cef( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1f30805( Tofel( Radchuk openshift/operator-framework-operator-controller@bd97e39( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@92c6db2( Rinis( Automation Release Team2025-02-19 13:48:48 openshift/operator-framework-operator-controller@df7df81( Short( Automation Release Team2025-02-19 13:52:50UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-19 13:54:28 openshift/operator-framework-operator-controller@feb8a55( Lanford( Radchuk openshift/operator-framework-operator-controller@4c5a432( Short( Short openshift/operator-framework-operator-controller@7a5d16f( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-19 14:01:26 openshift/operator-framework-operator-controller@ea0cf9f( Radchuk( Automation Release Team2025-02-19 14:01:33UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-19 14:02:40UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-19 14:04:43UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-19 14:09:10UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-19 14:09:16UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-19 14:09:21UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-19 14:09:27UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-19 14:09:33UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-19 14:09:39UPSTREAM: &lt;carry&gt;: Enable OCP metrics collection by default| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "273",
    "type": "pullRequest",
    "title": "OPRUN-3722: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@7040ee2( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@d265155( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@f25a7ee( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@948290f( Tofel( Radchuk openshift/operator-framework-operator-controller@8c61a88( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@528bff5( Rinis( Automation Release Team2025-02-19 00:03:50 openshift/operator-framework-operator-controller@581711d( Short( Automation Release Team2025-02-19 00:03:52UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-19 00:03:53 openshift/operator-framework-operator-controller@f72b0b7( Lanford( Radchuk openshift/operator-framework-operator-controller@f032fc6( Short( Short openshift/operator-framework-operator-controller@94af975( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-19 00:03:59 openshift/operator-framework-operator-controller@c73f10b( Radchuk( Automation Release Team2025-02-19 00:04:02UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-19 00:04:03UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-19 00:04:05UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-19 00:04:07UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-19 00:04:11UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-19 00:04:14UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-19 00:04:17UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-19 00:04:20UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-19 00:04:24UPSTREAM: &lt;carry&gt;: Enable OCP metrics collection by default| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label kind/sync"
  },
  {
    "id": "271",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@dd4d61f( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@e039281( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@ebf6821( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@23f360e( Tofel( Radchuk openshift/operator-framework-operator-controller@f9f69db( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@7295326( Rinis( Automation Release Team2025-02-15 00:06:47 openshift/operator-framework-operator-controller@b013015( Short( Automation Release Team2025-02-15 00:06:49UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-15 00:06:51 openshift/operator-framework-operator-controller@46333da( Lanford( Radchuk openshift/operator-framework-operator-controller@a89ce1b( Short( Short openshift/operator-framework-operator-controller@3a4cdb8( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-15 00:06:57 openshift/operator-framework-operator-controller@3375c71( Radchuk( Automation Release Team2025-02-15 00:07:01UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-15 00:07:03UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-15 00:07:05UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-15 00:07:08UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-15 00:07:11UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-15 00:07:15UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-15 00:07:19UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-15 00:07:23UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-15 00:07:26UPSTREAM: &lt;carry&gt;: Enable OCP metrics collection by default| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "270",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@7f00b13( Geiger( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@4fdff7c( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@108c608( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b36f4c5( Tofel( Radchuk openshift/operator-framework-operator-controller@96d7acd( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@440edbc( Rinis( Automation Release Team2025-02-14 03:34:56 openshift/operator-framework-operator-controller@8f41215( Short( Automation Release Team2025-02-14 03:34:58UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-02-14 03:35:00 openshift/operator-framework-operator-controller@8878255( Lanford( Radchuk openshift/operator-framework-operator-controller@c70140e( Short( Short openshift/operator-framework-operator-controller@50fc05a( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-02-14 03:35:06 openshift/operator-framework-operator-controller@09a39ce( Radchuk( Automation Release Team2025-02-14 03:35:09UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-02-14 03:35:10UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-02-14 03:35:12UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-02-14 03:35:15UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-02-14 03:35:18UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-02-14 03:35:22UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-14 03:35:26UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-14 03:35:31UPSTREAM: &lt;carry&gt;: Skip another upstream test2025-02-14 20:24:42UPSTREAM: &lt;carry&gt;: Cleanup openshift/Makefile by removing no longer required comments regards catalogd e2e tests| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "266",
    "type": "pullRequest",
    "title": "OCPBUGS-45195: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@ee8d821( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@175526f( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@bd1db05( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f916bb8( Tofel( Radchuk openshift/operator-framework-operator-controller@88e3b7a( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f9cbaea( Rinis( Automation Release Team2025-01-20 14:12:29 openshift/operator-framework-operator-controller@772ca01( Short( Automation Release Team2025-01-20 14:12:33UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-01-20 14:12:35 openshift/operator-framework-operator-controller@5f96299( Lanford( Radchuk openshift/operator-framework-operator-controller@5979c2f( Short( Short openshift/operator-framework-operator-controller@bb379ed( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-01-20 14:12:45 openshift/operator-framework-operator-controller@52c8800( Radchuk( Automation Release Team2025-01-20 14:12:51UPSTREAM: &lt;carry&gt;: Add support for proxy trustedCAs2025-01-20 15:01:16UPSTREAM: &lt;carry&gt;: Fix make verify for mac os envs2025-01-22 19:26:23UPSTREAM: &lt;carry&gt;: Upgrade OCP images from 4.18 to 4.192025-01-23 19:56:34UPSTREAM: &lt;carry&gt;: resolve issue with pre-mature mounting of trusted CA configmap2025-01-24 19:27:44UPSTREAM: &lt;carry&gt;: fixup catalogd.Dockerfile paths2025-01-28 17:52:39UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-03 16:17:17UPSTREAM: &lt;carry&gt;: use projected volume for CAs to avoid subPath limitations2025-02-13 07:01:59UPSTREAM: &lt;carry&gt;: Skip another upstream test| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "224",
    "type": "pullRequest",
    "title": "NO-ISSUE: Manual Synchronize from upstream",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@7a6fa07( Goncalves da Silva( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@87c45ae( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@87fd867( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a972172( Tofel( Radchuk openshift/operator-framework-operator-controller@1208c5f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fc63a69( Rinis( Automation Release Team2025-01-08 11:27:55 openshift/operator-framework-operator-controller@914df6b( Short( Automation Release Team2025-01-08 11:28:00UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-01-08 11:28:02 openshift/operator-framework-operator-controller@75fa53b( Lanford( Radchuk openshift/operator-framework-operator-controller@f01c815( Short( Short openshift/operator-framework-operator-controller@3d1aed1( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-01-08 11:28:13 openshift/operator-framework-operator-controller@c5549f0( Radchuk( Automation Release Team2025-01-08 11:28:19UPSTREAM: &lt;carry&gt;: generate and mount service-ca server cert| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label kind/sync"
  },
  {
    "id": "216",
    "type": "pullRequest",
    "title": "OCPBUGS-48294: (Manual) Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@5b5ccab( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@b3f6af1( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@c850c4b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@bae5f4d( Tofel( Radchuk openshift/operator-framework-operator-controller@fcc2e64( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@7d2ed01( Rinis( Automation Release Team2025-01-06 11:37:00 openshift/operator-framework-operator-controller@9c14cc5( Short( Automation Release Team2025-01-06 11:38:34UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2025-01-06 11:38:50 openshift/operator-framework-operator-controller@6f12a85( Lanford( Radchuk openshift/operator-framework-operator-controller@657169b( Short( Short openshift/operator-framework-operator-controller@c508578( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2025-01-06 11:43:34 openshift/operator-framework-operator-controller@9a1b812( Radchuk( Automation Release Team2025-01-06 12:08:45UPSTREAM: &lt;carry&gt;: generate and mount service-ca server cert| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label kind/sync"
  },
  {
    "id": "214",
    "type": "pullRequest",
    "title": "NO-ISSUE: (Manual) Synchronize From Upstream Repositories"
  },
  {
    "id": "212",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@45f86cb( Macedo( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5a561ae( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@662f405( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@2e0f0f7( Tofel( Radchuk openshift/operator-framework-operator-controller@78f9e25( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@dcd919f( Rinis( Automation Release Team2024-12-12 00:04:54 openshift/operator-framework-operator-controller@de56e75( Short( Automation Release Team2024-12-12 00:04:56UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-12-12 00:04:58 openshift/operator-framework-operator-controller@cae8868( Lanford( Radchuk openshift/operator-framework-operator-controller@621c7f6( Short( Short openshift/operator-framework-operator-controller@dcdbce3( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-12-12 00:05:04 openshift/operator-framework-operator-controller@afe6c1e( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "210",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@610fff9( Bump the k8s-dependencies group with 2 updates (1516)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@120f48d( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@5f5a202( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1868ed5( Tofel( Radchuk openshift/operator-framework-operator-controller@56e5016( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b9880b7( Rinis( Automation Release Team2024-12-11 00:05:11 openshift/operator-framework-operator-controller@a579f45( Short( Automation Release Team2024-12-11 00:05:13UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-12-11 00:05:14 openshift/operator-framework-operator-controller@8bb3e5d( Lanford( Radchuk openshift/operator-framework-operator-controller@afd0e64( Short( Short openshift/operator-framework-operator-controller@a91903f( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-12-11 00:05:23 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "209",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@d50385e( Bump mkdocs-material from 9.5.47 to 9.5.48 (1513)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ad19b09( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@e908f4d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@9214112( Tofel( Radchuk openshift/operator-framework-operator-controller@6366226( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@6132602( Rinis( Automation Release Team2024-12-04 00:06:20 openshift/operator-framework-operator-controller@65007d0( Short( Automation Release Team2024-12-04 00:06:22UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-12-04 00:06:23 openshift/operator-framework-operator-controller@6a3345c( Lanford( Radchuk openshift/operator-framework-operator-controller@649a226( Short( Short openshift/operator-framework-operator-controller@45f7bbf( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-12-04 00:06:29 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "207",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@e51c0c2( Bump mkdocs-material from 9.5.46 to 9.5.47 (1508)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@9344d9d( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@3193a28( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@e6c8bfd( Tofel( Radchuk openshift/operator-framework-operator-controller@aeef76d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c258d62( Rinis( Automation Release Team2024-12-03 00:04:32 openshift/operator-framework-operator-controller@e6f20be( Short( Automation Release Team2024-12-03 00:04:34UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-12-03 00:04:36 openshift/operator-framework-operator-controller@96af236( Lanford( Radchuk openshift/operator-framework-operator-controller@ef316b9( Short( Short openshift/operator-framework-operator-controller@26e93e3( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-12-03 00:04:41 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "205",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@c22b12d( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@7285d3d( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@7a77b78( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@86feabc( Tofel( Radchuk openshift/operator-framework-operator-controller@997a6e2( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@7379245( Rinis( Automation Release Team2024-11-29 00:04:59 openshift/operator-framework-operator-controller@35594eb( Short( Automation Release Team2024-11-29 00:05:01UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-29 00:05:03 openshift/operator-framework-operator-controller@1ecf992( Lanford( Radchuk openshift/operator-framework-operator-controller@bbca97d( Short( Short openshift/operator-framework-operator-controller@f42c088( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-29 00:05:09 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "204",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@a3946d2( Palmer( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@2a5265e( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@5162f43( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@aaa8a3d( Tofel( Radchuk openshift/operator-framework-operator-controller@9028d69( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@17824c1( Rinis( Automation Release Team2024-11-27 15:31:58 openshift/operator-framework-operator-controller@48e4b00( Short( Automation Release Team2024-11-27 15:32:01UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-27 15:32:03 openshift/operator-framework-operator-controller@9efad34( Lanford( Radchuk openshift/operator-framework-operator-controller@f0c10f2( Short( Short openshift/operator-framework-operator-controller@ea45d5d( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-27 15:32:11 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "203",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@bdef5c4( Bump github.com/Masterminds/semver/v3 from 3.3.0 to 3.3.1 (1485)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@e69a7f5( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@d8586fa( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@34ab48c( Tofel( Radchuk openshift/operator-framework-operator-controller@d595cd9( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b7772f5( Rinis( Automation Release Team2024-11-27 00:05:30 openshift/operator-framework-operator-controller@dd2ee89( Short( Automation Release Team2024-11-27 00:05:32UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-27 00:05:34 openshift/operator-framework-operator-controller@e6b60b1( Lanford( Radchuk openshift/operator-framework-operator-controller@f8a4d7d( Short( Short openshift/operator-framework-operator-controller@cf24b0b( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-27 00:05:40UPSTREAM: &lt;carry&gt;: namespace: use privileged PSA for audit and warn levels| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "202",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@2b4c083( Palmer( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@3ed3887( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@964be0a( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@343d57c( Tofel( Radchuk openshift/operator-framework-operator-controller@21c15b2( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@2c8ff32( Rinis( Automation Release Team2024-11-26 00:04:07 openshift/operator-framework-operator-controller@bfcf693( Short( Automation Release Team2024-11-26 00:04:09UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-26 00:04:11 openshift/operator-framework-operator-controller@7b09757( Lanford( Radchuk openshift/operator-framework-operator-controller@be8e15e( Short( Short openshift/operator-framework-operator-controller@09c9066( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-26 00:04:16UPSTREAM: &lt;carry&gt;: namespace: use privileged PSA for audit and warn levels| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "199",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@b9294a7( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@7c88901( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@6a61c39( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@7ad4aa2( Tofel( Radchuk openshift/operator-framework-operator-controller@a5fa501( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@5e09895( Rinis( Automation Release Team2024-11-23 00:04:31 openshift/operator-framework-operator-controller@a7a481a( Short( Automation Release Team2024-11-23 00:04:33UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-23 00:04:34 openshift/operator-framework-operator-controller@a3fd94b( Lanford( Radchuk openshift/operator-framework-operator-controller@151ff77( Short( Short openshift/operator-framework-operator-controller@f362ef6( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-23 00:04:40UPSTREAM: &lt;carry&gt;: namespace: use privileged PSA for audit and warn levels| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "195",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@c8179f3( Khanna( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@abce510( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@51ad745( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@9e09d11( Tofel( Radchuk openshift/operator-framework-operator-controller@90e9536( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@cc5743f( Rinis( Automation Release Team2024-11-19 00:04:51 openshift/operator-framework-operator-controller@10d2652( Short( Automation Release Team2024-11-19 00:04:53UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-19 00:04:54 openshift/operator-framework-operator-controller@f5e0d55( Lanford( Radchuk openshift/operator-framework-operator-controller@0f6b9ce( Short( Short openshift/operator-framework-operator-controller@4d1290e( &lt;carry&gt;: Add e2e registry Dockerfile( &lt;carry&gt;: add nodeSelector and tolerations to operator-controller deployment via kustomize patch2024-11-22 04:46:41UPSTREAM: &lt;carry&gt;: namespace: use privileged PSA for audit and warn levels| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "193",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@e5820ae( Khanna( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@86b1264( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@c432c06( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@388115c( Tofel( Radchuk openshift/operator-framework-operator-controller@fbfe6fa( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@d47a849( Rinis( Automation Release Team2024-11-15 16:03:27 openshift/operator-framework-operator-controller@6e6d1de( Short( Automation Release Team2024-11-15 16:03:30UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-15 16:03:31 openshift/operator-framework-operator-controller@514dffb( Lanford( Radchuk openshift/operator-framework-operator-controller@608c4e5( Short( Short openshift/operator-framework-operator-controller@dee0bcb( &lt;carry&gt;: Add e2e registry Dockerfile| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "189",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@63ef902( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@adc4047( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@b56cd54( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@8d940e6( Tofel( Radchuk openshift/operator-framework-operator-controller@b5453b1( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f2d07e3( Rinis( Automation Release Team2024-11-13 13:08:22 openshift/operator-framework-operator-controller@2111299( Short( Automation Release Team2024-11-13 13:08:26UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-13 13:08:29 openshift/operator-framework-operator-controller@2cd2beb( Lanford( Radchuk openshift/operator-framework-operator-controller@e19a40d( Short( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "190",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/catalogd@2f96c57( Goncalves da Silva( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-catalogd@9d65f48( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-catalogd@26adfce( Automation Release Team( Automation Release Team2024-11-08 00:04:53UPSTREAM: &lt;carry&gt;: update owners2024-11-08 00:04:54UPSTREAM: &lt;carry&gt;: manifests: set required-scc for openshift workloads2024-11-08 00:04:55UPSTREAM: &lt;carry&gt;: Update manifest generation for catalogd2024-11-08 00:04:56UPSTREAM: &lt;carry&gt;: add openshift kustomize overlay2024-11-08 00:04:57UPSTREAM: &lt;carry&gt;: Fix webhook manifest generation2024-11-08 00:04:59UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-08 00:05:00UPSTREAM: &lt;carry&gt;: Add hostPath mount for /var/lib/kubelet2024-11-08 00:05:01 openshift/operator-framework-catalogd@06fb1c8( Radchuk( Lanford openshift/operator-framework-catalogd@3299411( Tofel( Tofel openshift/operator-framework-catalogd@f223d9f( Short( Lanford openshift/operator-framework-catalogd@3f08439( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge"
  },
  {
    "id": "188",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@6bda277( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@743133f( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@e6e9cd7( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@15682ea( Tofel( Radchuk openshift/operator-framework-operator-controller@22b8897( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@3210ea8( Rinis( Automation Release Team2024-11-05 09:29:54 openshift/operator-framework-operator-controller@e4d8b39( Short( Automation Release Team2024-11-05 09:29:58UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-05 09:30:01 openshift/operator-framework-operator-controller@23e5885( Lanford( Radchuk openshift/operator-framework-operator-controller@805c848( Short( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "187",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@cfd4bec( Bump github.com/onsi/gomega from 1.34.2 to 1.35.1 (1422)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@fe37a1e( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@93c7d9f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f83948f( Tofel( Radchuk openshift/operator-framework-operator-controller@20e8e6e( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ecd0e1c( Rinis( Automation Release Team2024-11-01 00:03:30 openshift/operator-framework-operator-controller@75305e0( Short( Automation Release Team2024-11-01 00:03:31UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-11-01 00:03:33 openshift/operator-framework-operator-controller@9022137( Lanford( Radchuk openshift/operator-framework-operator-controller@c67a9d7( Short( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework /label tide/merge-method-merge /label kind/sync"
  },
  {
    "id": "184",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@cd0b096( Bump github.com/fsnotify/fsnotify from 1.7.0 to 1.8.0 (1420)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@8121071( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@beff1cd( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@aec1f5f( Tofel( Radchuk openshift/operator-framework-operator-controller@31e1422( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@16f42c0( Rinis( Automation Release Team2024-10-30 14:04:12 openshift/operator-framework-operator-controller@98327e2( Short( Automation Release Team2024-10-30 14:04:14UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-30 14:04:15 openshift/operator-framework-operator-controller@44f9dab( Lanford( Radchuk openshift/operator-framework-operator-controller@7f55e90( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "183",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@87dfebe( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@9b7a170( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@ee37036( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fd53008( Tofel( Radchuk openshift/operator-framework-operator-controller@f29b7b3( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@be83a75( Rinis( Automation Release Team2024-10-30 00:06:08 openshift/operator-framework-operator-controller@8ce5912( Short( Automation Release Team2024-10-30 00:06:10UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-30 00:06:11 openshift/operator-framework-operator-controller@594d5ea( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "182",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@5f8f202( Bump pymdown-extensions from 10.11.2 to 10.12 (1415)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@9c4dfb8( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@604b224( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@d754c58( Tofel( Radchuk openshift/operator-framework-operator-controller@14abaa7( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fdd18fd( Rinis( Automation Release Team2024-10-29 00:06:46 openshift/operator-framework-operator-controller@b7625c5( Short( Automation Release Team2024-10-29 00:06:48UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-29 00:06:50 openshift/operator-framework-operator-controller@a44cd03( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "181",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@5713012( Bump github.com/operator-framework/operator-registry (1412)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5e4e872( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@a77eaea( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@8525d16( Tofel( Radchuk openshift/operator-framework-operator-controller@92ab057( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@121933f( Rinis( Automation Release Team2024-10-26 00:04:53 openshift/operator-framework-operator-controller@77bffb6( Short( Automation Release Team2024-10-26 00:04:55UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-26 00:04:57 openshift/operator-framework-operator-controller@a12f56e( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "179",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@07ed131( Bump mkdocs-material from 9.5.41 to 9.5.42 (1398)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@baad6a6( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@3c71f02( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ff063f7( Tofel( Radchuk openshift/operator-framework-operator-controller@5d4659b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1dab236( Rinis( Automation Release Team2024-10-25 00:06:19 openshift/operator-framework-operator-controller@e6840f7( Short( Automation Release Team2024-10-25 00:06:21UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-25 00:06:22 openshift/operator-framework-operator-controller@d445719( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "178",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@f88400c( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@bf84b22( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@faef13a( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ad4542b( Tofel( Radchuk openshift/operator-framework-operator-controller@e3d2603( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@951d924( Rinis( Automation Release Team2024-10-24 00:06:55 openshift/operator-framework-operator-controller@9043db2( Short( Automation Release Team2024-10-24 00:06:58UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-24 00:07:01 openshift/operator-framework-operator-controller@c7df747( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@1cb254c( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@8d24066( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@1987445( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@22d57c1( Tofel( Radchuk openshift/operator-framework-operator-controller@1c9cc46( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@8b007b2( Rinis( Automation Release Team2024-10-23 00:04:25 openshift/operator-framework-operator-controller@8f2e829( Short( Automation Release Team2024-10-23 00:04:27UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-23 00:04:29 openshift/operator-framework-operator-controller@5ff1ff9( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "176",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@6f42274( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@36ffb34( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@9673702( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ef6af7f( Tofel( Radchuk openshift/operator-framework-operator-controller@aebd3ec( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@abb6d2c( Rinis( Automation Release Team2024-10-22 00:04:27 openshift/operator-framework-operator-controller@ad3a8f8( Short( Automation Release Team2024-10-22 00:04:29UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-22 00:04:31 openshift/operator-framework-operator-controller@847251f( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@b60477e( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@4f82ee0( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@f518cb3( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@0b60513( Tofel( Radchuk openshift/operator-framework-operator-controller@f3f1589( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a0a5547( Rinis( Automation Release Team2024-10-19 00:05:30 openshift/operator-framework-operator-controller@1cd02e0( Short( Automation Release Team2024-10-19 00:05:32UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-19 00:05:33 openshift/operator-framework-operator-controller@c2e8e6d( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "174",
    "type": "pullRequest",
    "title": "OCPBUGS-43348: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@31bafb4( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ed4d16d( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@9727356( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1fd1b29( Tofel( Radchuk openshift/operator-framework-operator-controller@7aa1fa9( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@914f009( Rinis( Automation Release Team2024-10-18 00:05:02 openshift/operator-framework-operator-controller@79a9267( Short( Automation Release Team2024-10-18 00:05:04UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-18 00:05:06 openshift/operator-framework-operator-controller@c77d51c( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "173",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@3083879( Bump mkdocs-material from 9.5.40 to 9.5.41 (1381)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@6b69533( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@4557a0e( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a8a37e9( Tofel( Radchuk openshift/operator-framework-operator-controller@2b03a64( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@6be2861( Rinis( Automation Release Team2024-10-17 00:04:03 openshift/operator-framework-operator-controller@a997e66( Short( Automation Release Team2024-10-17 00:04:05UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-17 00:04:06 openshift/operator-framework-operator-controller@a541ad9( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "172",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@8e0efaa( Radchuk( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@2b9a46b( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@42b2e1e( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4ccad4c( Tofel( Radchuk openshift/operator-framework-operator-controller@a87fd49( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c36c1e7( Rinis( Automation Release Team2024-10-16 00:05:01 openshift/operator-framework-operator-controller@b78743c( Short( Automation Release Team2024-10-16 00:05:03UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-16 00:05:04 openshift/operator-framework-operator-controller@25a34a0( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "171",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@b7674d8( Bump helm.sh/helm/v3 from 3.16.1 to 3.16.2 (1364)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ae80f39( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@264361b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f316a5c( Tofel( Radchuk openshift/operator-framework-operator-controller@d143446( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b6239ee( Rinis( Automation Release Team2024-10-14 14:15:28 openshift/operator-framework-operator-controller@084f6e6( Short( Automation Release Team2024-10-14 14:15:30UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-14 14:15:31 openshift/operator-framework-operator-controller@317cc19( Lanford( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "170",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@e5ecec7( Radchuk( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@0c018f0( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@98b4b5c( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fea0a6e( Tofel( Radchuk openshift/operator-framework-operator-controller@ab09765( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@83ae8bd( Rinis( Automation Release Team2024-10-12 00:04:05 openshift/operator-framework-operator-controller@2bccde8( Short( Automation Release Team2024-10-12 00:04:07UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-12 00:04:08 openshift/operator-framework-operator-controller@d401501( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "169",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@78b586a( Bump mkdocs-material from 9.5.39 to 9.5.40 (1363)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5db59c2( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@05bd6d4( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@456eb31( Tofel( Radchuk openshift/operator-framework-operator-controller@8432f38( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4747c49( Rinis( Automation Release Team2024-10-11 00:04:28 openshift/operator-framework-operator-controller@e740a43( Short( Automation Release Team2024-10-11 00:04:31UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-11 00:04:33 openshift/operator-framework-operator-controller@2ccf015( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "168",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@f2715c3( Wu( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@8614b2e( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@4601354( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@5c24425( Tofel( Radchuk openshift/operator-framework-operator-controller@521c074( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b0e4710( Rinis( Automation Release Team2024-10-10 00:05:30 openshift/operator-framework-operator-controller@690a8a1( Short( Automation Release Team2024-10-10 00:05:33UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-10 00:05:34 openshift/operator-framework-operator-controller@4660db5( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "167",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@8558349( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@9bdb309( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@aa6ba89( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c72b1cb( Tofel( Radchuk openshift/operator-framework-operator-controller@627d9de( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@5e246db( Rinis( Automation Release Team2024-10-08 14:29:08 openshift/operator-framework-operator-controller@0db5729( Short( Automation Release Team2024-10-08 14:29:11UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-08 14:29:13 openshift/operator-framework-operator-controller@7085252( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "165",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@dd1730a( Mohanty( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@710c370( &lt;carry&gt;: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@8d663c5( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@e3c721e( Tofel( Radchuk openshift/operator-framework-operator-controller@4b7867f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@9b5873b( Rinis( Automation Release Team2024-10-07 18:55:03 openshift/operator-framework-operator-controller@ebf6114( Short( Automation Release Team2024-10-07 18:55:06UPSTREAM: &lt;carry&gt;: manifests: add hostPath mount for /etc/containers2024-10-07 18:55:07 openshift/operator-framework-operator-controller@ab39ca9( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "164",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@5097435( Bump pymdown-extensions from 10.11.1 to 10.11.2 (1326)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@616bebf( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@ff3506c( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@0377ddb( Tofel( Radchuk openshift/operator-framework-operator-controller@1a0eb14( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a5cde9e( Rinis( Automation Release Team2024-10-04 00:05:12 openshift/operator-framework-operator-controller@32689a0( Short( Automation Release Team2024-10-04 00:05:15UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-10-04 00:05:16 openshift/operator-framework-operator-controller@6303df5( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "163",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@814bf63( Goncalves da Silva( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@bfefac1( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@775719e( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f52242a( Tofel( Radchuk openshift/operator-framework-operator-controller@baabd3d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@19aea39( Rinis( Automation Release Team2024-10-03 00:06:48 openshift/operator-framework-operator-controller@29a4799( Short( Automation Release Team2024-10-03 00:06:50UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-10-03 00:06:51 openshift/operator-framework-operator-controller@fef4cae( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "162",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@801388a( Bump github.com/containers/common from 0.60.2 to 0.60.4 (1325)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@b61d63b( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@e1cca03( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@83182d1( Tofel( Radchuk openshift/operator-framework-operator-controller@5be4d3b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a0abd23( Rinis( Automation Release Team2024-10-02 13:14:26 openshift/operator-framework-operator-controller@6bfad85( Short( Automation Release Team2024-10-02 13:14:29UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-10-02 13:14:31 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@de17da9( Khanna( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@205b5c5( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@2fb9386( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@3dbf198( Tofel( Radchuk openshift/operator-framework-operator-controller@5633bec( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@741f9b0( Rinis( Automation Release Team2024-10-01 00:04:59 openshift/operator-framework-operator-controller@25353c6( Short( Automation Release Team2024-10-01 00:05:01UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-10-01 00:05:03 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "160",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@9125118( Geiger( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@d54d9d4( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@2df39e9( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ac80571( Tofel( Radchuk openshift/operator-framework-operator-controller@21f0e98( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c6bda64( Rinis( Automation Release Team2024-09-30 09:22:31 openshift/operator-framework-operator-controller@e9d1389( Short( Automation Release Team2024-09-30 09:22:36UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-09-30 09:22:38 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "158",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@f169414( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@0f8b8c3( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@736de31( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@92d35d4( Tofel( Radchuk openshift/operator-framework-operator-controller@eebd175( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c4c56d9( Rinis( Automation Release Team2024-09-27 00:05:44 openshift/operator-framework-operator-controller@258b025( Short( Automation Release Team2024-09-27 00:05:47UPSTREAM: carry: manifests: add hostPath mount for /etc/containers2024-09-27 00:05:48 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "153",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@8699d25( Devan Oza Remove the Resolved status condition (1312) openshift/operator-framework-operator-controller@26273f7( Greene( Automation Release Team2024-09-26 00:04:22UPSTREAM: carry: Add pointer to tooling README2024-09-26 00:04:23UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with openshift/operator-framework-operator-controller@fdf2d1e( Radchuk( Rinis openshift/operator-framework-operator-controller@0a8034e( Automation Release Team( carry: add everettraven to approvers+reviewers2024-09-26 00:04:26UPSTREAM: carry: Add tmshort to approvers2024-09-26 00:04:27UPSTREAM: carry: Properly copy and call kustomize2024-09-26 12:04:09 openshift/operator-framework-operator-controller@ddffae9( Bhattacharjee This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "150",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@679e4ab( Palmer( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@4352ffa( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@d73eaee( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fdbcd2a( Tofel( Radchuk openshift/operator-framework-operator-controller@26fd116( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@7da949c( Rinis( Automation Release Team2024-09-25 00:03:25 openshift/operator-framework-operator-controller@d7fb0e5( Short( Automation Release Team2024-09-25 00:03:27UPSTREAM: carry: Properly copy and call kustomize| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "149",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@eea61cf( Mohanty( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@357b90b( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@dfc518f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4370490( Tofel( Radchuk openshift/operator-framework-operator-controller@aa76c10( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ef0c57b( Rinis( Automation Release Team2024-09-21 00:05:43 openshift/operator-framework-operator-controller@263a92f( Short( Automation Release Team2024-09-24 16:07:26UPSTREAM: carry: Properly copy and call kustomize| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "147",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@62b5c53( Peter Enable mermaid.js (1290) openshift/operator-framework-operator-controller@ec57470( Greene( Automation Release Team2024-09-20 13:13:38UPSTREAM: carry: Add pointer to tooling README2024-09-20 13:13:40UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with openshift/operator-framework-operator-controller@db2e5c5( Radchuk( Rinis openshift/operator-framework-operator-controller@54079d3( Automation Release Team( carry: add everettraven to approvers+reviewers2024-09-20 13:13:47UPSTREAM: carry: Add tmshort to approvers| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "145",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@dc4141a( Tofel( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@7c923b3( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@200c902( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4cf676a( Tofel( Radchuk openshift/operator-framework-operator-controller@8fb8949( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@9b3e3b8( Rinis( Automation Release Team2024-09-20 00:05:43 openshift/operator-framework-operator-controller@ff5cf5d( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "144",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@f3e2ce0( Tofel Reorganize developer documentation (1279) openshift/operator-framework-operator-controller@138c7a0( Greene( Automation Release Team2024-09-19 00:05:37UPSTREAM: carry: Add pointer to tooling README2024-09-19 00:05:38UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with openshift/operator-framework-operator-controller@48a4b02( Radchuk( Rinis openshift/operator-framework-operator-controller@8dc0550( Automation Release Team( carry: add everettraven to approvers+reviewers2024-09-19 00:05:42UPSTREAM: carry: Add tmshort to approvers| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "143",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@df0e848( Bump platformdirs from 4.3.3 to 4.3.6 (1280)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@cf36288( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@d80ff57( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@0409c06( Tofel( Radchuk openshift/operator-framework-operator-controller@5e91d37( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@d970d7b( Rinis( Automation Release Team2024-09-18 00:05:18 openshift/operator-framework-operator-controller@54c387f( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@06424ef( Radchuk( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ed16bcc( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@e4586ea( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b0a3af7( Tofel( Radchuk openshift/operator-framework-operator-controller@6128b2d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@ce4d9ff( Rinis( Automation Release Team2024-09-17 08:05:07 openshift/operator-framework-operator-controller@f373534( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "140",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@33f6abf( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@972efb7( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@7b8ae00( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@5e14524( Tofel( Radchuk openshift/operator-framework-operator-controller@a30fe8d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c1320a6( Rinis( Automation Release Team2024-09-14 00:04:29 openshift/operator-framework-operator-controller@0306e98( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "139",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@188858c( Franz( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@96815dd( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@f47d35b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@d55b76c( Tofel( Radchuk openshift/operator-framework-operator-controller@319d714( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@9e5de76( Rinis( Automation Release Team2024-09-13 00:04:51 openshift/operator-framework-operator-controller@eb488d9( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@3e2a884( Franz( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@aa06e58( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@89bc665( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@a4c9cce( Tofel( Radchuk openshift/operator-framework-operator-controller@b37c0d9( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c4121f0( Rinis( Automation Release Team2024-09-12 17:36:08 openshift/operator-framework-operator-controller@0ac98db( Short This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "137",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@d1adabd( Tofel Merge tilt info into developer.md (1255) openshift/operator-framework-operator-controller@fdcbb63( Greene( Automation Release Team2024-09-11 10:59:34UPSTREAM: carry: Add pointer to tooling README2024-09-11 10:59:36UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with openshift/operator-framework-operator-controller@790adec( Radchuk( Rinis openshift/operator-framework-operator-controller@6cc5adb( Automation Release Team( carry: add everettraven to approvers+reviewers2024-09-11 10:59:42UPSTREAM: carry: Add tmshort to approvers| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "135",
    "type": "pullRequest",
    "title": "OCPBUGS-38153,OCPBUGS-38155,OPRUN-3510: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@9491b59( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@de07dac( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@b707d7c( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@3d5a478( Tofel( Radchuk openshift/operator-framework-operator-controller@37f3bfb( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@23e9ae2( Rinis( Automation Release Team2024-08-30 00:02:16 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "133",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@04ee036( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ac0d04e( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@6c2426f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@93f3742( Tofel( Radchuk openshift/operator-framework-operator-controller@a9ce14f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@e2de7cf( Rinis( Automation Release Team2024-08-28 00:02:02 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "132",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@1c6a839( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@2fbf8ba( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@949684a( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@83ea278( Tofel( Radchuk openshift/operator-framework-operator-controller@eddf901( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@aca217e( Rinis( Automation Release Team2024-08-20 00:01:41 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "131",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@13efcd0( Short( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@c32da9e( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@4b211fe( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@184734a( Tofel( Radchuk openshift/operator-framework-operator-controller@09da09f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@3478db0( Rinis( Automation Release Team2024-08-19 00:01:21 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "130",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@74959d0( Franz( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5f816d4( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@78788d1( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c25d1f9( Tofel( Radchuk openshift/operator-framework-operator-controller@7488d2b( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@267473f( Rinis( Automation Release Team2024-08-17 00:01:44 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "129",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@83d24c5( Bump helm.sh/helm/v3 from 3.15.3 to 3.15.4 (1121)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@c45ebf0( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@2e4c26d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@6d21de1( Tofel( Radchuk openshift/operator-framework-operator-controller@f7d8fff( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@02e25b6( Rinis( Automation Release Team2024-08-16 00:02:49 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@cdf0a8a( Mohanty( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@241df57( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@d89f022( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@46c22cf( Tofel( Radchuk openshift/operator-framework-operator-controller@97aaccd( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@75211ea( Rinis( Automation Release Team2024-08-14 00:02:16 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "127",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@368fd7c( Rizza( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@f40b9c8( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@1e12314( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@b7133c4( Tofel( Radchuk openshift/operator-framework-operator-controller@02c6d65( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@fd0039f( Rinis( Automation Release Team2024-08-13 00:02:17 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "126",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@c48e446( Bump watchdog from 4.0.1 to 4.0.2 (1107)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@ca18e06( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@b9174c6( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@c1d736e( Tofel( Radchuk openshift/operator-framework-operator-controller@8887019( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@e13b875( Rinis( Automation Release Team2024-08-10 00:02:11 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "125",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@2490a01( Bump babel from 2.15.0 to 2.16.0 (1106)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@d2a4ae2( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@9f18a55( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@f68e855( Tofel( Radchuk openshift/operator-framework-operator-controller@a0c1005( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4eb744a( Rinis( Automation Release Team2024-08-08 00:01:47 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "124",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@baac660( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5325fdd( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@95ea610( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@43ddc04( Tofel( Radchuk openshift/operator-framework-operator-controller@d4ff874( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1f00bb2( Rinis( Automation Release Team2024-08-06 10:27:27 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "123",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@cb9ea00( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@3928ed0( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@6f9fe2d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@37cd896( Tofel( Radchuk openshift/operator-framework-operator-controller@7de1ca0( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@4746830( Rinis( Automation Release Team2024-08-02 00:02:30 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "121",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@989a3df( Geiger( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@161edef( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@920a66e( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@0dfc016( Tofel( Radchuk openshift/operator-framework-operator-controller@be05a6f( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@0da1371( Rinis( Automation Release Team2024-07-18 00:02:47 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "119",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@6cd022e( Lanford( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@6a1a81f( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@e1186cf( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@1a60d1b( Tofel( Radchuk openshift/operator-framework-operator-controller@34bdb29( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@50ae2dd( Rinis( Automation Release Team2024-07-12 00:01:39 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "118",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@9167715( Bump helm.sh/helm/v3 from 3.15.2 to 3.15.3 (1035)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@3427e56( carry: Add OpenShift specific files( Greene openshift/operator-framework-operator-controller@32c502d( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@aae1cf7( Tofel( Radchuk openshift/operator-framework-operator-controller@3f20c55( Automation Release Team( Radchuk openshift/operator-framework-operator-controller@59bf360( Rinis( Automation Release Team2024-07-10 09:44:33 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "117",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The downstream repository has been updated through the following upstream commit: Commit Message - - operator-framework/operator-controller@db5a75c( Bump google.golang.org/grpc from 1.64.0 to 1.64.1 (1029)( The `vendor/` directory has been updated and the following commits were carried: Commit Message - - openshift/operator-framework-operator-controller@5d35825( carry: Add OpenShift specific files( Short openshift/operator-framework-operator-controller@d26e6e4( Greene( Automation Release Team2024-07-09 14:00:49UPSTREAM: carry: Add pointer to tooling README2024-07-09 14:00:50UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with openshift/operator-framework-operator-controller@125cf5e( Radchuk( Rinis openshift/operator-framework-operator-controller@49337bf( Automation Release Team( carry: add everettraven to approvers+reviewers| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed."
  },
  {
    "id": "115",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@18a8b05( carry: Add OpenShift specific files( Short operator-framework/@0caa8f8( Greene( Automation Release Team2024-07-08 23:48:27UPSTREAM: carry: Add pointer to tooling README2024-07-08 23:48:27UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with operator-framework/@099c9e5( Radchuk( Rinis operator-framework/@007ec12( Automation Release Team( carry: add everettraven to approvers+reviewers| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "114",
    "type": "pullRequest",
    "title": "OCPBUGS-36476,OCPBUGS-36471: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@4607558( carry: Add OpenShift specific files( Greene operator-framework/@06a6297( Automation Release Team( Radchuk operator-framework/@628d91f( Tofel( Radchuk operator-framework/@98482b9( Automation Release Team( Radchuk operator-framework/@63934a8( Rinis( Automation Release Team2024-06-18 20:17:58 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "111",
    "type": "pullRequest",
    "title": "OCPBUGS-36582,OCPBUGS-34989: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@2b11eb0( carry: Add OpenShift specific files( Greene operator-framework/@2c3ae14( Automation Release Team( Radchuk operator-framework/@ca8f4eb( Tofel( Radchuk operator-framework/@1e3b473( Automation Release Team( Radchuk operator-framework/@9d0ffb4( Rinis( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.17 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@b1f1388( carry: Add OpenShift specific files( Greene operator-framework/@7c2b870( Automation Release Team( Radchuk operator-framework/@1134a9a( Tofel( Radchuk operator-framework/@2da68bc( Automation Release Team( Radchuk operator-framework/@2cf282b( Rinis( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.17 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "109",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@cce1d44( carry: Add OpenShift specific files( Greene operator-framework/@caf4e52( Automation Release Team( Radchuk operator-framework/@10e0fcd( Tofel( Radchuk operator-framework/@569f4fa( Automation Release Team( Radchuk operator-framework/@fcd1408( Rinis( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.17 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "108",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@f004a76( carry: Add OpenShift specific files( Greene operator-framework/@e2d6ca6( Automation Release Team( Radchuk operator-framework/@6bd06f2( Tofel( Radchuk operator-framework/@8d93545( Automation Release Team( Radchuk operator-framework/@076bc1c( Rinis( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.17 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "107",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@fe5b73e( carry: Add OpenShift specific files( Greene operator-framework/@dcc2af1( Automation Release Team( Radchuk operator-framework/@18ae78e( Tofel( Radchuk operator-framework/@ec3cc5a( Automation Release Team( Radchuk operator-framework/@b3d4bff( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "106",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@ec8601f( carry: Add OpenShift specific files( Greene operator-framework/@cb8852c( Automation Release Team( Radchuk operator-framework/@d3d2d73( Tofel( Radchuk operator-framework/@dda3a6e( Automation Release Team( Radchuk operator-framework/@f49d90f( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "104",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@f35294b( carry: Add OpenShift specific files( Greene operator-framework/@2f155cc( Automation Release Team( Radchuk operator-framework/@5c7bb00( Tofel( Radchuk operator-framework/@91a2c3e( Automation Release Team( Radchuk operator-framework/@8df268f( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "103",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@f5730e9( carry: Add OpenShift specific files( Greene operator-framework/@fa39f96( Automation Release Team( Radchuk operator-framework/@053e935( Tofel( Radchuk operator-framework/@bbfb96d( Automation Release Team( Radchuk operator-framework/@5741d0e( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "102",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@d450be3( carry: Add OpenShift specific files( Greene operator-framework/@5197be7( Automation Release Team( Radchuk operator-framework/@1e14fdf( Tofel( Radchuk operator-framework/@017516d( Automation Release Team( Radchuk operator-framework/@4a9d85d( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "101",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@a831774( carry: Add OpenShift specific files( Greene operator-framework/@1ba4bc7( Automation Release Team( Radchuk operator-framework/@83def4d( Tofel( Radchuk operator-framework/@395fd76( Automation Release Team( Radchuk operator-framework/@a1ca98e( Rinis This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@c805494( carry: Add OpenShift specific files( Greene operator-framework/@61b8f0e( Automation Release Team( Radchuk operator-framework/@c57f152( Tofel( Radchuk operator-framework/@4ca9db1( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "OCPBUGS-31459: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@8c9b4cd( carry: Add OpenShift specific files( Greene operator-framework/@274094b( Automation Release Team( Radchuk operator-framework/@f2afbda( Tofel( Radchuk operator-framework/@2c86aca( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "94",
    "type": "pullRequest",
    "title": "OPRUN-3268: Add pointer to tooling README for downstreaming info",
    "body": "To make the downstream repos self explanatory we need to link to the information about how the downstreaming process works."
  },
  {
    "id": "89",
    "type": "pullRequest",
    "title": "OCPBUGS-31285: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16",
    "body": "Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-olm-operator-controller.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "92",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@12d4c79( carry: Add OpenShift specific files( Greene operator-framework/@a6d1e0f( Automation Release Team( Radchuk This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "91",
    "type": "pullRequest",
    "title": "NO-ISSUE: UPSTREAM: carry: update owners",
    "body": "Remove alumni from owners Add m1kola to approvers"
  },
  {
    "id": "90",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@26bee91( carry: Add OpenShift specific files( Greene operator-framework/@fb91ae4( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "88",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@fbc2939( carry: Add OpenShift specific files( Greene operator-framework/@d9266fd( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "86",
    "type": "pullRequest",
    "title": "OCPBUGS-31285: Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16",
    "body": "Updating ose-olm-operator-controller-container image to be consistent with ART for 4.16 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-olm-operator-controller.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "87",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@db12f5f( carry: Add OpenShift specific files( Greene operator-framework/@ac14695( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "84",
    "type": "pullRequest",
    "title": "OCPBUGS-30526: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@e1c8847( carry: Add OpenShift specific files( Greene operator-framework/@9b81c4a( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "83",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@dbb1f9b( carry: Add OpenShift specific files( Greene operator-framework/@4068c5e( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "82",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@ed0e413( carry: Add OpenShift specific files( Greene operator-framework/@8986268( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@bfc6c67( carry: Add OpenShift specific files( Greene operator-framework/@3eb4352( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "80",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@dbb26cf( carry: Add OpenShift specific files( Greene operator-framework/@ee28abc( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "79",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@a24d76e( carry: Add OpenShift specific files( Greene operator-framework/@4fd9219( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "78",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@84f067e( carry: Add OpenShift specific files( Greene operator-framework/@bb163f0( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@b784910( carry: Add OpenShift specific files( Greene operator-framework/@09de3cf( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "76",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@8d627e3( carry: Add OpenShift specific files( Greene operator-framework/@568f78e( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "75",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@c4eddd8( carry: Add OpenShift specific files( Greene operator-framework/@5e13234( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "74",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@7fb5d99( carry: Add OpenShift specific files( Greene operator-framework/@312f3db( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "73",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@7c1e947( carry: Add OpenShift specific files( Greene operator-framework/@3c4de91( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "72",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@dff24f5( carry: Add OpenShift specific files( Greene operator-framework/@025f6fd( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "70",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@c32d5d1( carry: Add OpenShift specific files( Greene operator-framework/@70122fa( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "67",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@96a14c4( carry: Add OpenShift specific files( Greene operator-framework/@b5dc027( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "66",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@2a6d394( carry: Add OpenShift specific files( Greene operator-framework/@61cf67f( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "65",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@ef4dbaa( carry: Add OpenShift specific files( Greene operator-framework/@a6c6555( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "64",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@d02f83f( carry: Add OpenShift specific files( Greene operator-framework/@95ed958( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "63",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@4ab33be( carry: Add OpenShift specific files( Greene operator-framework/@a9a07fd( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "62",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@9b19045( carry: Add OpenShift specific files( Greene operator-framework/@8cddaa8( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "61",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@63f4b88( carry: Add OpenShift specific files( Greene operator-framework/@cedb021( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "60",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@bf277f3( carry: Add OpenShift specific files( Greene operator-framework/@0b9c0e6( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "59",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@47b9dc8( carry: Add OpenShift specific files( Greene operator-framework/@cd7f3b9( Automation Release Team|UPSTREAM: carry: Updating ose-olm-operator-controller-container image to be consistent with ART Reconciling with This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "51",
    "type": "pullRequest",
    "title": "OCPBUGS-24795: Updating ose-olm-operator-controller-container image to be consistent with ART",
    "body": "Updating ose-olm-operator-controller-container image to be consistent with ART __TLDR__: Product builds replace base and builder images as configured. This PR is to ensure that CI builds use the same base images as the product builds. Component owners, please ensure that this PR merges as it impacts the fidelity of your CI signal. Patch-manager / leads, this PR is a no-op from a product perspective -- feel free to manually apply any labels (e.g. jira/valid-bug) to help the PR merge as long as tests are passing. If the PR is labeled \"needs-ok-to-test\", this is to limit costs for re-testing these PRs while they wait for review. Issue /ok-to-test to remove this tag and help the PR to merge. __Detail__: This repository is out of sync with the downstream product builds for this component. One or more images differ from those being used by ART to create product builds. This should be addressed to ensure that the component's CI testing is accurately reflecting what customers will experience. The information within the following ART component metadata is driving this alignment request: ose-olm-operator-controller.yml( The vast majority of these PRs are opened because a different Golang version is being used to build the downstream component. ART compiles most components with the version of Golang being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift architecture team and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. Downstream builds are already being built with these changes. Merging this PR only improves the fidelity of our CI. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "56",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@661e8c6( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "55",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@4087e65( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "54",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@c880701( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "53",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@2caed81( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "50",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@25c72e0( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "49",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@ef1ef73( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "48",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@7e17fe6( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "47",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@c0b9679( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "46",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@7a14db4( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "41",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/@f67efde( carry: Add OpenShift specific files( Greene This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-runtime /cc @openshift/openshift-team-operator-ecosystem"
  },
  {
    "id": "44",
    "type": "pullRequest",
    "title": "NO-ISSUE: UPSTREAM: drop: Remove GH activities",
    "body": "Remove all GitHub activities from the downstream copy: - Dependabot - Workflows We don't want Dependabot updating dependencies for us downstream, and we don't want any GitHub CI running (that is all done via Prow). Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "37",
    "type": "pullRequest",
    "title": "OPRUN-3081: UPSTREAM: carry: Drop commitchecker"
  },
  {
    "id": "31",
    "type": "pullRequest",
    "title": "OPRUN-3075: Update to Upstream v0.7.0"
  },
  {
    "id": "28",
    "type": "pullRequest",
    "title": "OCPBUGS-20505: Bump golang.org/x/net to v0.17.0"
  },
  {
    "id": "27",
    "type": "pullRequest",
    "title": "OCPBUGS-19096: UPSTREAM: carry: Updating ose-olm-operator-controller images to be consistent with ART",
    "body": "Description Replaces 26 Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "25",
    "type": "pullRequest",
    "title": "Update to upstream v0.3.0"
  },
  {
    "id": "24",
    "type": "pullRequest",
    "title": "Add commitchecker",
    "body": "Adds commit checker"
  },
  {
    "id": "23",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: add manifests to image",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "22",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: add namespace management annotation",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "21",
    "type": "pullRequest",
    "title": "UPSTREAM: 290: Remove Resource Limits (290)",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "20",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: add scheduling preference/priorityClass annotations",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "19",
    "type": "pullRequest",
    "title": "Update main to upstream commit 83d0403"
  },
  {
    "id": "18",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: add USER to openshift dockerfile",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "17",
    "type": "pullRequest",
    "title": "Updating ose-olm-operator-controller images to be consistent with ART",
    "body": "Updating ose-olm-operator-controller images to be consistent with ART __TLDR__: Component owners, please ensure that this PR merges as it impacts the fidelity of your CI signal. Patch-manager / leads, this PR is a no-op from a product perspective -- feel free to manually apply any labels (e.g. jira/valid-bug) to help the PR merge as long as tests are passing. If the PR is labeled \"needs-ok-to-test\", this is to limit costs for re-testing these PRs while they wait for review. Issue /ok-to-test to remove this tag and help the PR to merge. __Detail__: This repository is out of sync with the downstream product builds for this component. One or more images differ from those being used by ART to create product builds. This should be addressed to ensure that the component's CI testing is accurately reflecting what customers will experience. The information within the following ART component metadata is driving this alignment request: ose-olm-operator-controller.yml( The vast majority of these PRs are opened because a different Golang version is being used to build the downstream component. ART compiles most components with the version of Golang being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift architecture team and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `aos-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. Downstream builds are already being built with these changes. Merging this PR only improves the fidelity of our CI. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` If you have any questions about this pull request, please reach out to `@release-artists` in the `aos-art` coreos slack channel."
  },
  {
    "id": "16",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: use image placeholders",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "15",
    "type": "pullRequest",
    "title": "Update to upstream main commit 98b6a9e",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "13",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: conditionally rename manifests",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "14",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: align dockerfile and manifests for bin target",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "12",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: precision target manifest verification",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "5",
    "type": "pullRequest",
    "title": "Update to upstream main commit 3d30ad0",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "1",
    "type": "pullRequest",
    "title": "UPSTREAM: carry: ci-operator",
    "body": "Description !-- Thank you for your contribution! Please provide a summary of the changes and the motivation behind the change. -- Reviewer Checklist - API Go Documentation - Tests: Unit Tests (and E2E Tests, if appropriate) - Comprehensive Commit Messages - Links to related GitHub Issue(s)"
  },
  {
    "id": "475",
    "type": "pullRequest",
    "title": "OCPBUGS-44432: Skip blocked registry check for registries with mirrors",
    "body": "Do not return the blocked error as with the NeverContactSource configuration from IDMS ITMS, the image is not considered blocked. While the actual source from the image specification is blocked when the source gets redirected to the mirrors. Create the ITMS setting NeverContactSource ```yaml apiVersion: config.openshift.io/v1 kind: ImageTagMirrorSet metadata: name: tag-mirror spec: imageTagMirrors: - mirrors: - quay.io source: foo.io mirrorSourcePolicy: NeverContactSource ``` import an image from the source, no blocked error returned ``` $ oc import-image imgstream --from=foo.io/qiwanredhat/busybox:latest --confirm imagestream.image.openshift.io/imgstream imported Name: imgstream Namespace: default Created: Less than a second ago Labels: none Annotations: openshift.io/image.dockerRepositoryCheck=2025-01-10T17:48:07Z Image Repository: image-registry.openshift-image-registry.svc:5000/default/imgstream Image Lookup: local=false Unique Images: 1 Tags: 1 latest tagged from foo.io/qiwanredhat/busybox:latest foo.io/qiwanredhat/busybox@sha256:4f0e11c02c63611ec6aa5ba426f299a8063e130d3e9aedc1bd6c0a13a1bebb3c Less than a second ago Image Name: imgstream:latest Docker Image: foo.io/qiwanredhat/busybox@sha256:4f0e11c02c63611ec6aa5ba426f299a8063e130d3e9aedc1bd6c0a13a1bebb3c Name: sha256:4f0e11c02c63611ec6aa5ba426f299a8063e130d3e9aedc1bd6c0a13a1bebb3c Created: Less than a second ago Annotations: image.openshift.io/dockerLayersOrder=ascending Image Size: 728kB in 2 layers Layers: 728kB sha256:90e01955edcd85dac7985b72a8374545eac617ccdddcc992b732e43cd42534af 32B sha256:a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4 Image Created: 6 years ago Author: none Arch: amd64 Command: sh Working Dir: none User: none Exposes Ports: none Docker Labels: none Environment: PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin ```"
  },
  {
    "id": "495",
    "type": "pullRequest",
    "title": "OCPBUGS-49844: Prevent storage layer retries for methods with side effects."
  },
  {
    "id": "483",
    "type": "pullRequest",
    "title": "OCPBUGS-45861: validate image property isn't nil before using",
    "body": "even though we do not expect these two properties to be nil (Image and Err) we better check them to avoid having panics if something changes in the future. this pr introduces the same guardrails used in two different parts of the code: makes sure we have at least one of `Err` or `Image` properties set."
  },
  {
    "id": "480",
    "type": "pullRequest",
    "title": "OCPBUGS-45861: move on to the next digest/tag during failures",
    "body": "if we fail to process a given tag or digest we should move to the next and not return. if we \"prematurely\" return we may cause some of the tags or digest have their Image pointer nulled, possibly causing a panic."
  },
  {
    "id": "478",
    "type": "pullRequest",
    "title": "OCPBUGS-45861: prevent panic when no image and error are set",
    "body": "in our ci we are seeing a series of panics being generated when we attempt to import some images. it is not clear yet how we end up with a missing image together with a nil error. this pr introduces a check, similar to what has been done for this new check logs the occurence and reports the error back using the cluster resource. this is what panic trace: ``` 2025-01-09T13:15:39.559789879Z E0109 13:15:39.559758 1 audit.go:84 \"Observed a panic\" panic= 2025-01-09T13:15:39.559789879Z runtime error: invalid memory address or nil pointer dereference 2025-01-09T13:15:39.559789879Z goroutine 451090 running: 2025-01-09T13:15:39.559789879Z k8s.io/apiserver/pkg/endpoints/handlers/finisher.finishRequest.func1.1() 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/finisher/finisher.go:105 +0x98 2025-01-09T13:15:39.559789879Z panic({0x51d4180?, 0x83c2430?}) 2025-01-09T13:15:39.559789879Z runtime/panic.go:785 +0x124 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/importer.(ImageStreamImporter).importFromRepository(0x400b998100, {0x5fc2b90, 0x4007a9cf60}, 0x400590cdc0) 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/importer/importer.go:400 +0xc70 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/importer.(ImageStreamImporter).Import(0x400b998100, {0x5fc2b90, 0x4007a9cf60}, 0x400590cdc0, 0x400590da20) 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/importer/importer.go:112 +0x144 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/registry/imagestreamimport.(REST).Create(0x4001bbc240, {0x5fc2b90, 0x4007a9cf60}, {0x5f92ae0, 0x400590cdc0?}, 0x4005906500, 0x0?) 2025-01-09T13:15:39.559789879Z github.com/openshift/openshift-apiserver/pkg/image/apiserver/registry/imagestreamimport/rest.go:337 +0x11d4 2025-01-09T13:15:39.559789879Z k8s.io/apiserver/pkg/endpoints/handlers.(namedCreaterAdapter).Create(0x5f860c0?, {0x5fc2b90?, 0x4007a9cf60?}, {0x400922efc0?, 0x5fc82e0?}, {0x5f92ae0?, 0x400590cdc0?}, 0xffff44427290?, 0x1?) 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/create.go:254 +0x48 2025-01-09T13:15:39.559789879Z k8s.io/apiserver/pkg/endpoints/handlers.CreateResource.createHandler.func1.1() 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/create.go:184 +0xbc 2025-01-09T13:15:39.559789879Z k8s.io/apiserver/pkg/endpoints/handlers.CreateResource.createHandler.func1.2() 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/create.go:209 +0x2e0 2025-01-09T13:15:39.559789879Z k8s.io/apiserver/pkg/endpoints/handlers/finisher.finishRequest.func1() 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/finisher/finisher.go:117 +0x74 2025-01-09T13:15:39.559789879Z created by k8s.io/apiserver/pkg/endpoints/handlers/finisher.finishRequest in goroutine 450991 2025-01-09T13:15:39.559789879Z k8s.io/apiserver@v0.31.1/pkg/endpoints/handlers/finisher/finisher.go:92 +0xa4 ```"
  },
  {
    "id": "376",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55642: Empty proxy variables are causing issues during the build",
    "body": "This is an automated cherry-pick of 373 /assign kunalmemane"
  },
  {
    "id": "365",
    "type": "pullRequest",
    "title": "OCPBUGS-50507: Intermittent authentication issues when accessing OpenShift registry",
    "body": "In some instances, the controller would re-queue an image pull secret in such a way that the check for an expiring token would only occur after the token had expired. This would result in a gap of time in which the pull secret contents would be invalid."
  },
  {
    "id": "366",
    "type": "pullRequest",
    "title": "WRKLDS-1653: bump(k8s): update k8s.io/ dependencies to v1.32.2"
  },
  {
    "id": "355",
    "type": "pullRequest",
    "title": "OCPBUGS-47527: Add team members to the OWNERS file",
    "body": "Add team members to the OWNERS file for PR approvals and reviews"
  },
  {
    "id": "119",
    "type": "pullRequest",
    "title": "OCPBUGS-45624: Updating openshift-state-metrics-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-state-metrics-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-state-metrics.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "361",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "360",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "359",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "358",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "357",
    "type": "pullRequest",
    "title": "OCPCLOUD-2857: Set infrastructureRef.Namespace in Cluster object",
    "body": "Failing to set this breaks from CAPI v1.9 onwards. /hold"
  },
  {
    "id": "352",
    "type": "pullRequest",
    "title": "OSASINFRA-3707: \u26a0\ufe0f Manual sync from release-0.12 on main \u26a0\ufe0f",
    "body": "/hold"
  },
  {
    "id": "356",
    "type": "pullRequest",
    "title": "OSASINFRA-3722: Deploy manifests for CustomNoUpgrade feature set also",
    "body": "As was done for the other providers previously 1. This was achieved by modifying 'kustomization.yaml' and running: make -C openshift generate 1"
  },
  {
    "id": "349",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "348",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "347",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "339",
    "type": "pullRequest",
    "title": "Merge into main"
  },
  {
    "id": "345",
    "type": "pullRequest",
    "title": "OCPBUGS-45387: Updating openstack-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Supersedes"
  },
  {
    "id": "131",
    "type": "pullRequest",
    "title": "OSASINFRA-3746: Consume CA cert from CCO secret",
    "body": "In openshift/cloud-credential-operator/pull/780, we have added the ability for `cloud-credential-operator` to consume a CA cert from the root credentials secret and to include in the credentials secrets it provisions. In openshift/installer/pull/9194, we have modified the Installer to start setting this field where necessary. Adapt MAPO to allow it to start consuming the CA cert from this place. We maintain fallbacks for the previous locations of the cert for now, but these can be removed in the next release. This needs wait for the CCO change to be approved before we merge this. /hold"
  },
  {
    "id": "128",
    "type": "pullRequest",
    "title": "NO-JIRA: Update golang.org/x/net to v0.33.0",
    "body": "as a preemptive measure against CVE-2024-45338."
  },
  {
    "id": "129",
    "type": "pullRequest",
    "title": "NO-JIRA: Upgrade Gophercloud to v1.14.1"
  },
  {
    "id": "130",
    "type": "pullRequest",
    "title": "OCPBUGS-48288: Stop ignoring port.tags field",
    "body": "Drag code out to a separate function, add tests, then start setting the relevant field."
  },
  {
    "id": "127",
    "type": "pullRequest",
    "title": "OCPBUGS-45684: Updating ose-machine-api-provider-openstack-container image to be consistent with ART for 4.19",
    "body": "Updating ose-machine-api-provider-openstack-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-machine-api-provider-openstack.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "994",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@c1b355d( \"CVE-2025-27144: pin go-jose/v4@v4.0.5 (3550)\" (3559)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "993",
    "type": "pullRequest",
    "title": "OCPBUGS-52930,OCPBUGS-52924,OCPBUGS-52923: pin go-jose/v4@v4.0.5",
    "body": "only changed the stagin directory, and not what is actually being vendor-ed in. This PR modifies the top level go.mod file and ensure the correct version of the package is being vendored in for"
  },
  {
    "id": "991",
    "type": "pullRequest",
    "title": "OCPBUGS-52923: Synchronize From Upstream Repositories (with a revert) PR 988 with revert",
    "body": "This is equivalent to PR 988 with revert of 0a6499f53b135ef0605b3fe260207936eda3cb8c The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message ---- ---- operator-framework/operator-lifecycle-manager@8e39ae2( operator-framework/operator-lifecycle-manager@6056602( operator-framework/operator-lifecycle-manager@0a6499f( ( dependabotbot ( CVE-2025-27144( pin go-jose/v4@v4.0.5 (3550) | This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed."
  },
  {
    "id": "986",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@f49dd9b( Bump github.com/containerd/containerd from 1.7.25 to 1.7.27 (3543)( Bump github.com/prometheus/common from 0.62.0 to 0.63.0 (3542)2025-03-18 11:48:21 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "984",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@abd9963( Bump github.com/operator-framework/api from 0.29.0 to 0.30.0 (3534)( Bump sigs.k8s.io/controller-runtime (3533)2025-01-21 08:36:47 operator-framework/api@1ed2691( sigs.k8s.io/controller-runtime from 0.20.0 to 0.20.1 (400)( Dellapenta operator-framework/api@93aa09f( Goncalves da Silva( github.com/spf13/cobra from 1.8.1 to 1.9.1 (406)2025-02-18 07:58:54upgraded golang.org/x/oauth2 v0.23.0 = v0.27.0 (408)2025-03-04 10:07:49upgraded google.golang.org/genproto/googleapis/api v0.0.0-20240826202546-f6391c0de4c7 = v0.0.0-20250303144028-a0af3efb3deb (410)2025-03-04 11:43:48Upgrade controller-gen from v0.17.0 to v0.17.2 (411)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "966",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@efe3a9a( Macedo( Macedo operator-framework/operator-lifecycle-manager@67b3bf6( Macedo( Macedo operator-framework/operator-lifecycle-manager@f31e166( Bump github.com/containers/image/v5 from 5.34.0 to 5.34.1 (3527)( Bump golang.org/x/net from 0.35.0 to 0.37.0 (3537)2025-03-12 14:53:51 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "973",
    "type": "pullRequest",
    "title": "NO-ISSUE: Update DOWNSTREAM owners files"
  },
  {
    "id": "972",
    "type": "pullRequest",
    "title": "OCPBUGS-42526: Ensure that PSA label is latest instead of pinning versions"
  },
  {
    "id": "964",
    "type": "pullRequest",
    "title": "OCPBUGS-52182: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@58773ac( Bump github.com/google/go-cmp from 0.6.0 to 0.7.0 (3523)( Short operator-framework/operator-registry@6d4206d( github.com/otiai10/copy from 1.14.0 to 1.14.1 (1545)( google.golang.org/grpc from 1.68.1 to 1.69.4 (1546)2025-01-14 12:01:27fix bingo-upgrade target (1547)2025-01-14 12:02:41 operator-framework/operator-registry@9b37a90( github.com/grpc-ecosystem/grpc-health-probe from 0.4.36 to 0.4.37 (1551)( google.golang.org/protobuf from 1.36.2 to 1.36.3 (1550)2025-01-16 14:41:52 operator-framework/operator-registry@f4423dc( k8s.io/api from 0.32.0 to 0.32.1 (1552)( github.com/containers/common from 0.61.0 to 0.61.1 (1553)2025-01-17 08:54:22 operator-framework/operator-registry@a67c8e2( sigs.k8s.io/controller-runtime from 0.19.4 to 0.20.0 (1556)( github.com/docker/cli (1558)2025-01-27 07:47:12 operator-framework/operator-registry@87d3879( google.golang.org/protobuf from 1.36.3 to 1.36.4 (1562)( github.com/golang-migrate/migrate/v4 from 4.18.1 to 4.18.2 (1563)2025-01-30 07:57:46 operator-framework/operator-registry@f5a1c54( github.com/containers/common from 0.61.1 to 0.62.0 (1566)( golang.org/x/sys from 0.29.0 to 0.30.0 (1569)2025-02-06 11:39:02 operator-framework/operator-registry@858fe9f( golang.org/x/sync from 0.10.0 to 0.11.0 (1568)( golang.org/x/text from 0.21.0 to 0.22.0 (1571)2025-02-07 09:46:20enable linting and bingo management of the lint tool (1524)2025-02-11 12:05:15 operator-framework/operator-registry@19a457e( Keister( github.com/distribution/distribution/v3 (1580)2025-02-12 13:51:33 operator-framework/operator-registry@f0b5e24( sigs.k8s.io/controller-runtime from 0.20.1 to 0.20.2 (1585)( github.com/spf13/cobra from 1.8.1 to 1.9.1 (1586)2025-02-22 12:32:19 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "963",
    "type": "pullRequest",
    "title": "OCPBUGS-45946: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@59bfe7f( missing pod disruption reasons to isPodDead (3519)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "962",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@7849592( bump github.com/spf13/cobra from 1.8.1 to 1.9.1 (3522)( bump the k8s-dependencies group with 2 updates (3520)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "961",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@f14b11c( Keister( bump k8s.io/apiextensions-apiserver from 0.32.1 to 0.32.2 (3515)2025-02-22 11:17:37 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "952",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@a1a5331( bump k8s.io/component-base from 0.32.0 to 0.32.1 (3496)( bump github.com/prometheus/common from 0.61.0 to 0.62.0 (3492)2025-01-21 11:18:13 operator-framework/operator-lifecycle-manager@f33f7b3( bump k8s.io/apiserver from 0.32.0 to 0.32.1 (3494)( bump github.com/containers/image/v5 from 5.33.0 to 5.33.1 (3498)2025-01-29 08:35:42 operator-framework/operator-lifecycle-manager@30986f7( bump sigs.k8s.io/controller-runtime from 0.19.4 to 0.20.1 (3499)( bump k8s.io/kube-aggregator from 0.32.0 to 0.32.1 (3500)2025-02-04 08:57:41 operator-framework/operator-lifecycle-manager@9b0a59b( bump k8s.io/apiextensions-apiserver from 0.32.0 to 0.32.1 (3506)( bump github.com/containers/image/v5 from 5.33.1 to 5.34.0 (3504)2025-02-11 17:08:24 operator-framework/operator-lifecycle-manager@97c411b( bump golang.org/x/net from 0.34.0 to 0.35.0 (3510)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "937",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@1274d54( Lanford( Goncalves da Silva operator-framework/operator-lifecycle-manager@451e775( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "936",
    "type": "pullRequest",
    "title": "OCPBUGS-48486: Fix concurrent namespace resolution"
  },
  {
    "id": "933",
    "type": "pullRequest",
    "title": "NO-ISSUE: Manual Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@6c8f9c3( Goncalves da Silva( Goncalves da Silva operator-framework/operator-lifecycle-manager@8ba604f( bump github.com/maxbrunsfeld/counterfeiter/v6 (3481)( Pereira operator-framework/operator-lifecycle-manager@b56b038( Goncalves da Silva( Goncalves da Silva operator-framework/operator-lifecycle-manager@8b47a95( Goncalves da Silva( k8s.io/apiextensions-apiserver from 0.31.1 to 0.31.2 (1474)2024-10-30 08:05:27 operator-framework/operator-registry@70aa21e( github.com/onsi/ginkgo/v2 from 2.20.2 to 2.21.0 (1480)( github.com/onsi/gomega from 1.35.0 to 1.35.1 (1483)2024-11-08 15:39:38 operator-framework/operator-registry@ae66625( golang.org/x/sync from 0.8.0 to 0.9.0 (1486)( golang.org/x/mod from 0.21.0 to 0.22.0 (1490)2024-11-12 13:04:11 operator-framework/operator-registry@c81cd5c( golang.org/x/sync from 0.8.0 to 0.9.0 (1486) (1485)( google.golang.org/protobuf from 1.35.1 to 1.35.2 (1494)2024-11-18 10:18:57 operator-framework/operator-registry@ca45189( golang.org/x/net from 0.30.0 to 0.31.0 (1496)( github.com/onsi/ginkgo/v2 from 2.21.0 to 2.22.0 (1499)2024-11-25 09:48:32 operator-framework/operator-registry@33c0963( k8s.io/apiextensions-apiserver from 0.31.2 to 0.31.3 (1504)( github.com/onsi/gomega from 1.35.1 to 1.36.0 (1503)2024-11-28 07:22:31 operator-framework/operator-registry@49a5a74( golang.org/x/sync from 0.9.0 to 0.10.0 (1510)( golang.org/x/text from 0.20.0 to 0.21.0 (1509)2024-12-11 10:45:25 operator-framework/operator-registry@af79109( golang.org/x/sys from 0.27.0 to 0.28.0 (1508)( Macedo operator-framework/operator-registry@8ee8a42( github.com/onsi/gomega from 1.36.0 to 1.36.1 (1515)( Keister operator-framework/operator-registry@fba697e( Tofel( Tofel operator-framework/operator-registry@a0a503e( Tofel( github.com/containers/image/v5 from 5.32.2 to 5.33.0 (1493)2025-01-10 10:30:19 operator-framework/operator-registry@8c2b948( Macedo( Goncalves da Silva operator-framework/operator-registry@a4f9b6b( Goncalves da Silva( Macedo operator-framework/operator-registry@1d7de3a( Macedo( github.com/maxbrunsfeld/counterfeiter/v6 from 6.9.0 to 6.11.2 (1535)2025-01-13 08:21:11 operator-framework/operator-registry@4e776bc( github.com/onsi/ginkgo/v2 from 2.22.0 to 2.22.2 (1536)( Macedo operator-framework/operator-registry@ed8d23b( Macedo( k8s.io/client-go from 0.31.0 to 0.31.1 (362)2024-09-20 08:56:41fix: add missing comment tags for Conditions (365)2024-10-30 08:28:29 operator-framework/api@12f0746( k8s.io/apiextensions-apiserver from 0.31.1 to 0.31.2 (369)( github.com/google/cel-go from 0.20.1 to 0.22.0 (371)2024-11-19 09:40:59 operator-framework/api@eae0d6a( k8s.io/apiextensions-apiserver from 0.31.2 to 0.31.3 (376)( github.com/google/cel-go from 0.22.0 to 0.22.1 (374)2024-12-03 08:16:54:seedling: Bump go to v1.23.0 (358)2025-01-06 10:08:13 operator-framework/api@cbc5604( Goncalves da Silva( Goncalves da Silva operator-framework/api@e8b7796( Goncalves da Silva( Goncalves da Silva operator-framework/api@e1ecd3a( Goncalves da Silva( Macedo operator-framework/api@bd94d97( Macedo true"
  },
  {
    "id": "928",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@25e0255( Thomas( Lanford This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "927",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@6dd708c( bump github.com/onsi/ginkgo/v2 from 2.22.0 to 2.22.2 (3478)( Thomas This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "919",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@b7aa493( bump github.com/onsi/gomega from 1.36.0 to 1.36.1 (3471)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "915",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@cda6f6d( bump github.com/prometheus/common from 0.60.1 to 0.61.0 (3462)( bump github.com/onsi/ginkgo/v2 from 2.21.0 to 2.22.0 (3463)2024-12-13 16:01:28 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "914",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove m1kola from owners"
  },
  {
    "id": "909",
    "type": "pullRequest",
    "title": "OCPBUGS-45420: Updating operator-registry-container image to be consistent with ART for 4.19",
    "body": "Updating operator-registry-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: operator-registry.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "908",
    "type": "pullRequest",
    "title": "OCPBUGS-45396: Updating operator-lifecycle-manager-container image to be consistent with ART for 4.19",
    "body": "Updating operator-lifecycle-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: operator-lifecycle-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "910",
    "type": "pullRequest",
    "title": "OCPBUGS-42815: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@1cfabfe( Keister This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "907",
    "type": "pullRequest",
    "title": "OCPBUGS-45490: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@622a18d( bump github.com/itchyny/gojq from 0.12.16 to 0.12.17 (3454)( bump sigs.k8s.io/controller-runtime from 0.19.2 to 0.19.3 (3453)2024-12-03 09:16:33 operator-framework/operator-lifecycle-manager@3911cac( bump k8s.io/kube-aggregator from 0.31.2 to 0.31.3 (3456)( Krenger This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "906",
    "type": "pullRequest",
    "title": "OCPBUGS-45381: Updating ose-operator-framework-tools-container image to be consistent with ART for 4.19",
    "body": "Updating ose-operator-framework-tools-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-operator-framework-tools.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "904",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@22addd2( Goncalves da Silva This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "903",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@77ce6ff( Goncalves da Silva( bump k8s.io/apiextensions-apiserver from 0.31.2 to 0.31.3 (3449)2024-11-26 11:17:33 This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "899",
    "type": "pullRequest",
    "title": "NO-ISSUE: Synchronize From Upstream Repositories",
    "body": "The staging/ and vendor/ directories have been synchronized from the upstream repositories, pulling in the following commits: Commit Message - - operator-framework/operator-lifecycle-manager@1c09718( bump github.com/containers/image/v5 from 5.32.2 to 5.33.0 (3443)( bump golang.org/x/time from 0.7.0 to 0.8.0 (3444)| This pull request is expected to merge without any human intervention. If tests are failing here, changes must land upstream to fix any issues so that future downstreaming efforts succeed. /cc @openshift/openshift-team-operator-framework"
  },
  {
    "id": "621",
    "type": "pullRequest",
    "title": "OPRUN-3835: Update to 4.19 community-operators catalog",
    "body": "Closes 619"
  },
  {
    "id": "618",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/onsi/ginkgo/v2 from 2.23.0 to 2.23.4",
    "body": "Bumps github.com/onsi/ginkgo/v2( from 2.23.0 to 2.23.4. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v2.23.4/h2 h22.23.4/h2 pPrior to this release Ginkgo would compute the incorrect number of available CPUs when running with code-p/code in a linux container. Thanks to a href=\" for the fix!/p h3Features/h3 ul liAdd automaxprocs for using CPUQuota 2b9c428/li /ul h3Fixes/h3 ul liclarify gotchas about -vet flag 1f59d07/li /ul h3Maintenance/h3 ul libump dependencies 2d134d5/li /ul h2v2.23.3/h2 h22.23.3/h2 h3Fixes/h3 ul liallow code-/code as a standalone argument cfcc1a5/li liBug Fix: Add GinkoTBWrapper.Chdir() and GinkoTBWrapper.Context() feaf292/li liignore exit code for symbol test on linux 88e2282/li /ul h2v2.23.2/h2 h22.23.2/h2 p\ud83c\udf89\ud83c\udf89\ud83c\udf89/p pAt long last, some long-standing performance gaps between codeginkgo/code and codego test/code have been resolved!/p pGinkgo operates by running codego test -c/code to generate test binaries, and then running those binaries. It turns out that the compilation step of codego test -c/code is slower than codego test/code's compilation step because codego test/code strips out debug symbols (codeldflags=-w/code) whereas codego test -c/code does not./p pGinkgo now passes the appropriate codeldflags/code to codego test -c/code when running specs to strip out symbols. This is only done when it is safe to do so and symbols are preferred when profiling is enabled and when codeginkgo build/code is called explicitly./p pThis, coupled, with the a href=\" for disabling XProtect on MacOS/a yields a much better performance experience with Ginkgo./p h2v2.23.1/h2 h22.23.1/h2 h2\ud83d\udea8 For users on MacOS \ud83d\udea8/h2 pA long-standing Ginkgo performance issue on MacOS seems to be due to mac's antimalware XProtect. You can follow the instructions a href=\" to disable it in your terminal. Doing so sped up Ginkgo's own test suite from 1m8s to 47s./p h3Fixes/h3 pGinkgo's CLI is now a bit clearer if you pass flags in incorrectly:/p ul limake it clearer that you need to pass a filename to the various profile flags, not an absolute directory a0e52ff/li liemit an error and exit if the ginkgo invocation includes flags after positional arguments b799d8d/li /ul !-- raw HTML omitted -- /blockquote p... (truncated)/p /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h22.23.4/h2 pPrior to this release Ginkgo would compute the incorrect number of available CPUs when running with code-p/code in a linux container. Thanks to a href=\" for the fix!/p h3Features/h3 ul liAdd automaxprocs for using CPUQuota 2b9c428/li /ul h3Fixes/h3 ul liclarify gotchas about -vet flag 1f59d07/li /ul h3Maintenance/h3 ul libump dependencies 2d134d5/li /ul h22.23.3/h2 h3Fixes/h3 ul liallow code-/code as a standalone argument cfcc1a5/li liBug Fix: Add GinkoTBWrapper.Chdir() and GinkoTBWrapper.Context() feaf292/li liignore exit code for symbol test on linux 88e2282/li /ul h22.23.2/h2 p\ud83c\udf89\ud83c\udf89\ud83c\udf89/p pAt long last, some long-standing performance gaps between codeginkgo/code and codego test/code have been resolved!/p pGinkgo operates by running codego test -c/code to generate test binaries, and then running those binaries. It turns out that the compilation step of codego test -c/code is slower than codego test/code's compilation step because codego test/code strips out debug symbols (codeldflags=-w/code) whereas codego test -c/code does not./p pGinkgo now passes the appropriate codeldflags/code to codego test -c/code when running specs to strip out symbols. This is only done when it is safe to do so and symbols are preferred when profiling is enabled and when codeginkgo build/code is called explicitly./p pThis, coupled, with the a href=\" for disabling XProtect on MacOS/a yields a much better performance experience with Ginkgo./p h22.23.1/h2 h2\ud83d\udea8 For users on MacOS \ud83d\udea8/h2 pA long-standing Ginkgo performance issue on MacOS seems to be due to mac's antimalware XProtect. You can follow the instructions a href=\" to disable it in your terminal. Doing so sped up Ginkgo's own test suite from 1m8s to 47s./p h3Fixes/h3 pGinkgo's CLI is now a bit clearer if you pass flags in incorrectly:/p ul limake it clearer that you need to pass a filename to the various profile flags, not an absolute directory a0e52ff/li liemit an error and exit if the ginkgo invocation includes flags after positional arguments b799d8d/li /ul pThis might cause existing CI builds to fail. If so then it's likely that your CI build was misconfigured and should be corrected. Open an issue if you need help./p /blockquote /details details summaryCommits/summary ul lia href=\" v2.23.4/li lia href=\" bump dependencies/li lia href=\" Add automaxprocs for using CPUQuota/li lia href=\" Revert &quot;Add automaxprocs to automatically match the linux container CPU Quota&quot;/li lia href=\" Add automaxprocs to automatically match the linux container CPU Quota/li lia href=\" maybe escape quotes when you put them in a quoted string./li lia href=\" clarify gotchas about -vet flag/li lia href=\" bump all the things/li lia href=\" v2.23.3/li lia href=\" allow code-/code as a standalone argument/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) /details"
  },
  {
    "id": "617",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/onsi/gomega from 1.36.2 to 1.37.0",
    "body": "Bumps github.com/onsi/gomega( from 1.36.2 to 1.37.0. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v1.37.0/h2 h21.37.0/h2 h3Features/h3 ul liadd To/ToNot/NotTo aliases for AsyncAssertion 5666f98/li /ul h2v1.36.3/h2 h21.36.3/h2 h3Maintenance/h3 ul libump all the things adb8b49/li lichore: replace codeinterface{}/code with codeany/code 7613216/li liBump google.golang.org/protobuf from 1.36.1 to 1.36.5 (a href=\" 9fe5259/li liremove spurious &quot;toolchain&quot; from go.mod (a href=\" a0e85b9/li liBump golang.org/x/net from 0.33.0 to 0.35.0 (a href=\" 604a8b1/li liBump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" 36fbc84/li liBump github-pages from 231 to 232 in /docs (a href=\" ced70d7/li liBump rexml from 3.2.6 to 3.3.9 in /docs (a href=\" c8b4a07/li liBump github.com/onsi/ginkgo/v2 from 2.22.1 to 2.22.2 (a href=\" 06431b9/li liBump webrick from 1.8.1 to 1.9.1 in /docs (a href=\" b55a92d/li liFix typos (a href=\" a1d518b/li /ul /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h21.37.0/h2 h3Features/h3 ul liadd To/ToNot/NotTo aliases for AsyncAssertion 5666f98/li /ul h21.36.3/h2 h3Maintenance/h3 ul libump all the things adb8b49/li lichore: replace codeinterface{}/code with codeany/code 7613216/li liBump google.golang.org/protobuf from 1.36.1 to 1.36.5 (a href=\" 9fe5259/li liremove spurious &quot;toolchain&quot; from go.mod (a href=\" a0e85b9/li liBump golang.org/x/net from 0.33.0 to 0.35.0 (a href=\" 604a8b1/li liBump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" 36fbc84/li liBump github-pages from 231 to 232 in /docs (a href=\" ced70d7/li liBump rexml from 3.2.6 to 3.3.9 in /docs (a href=\" c8b4a07/li liBump github.com/onsi/ginkgo/v2 from 2.22.1 to 2.22.2 (a href=\" 06431b9/li liBump webrick from 1.8.1 to 1.9.1 in /docs (a href=\" b55a92d/li liFix typos (a href=\" a1d518b/li /ul /blockquote /details details summaryCommits/summary ul lia href=\" v1.37.0/li lia href=\" add To/ToNot/NotTo aliases for AsyncAssertion/li lia href=\" v1.36.3/li lia href=\" bump all the things/li lia href=\" chore: replace codeinterface{}/code with codeany/code/li lia href=\" Bump google.golang.org/protobuf from 1.36.1 to 1.36.5 (a href=\" lia href=\" remove spurious &quot;toolchain&quot; from go.mod (a href=\" lia href=\" Bump golang.org/x/net from 0.33.0 to 0.35.0 (a href=\" lia href=\" Bump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" lia href=\" Bump github-pages from 231 to 232 in /docs (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) /details"
  },
  {
    "id": "579",
    "type": "pullRequest",
    "title": "OPRUN-3621: Replace 4.18 image references with 4.19"
  },
  {
    "id": "616",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/fsnotify/fsnotify from 1.8.0 to 1.9.0",
    "body": "Bumps github.com/fsnotify/fsnotify( from 1.8.0 to 1.9.0. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v1.9.0/h2 h3Changes and fixes/h3 ul li pall: make BufferedWatcher buffered again (a href=\" /li li pinotify: fix race when adding/removing watches while a watched path is being deleted (a href=\" a href=\" /li li pinotify: don't send empty event if a watched path is unmounted (a href=\" /li li pinotify: don't register duplicate watches when watching both a symlink and its target; previously that would get &quot;half-added&quot; and removing the second would panic (a href=\" /li li pkqueue: fix watching relative symlinks (a href=\" /li li pkqueue: correctly mark pre-existing entries when watching a link to a dir on kqueue (a href=\" /li li pillumos: don't send error if changed file is deleted while processing the event (a href=\" /li /ul pa href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h21.9.0 2024-04-04/h2 h3Changes and fixes/h3 ul li pall: make BufferedWatcher buffered again (a href=\" /li li pinotify: fix race when adding/removing watches while a watched path is being deleted (a href=\" a href=\" /li li pinotify: don't send empty event if a watched path is unmounted (a href=\" /li li pinotify: don't register duplicate watches when watching both a symlink and its target; previously that would get &quot;half-added&quot; and removing the second would panic (a href=\" /li li pkqueue: fix watching relative symlinks (a href=\" /li li pkqueue: correctly mark pre-existing entries when watching a link to a dir on kqueue (a href=\" /li li pillumos: don't send error if changed file is deleted while processing the event (a href=\" /li /ul pa href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" a href=\" /blockquote /details details summaryCommits/summary ul lia href=\" Release 1.9.0/li lia href=\" Add test to ensure Add()/Remove() works when not reading events/li lia href=\" Fix staticcheck in CI/li lia href=\" Update changelog/li lia href=\" Remove AIX/AHFS from README/li lia href=\" Simplify inotify backend locking/li lia href=\" Test gccgo in CI/li lia href=\" Move some shared code to a shared struct/li lia href=\" Add timeout-minutes in GitHub actions/li lia href=\" Correctly mark pre-existing entries when watching a link to a dir on kqueue/li liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) /details"
  },
  {
    "id": "611",
    "type": "pullRequest",
    "title": "OPRUN-3818: Bump sigs.k8s.io/controller-runtime from 0.20.2 to 0.20.3",
    "body": "!-- Upgrade controller-runtime and, consequently, k8s apis Description of the change: Motivation for the change: Reviewer Checklist - Implementation matches the proposed design, or proposal is updated to match implementation - Sufficient unit test coverage - Sufficient end-to-end test coverage - Docs updated or added to `/docs` - Commit messages sensible and descriptive !-- Note: If this PR is fixing an issue make sure to add a note saying: Closes ISSUE_NUMBER --"
  },
  {
    "id": "605",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/onsi/ginkgo/v2 from 2.22.0 to 2.23.0",
    "body": "Bumps github.com/onsi/ginkgo/v2( from 2.22.0 to 2.23.0. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v2.23.0/h2 h22.23.0/h2 pGinkgo 2.23.0 adds a handful of methods to codeGinkgoT()/code to make it compatible with the codetesting.TB/code interface in Go 1.24. codeGinkgoT().Context()/code, in particular, is a useful shorthand for generating a new context that will clean itself up in a codeDeferCleanup()/code. This has subtle behavior differences from the golang implementation but should make sense in a Ginkgo... um... context./p h3Features/h3 ul libump to go 1.24.0 - support new testing.TB methods and add a test to cover testing.TB regressions 37a511b/li /ul h3Fixes/h3 ul lifix edge case where build -o is pointing at an explicit file, not a directory 7556a86/li liFix binary paths when precompiling multiple suites. 4df06c6/li /ul h3Maintenance/h3 ul liFix: Correct Markdown list rendering in MIGRATING_TO_V2.md cbcf39a/li lidocs: fix test workflow badge (a href=\" 9b261ff/li liBump golang.org/x/net in /integration/_fixtures/version_mismatch_fixture (a href=\" 00f19c8/li liBump golang.org/x/tools from 0.28.0 to 0.30.0 (a href=\" e98a4df/li liBump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" 60cc4e2/li liBump github-pages from 231 to 232 in /docs (a href=\" fea6f2d/li liBump rexml from 3.2.8 to 3.3.9 in /docs (a href=\" 31d7813/li liBump webrick from 1.8.1 to 1.9.1 in /docs (a href=\" fc3bbd6/li liCode linting (a href=\" aee0d56/li lichange interface{} to any (a href=\" 809a710/li /ul h2v2.22.2/h2 h2What's Changed/h2 ul liBump golang.org/x/net from 0.32.0 to 0.33.0 by a href=\" in a href=\" liBump golang.org/x/crypto from 0.17.0 to 0.31.0 in /ginkgo/performance/_fixtures/performance_fixture by a href=\" in a href=\" liBump github.com/onsi/gomega from 1.36.1 to 1.36.2 by a href=\" in a href=\" /ul pstrongFull Changelog/strong: a href=\" h2v2.22.1/h2 h22.22.1/h2 h3Fixes/h3 pFix CSV encoding/p ul liUpdate tests aab3da6/li liProperly encode CSV rows c09df39/li liAdd test case for proper csv escaping 96a80fc/li liAdd meta-test 43dad69/li /ul h3Maintenance/h3 ul liensure .test files are gitignored so we don't accidentally commit compiled tests again c88c634/li liremove golang.org/x/net/context in favour of stdlib context 4df44bf/li /ul /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h22.23.0/h2 pGinkgo 2.23.0 adds a handful of methods to codeGinkgoT()/code to make it compatible with the codetesting.TB/code interface in Go 1.24. codeGinkgoT().Context()/code, in particular, is a useful shorthand for generating a new context that will clean itself up in a codeDeferCleanup()/code. This has subtle behavior differences from the golang implementation but should make sense in a Ginkgo... um... context./p h3Features/h3 ul libump to go 1.24.0 - support new testing.TB methods and add a test to cover testing.TB regressions 37a511b/li /ul h3Fixes/h3 ul lifix edge case where build -o is pointing at an explicit file, not a directory 7556a86/li liFix binary paths when precompiling multiple suites. 4df06c6/li /ul h3Maintenance/h3 ul liFix: Correct Markdown list rendering in MIGRATING_TO_V2.md cbcf39a/li lidocs: fix test workflow badge (a href=\" 9b261ff/li liBump golang.org/x/net in /integration/_fixtures/version_mismatch_fixture (a href=\" 00f19c8/li liBump golang.org/x/tools from 0.28.0 to 0.30.0 (a href=\" e98a4df/li liBump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" 60cc4e2/li liBump github-pages from 231 to 232 in /docs (a href=\" fea6f2d/li liBump rexml from 3.2.8 to 3.3.9 in /docs (a href=\" 31d7813/li liBump webrick from 1.8.1 to 1.9.1 in /docs (a href=\" fc3bbd6/li liCode linting (a href=\" aee0d56/li lichange interface{} to any (a href=\" 809a710/li /ul h22.22.2/h2 h3Maintenance/h3 ul liBump github.com/onsi/gomega from 1.36.1 to 1.36.2 (a href=\" cc553ce/li liBump golang.org/x/crypto (a href=\" 2170370/li liBump golang.org/x/net from 0.32.0 to 0.33.0 (a href=\" a96c44f/li /ul h22.22.1/h2 h3Fixes/h3 pFix CSV encoding/p ul liUpdate tests aab3da6/li liProperly encode CSV rows c09df39/li liAdd test case for proper csv escaping 96a80fc/li liAdd meta-test 43dad69/li /ul h3Maintenance/h3 ul liensure .test files are gitignored so we don't accidentally commit compiled tests again c88c634/li liremove golang.org/x/net/context in favour of stdlib context 4df44bf/li /ul /blockquote /details details summaryCommits/summary ul lia href=\" v2.23.0/li lia href=\" bump to go 1.24.0 - support new testing.TB methods and add a test to cover te.../li lia href=\" fix edge case where build -o is pointing at an explicit file, not a directory/li lia href=\" Fix binary paths when precompiling multiple suites./li lia href=\" Fix: Correct Markdown list rendering in MIGRATING_TO_V2.md/li lia href=\" docs: fix test workflow badge (a href=\" lia href=\" Bump golang.org/x/net in /integration/_fixtures/version_mismatch_fixture (a href=\" lia href=\" Bump golang.org/x/tools from 0.28.0 to 0.30.0 (a href=\" lia href=\" Bump activesupport from 6.0.6.1 to 6.1.7.5 in /docs (a href=\" lia href=\" Bump github-pages from 231 to 232 in /docs (a href=\" liAdditional commits viewable in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) /details"
  },
  {
    "id": "608",
    "type": "pullRequest",
    "title": "NO-ISSUE: Bump github.com/onsi/gomega from 1.36.1 to 1.36.2",
    "body": "Bumps github.com/onsi/gomega( from 1.36.1 to 1.36.2. details summaryRelease notes/summary pemSourced from a href=\" releases/a./em/p blockquote h2v1.36.2/h2 h2Maintenance/h2 ul liBump nokogiri from 1.16.3 to 1.16.5 in /docs by a href=\" in a href=\" liBump github.com/onsi/ginkgo/v2 from 2.20.1 to 2.22.1 by a href=\" in a href=\" liBump golang.org/x/net from 0.30.0 to 0.33.0 by a href=\" in a href=\" liBump google.golang.org/protobuf from 1.35.1 to 1.36.1 by a href=\" in a href=\" /ul /blockquote /details details summaryChangelog/summary pemSourced from a href=\" changelog/a./em/p blockquote h21.36.2/h2 h3Maintenance/h3 ul liBump google.golang.org/protobuf from 1.35.1 to 1.36.1 (a href=\" 9a7609d/li liBump golang.org/x/net from 0.30.0 to 0.33.0 (a href=\" b6cb028/li liBump github.com/onsi/ginkgo/v2 from 2.20.1 to 2.22.1 (a href=\" 5756529/li liBump nokogiri from 1.16.3 to 1.16.5 in /docs (a href=\" dabc12e/li /ul /blockquote /details details summaryCommits/summary ul lia href=\" v1.36.2/li lia href=\" Bump google.golang.org/protobuf from 1.35.1 to 1.36.1 (a href=\" lia href=\" Bump golang.org/x/net from 0.30.0 to 0.33.0 (a href=\" lia href=\" Bump github.com/onsi/ginkgo/v2 from 2.20.1 to 2.22.1 (a href=\" lia href=\" Bump nokogiri from 1.16.3 to 1.16.5 in /docs (a href=\" liSee full diff in a href=\" view/a/li /ul /details br / !Dependabot compatibility score( Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. //: (dependabot-automerge-start) //: (dependabot-automerge-end) --- details summaryDependabot commands and options/summary br / You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot show dependency name ignore conditions` will show all of the ignore conditions of the specified dependency - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) /details"
  },
  {
    "id": "598",
    "type": "pullRequest",
    "title": "NO-ISSUE: Upgrade github.com/operator-framework/api from v0.23.0 to v0.30.0 and github.com/prometheus/client_golang v1.21.0 = v1.21.1",
    "body": "Description of the change: - Upgrade github.com/operator-framework/api from v0.23.0 to v0.30.0 - upgraded github.com/prometheus/client_golang v1.21.0 = v1.21.1 Motivation for the change: - Solve tech-debts - Ensure that versions are compatible (regards Upgrade github.com/operator-framework/api from v0.23.0 to v0.30.0) - Get bug fixes and enhancements - Make easier to keep the project maintained Reviewer Checklist - Implementation matches the proposed design, or proposal is updated to match implementation - Sufficient unit test coverage - Sufficient end-to-end test coverage - Docs updated or added to `/docs` - Commit messages sensible and descriptive !-- Note: If this PR is fixing an issue make sure to add a note saying: Closes ISSUE_NUMBER --"
  },
  {
    "id": "599",
    "type": "pullRequest",
    "title": "NO-ISSUE: Add dependabot to help keep the project maintained",
    "body": "Description of the change: Add dependabot and workflow to run go mod tidy and vendor for the opened PRs Motivation for the change: Help us to keep this project maintained Reviewer Checklist - Implementation matches the proposed design, or proposal is updated to match implementation - Sufficient unit test coverage - Sufficient end-to-end test coverage - Docs updated or added to `/docs` - Commit messages sensible and descriptive !-- Note: If this PR is fixing an issue make sure to add a note saying: Closes ISSUE_NUMBER --"
  },
  {
    "id": "600",
    "type": "pullRequest",
    "title": "OCPBUGS-52340: Ensure that PSA label is latest instead of pinning versions",
    "body": "!-- Before making a PR, please read our contributing guidelines Note: Make sure your branch is rebased to the latest upstream master. -- Description of the change: Motivation for the change: Reviewer Checklist - Implementation matches the proposed design, or proposal is updated to match implementation - Sufficient unit test coverage - Sufficient end-to-end test coverage - Docs updated or added to `/docs` - Commit messages sensible and descriptive !-- Note: If this PR is fixing an issue make sure to add a note saying: Closes ISSUE_NUMBER --"
  },
  {
    "id": "594",
    "type": "pullRequest",
    "title": "OPRUN-3764,OCPBUGS-52259: Upgrade controller-runtime from v0.17.2 to 0.20.2 and consequently k8s version from 1.29 to 1.32",
    "body": "!-- Before making a PR, please read our contributing guidelines Note: Make sure your branch is rebased to the latest upstream master. -- Description of the change: Motivation for the change: Reviewer Checklist - Implementation matches the proposed design, or proposal is updated to match implementation - Sufficient unit test coverage - Sufficient end-to-end test coverage - Docs updated or added to `/docs` - Commit messages sensible and descriptive !-- Note: If this PR is fixing an issue make sure to add a note saying: Closes ISSUE_NUMBER --"
  },
  {
    "id": "583",
    "type": "pullRequest",
    "title": "CVE-2024-45338: Upgrade golang.org/x/net (CVE-2024-45338)",
    "body": "Upgrade golang.org/x/net"
  },
  {
    "id": "580",
    "type": "pullRequest",
    "title": "OCPBUGS-45566: Updating marketplace-operator-container image to be consistent with ART for 4.19",
    "body": "Updating marketplace-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: marketplace-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595 for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "139",
    "type": "pullRequest",
    "title": "NO-JIRA: Readme update",
    "body": "obsolete repo"
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "OCPBUGS-45766: Updating ose-cluster-ovirt-csi-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-cluster-ovirt-csi-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-cluster-ovirt-csi-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "2551",
    "type": "pullRequest",
    "title": "OCPBUGS-55825: Release 4.19 blocker bug ovs cpu backport: special cherry-pick",
    "body": "cc @ricky-rav and @asood-rh since this means the original bug needs to be moved to NEW state?"
  },
  {
    "id": "2522",
    "type": "pullRequest",
    "title": "OCPBUGS-52278, OCPBUGS-51165: Downstream Merge 28th april 2025",
    "body": "@kyrtapz did a piece of your fix go into the previous merge somehow?"
  },
  {
    "id": "2521",
    "type": "pullRequest",
    "title": "CORENET-5786: Downstream merge 2025-04-25",
    "body": "No conflicts. @jluhrsen @kyrtapz"
  },
  {
    "id": "2516",
    "type": "pullRequest",
    "title": "CORENET-5389,OCPBUGS-51040,OCPBUGS-54577: DownstreamMerge 2025-04-16",
    "body": "!-- Please make sure you've read and understood our contributing guidelines; Make sure all your commits include a signature generated with `git commit -s` All changes must adhere to this template to make it easy for reviewers and preserve rationale/history behind every change -- \ud83d\udcd1 Description !-- Add a brief description of the pr -- This D/S sync brings along primary UDN for virtualization fixes for IPv6. !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Additional Information for reviewers !-- What exactly did you change - you may also defer to information contained in commit messages. At a bare minimum it's worth highlighting which areas of the code were changed as it's easier to assign reviewers -- Clean merge, no conflicts. \u2705 Checks !-- Make sure your pr passes the CI checks and do check the following fields as needed - -- - My code requires changes to the documentation - if so, I have updated the documentation as required - My code requires tests - if so, I have added and/or updated the tests as required - All the tests have passed in the CI !-- If not leave a comment as to why the CI is red and if you need help understanding what's wrong -- How to verify it !-- Did you include unit tests? or end-to-end tests? How can I manually verify that this patch achieves its objective --"
  },
  {
    "id": "2513",
    "type": "pullRequest",
    "title": "OCPBUGS-51317, CORENET-5856, CORENET-5721: DownstreamMerge 2025-04-14",
    "body": "cc @oshoval @qinqon @kyrtapz @arghosh93 This has the RouteAdvertisements API update and goes hand in hand with CNOs"
  },
  {
    "id": "2472",
    "type": "pullRequest",
    "title": "CORENET-5371: Dockerfile: Bump OVS version to 3.5.0-0.9",
    "body": "This new version provides configuration flexibility for `openvswitch-ipsec` systemd service which enables OCP to run `ovs-monitor-ipsec` as a service on host instead of running it inside a container. This PR as such only bumps OVS version to `3.5.0-0.9`, so it doesn't have any harm in merging it. The changes in the PRs get `openvswitch-ipsec` systemd service running on the host and OVN uses it to configure IPsec for east west traffic. Until these two PRs are merged, CNO would just continue to use `ovs-monitor-ipsec` process running in the `ovn-ipsec-host` pod container."
  },
  {
    "id": "2498",
    "type": "pullRequest",
    "title": "CORENET-5382: unpin libreswan version",
    "body": "This PR unpins the ovnk libreswan-4.6 version which was introduced through OCPBUGS-41823( It allows to consume the latest libreswan 5 version from FDP repo which includes recent improvement and enhancement from upstream libreswan, that would otherwise only be made available until RHEL-10. This PR depends on OS( update which was already merged."
  },
  {
    "id": "2509",
    "type": "pullRequest",
    "title": "OCPBUGS-49994: DownstreamMerge 7th april"
  },
  {
    "id": "2505",
    "type": "pullRequest",
    "title": "CORENET-5666,OCPBUGS-43004,OCPBUGS-54199: Downstream Merge 2025-04-02",
    "body": "cc @ricky-rav"
  },
  {
    "id": "2379",
    "type": "pullRequest",
    "title": "OCPBUGS-45410: Updating ose-ovn-kubernetes-base-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ovn-kubernetes-base-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ovn-kubernetes-base.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "2380",
    "type": "pullRequest",
    "title": "OCPBUGS-45741: Updating ose-ovn-kubernetes-container image to be consistent with ART for 4.19",
    "body": "Updating ose-ovn-kubernetes-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-ovn-kubernetes.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel. Depends on PullRequest(title=\"OCPBUGS-45410: Updating ose-ovn-kubernetes-base-container image to be consistent with ART for 4.19\", number=2379) . Allow it to merge and then run `/test all` on this PR."
  },
  {
    "id": "2501",
    "type": "pullRequest",
    "title": "OCPBUGS-54245, SDN-5772: Downstream merge 2025-03-21",
    "body": "cc @trozet @tssurya @hareeshpc @oribon @npinaeva @RamLavi"
  },
  {
    "id": "2493",
    "type": "pullRequest",
    "title": "OCPBUGS-48678: Update OVN to FDP25.A.1 24.09.2-41",
    "body": "!-- Please make sure you've read and understood our contributing guidelines; Make sure all your commits include a signature generated with `git commit -s` All changes must adhere to this template to make it easy for reviewers and preserve rationale/history behind every change -- \ud83d\udcd1 Description !-- Add a brief description of the pr -- This contains the following relevant changes: - controller: Fix active mac-binding refresh for IPv6. - controller: Send ARP/ND for stale mac_bindings entries. (FDP-1135) - northd: Fix action parsing in build_lb_vip_actions(). (FDP-1095) - northd: Fix missing tier related ACL flows. (FDP-1154) - mac-cache: Fix expiration of active FDB entry due to skipped update. (FDP-1132) - mac-cache: Fix expiration of active MAC binding due to skipped update. (FDP-1130) - mac-cache: Fix MAC binding entry lookup for timestamp refresh. (FDP-1131) !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Additional Information for reviewers !-- What exactly did you change - you may also defer to information contained in commit messages. At a bare minimum it's worth highlighting which areas of the code were changed as it's easier to assign reviewers -- \u2705 Checks !-- Make sure your pr passes the CI checks and do check the following fields as needed - -- - My code requires changes to the documentation - if so, I have updated the documentation as required - My code requires tests - if so, I have added and/or updated the tests as required - All the tests have passed in the CI !-- If not leave a comment as to why the CI is red and if you need help understanding what's wrong -- How to verify it !-- Did you include unit tests? or end-to-end tests? How can I manually verify that this patch achieves its objective --"
  },
  {
    "id": "2474",
    "type": "pullRequest",
    "title": "OCPBUGS-48781: DownstreamMerge 2-27-25",
    "body": "Conflicts in: pkg/ovn/controller/services/lb_config.go pkg/ovn/controller/services/lb_config_test.go mainly around renaming v1 to corev1. Lint fixes for: pkg/cni/OCP_HACKS.go pkg/cni/helper_linux.go pkg/node/OCP_HACKS.go pkg/ovn/controller/services/lb_config_ocphack_test.go @tssurya @jcaamano @arghosh93"
  },
  {
    "id": "2459",
    "type": "pullRequest",
    "title": "OCPBUGS-49598, OCPBUGS-49393: DownstreamMerge 13 feb 2025"
  },
  {
    "id": "2446",
    "type": "pullRequest",
    "title": "OCPBUGS-49933,OCPBUGS-49613: Downstream Merge 7th Feb 2025",
    "body": "cc @trozet and @npinaeva"
  },
  {
    "id": "2435",
    "type": "pullRequest",
    "title": "OCPBUGS-49840: Bump OVN to 24.09.2-14 for FDP-1131",
    "body": "Bump ovn to 24.09.2-14 to bring in a critical fix for ARP binding expiration (FDP-1131("
  },
  {
    "id": "2441",
    "type": "pullRequest",
    "title": "OCPBUGS-45469, OCPBUGS-49337: DownstreamMerge 2-6-25",
    "body": "Merge to include virt last importanat bits for UDN: - -"
  },
  {
    "id": "2381",
    "type": "pullRequest",
    "title": "OCPBUGS-45745: Updating ovn-kubernetes-microshift-container image to be consistent with ART for 4.19",
    "body": "Updating ovn-kubernetes-microshift-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ovn-kubernetes-microshift.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel. Depends on PullRequest(title=\"OCPBUGS-45410: Updating ose-ovn-kubernetes-base-container image to be consistent with ART for 4.19\", number=2379) . Allow it to merge and then run `/test all` on this PR."
  },
  {
    "id": "2434",
    "type": "pullRequest",
    "title": "OCPBUGS-45893: DownstreamMerge 2-4-25",
    "body": "@npinaeva fyi"
  },
  {
    "id": "2431",
    "type": "pullRequest",
    "title": "OCPBUGS-49727, OCPBUGS-49621: DownstreamMerge 1-31-25"
  },
  {
    "id": "2429",
    "type": "pullRequest",
    "title": "SDN-4930: DownstreamMerge 1-29-25",
    "body": "Includes latest performance and other fixes merged upstream. Includes unmerged upstream PR: do not remove the hold on this PR unless the upstream PR has been approved by @jcaamano or @kyrtapz"
  },
  {
    "id": "2427",
    "type": "pullRequest",
    "title": "SDN-4930: Downstream Merge 01-28-2025"
  },
  {
    "id": "2420",
    "type": "pullRequest",
    "title": "OCPBUGS-48330,OCPBUGS-42609,OCPBUGS-46585,SDN-4930,OCPBUGS-48412: Downstream Merge 01-23-2025"
  },
  {
    "id": "2390",
    "type": "pullRequest",
    "title": "OCPBUGS-42707: Bump OVN to ovn24.09-24.09.1-10.el9fdp",
    "body": "This picks up the following relevant bug fixes: \"ovn-controller: lib/ovsdb-idl.c:3596: assertion row-new_datum != NULL failed in ovsdb_idl_txn_write__()\" 6448f5e364 pinctrl: Skip non-local mac bindings in run_buffered_binding(). ea35347320 pinctrl: Skip deleted mac bindings in run_buffered_binding(). 33a6ae53f4 pinctrl: Use correct map size in pinctrl_handle_put_fdb(). 8eaa7d5991 controller: Fix \"use after free\" issue in statctrl_run(). 8579859f51 mac-cache: Properly handle deletion of SB mac_bindings. \"ovn-northd IPAM incorrectly reports duplicate IP when part of excluded_ips\" 2a24b03f7f ipam: Do not report error for static assigned IPs. \"When an ECMP symmetric route is removed, northd removes all logical flows from SBDB for ECMP\" 7b00627433 northd: Respect --ecmp-symmetric-reply for single routes. !-- Please make sure you've read and understood our contributing guidelines; Make sure all your commits include a signature generated with `git commit -s` All changes must adhere to this template to make it easy for reviewers and preserve rationale/history behind every change -- \ud83d\udcd1 Description !-- Add a brief description of the pr -- !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Additional Information for reviewers !-- What exactly did you change - you may also defer to information contained in commit messages. At a bare minimum it's worth highlighting which areas of the code were changed as it's easier to assign reviewers -- \u2705 Checks !-- Make sure your pr passes the CI checks and do check the following fields as needed - -- - My code requires changes to the documentation - if so, I have updated the documentation as required - My code requires tests - if so, I have added and/or updated the tests as required - All the tests have passed in the CI !-- If not leave a comment as to why the CI is red and if you need help understanding what's wrong -- How to verify it !-- Did you include unit tests? or end-to-end tests? How can I manually verify that this patch achieves its objective --"
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "MULTIARCH-5364: Rebase ibm-powervs-block-csi-driver with upstream",
    "body": "What type of PR is this? /kind cleanup !-- Add one of the following kinds: /kind bug /kind test /kind cleanup /kind documentation /kind feature /kind design Optionally add one or more of the following kinds if applicable: /kind api-change /kind deprecation /kind failing-test /kind flake /kind regression -- What this PR does / why we need it: Which issue(s) this PR fixes: !-- Automatically closes linked issue when PR is merged. Usage: `Fixes issue number`, or `Fixes (paste link of issue)`. _If PR is about `failing-tests or flakes`, please post the related issues/tests in a comment and do not use `Fixes`_ -- Fixes Special notes for your reviewer: ``` git remote add upstream git@github.com:kubernetes-sigs/ibm-powervs-block-csi-driver.git git fetch upstream git merge upstream/main resolve conflicts if any && git commit go mod tidy && go mod vendor git add vendor && git commit --amend git push origin feature_branch ``` Release note: ``` none ```"
  },
  {
    "id": "96",
    "type": "pullRequest",
    "title": "MULTIARCH-5281: Rebase ibm-powervs-block-csi-driver with upstream",
    "body": "What type of PR is this? /kind cleanup What this PR does / why we need it: This PR updates the fork with the latest changes from the upstream branch. Steps followed: ``` git remote set-url origin git@github.com:openshift/ibm-powervs-block-csi-driver.git git remote add upstream git@github.com:kubernetes-sigs/ibm-powervs-block-csi-driver.git git fetch upstream git merge upstream/main resolve conflicts if any && git commit go mod tidy && go mod vendor && git add vendor/ && git commit --amend git remote set-url origin git@github.com:own-repo/ibm-powervs-block-csi-driver.git git push origin feature_branch ``` Special notes for your reviewer: ``` ``` Release note: ``` none ```"
  },
  {
    "id": "93",
    "type": "pullRequest",
    "title": "OCPBUGS-45423: Updating ose-powervs-block-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-powervs-block-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-powervs-block-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "95",
    "type": "pullRequest",
    "title": "MULTIARCH-5191: Rebase with upstream k8s-sigs/ibm-powervs-block-csi-driver",
    "body": "What type of PR is this? /kind cleanup What this PR does / why we need it: This PR rebases the fork with the changes upto a commit before the golang version bump to update to mitigate a false positive error from the linter, which prevents the merging of 93. Post the merge of this PR, the branch can be rebased again to update to contain the latest golang version. Which issue(s) this PR fixes: ``` Steps followed: git remote set-url origin git@github.com:openshift/ibm-powervs-block-csi-driver.git git remote add upstream git@github.com:kubernetes-sigs/ibm-powervs-block-csi-driver.git git fetch upstream git merge upstream/main resolve conflicts if any && git commit go mod tidy && go mod vendor && git add vendor/ && git commit --amend git push origin feature_branch ``` Special notes for your reviewer: ``` ``` Release note: ``` none ```"
  },
  {
    "id": "83",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Update bertinatto from OWNERS"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 Notes: - Updated calls for functions with new parameter clock cc @openshift/storage"
  },
  {
    "id": "79",
    "type": "pullRequest",
    "title": "OCPBUGS-46577: Provision for user-configured endpoints for IBMCLOUD_IAM_API_ENDPOINT, IBMCLOUD_IAM_API_ENDPOINT,etc",
    "body": "This PR adds changes to add flexibility of configuring custom endpoints for the CSI Driver, such as `IBMCLOUD_IAM_API_ENDPOINT`,`IBMCLOUD_RESOURCE_CONTROLLER_ENDPOINT`,`IBMCLOUD_POWER_API_ENDPOINT`, etc. which are mapped to `API`,`ResourceController` and `Power` respectively. This allows the CSI driver to be configured to use a non default endpoint when deployed from the `ibm-powervs-block-csi-driver-operator`. For example: ``` serviceEndpoints: - name: API url: \" ``` References:"
  },
  {
    "id": "80",
    "type": "pullRequest",
    "title": "OCPBUGS-45550: Updating ose-powervs-block-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-powervs-block-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-powervs-block-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "77",
    "type": "pullRequest",
    "title": "OCPBUGS-44978: bump openshift/api",
    "body": "/cc @openshift/storage"
  },
  {
    "id": "85",
    "type": "pullRequest",
    "title": "No-Jira: Update packages in go.mod",
    "body": "- Update packages in go.mod - Fixes CVE vulnerabilities of packages detected in older versions"
  },
  {
    "id": "82",
    "type": "pullRequest",
    "title": "No-Jira: Manual rebase of upstream release 1.32"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "OCPBUGS-45728: Updating ose-powervs-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-powervs-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-powervs-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "112",
    "type": "pullRequest",
    "title": "OCPBUGS-54620: CVE-2025-30204: github.com/golang-jwt/jwt allows excessive memory allocation during header parsing",
    "body": "golang-jwt is a Go implementation of JSON Web Tokens. Prior to 5.2.2 and 4.5.2, the function parse.ParseUnverified splits (via a call to strings.Split) its argument (which is untrusted data) on periods. As a result, in the face of a malicious request whose Authorization header consists of Bearer followed by many period characters, a call to that function incurs allocations to the tune of O bytes (where n stands for the length of the function's argument), with a constant factor of about 16. This issue is fixed in 5.2.2 and 4.5.2."
  },
  {
    "id": "110",
    "type": "pullRequest",
    "title": "OCPBUGS-53309: Update dependencies to k8s 1.32",
    "body": "Updates dependencies to k8s 1.32 to align with OpenShift 4.19 release."
  },
  {
    "id": "100",
    "type": "pullRequest",
    "title": "OCPBUGS-51276: Fix for CVE-2024-45338 in golang.org/x/net/html in main",
    "body": "A flaw was found in `golang.org/x/net/html`. This flaw allows an attacker to craft input to the parse functions that would be processed non-linearly with respect to its length, resulting in extremely slow parsing. This issue can cause a denial of service. To address this issue, we have upgraded the library to version v0.33.0, which includes a fix for the vulnerability. Affected Library: `golang.org/x/net/html` Current Version: `v0.17.0` Fixed Version: `v0.33.0` Additionally, we have addressed the following vulnerabilities in other libraries: Affected Library: `golang.org/x/crypto` Current Version: `v0.26.0` Fixed Version: `v0.31.0` Affected Library: `github.com/golang-jwt/jwt/v4` Current Version: `v4.5.0` Fixed Version: `v4.5.1` Other relevant updates and fixes have also been implemented as part of this update."
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "OCPBUGS-49733: Uses VPC endpoint override in Disconnected case",
    "body": "`control-plane-machine-set` CO needs this in Disconnected scenario in order to become `Available` by finding LBs, VSIs, etc. properly at the \"private\" endpoint (with `/v1` at the end). Signed-off-by: Hiro Miyamoto miyamotoh@us.ibm.com"
  },
  {
    "id": "98",
    "type": "pullRequest",
    "title": "OCPBUGS-47764: Honors custom ResourceController endpoint URL in NewValidatedClient(), if provided",
    "body": "Like 97, this PR applies the same treatment for `ResourceController` endpoint override honoring it in `NewValidatedClient()`."
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "OCPBUGS-47476: Overrides URL for ResourceController client if provided",
    "body": "Like 95, this one is to properly use override URL for `ResourceController`, if provided. With this running locally, it is verified that the cluster would be able to provision worker VMs."
  },
  {
    "id": "95",
    "type": "pullRequest",
    "title": "OCPBUGS-46471: Sets Authenticator.URL with IAM endpoint override if provided"
  },
  {
    "id": "93",
    "type": "pullRequest",
    "title": "OCPBUGS-45732: Updating ose-powervs-machine-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-powervs-machine-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-powervs-machine-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "94",
    "type": "pullRequest",
    "title": "MULTIARCH-5186: Update k8s and Openshift dependencies",
    "body": "Updating the k8s and Openshift dependencies to the latest available versions to leverage the latest api specifications."
  },
  {
    "id": "377",
    "type": "pullRequest",
    "title": "OCPBUGS-45713: Updating prom-label-proxy-container image to be consistent with ART for 4.19",
    "body": "Updating prom-label-proxy-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: prom-label-proxy.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "246",
    "type": "pullRequest",
    "title": "MON-4199: chore: update to v3.2.1",
    "body": "- update rh-manifest.txt !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Please give your PR a title in the form \"area: short description\". For example \"tsdb: reduce disk usage by 95%\" If your PR is to fix an issue, put \"Fixes issue-number\" in the description. Don't forget! - Please sign CNCF's Developer Certificate of Origin and sign-off your commits by adding the -s / --signoff flag to `git commit`. See for more information. - If the PR adds or changes a behaviour or fixes a bug of an exported API it would need a unit/e2e test. - Where possible use only exported APIs for tests to simplify the review and make it as close as possible to an actual library usage. - Performance improvements would need a benchmark test to prove it. - All exposed objects should have a comment. - All comments should start with a capital letter and end with a full stop. --"
  },
  {
    "id": "245",
    "type": "pullRequest",
    "title": "OCPBUGS-53025: Scraping: Bump cache iteration after error to avoid false duplicate detection.",
    "body": "Cherry-picking this needs to be backported to 4.16 --- We use the cache iteration number to detect when the same metric has occurred twice in a scrape. We need to bump this number at the end of every scrape, not just successful scrapes. The `iter` number is also used: After a successful scrape, to delete older metrics and metadata. To detect when metadata changed in this scrape. None of those additional cases is broken by incrementing the number on error. !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Please give your PR a title in the form \"area: short description\". For example \"tsdb: reduce disk usage by 95%\" If your PR is to fix an issue, put \"Fixes issue-number\" in the description. Don't forget! - Please sign CNCF's Developer Certificate of Origin and sign-off your commits by adding the -s / --signoff flag to `git commit`. See for more information. - If the PR adds or changes a behaviour or fixes a bug of an exported API it would need a unit/e2e test. - Where possible use only exported APIs for tests to simplify the review and make it as close as possible to an actual library usage. - Performance improvements would need a benchmark test to prove it. - All exposed objects should have a comment. - All comments should start with a capital letter and end with a full stop. --"
  },
  {
    "id": "227",
    "type": "pullRequest",
    "title": "MON-4104: Update to 3.0",
    "body": "to do: - x keep our new gitignore (synbot) - x update synbot commands - x remove `remote-write-receiver` feature flag setting in CMO - x auto-gomemlimit and autogomaxprocs? (SNO) - x fallback_scrape_protocol - x run some extra palyload tests To reviewer: too many commits, please give more attention to the ones I added on top !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Please give your PR a title in the form \"area: short description\". For example \"tsdb: reduce disk usage by 95%\" If your PR is to fix an issue, put \"Fixes issue-number\" in the description. Don't forget! - Please sign CNCF's Developer Certificate of Origin and sign-off your commits by adding the -s / --signoff flag to `git commit`. See for more information. - If the PR adds or changes a behaviour or fixes a bug of an exported API it would need a unit/e2e test. - Where possible use only exported APIs for tests to simplify the review and make it as close as possible to an actual library usage. - Performance improvements would need a benchmark test to prove it. - All exposed objects should have a comment. - All comments should start with a capital letter and end with a full stop. --"
  },
  {
    "id": "241",
    "type": "pullRequest",
    "title": "OCPBUGS-48273: fix(main.go): avoid closing the query engine until it is guaranteed to no longer be in use",
    "body": "cherry-pick of --- partially reverts fixes supersedes reusing Engine.Close() outside of tests will require more consideration. !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Please give your PR a title in the form \"area: short description\". For example \"tsdb: reduce disk usage by 95%\" If your PR is to fix an issue, put \"Fixes issue-number\" in the description. Don't forget! - Please sign CNCF's Developer Certificate of Origin and sign-off your commits by adding the -s / --signoff flag to `git commit`. See for more information. - If the PR adds or changes a behaviour or fixes a bug of an exported API it would need a unit/e2e test. - Where possible use only exported APIs for tests to simplify the review and make it as close as possible to an actual library usage. - Performance improvements would need a benchmark test to prove it. - All exposed objects should have a comment. - All comments should start with a capital letter and end with a full stop. --"
  },
  {
    "id": "238",
    "type": "pullRequest",
    "title": "OCPBUGS-45586: Updating golang-github-prometheus-prometheus-container image to be consistent with ART for 4.19",
    "body": "Updating golang-github-prometheus-prometheus-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: golang-github-prometheus-prometheus.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "99",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump openshift/prometheus-alertmanager to v0.28.1",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-alertmanager repo: ``` git fetch --tags if ! git merge refs/tags/v0.28.1 --no-edit; then git checkout --theirs CHANGELOG.md VERSION .promu.yml go.mod go.sum git checkout --ours git add CHANGELOG.md VERSION .promu.yml go.mod go.sum git merge --continue fi go mod tidy go mod vendor Only compress assets if assets actually changed The git diff relies on gits remote naming. The merge-flow checks out $downstream as origin at the time of writing this code. if ! git diff --exit-code origin/main ui/react-app; then make assets-compress find ui/react-app -type f -name '.gz' -exec git add {} \\; git add ui/react-app/embed.go git diff --cached --exit-code assets: generate\" fi if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "98",
    "type": "pullRequest",
    "title": "MON-4155: Bump openshift/prometheus-alertmanager to v0.28.0",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-alertmanager repo: ``` git fetch --tags if ! git merge refs/tags/v0.28.0 --no-edit; then git checkout --theirs CHANGELOG.md VERSION .promu.yml go.mod go.sum git checkout --ours git add CHANGELOG.md VERSION .promu.yml go.mod go.sum git merge --continue fi go mod tidy go mod vendor Only compress assets if assets actually changed The git diff relies on gits remote naming. The merge-flow checks out $downstream as origin at the time of writing this code. if ! git diff --exit-code origin/main ui/react-app; then make assets-compress find ui/react-app -type f -name '.gz' -exec git add {} \\; git add ui/react-app/embed.go git diff --cached --exit-code assets: generate\" fi if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "97",
    "type": "pullRequest",
    "title": "OCPBUGS-45623: Updating golang-github-prometheus-alertmanager-container image to be consistent with ART for 4.19",
    "body": "Updating golang-github-prometheus-alertmanager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: golang-github-prometheus-alertmanager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "329",
    "type": "pullRequest",
    "title": "MON-4207: Bump openshift/prometheus-operator to v0.81.0",
    "body": "Executed manual steps as syncbot action failing due to merge conflict ``` git fetch --tags if ! git merge refs/tags/v0.81.0 --no-edit; then git checkout --theirs CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git checkout --ours git add CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "325",
    "type": "pullRequest",
    "title": "NO-JIRA: Bump openshift/prometheus-operator to v0.80.1",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-operator repo: ``` git fetch --tags if ! git merge refs/tags/v0.80.1 --no-edit; then git checkout --theirs CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git checkout --ours git add CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "324",
    "type": "pullRequest",
    "title": "MON-4126: bot Bump openshift/prometheus-operator to v0.80.0",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-operator repo: ``` git fetch --tags if ! git merge refs/tags/v0.80.0 --no-edit; then git checkout --theirs CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git checkout --ours git add CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum scripts/go.mod scripts/go.sum pkg git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "321",
    "type": "pullRequest",
    "title": "OCPBUGS-18656: Bump openshift/prometheus-operator to v0.79.2",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-operator repo: ``` git fetch --tags if ! git merge refs/tags/v0.79.0 --no-edit; then git checkout --theirs CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum pkg git checkout --ours git add CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum pkg git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "319",
    "type": "pullRequest",
    "title": "OCPBUGS-45644: Updating prometheus-config-reloader-container image to be consistent with ART for 4.19",
    "body": "Updating prometheus-config-reloader-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: prometheus-config-reloader.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "320",
    "type": "pullRequest",
    "title": "OCPBUGS-45736: Updating prometheus-operator-container image to be consistent with ART for 4.19",
    "body": "Updating prometheus-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: prometheus-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "317",
    "type": "pullRequest",
    "title": "OCPBUGS-45453: Updating prometheus-operator-admission-webhook-container image to be consistent with ART for 4.19",
    "body": "Updating prometheus-operator-admission-webhook-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: prometheus-operator-admission-webhook.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "314",
    "type": "pullRequest",
    "title": "NO-JIRA: bot Bump openshift/prometheus-operator to v0.78.2",
    "body": "Description This is an automated version bump from CI. The logs for this run can be found in the syncbot repo actions( If you wish to perform this manually, execute the following commands from openshift/prometheus-operator repo: ``` git fetch --tags if ! git merge refs/tags/v0.78.2 --no-edit; then git checkout --theirs CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum pkg git checkout --ours git add CHANGELOG.md Documentation VERSION bundle.yaml example go.mod go.sum pkg git merge --continue fi go mod tidy go mod vendor if -f scripts/rh-manifest.sh ; then bash scripts/rh-manifest.sh git add rh-manifest.txt git diff --cached --exit-code update rh-manifest.txt\" fi ```"
  },
  {
    "id": "164",
    "type": "pullRequest",
    "title": "MON-4204: Use slog for accelerators (and version bump)",
    "body": "This unblocks our ability to release a newer node_exporter version: Signed-off-by: Pranshu Srivastava rexagod@gmail.com ``` \u250crexagod@nebuchadnezzar /dev/ttys001 slog \u2514~/repositories/oss/node_exporter glo rhobs/automated-updates-main..HEAD 421fb448 (HEAD - slog, origin/slog) revendor aa18dad7 (automated-updates-main) MON-4204: Use `slog` for accelerators ```"
  },
  {
    "id": "155",
    "type": "pullRequest",
    "title": "MGMT-19498:Add configmap support to the accelerator's collector",
    "body": "accelerator collector needs to have a configuration that describes which vendors and models it should collect. This PR add loading that data from a file. Eventually this file be a configmap mapped into the node-exporter pod. Parsing the configmap file is done in the init function. The file is defined by an environment variable. This variable will be configured by CMO and by unit-test"
  },
  {
    "id": "161",
    "type": "pullRequest",
    "title": "OCPBUGS-46498:adding new NVIDIA accelerators to monitor"
  },
  {
    "id": "159",
    "type": "pullRequest",
    "title": "OCPBUGS-46498:updating monitored accelerator list"
  },
  {
    "id": "157",
    "type": "pullRequest",
    "title": "OCPBUGS-45424: Updating golang-github-prometheus-node_exporter-container image to be consistent with ART for 4.19",
    "body": "Updating golang-github-prometheus-node_exporter-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: golang-github-prometheus-node_exporter.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "156",
    "type": "pullRequest",
    "title": "MGMT-19361: Adding new device for accelerators monitoring"
  },
  {
    "id": "48",
    "type": "pullRequest",
    "title": "OCPBUGS-29354: Added error event for failed ingress to route conversion",
    "body": "This pull request adds error handling and event recording for failed Ingress to Route conversions. It ensures that any errors encountered during the conversion process are properly logged and recorded as events, improving the observability and debugging capabilities of the system."
  },
  {
    "id": "52",
    "type": "pullRequest",
    "title": "OCPBUGS-45441: Updating ose-route-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-route-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-route-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "54",
    "type": "pullRequest",
    "title": "NO-JIRA: Updated OWNERS file to reflect current team",
    "body": "Updated OWNERS file to add Ali and Greg"
  },
  {
    "id": "51",
    "type": "pullRequest",
    "title": "NO-JIRA: Added HACKING.md file",
    "body": "Added HACKING.md file for repository to help guide on how to modify and test changes to the route-controller-manager"
  },
  {
    "id": "263",
    "type": "pullRequest",
    "title": "OCPBUGS-55057: Don't check featuregates on operand",
    "body": "Microshift doesn't have FeatureGates CRD, so operand should not attempt to read featuregates directly and instead the operator should pass featuregates as cli argument."
  },
  {
    "id": "245",
    "type": "pullRequest",
    "title": "CNTRLPLANE-339: Issue short lived certificates if ShortCertRotation featuregate is enabled"
  },
  {
    "id": "254",
    "type": "pullRequest",
    "title": "OCPBUGS-48171: Update go 1.23 and ocp 4.19",
    "body": "The following this PR does : 1. Update go 1.23 and ocp 4.19 2. Update k8s.io/ dependencies to v0.32.2"
  },
  {
    "id": "248",
    "type": "pullRequest",
    "title": "OCPBUGS-40772: Bump go to 1.22.0",
    "body": "Replaces Also includes kube and library-go bumps/ TODO: x Fix missing `ResourceSyncControllerDegraded` status"
  },
  {
    "id": "556",
    "type": "pullRequest",
    "title": "OCPBUGS-50837: Drop nil metrics during elide transform and capture metric for same"
  },
  {
    "id": "555",
    "type": "pullRequest",
    "title": "OCPBUGS-50837: Check nil metric in elide label",
    "body": "We came across this case when dealing with a metric sent by telemeter-client that was not in the allowlist. The whitelister sets the metric as nil, and as elide is the transformer right after whitelister, it comes across the nil metric and panics as a result."
  },
  {
    "id": "554",
    "type": "pullRequest",
    "title": "SWATCH-3413: Add acm_capacity_effective_cpu_cores:sum recording rule",
    "body": "A recording rule needs to aggregate worker nodes under the hub cluster so swatch can associate the metric with the hub's billing account information. Create a new recording rule that uses the existing one, and adds the \"sum\" logic on top of it."
  },
  {
    "id": "553",
    "type": "pullRequest",
    "title": "OCPBUGS-48381: rename doc references to master branch to main"
  },
  {
    "id": "552",
    "type": "pullRequest",
    "title": "OCPBUGS-45763: Updating telemeter-container image to be consistent with ART for 4.19"
  },
  {
    "id": "29770",
    "type": "pullRequest",
    "title": "OCPBUGS-55969: (olmv1 tests) Increase timeout for verifyAPIEndpoints",
    "body": "Polling with 30 secs timeout is causing thundering herd problem, causing the tests to timeout in resource constrained CI environments. This PR switches to using exponential backoffs with jitter."
  },
  {
    "id": "29767",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55897: bump limits",
    "body": "This is an automated cherry-pick of 29763 /assign neisw"
  },
  {
    "id": "29707",
    "type": "pullRequest",
    "title": "OCPBUGS-55265: Bump 1.32.4"
  },
  {
    "id": "29749",
    "type": "pullRequest",
    "title": "release-4.19 OKD-243: Skip GatewayAPIController tests for OKD",
    "body": "This is an automated cherry-pick of 29742 /assign Prashanth684"
  },
  {
    "id": "29744",
    "type": "pullRequest",
    "title": "OCPBUGS-55510: Update node selection in MCN scope test for two-node Openshift",
    "body": "This closes OCPBUGS-55510( Work included: - Updates how nodes to test are selected in two-node Openshift environments for `Should properly block MCN updates from a MCD that is not the associated one`. How to verify: See the following payload rehearsals passing on the `Should properly block MCN updates from a MCD that is not the associated one` test. - x Two-Node Fencing: - x Two-Node Arbiter: - x SNO: - x Standard:"
  },
  {
    "id": "29715",
    "type": "pullRequest",
    "title": "OCPBUGS-55392: Exclude imagestream import mode toggle tests for SNO",
    "body": "These tests involve changing the openshift-apiserver's observed config which causes the apiserver to restart. This is causing disruptions for SNO and the SNO techpreview tests are failing. Exclude these tests for SNO. failing job example:"
  },
  {
    "id": "29732",
    "type": "pullRequest",
    "title": "OCPBUGS-55441: Fix MCN tests for two-node clusters & add more logs to scope tests",
    "body": "This closes OCPBUGS-55441. Work included: - Updates `Should have MCN properties matching associated node properties for nodes in default MCPs` in standard two-node Openshift to test for only master MCP association. - Updates `Should have MCN properties matching associated node properties for nodes in default MCPs` in two-node arbiter Openshift to test for master & arbiter MCP association. - Skips `Should have MCN properties matching associated node properties for nodes in custom MCPs` test on two-node openshift. - Adds more logs to scope impersonation tests to help with future debugging, if necessary. To test: See payload rehearsals with successful MCN tests: - -"
  },
  {
    "id": "29655",
    "type": "pullRequest",
    "title": "OCPBUGS-54700: aws/edge: prevent test using unschedulable nodes",
    "body": "This change prevents the test `\"sig-networkFeature:tap should create a pod with a tap interface\"` to fail when selecting a worker node that have taints applied to it. This is impacting some variants such as aws/edge (or similar setup) nodes when the first node in the worker list is the edge node, which have `NoSchedule` taints. This is a permanent failure in CI in edge zones. This is an an example of failed job: ~~~ lastTransitionTime: \"2025-04-06T02:03:23Z\" message: '0/8 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/edge: }, 3 node(s) didn''t match Pod''s node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/master: }. preemption: 0/8 nodes are available: 8 Preemption is not helpful for scheduling..' ~~~"
  },
  {
    "id": "29735",
    "type": "pullRequest",
    "title": "TRT-2092: Fix default cert issuer name in RouteExternalCertificate test case",
    "body": "The current logic for verifying the default certificate relies on checking the issuer CommonName against predefined values for different cluster profiles (Self-Managed, HyperShift, Managed Service). However, for managed service clusters (like ROSA), the default certificate issuer CN is dynamic (e.g. R10, R11, etc.), making it difficult to know the exact value beforehand. This PR modifies the verification logic to handle the dynamic issuer CN. Instead of checking for a specific CN, the updated logic checks if the certificate is not issued by the external certificate issuer. This ensures that the route will not use the external certificate once removed. Follow up:"
  },
  {
    "id": "29686",
    "type": "pullRequest",
    "title": "OCPBUGS-42044: build Ensure Git Clone Does Not Run Privileged",
    "body": "The following test case \"sig-buildsFeature:BuildsSlow starting a build using CLI\" and its sub cases are modified to ensure the git-clone container does not run privileged and with minimum capabilities enabled.This is to address \"CVE-2024-45496: .gitconfig can be abused to run aritrary commands\"."
  },
  {
    "id": "29722",
    "type": "pullRequest",
    "title": "OCPBUGS-54869: bump limits"
  },
  {
    "id": "29730",
    "type": "pullRequest",
    "title": "OPRUN-3783: OLMv1: Add support for preflight permissions checks (fixed)",
    "body": "Adds several data files, of which -0 is the basic one that allows for installation, and -1 through -6 have minor removals to cause a failure. They are each combined with -base to attempt to install an operator. This reapplies cf207152efc99fb5474650649bddd43cea89c71b with fixes due to upstream-to-downstream merge."
  },
  {
    "id": "29731",
    "type": "pullRequest",
    "title": "TRT-2092: Fix default cert issuer name for Managed Service cluster (ROSA classic) in `RouteExternalCertificate` test case",
    "body": "This PR will decide the default cert issuer name for Managed Service clusters (ROSA classic). If the tests are running on Managed Service cluster, the default cert issuer name would be `R11` See Slack Thread("
  },
  {
    "id": "29726",
    "type": "pullRequest",
    "title": "TRT-2091: Revert 29714 \"OPRUN-3782: OLMv1: Add support for preflight permissions checks\"",
    "body": "Reverts 29714 ; tracked by TRT-2091( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Broke aws-ovn-techpreview beginning with 4.19.0-0.nightly-2025-04-26-092016 To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` run nightly job e.g. /payload-job periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview ``` CC: @tmshort div align=\"right\" PR created by a href=\" /div"
  },
  {
    "id": "29714",
    "type": "pullRequest",
    "title": "OPRUN-3782: OLMv1: Add support for preflight permissions checks",
    "body": "Adds several data files, of which -0 is the basic one that allows for installation, and -1 through -6 have minor removals to cause a failure. They are each combined with -base to attempt to install an operator."
  },
  {
    "id": "29717",
    "type": "pullRequest",
    "title": "MCO-1646: API & client-go bumps for MCN V1 API updates",
    "body": "This bumps the API dependency to & the client-go dependency to Steps taken: - `go get github.com/openshift/api@9b80d67473bc15d85312ffda09dcde489c8e0545` - `go mod tidy` - `go get github.com/openshift/client-go@5f55ff6979a17ab49a12d181aa3c542372d6917d` - `go mod tidy` - `go mod vendor` - `go mod verify`"
  },
  {
    "id": "29721",
    "type": "pullRequest",
    "title": "NO ISSUE: Temporarily skip PinnedImageSet tests on SNO & metal",
    "body": "Contributors: @RishabhSaini & @isabella-janssen This temporarily skips all PIS tests on metal and the `All Nodes in a standard Pool should have the PinnedImages PIS` on SNO while the team addresses OCPBUGS-55394 & OCPBUGS-55384."
  },
  {
    "id": "29719",
    "type": "pullRequest",
    "title": "Revert \"TRT-2049: check for any watch requests\"",
    "body": "Reverts openshift/origin29674 Failing hypershift validate fix with `/payload-job periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance`"
  },
  {
    "id": "29701",
    "type": "pullRequest",
    "title": "MCO-1519: Adapt MCN tests to use V1 API",
    "body": "Merge Plan: - This should be merged _simultaneously with_ - - Work included: - Bump API & client-go versions pull in changes for created V1 MCN API ( - Replace `v1alpha1` references with `v1` - Skip all MCN & PIS tests on hypershift - See this thread( for more information on hypershift support for these features. Payload testing: To test the changes made to the test, payload tests should be run with the & PRs to test the three PRs to include as part of the simul-merge. Test locally: To run the test locally, run them against a cluster created with the API built from and the MCO built from An example Clusterbot message for creating such a cluster is: `launch 4.19,openshift/api2273,openshift/machine-config-operator4992 gcp,techpreview`. _Serial suite tests (MCN):_ ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould properly transition through MCN conditions on rebootless node update apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould properly transition through MCN conditions on rebootless node update apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` _Serial suite tests (PIS):_ ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:PinnedImagesOCPFeatureGate:MachineConfigNodesSerial All Nodes in a custom Pool should have the PinnedImages even after Garbage Collection apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:PinnedImagesOCPFeatureGate:MachineConfigNodesSerial All Nodes in a Custom Pool should have the PinnedImages in PIS apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:PinnedImagesOCPFeatureGate:MachineConfigNodesSerial All Nodes in a standard Pool should have the PinnedImages PIS apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:PinnedImagesOCPFeatureGate:MachineConfigNodesSerial Invalid PIS leads to degraded MCN in a standard Pool apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:PinnedImagesOCPFeatureGate:MachineConfigNodesSerial Invalid PIS leads to degraded MCN in a custom Pool apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` _Parallel suite tests:_ ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should have MCN properties matching associated node properties for nodes in default MCPs apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates by impersonation of the MCD SA apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates from a MCD that is not the associated one apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly update the MCN from the associated MCD apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` _Local only tests:_ ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly report MCN conditions on node degrade apigroup:machineconfiguration.openshift.io\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly create and remove MCN on node creation and deletion apigroup:machineconfiguration.openshift.io\" ```"
  },
  {
    "id": "29580",
    "type": "pullRequest",
    "title": "OPRUN-3692: Olmv1-catalogd tests for API endpoints",
    "body": "Introduces tests for the new `api/v1/metas` endpoint when NewOLMCatalogdAPIV1Metas feature gate in enabled."
  },
  {
    "id": "29674",
    "type": "pullRequest",
    "title": "TRT-2049: check for any watch requests",
    "body": "Adds a check to verify we get any watch requests"
  },
  {
    "id": "29677",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`3972`) added jobs and (`188`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `199` jobs increased and `450` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 aws 111 435.19% 392.11% 4.19 amd64 metal 101 84.38% 142.53% 4.19 amd64 metal 101 221.27% 228.15% 4.19 amd64 gcp 1259 100.00% 100.00% 4.19 amd64 gcp 722 100.00% 39.50% 4.19 amd64 gcp 1259 100.00% 50.00% 4.19 amd64 metal 101 0.00% 30.02% 4.19 amd64 aws 274 0.00% 41.03% 4.19 s390x libvirt 145 0.00% 44.37% 4.19 amd64 gcp 722 0.00% 122.57% 4.19 amd64 azure 155 0.00% 30.42% 4.19 arm64 aws 271 0.00% 2900.00% 4.19 amd64 gcp 362 0.00% 361.09% 4.19 amd64 azure 155 0.00% 36.50% 4.19 amd64 aws 466 0.00% 473.18% 4.19 amd64 gcp 362 0.00% 100.00% 4.19 s390x libvirt 145 0.00% 44.84% 4.19 amd64 metal 101 0.00% 160.00% 4.19 amd64 aws 1151 0.00% 646.00% 4.19 amd64 metal 214 0.00% 90.00% 4.19 amd64 aws 743 0.00% 2058.00% 4.19 amd64 gcp 362 0.00% 457.14% 4.19 amd64 aws 274 0.00% 42.33% 4.19 amd64 azure 1103 0.00% 50.85% 4.19 amd64 aws 274 0.00% 35.76% 4.19 amd64 azure 1103 0.00% 298.00% 4.19 amd64 gcp 149 0.00% 100.00% 4.19 amd64 metal 182 0.00% 85.19% 4.19 amd64 gcp 1259 0.00% 33.33% 4.19 s390x libvirt 145 0.00% 59.59% 4.19 amd64 aws 274 0.00% 175.00% 4.19 amd64 aws 915 0.00% 100.00% 4.19 s390x libvirt 145 0.00% 42.49% 4.19 amd64 gcp 149 0.00% 104.00% 4.19 amd64 gcp 722 0.00% 60.41% 4.19 s390x libvirt 145 0.00% 40.22% 4.19 amd64 aws 715 0.00% 99.39% 4.19 amd64 gcp 149 0.00% 944.63% 4.19 amd64 vsphere 136 0.00% 10725.58% 4.19 s390x libvirt 145 0.00% 44.37% 4.19 amd64 aws 915 0.00% 1134.27% 4.19 amd64 gcp 1259 0.00% 33.93% 4.19 amd64 metal 101 0.00% 321.53% 4.19 s390x libvirt 145 0.00% 38.01% 4.19 amd64 metal 101 0.00% 230.09% 4.19 amd64 aws 274 0.00% 32600.00% 4.19 amd64 gcp 1259 0.00% 61.29% 4.19 amd64 metal 101 0.00% 119.97% 4.19 s390x libvirt 145 0.00% 42.96% 4.19 s390x libvirt 145 0.00% 124.00% 4.19 amd64 aws 274 0.00% 41.03% /details alerts Information There were (`9937`) added jobs and (`6590`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `42` jobs increased and `109` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 aws 222 267.05% 227.12% 4.19 amd64 gcp 138 154.66% 33.38% 4.19 amd64 gcp 246 309.48% 211.02% 4.19 amd64 metal 158 590.71% 381.81% 4.19 amd64 aws 220 50.85% 112.57% 4.19 amd64 aws 205 0.00% 124.70% 4.19 amd64 gcp 138 0.00% 55.57% 4.19 amd64 vsphere 148 0.00% 115.31% 4.19 amd64 gcp 109 0.00% 145.89% 4.19 amd64 azure 137 0.00% 140.63% 4.19 amd64 gcp 138 0.00% 300.46% 4.19 amd64 metal 158 0.00% 3781.49% 4.19 amd64 gcp 138 0.00% 91.23% 4.19 amd64 gcp 109 0.00% 457.24% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29712",
    "type": "pullRequest",
    "title": "OCPBUGS-55342: Skip Hypershift for MachineConfigNodes and PinnedImages tests",
    "body": "Closes: OCPBUGS-55342 Per this Slack message( from @yuqi-zhang, MachineConfigNodes and PinnedImageSets are not supported features on Hypershift. Therefore, the tests for these features should be skipped on the Hypershift platform. Work included: - Skip tests related to the `PinnedImages` and `MachineConfigNodes` feature gates on Hypershift."
  },
  {
    "id": "29648",
    "type": "pullRequest",
    "title": "NO-JIRA: Revert \"Add monitortest for elevated etcd disk fsync intervals\"",
    "body": "This reverts commit 59633605693bde323209c5b3aa432e11248d3940. This was mistakenly merged with another pr."
  },
  {
    "id": "29571",
    "type": "pullRequest",
    "title": "TRT-2043: look for high latency audit requests",
    "body": "TRT-2043( Provides initial implementation tracking etcd and total latency for audit records.. Creating 0,1, 2,5... second buckets to count requests that fall within each individual range (count only applies to one bucket, 5s does not also count as 1 or 2)"
  },
  {
    "id": "29659",
    "type": "pullRequest",
    "title": "OCPBUGS-22413: Add myql-80 to fix known image check test for OKD",
    "body": "This issue was peviously reported and even fixed through but it was reverted by Instead of changing the images, add this image to the allowed list so the test doesn't flake"
  },
  {
    "id": "29700",
    "type": "pullRequest",
    "title": "OCPBUGS-54869: bump limits"
  },
  {
    "id": "29698",
    "type": "pullRequest",
    "title": "OCPBUGS-55214: Fix default cert issuer name for HyperShift in `RouteExternalCertificate` test case",
    "body": "This PR will decide the default cert issuer name. If the tests are running on HyperShift, the default cert issuer name would be `\"root-ca\"`, otherwise `\"ingress-operator\"`"
  },
  {
    "id": "29691",
    "type": "pullRequest",
    "title": "OCPEDGE-1680: Fix failed arbiter tests on ci run"
  },
  {
    "id": "29685",
    "type": "pullRequest",
    "title": "OCPBUGS-54906: Remove Skipped:Disconnected from the test name to allow metal ipv6",
    "body": "- We switched to `registry.k8s.io/e2e-test-images/agnhost` image in - `registry.k8s.io/e2e-test-images/agnhost` is mirrored in metal ipv6, so there won't be image pull issues in the Disconnected environment. - This PR removes `Skipped:Disconnected` annotation to allow metal ipv6 job."
  },
  {
    "id": "29690",
    "type": "pullRequest",
    "title": "OCPBUGS-54651: resources: Add limit exceptions for Istio",
    "body": "Add an exception for Istio pods that specify resource limits."
  },
  {
    "id": "29695",
    "type": "pullRequest",
    "title": "OCPBUGS-55175: Add cleanup to MCN test",
    "body": "This closes OCPBUGS-55175( Work included: - Add cleanup functionality to `ValidateMCNScopeHappyPathTest`. - General doc comment updates."
  },
  {
    "id": "29693",
    "type": "pullRequest",
    "title": "OCPBUGS-55132: gatewayapicontroller: Increase timeouts",
    "body": "Increase timeouts to reduce flakiness. In particular, OLM is known to sometimes take a long time to install a subscription. --- Based on these flakes, it eappears that the subscription takes on the order of 3 to 5 minutes to install in the flaky runs: ```text % curl -s ' ' ' | jq -c '.items.' \"2025-04-17T19:18:34Z\",\"2025-04-17T19:23:17Z\" \"2025-04-16T20:12:13Z\",\"2025-04-16T20:16:04Z\" \"2025-04-17T17:14:52Z\",\"2025-04-17T17:18:15Z\" % ``` The timeout was 2 minutes. It should be at least 10 minutes for a 2x margin of error. I went with 20 minutes to be safe."
  },
  {
    "id": "29683",
    "type": "pullRequest",
    "title": "OCPBUGS-54951: MCO-1520: Reintroduction of MachineConfigNode e2e tests",
    "body": "Closes: OCPBUGS-54951( This reintroduces the work originally added in 29596 and then reverted in 29682. Work Included - All work from the original PR 29596 - Test updates, included in commit to improve overall stability - Update to the `Validate MCN properties` test to divide default and custom MCP cases into separate tests. This will help keep the tests shorter and more appropriately scoped. - Update to the `Validate MCN condition status transitions` test to do a rebootless update instead of the previous reboot-required update. Relevant information on revert - Original identification of issue: - Fix proposal: Notes - The tests for MCO-1595( & MCO-1596( will both run in the default serial suite since they can impact other tests through pool creation and updates. - The tests for MCO-1597( & MCO-1598( are both tagged `Slow`, as they often take longer than 5 minutes to run. To have these tests run automatically, we will need to create a suite at a later time (Slack ref( but the tests can still be run locally. - The tests for MCO-1599( will all run in the default parallel suite since they are not computationally expensive, simple, and should have no affects on other tests. MCO-1595( Validate MCN properties ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should have MCN properties matching associated node properties for nodes in default MCPs apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` Note that the following test is skipped for Single Node Openshift since it tests with the creation of a custom MCP. ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould have MCN properties matching associated node properties for nodes in custom MCPs apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` MCO-1596( Validate MCN condition status transitions ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould properly transition through MCN conditions on rebootless node update apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` _(Does not run in a default test suite)_ MCO-1597( Validate MCN condition status on node degrade ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly report MCN conditions on node degrade apigroup:machineconfiguration.openshift.io\" ``` _(Does not run in a default test suite)_ MCO-1598( Validate MCN on node creation and deletion Note that this test is skipped for Single Node Openshift. ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly create and remove MCN on node creation and deletion apigroup:machineconfiguration.openshift.io\" ``` MCO-1599( Validate MCN object can only be accessible from its associated MCD Note that these tests are skipped for Single Node Openshift. ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates by impersonation of the MCD SA apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates from a MCD that is not the associated one apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly update the MCN from the associated MCD apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ```"
  },
  {
    "id": "29688",
    "type": "pullRequest",
    "title": "OCPBUGS-54869: bump limits",
    "body": "Additional increases"
  },
  {
    "id": "29670",
    "type": "pullRequest",
    "title": "NE-1970: 5 e2e origin tests for gatewayApiController featureGate",
    "body": "PR for Network Ingress and DNS team for the 5 e2e tests to graduate featureGate to GA JIRA: Test Scenarios: Confirm that OLM and OSSM resources are created Confirm that default gatewayClass is accepted Confirm that a custom-gatewayclass can be created, deleted and not affect the state of the OSSM resources A Custom gateway Object can be created A HttpRoute can be created with no errors using a custom-gateway"
  },
  {
    "id": "29682",
    "type": "pullRequest",
    "title": "TRT-2082: Revert \"MCO-1520: Add MachineConfigNode e2e tests\"",
    "body": "Reverts openshift/origin29596; tracked by TRT-2082( Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Since this PR( landed, we observed an extra sets of node state change. This might have caused extra sets of pods exits. Here is an example failure job: Compare with an old working one: In the spyglass chart you will see the extra set of nodestate change. Slack thread: To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of to confirm the fix has corrected the problem: /payload-aggregate periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview-serial 5 Since this is not a perma failing test, the above command will run the job 5 times. CC: @isabella-janssen"
  },
  {
    "id": "29672",
    "type": "pullRequest",
    "title": "OCPBUGS-54906: Change the test image to registry.k8s.io/e2e-test-images/agnhost",
    "body": "The e2e tests are failing on AWS ARM64 platform. ``` Failed to get endpoints for e2e-test-router-external-certificate-z6z2b/hello-openshift ``` The failure is because `openshift/hello-openshift` is not a multi-arch image. The pod log( said ``` exec container process `/hello-openshift`: Exec format error ``` We need to switch to a test image that supports Multi-arch. `registry.k8s.io/e2e-test-images/agnhost` is one such image widely used."
  },
  {
    "id": "29639",
    "type": "pullRequest",
    "title": "OCPEDGE-1675: feat: update some tests to account for the arbiter node",
    "body": "Resolves failures in CRI-O workload partitioning tests Resolves failures in Pod-Poller tests"
  },
  {
    "id": "29673",
    "type": "pullRequest",
    "title": "MCO-1636: skip PIS custom pool checks on SNO cluster",
    "body": "SNO cluster has a single node labelled with master and worker. Attempt to make a MCP from the master node will fail and any applied MC will fail as well"
  },
  {
    "id": "29596",
    "type": "pullRequest",
    "title": "MCO-1520: Add MachineConfigNode e2e tests",
    "body": "Contributors: @isabella-janssen @pablintino @djoshy Work Included - All current MCO team members added to the /machine_config owners file. - Adds tests for MCO's MachineConfigNode feature. - This includes a cherry pick of Notes - All tests should run successfully with a cluster built on `4.19.0-0.nightly-2025-03-21-030708` or later with tech preview enabled. - The tests for MCO-1595( & MCO-1596( will both run in the default serial suite since they can impact other tests through pool creation and updates. - The tests for MCO-1597( & MCO-1598( are both tagged `Slow`, as they often take longer than 5 minutes to run. To have these tests run automatically, we will need to create a suite at a later time (Slack ref( but the tests can still be run locally. - The tests for MCO-1599( will all run in the default parallel suite since they are not computationally expensive, simple, and should have no affects on other tests. MCO-1595( Validate MCN properties ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould have MCN properties matching associated node properties apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` MCO-1596( Validate MCN condition status transitions ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialShould properly transition through MCN conditions on node update apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/serial\" ``` MCO-1597( Validate MCN condition status on node degrade ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly report MCN conditions on node degrade apigroup:machineconfiguration.openshift.io\" ``` MCO-1598( Validate MCN on node creation and deletion Note that this test is skipped for Single Node Openshift. ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes SerialSlowShould properly create and remove MCN on node creation and deletion apigroup:machineconfiguration.openshift.io\" ``` MCO-1599( Validate MCN object can only be accessible from its associated MCD Note that these tests are skipped for Single Node Openshift. ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates by impersonation of the MCD SA apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates from a MCD that is not the associated one apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ``` ``` ./openshift-tests run-test \"sig-mcoOCPFeatureGate:MachineConfigNodes Should properly block MCN updates by impersonation of the MCD SA apigroup:machineconfiguration.openshift.io Suite:openshift/conformance/parallel\" ```"
  },
  {
    "id": "29679",
    "type": "pullRequest",
    "title": "OCPBUGS-54869: bump limits",
    "body": "Addresses increases seen in serial jobs after reenabling watch counting( periodic-ci-openshift-release-master-nightly-4.19-e2e-aws-ovn-single-node-serial periodic-ci-openshift-release-master-nightly-4.19-e2e-vsphere-ovn-serial periodic-ci-openshift-release-master-nightly-4.19-e2e-vsphere-ovn-upi-serial periodic-ci-openshift-release-master-nightly-4.19-e2e-gcp-ovn-serial periodic-ci-openshift-release-master-ci-4.19-e2e-gcp-ovn-techpreview-serial"
  },
  {
    "id": "29656",
    "type": "pullRequest",
    "title": "OCPBUGS-54661: Route ExternalCertificate: Fix e2e tests for metal platform",
    "body": "Fix e2e tests related to Route ExternalCertificate for `metal` platform. There are three variants of `metal` job: `ipv4` , `dualstack`, and `ipv6`. - For metal `ipv4` and `dualstack` we need to send the traffic from another exec pod instead of test platform. - For `ipv6`, added `Skipped:Disconnected` since it requires internet access. Slack thread( - Follow up on temporary skip PR : - Actual e2e PR:"
  },
  {
    "id": "29579",
    "type": "pullRequest",
    "title": "SPLAT-2060: Registered Machine API tests extension",
    "body": "SPLAT-2060( Changes - Registered Machine API tests extension"
  },
  {
    "id": "29599",
    "type": "pullRequest",
    "title": "MCO-1523: PinnedImageSet v1alpha1 Testing"
  },
  {
    "id": "29419",
    "type": "pullRequest",
    "title": "SDN-5217: Add tests for OVN-K default pod network route advertisement",
    "body": "tests for advertising the default network tests for advertising a cluster user-defined network"
  },
  {
    "id": "29070",
    "type": "pullRequest",
    "title": "NO-JIRA: add api error rate observed by kubelet, kcm, and scheduler",
    "body": "in addition to the `host` view (load balancer type), api-unreachable breaks it down by kubelet, kcm, and scheduler !image( taken from:"
  },
  {
    "id": "29628",
    "type": "pullRequest",
    "title": "TRT-2049: Track Watch Counts via Audit Events",
    "body": "With we no longer have the counts used in Recreate counts via audit events"
  },
  {
    "id": "29651",
    "type": "pullRequest",
    "title": "OAPE-91: Route ExternalCertificate: Skip e2e jobs for bare metal platform",
    "body": "We are seeing failures in `metal` platforms, so we are temporarily skipping the tests in metal. - E2E PR:"
  },
  {
    "id": "29282",
    "type": "pullRequest",
    "title": "OCPBUGS-18865: Reapply \"kube-apiserver disruption incluster monitors\"",
    "body": "This reverts commit 9d0bf5d."
  },
  {
    "id": "29600",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`94`) added jobs and (`76`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `286` jobs increased and `1329` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.18 amd64 aws 164 5233.33% 7704.86% 4.19 amd64 vsphere 158 994.12% 1387.63% 4.18 amd64 vsphere 454 235.00% 124.95% 4.19 amd64 vsphere 573 252.94% 1813.40% 4.19 amd64 azure 306 252.94% 616.49% 4.18 amd64 vsphere 454 100.00% 181.69% 4.19 amd64 azure 170 62.16% 286.80% 4.19 amd64 azure 306 135.29% 312.37% 4.18 amd64 azure 141 50.00% 44.23% 4.18 amd64 vsphere 143 100.00% 74.10% 4.19 amd64 azure 972 33.33% 120.51% 4.19 amd64 azure 972 33.33% 182.89% 4.19 amd64 azure 568 33.33% 62.42% 4.19 amd64 azure 972 50.00% 32.25% 4.19 amd64 azure 568 33.33% 51.89% 4.19 amd64 azure 972 33.33% 41.44% 4.19 amd64 azure 972 33.33% 64.74% 4.19 amd64 azure 306 105.88% 405.15% 4.19 amd64 azure 170 37.84% 356.85% 4.19 amd64 azure 568 32.50% 83.49% 4.19 amd64 aws 212 81.82% 657.14% 4.18 amd64 metal 182 0.00% 32.53% 4.18 amd64 gcp 152 0.00% 167.21% 4.18 amd64 azure 265 0.00% 36.00% 4.18 amd64 gcp 341 0.00% 160.00% 4.18 heterogeneous aws 163 0.00% 41.84% 4.18 amd64 aws 259 0.00% 50.25% 4.18 amd64 metal 111 0.00% 915.25% 4.18 amd64 azure 265 0.00% 100.00% 4.18 amd64 aws 259 0.00% 49.50% 4.18 ppc64le libvirt 250 0.00% 236.05% 4.18 amd64 aws 180 0.00% 100.00% 4.18 amd64 aws 164 0.00% 139.86% 4.18 ppc64le libvirt 251 0.00% 12400.00% 4.18 s390x libvirt 137 0.00% 1300.00% 4.18 amd64 gcp 341 0.00% 58.73% 4.18 amd64 azure 125 0.00% 590.91% 4.18 ppc64le libvirt 250 0.00% 259.47% 4.18 heterogeneous aws 163 0.00% 38.00% 4.18 amd64 azure 125 0.00% 1164.00% 4.18 amd64 azure 125 0.00% 50.67% 4.18 amd64 aws 259 0.00% 66.67% 4.19 amd64 gcp 118 0.00% 277.32% 4.19 amd64 metal 255 0.00% 3425.65% 4.19 s390x libvirt 176 0.00% 49.18% 4.19 arm64 aws 100 0.00% 96.08% 4.19 amd64 aws 775 0.00% 266.67% 4.19 amd64 metal 255 0.00% 5145.00% 4.19 amd64 azure 972 0.00% 229.00% 4.19 amd64 metal 255 0.00% 5387.67% 4.19 s390x libvirt 176 0.00% 49.58% 4.19 s390x libvirt 176 0.00% 49.69% 4.19 amd64 azure 170 0.00% 106.19% 4.19 s390x libvirt 176 0.00% 30.98% 4.19 amd64 azure 568 0.00% 166.60% 4.19 amd64 metal 255 0.00% 4149.53% 4.19 amd64 azure 972 0.00% 72.95% 4.19 amd64 rosa 104 0.00% 616.36% 4.19 s390x libvirt 176 0.00% 49.80% 4.19 amd64 azure 972 0.00% 257.25% 4.19 amd64 gcp 831 0.00% 33.33% 4.19 s390x libvirt 176 0.00% 49.13% 4.19 s390x libvirt 176 0.00% 49.35% 4.19 amd64 azure 972 0.00% 187.00% 4.19 amd64 aws 547 0.00% 54.00% 4.19 amd64 aws 143 0.00% 37.46% 4.19 amd64 metal 254 0.00% 1493726.00% 4.19 amd64 azure 972 0.00% 114.02% 4.19 s390x libvirt 176 0.00% 34.79% 4.19 s390x libvirt 176 0.00% 53.66% 4.19 arm64 aws 139 0.00% 85.19% 4.19 amd64 metal 254 0.00% 13023.70% 4.19 amd64 azure 972 0.00% 86.92% 4.19 amd64 azure 306 0.00% 106.19% 4.19 s390x libvirt 176 0.00% 33.75% 4.19 amd64 azure 972 0.00% 168.22% 4.19 amd64 azure 568 0.00% 177.78% 4.19 amd64 aws 754 0.00% 979.12% 4.19 amd64 gcp 118 0.00% 88.66% 4.19 s390x libvirt 176 0.00% 49.30% 4.19 arm64 aws 139 0.00% 1364.00% 4.19 amd64 azure 568 0.00% 269.44% 4.19 amd64 aws 1112 0.00% 54.84% 4.19 amd64 gcp 831 0.00% 194.00% 4.19 arm64 aws 100 0.00% 645.70% 4.19 s390x libvirt 176 0.00% 50.13% 4.19 amd64 azure 972 0.00% 140.45% 4.19 amd64 aws 547 0.00% 54.00% 4.19 s390x libvirt 176 0.00% 48.97% 4.19 arm64 aws 100 0.00% 164.71% 4.19 s390x libvirt 176 0.00% 31.42% /details alerts Information There were (`2077`) added jobs and (`5376`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `60` jobs increased and `334` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 azure 134 3966.23% 33.72% 4.19 amd64 azure 235 120.38% 82.36% 4.19 amd64 aws 424 68.46% 63.97% 4.19 amd64 gcp 322 57.96% 54.13% 4.19 amd64 aws 191 52.00% 47.20% 4.19 amd64 aws 113 291.80% 34.08% 4.18 amd64 gcp 123 102.27% 48.36% 4.19 amd64 gcp 152 48.31% 389.93% 4.18 amd64 gcp 123 0.00% 75.30% 4.18 amd64 aws 256 0.00% 235.67% 4.18 amd64 metal 233 0.00% 334.88% 4.19 amd64 metal 291 0.00% 32.07% 4.19 amd64 gcp 152 0.00% 772.12% 4.19 amd64 aws 226 0.00% 99.03% 4.19 amd64 gcp 223 0.00% 268.71% 4.19 amd64 vsphere 207 0.00% 70.92% 4.19 amd64 gcp 152 0.00% 63.74% 4.19 amd64 azure 134 0.00% 3452.51% 4.19 amd64 gcp 322 0.00% 94.80% 4.19 amd64 azure 262 0.00% 159.41% 4.19 amd64 azure 262 0.00% 214.29% 4.19 amd64 aws 226 0.00% 56.40% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29631",
    "type": "pullRequest",
    "title": "OCPBUGS-53279: add failure case to skip in testPodSandboxCreation()",
    "body": "according to the comment in this test case, the Garbage Collector tests which create the \"simpletest-rc-to-be-deleted.\" pods is ok to have sandbox creation failures. This specific message below was not being checked and has started to show up recently. skip this case: \"failed to create pod network sandbox\""
  },
  {
    "id": "29647",
    "type": "pullRequest",
    "title": "CNTRLPLANE-371: Use endpointslices in idling tests instead of deprecated endpoints",
    "body": "`endpoints` has been deprecated in 1.33 officially and we'll get deprecation warnings that causes failures in our test suite. This PR switches to `endpointslices` to fix the issue permanently in idling tests."
  },
  {
    "id": "29499",
    "type": "pullRequest",
    "title": "OAPE-91: Add E2E tests for Route ExternalCertificate feature",
    "body": "Implements end-to-end tests for routes configured with ExternalCertificate feature. These tests cover the following scenarios: - Validation and pre-requisite of the feature - Router serviceaccount should have permission to read the secret. - The route and the referenced secret must exist in the same namespace. - The secret should be of type `kubernetes.io/tls`. - Route with `Passthrough` termination is not supported. - Both external certificates and inline certificates are not allowed. - With a valid setup the router should support external certificate. - Multiple routes can refer a common secret. - Secret delete, re-create and update scenarios. - With RBAC permissions validation. - Route update scenarios (with validation checks) - To use a new external certificate. - To use the same external certificate. - To remove and again re-add the same external certificate. Part of:"
  },
  {
    "id": "29623",
    "type": "pullRequest",
    "title": "OCPBUGS-53249: feat: support platform type external",
    "body": "This change register the platform type `external` as a valid `provider` (flag) when running the conformance tests. This is required if we need more refinement when running conformance tests in that platform type (`External`), which was design inheriting from `None`. EP for more information: For more information about the tests executed in this PR, see this comment: 1 OCPBUGS-53249 - The following PR implements granular skips for platform specific on tests coming from kubernetes suites:"
  },
  {
    "id": "29643",
    "type": "pullRequest",
    "title": "MCO-1631: Remove \"sig-archEarly CRDs for openshift.io should have a status in the CRD schema\"",
    "body": "\"sig-archEarly CRDs for openshift.io should have a status in the CRD schema\" is no longer relevant. We only want to be checking for: If a CRD has a \"status\" field in the schema but no subresource.status defined. (which causes several problems). Its covered by an existing test \"sig-archEarly CRDs for openshift.io should have subresource.status\". Hence leaving no need for the prior test to exist. This work blocks which is necessary to ship PIS as a feature for 4.19"
  },
  {
    "id": "29606",
    "type": "pullRequest",
    "title": "TRT-1854: add synthetic test to check for presence of \"Skipped\" annotations in OTE tests",
    "body": "Temporarily check for the presence of the `Skipped:xyz` annotation in the test names, once this synthetic test begins to pass we can remove the annotation logic"
  },
  {
    "id": "29612",
    "type": "pullRequest",
    "title": "OCPBUGS-53014: Bump to kubernetes 1.32.3"
  },
  {
    "id": "29597",
    "type": "pullRequest",
    "title": "NE-1968: add e2e tests for FeatureGate GatewayAPI",
    "body": "Implements e2e tests for GatewayAPI featuregate. These tests cover the following scenarios: - Verify Gateway API CRDs and esnure required CRDs should already be installed - Verfiy Gateway API CRDs and ensure existing CRDs can not be deleted - Verify Gateway API CRDs and ensure existing CRDs can not be updated - Verify Gateway API CRDs and ensure CRD of standard group can not be created - Verify Gateway API CRDs and ensure CRD of experimental group is not installed - Verify Gateway API CRDs and ensure CRD of experimental group can not be created requires"
  },
  {
    "id": "29626",
    "type": "pullRequest",
    "title": "NO-ISSUE: Clean up MachineConfiguration fixture apply",
    "body": "Follow-up to This encapsulate the apply and wait into a single function, and also added it to a couple of spots that I missed in the original PR."
  },
  {
    "id": "29625",
    "type": "pullRequest",
    "title": "NO-ISSUE: Wait for MachineConfiguration status to be upto date",
    "body": "Before running through the remainder of the boot image test, we need to ensure that the fixture applied has been accounted for in the status. This adds a short wait function to do this."
  },
  {
    "id": "29616",
    "type": "pullRequest",
    "title": "TRT-2052: Fix broken intervals charts",
    "body": "The timelines-chart seems to have changed at this unpkg location, if you load that in a browser and search for the TimelinesChart object we use, it's no longer there, though it does load some js. The github repo for the actual project recommends this new url and I've confirmed this works by downloading an html intervals file and editing it."
  },
  {
    "id": "29624",
    "type": "pullRequest",
    "title": "NO-JIRA: Alert intervals should have the display flag for charting"
  },
  {
    "id": "29618",
    "type": "pullRequest",
    "title": "OCPBUGS-52358: Fix egress firewall tests by updating the URL from docs.redhat.com to redhat.com",
    "body": "This PR updates the egressfirewall tests to use redhat.com instead of docs.redhat.com as there are a lot of failure encountered for this URL. The issue with docs.redhat.com is that the TTL is very low (20s) because of which the ovnkube-node and the test pod are resolving to different IP addresses as shown in the following analysis: - - The TTL of redhat.com is very large (2695s) which will ensure that the failure of the test is very less."
  },
  {
    "id": "29614",
    "type": "pullRequest",
    "title": "CNTRLPLANE-5: Fix decoding of CBOR data in etcd test",
    "body": "The Unmarshal function uses strict decoding by default. This means that the target object must define all fields present in the CBOR data. Otherwise, it returns an unknown field error. This patch fixes that by using a intermediary mapstringany. /assign @benluddy"
  },
  {
    "id": "29439",
    "type": "pullRequest",
    "title": "SDN-5768: virt, udn: use l2bridge binding",
    "body": "This - l2bridge - is the binding which we will use on 4.18 and 4.19. In later releases we expect passt to replace it, but, its shortcomings (unable to preserve TCP connections during live migration) make it a bad candidate for the binding of the primary network attachment."
  },
  {
    "id": "29604",
    "type": "pullRequest",
    "title": "OCPBUGS-52358: Fix egress firewall tests by updating the URL from docs.openshift.com to docs.redhat.com after docs migration",
    "body": "docs.openshift.com got moved to docs.redhat.com and our egress firewall/egressnetworkpolicy tests were using that fqdn to curl and test for egress firewall functionality. With the DNS name no longer resolving, these tests need to be updated to the docs.redhat.com server instead."
  },
  {
    "id": "29601",
    "type": "pullRequest",
    "title": "CNTRLPLANE-5: Decode CBOR data in etcd test",
    "body": "CBOR serving and storage in apiserver should be TechPreview in 4.19, so we need to adjust our test to accept that type of storage in etcd."
  },
  {
    "id": "29598",
    "type": "pullRequest",
    "title": "MCO-1594: updates for ManagedBootImageStatus",
    "body": "This PR modifies boot image update tests: - Use the explicit opt-out knob when opting out - Skip the degrade test temporarily - ensure cleanups are done in success or fail"
  },
  {
    "id": "29437",
    "type": "pullRequest",
    "title": "SDN-4168: Fix IPsec tests for monitor failures",
    "body": "This PR fixes following issues to stabilize monitor tests while running IPsec tests. When IPsec tests configuring certificates into libreswan nss db for north south traffic via a machine config, it's rebooting worker nodes by default which still makes a monitor test to fail. Actually it is not required to reboot the nodes just for configuring certs on the nss db. Hence adding node disruption machine configuration policy so that nodes are not rebooted while deploying certificates on the worker nodes. When IPsec mode are changed across tests within IPsec test suite, it causes reboot of ovnkube-node daemonset pods, It's expected workload traffic would fail temporarily until pods are settle down after IPsec is properly configured in every node's OVN and OvS across the cluster. So we should not test ipsec mode change in the ipsec test suite and instead for every ipsec mode, there should be one CI lane, then in the test corresponding configuration and traffic must be tested. So it merges everything with a single test which can be run from CI lanes for Full and External IPsec modes. Depends on"
  },
  {
    "id": "29595",
    "type": "pullRequest",
    "title": "TRT-2026: validate that the binary extraction was successful via existence check",
    "body": "Checking for the existence of the binary at the destination path post-extraction seems like the most efficient way to validate this and provide a user-friendly message when it occurs. The new error message looks like: ``` error running options: encountered errors while extracting binaries: extracted binary at path \"/root/.cache/openshift-tests/registry_ci_openshift_org_ocp_release_4_17_0-0_nightly-2025-03-09-083519_98d403caa91e/k8s-tests-ext.gz\" does not exist. the src path \"/usr/bin/k8s-tests-ext.gz\" doesn't exist in image \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c79a94239285fe42301476bc31e4de33b9a12a34b398386ac0c865b335250407\". note the version of origin needs to match the version of the cluster under testerror: encountered errors while extracting binaries: extracted binary at path \"/root/.cache/openshift-tests/registry_ci_openshift_org_ocp_release_4_17_0-0_nightly-2025-03-09-083519_98d403caa91e/k8s-tests-ext.gz\" does not exist. the src path \"/usr/bin/k8s-tests-ext.gz\" doesn't exist in image \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c79a94239285fe42301476bc31e4de33b9a12a34b398386ac0c865b335250407\". note the version of origin needs to match the version of the cluster under test ```"
  },
  {
    "id": "29585",
    "type": "pullRequest",
    "title": "OSD-26270: re-enabled managed-upgrade-operator test by removing exclusion",
    "body": "What type of PR is this? Test Case Re-Enable What this PR does / why we need it? Previously, the managed-upgrade-operator test was excluded due to failures related to a known issue. Now, after verification, the issue no longer exists. The test should be re-enabled to ensure the managed-upgrade-operator is properly monitored in CI. By removing this exclusion, we allow failures to be properly detected and addressed in future OpenShift releases. Key Changes: - Removed the exclusion entry for `managed-upgrade-operator` in `exclusions.go`. Which Jira/GitHub issue(s) this PR fixes? Part of Special notes for your reviewer: This PR removes the exclusion of `managed-upgrade-operator`, re-enabling the test in CI. Issue verification was done on OpenShift 4.18 and 4.19, and no pod restarts were observed."
  },
  {
    "id": "29570",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`26`) added jobs and (`76`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `462` jobs increased and `732` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.18 s390x libvirt 125 59.67% 157.51% 4.18 s390x libvirt 125 83.10% 152.76% 4.18 s390x libvirt 125 90.57% 169.96% 4.18 s390x libvirt 125 79.89% 162.04% 4.18 s390x libvirt 125 81.30% 165.05% 4.18 s390x libvirt 125 69.74% 166.93% 4.18 s390x libvirt 125 65.30% 169.28% 4.18 s390x libvirt 125 64.98% 162.98% 4.18 s390x libvirt 125 62.68% 159.07% 4.18 amd64 vsphere 427 100.00% 95.67% 4.19 amd64 azure 665 90.00% 97.49% 4.19 heterogeneous vsphere 127 130.77% 153.18% 4.19 heterogeneous vsphere 127 566.67% 202.12% 4.19 heterogeneous vsphere 127 466.67% 197.53% 4.18 amd64 azure 590 50.00% 52.17% 4.18 amd64 azure 590 50.00% 30.43% 4.19 amd64 azure 665 50.00% 59.00% 4.19 amd64 azure 665 100.00% 112.00% 4.19 heterogeneous vsphere 127 100.00% 255.79% 4.19 amd64 azure 665 50.00% 200.00% 4.19 amd64 azure 894 100.00% 98.04% 4.19 heterogeneous vsphere 127 70.00% 454.22% 4.19 heterogeneous vsphere 127 53.85% 162.97% 4.19 amd64 aws 709 42.86% 64.00% 4.19 amd64 aws 709 42.86% 32.28% 4.18 amd64 gcp 430 0.00% 15792.00% 4.18 amd64 aws 672 0.00% 33.33% 4.18 amd64 gcp 316 0.00% 270.00% 4.18 ppc64le libvirt 195 0.00% 52.17% 4.18 s390x libvirt 125 0.00% 143.73% 4.18 arm64 aws 214 0.00% 71.29% 4.18 amd64 azure 267 0.00% 340.00% 4.18 amd64 gcp 430 0.00% 1745.97% 4.18 amd64 gcp 605 0.00% 344.66% 4.18 amd64 gcp 430 0.00% 7235.00% 4.18 heterogeneous aws 160 0.00% 41.00% 4.18 amd64 gcp 316 0.00% 225.91% 4.18 ppc64le libvirt 195 0.00% 52.11% 4.18 s390x libvirt 125 0.00% 143.32% 4.18 amd64 azure 267 0.00% 118.18% 4.18 amd64 metal 205 0.00% 53457.89% 4.18 heterogeneous aws 160 0.00% 310.61% 4.18 ppc64le libvirt 195 0.00% 52.93% 4.18 amd64 vsphere 138 0.00% 2479.00% 4.18 ppc64le libvirt 195 0.00% 52.11% 4.18 amd64 azure 126 0.00% 206.27% 4.18 amd64 gcp 430 0.00% 13607.00% 4.18 amd64 gcp 138 0.00% 580.20% 4.18 amd64 aws 672 0.00% 200.00% 4.18 arm64 aws 109 0.00% 92.00% 4.18 s390x libvirt 125 0.00% 145.31% 4.18 amd64 gcp 605 0.00% 96.00% 4.18 amd64 gcp 430 0.00% 1096.44% 4.18 amd64 gcp 430 0.00% 6676.20% 4.18 amd64 gcp 316 0.00% 133.89% 4.18 heterogeneous aws 160 0.00% 100.00% 4.18 amd64 aws 279 0.00% 170.27% 4.18 amd64 azure 126 0.00% 550.00% 4.18 ppc64le libvirt 195 0.00% 56.07% 4.18 amd64 azure 126 0.00% 79.28% 4.18 ppc64le libvirt 195 0.00% 52.93% 4.18 amd64 gcp 138 0.00% 117.24% 4.18 amd64 aws 102 0.00% 44.93% 4.18 amd64 gcp 138 0.00% 1398.96% 4.18 amd64 azure 243 0.00% 38.67% 4.18 amd64 azure 590 0.00% 175.14% 4.18 amd64 azure 243 0.00% 52.67% 4.18 amd64 azure 243 0.00% 58.00% 4.18 amd64 gcp 430 0.00% 5015.29% 4.18 amd64 gcp 605 0.00% 480.61% 4.18 amd64 azure 126 0.00% 47.06% 4.18 amd64 gcp 316 0.00% 238.95% 4.18 s390x libvirt 125 0.00% 16974.41% 4.18 ppc64le libvirt 195 0.00% 52.48% 4.18 amd64 gcp 430 0.00% 7235.00% 4.18 s390x libvirt 125 0.00% 143.90% 4.18 s390x libvirt 125 0.00% 23495.77% 4.18 amd64 metal 207 0.00% 94.00% 4.18 amd64 azure 590 0.00% 66.67% 4.18 ppc64le libvirt 195 0.00% 51.75% 4.18 amd64 gcp 430 0.00% 4596.91% 4.18 amd64 gcp 430 0.00% 1655.00% 4.18 amd64 gcp 430 0.00% 6440.21% 4.18 ppc64le libvirt 195 0.00% 53.21% 4.18 amd64 gcp 316 0.00% 95.88% 4.18 s390x libvirt 125 0.00% 143.87% 4.18 amd64 azure 590 0.00% 77.78% 4.18 s390x libvirt 125 0.00% 144.43% 4.18 s390x libvirt 125 0.00% 142.77% 4.18 s390x libvirt 125 0.00% 143.32% 4.18 heterogeneous aws 160 0.00% 614.29% 4.18 amd64 gcp 430 0.00% 6808.95% 4.18 amd64 gcp 605 0.00% 96.00% 4.18 amd64 gcp 138 0.00% 117.24% 4.18 ppc64le libvirt 195 0.00% 33.98% 4.18 amd64 azure 590 0.00% 50.00% 4.18 amd64 azure 590 0.00% 50.00% 4.18 amd64 aws 607 0.00% 103.70% 4.18 amd64 gcp 430 0.00% 4790.00% 4.18 s390x libvirt 125 0.00% 143.32% 4.18 s390x libvirt 125 0.00% 143.87% 4.19 amd64 aws 609 0.00% 72.19% 4.19 amd64 aws 1048 0.00% 1001.96% 4.19 heterogeneous aws 101 0.00% 163.16% 4.19 amd64 gcp 1018 0.00% 119.93% 4.19 amd64 aws 709 0.00% 192.00% 4.19 arm64 aws 150 0.00% 100.19% 4.19 amd64 metal 104 0.00% 376.83% 4.19 amd64 metal 104 0.00% 123.73% 4.19 arm64 aws 147 0.00% 4900.00% 4.19 amd64 metal 223 0.00% 451.00% 4.19 s390x libvirt 143 0.00% 100.00% 4.19 amd64 aws 709 0.00% 46.00% 4.19 amd64 aws 709 0.00% 70.42% 4.19 amd64 azure 894 0.00% 263.16% 4.19 amd64 azure 665 0.00% 36.00% 4.19 amd64 metal 223 0.00% 2434.00% 4.19 amd64 azure 894 0.00% 99.41% 4.19 amd64 aws 609 0.00% 30.67% 4.19 heterogeneous aws 287 0.00% 31.58% 4.19 s390x libvirt 143 0.00% 71.03% 4.19 amd64 metal 212 0.00% 663.30% 4.19 amd64 aws 728 0.00% 71.30% 4.19 arm64 aws 147 0.00% 7600.00% 4.19 amd64 metal 104 0.00% 78.79% 4.19 s390x libvirt 143 0.00% 182.86% 4.19 heterogeneous aws 287 0.00% 31.58% 4.19 arm64 aws 147 0.00% 2600.00% 4.19 ppc64le libvirt 266 0.00% 52.54% 4.19 amd64 aws 728 0.00% 61.68% 4.19 arm64 aws 147 0.00% 108.00% 4.19 heterogeneous aws 101 0.00% 163.16% 4.19 s390x libvirt 143 0.00% 616.23% 4.19 amd64 gcp 717 0.00% 70.37% 4.19 s390x libvirt 143 0.00% 563.85% 4.19 amd64 azure 894 0.00% 130.18% 4.19 amd64 azure 894 0.00% 41.40% 4.19 amd64 azure 894 0.00% 41.40% 4.19 amd64 azure 665 0.00% 37.50% 4.19 ppc64le libvirt 267 0.00% 145.41% 4.19 amd64 metal 104 0.00% 127.20% 4.19 amd64 azure 665 0.00% 59.00% 4.19 amd64 aws 1048 0.00% 381.48% 4.19 amd64 metal 104 0.00% 198.33% 4.19 amd64 azure 894 0.00% 81.40% 4.19 amd64 aws 609 0.00% 30.67% 4.19 amd64 azure 894 0.00% 75.44% 4.19 amd64 metal 221 0.00% 608.49% /details alerts Information There were (`3029`) added jobs and (`1112`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `52` jobs increased and `249` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 gcp 193 608.97% 263.71% 4.19 arm64 aws 125 93.94% 72.71% 4.19 amd64 gcp 193 103.45% 108.14% 4.19 amd64 gcp 129 60.52% 67.46% 4.19 amd64 azure 175 54.02% 319.81% 4.18 amd64 vsphere 161 0.00% 89.26% 4.18 amd64 aws 237 0.00% 30.66% 4.19 amd64 aws 247 0.00% 113.61% 4.19 amd64 azure 163 0.00% 122.14% 4.19 amd64 azure 163 0.00% 107.14% 4.19 amd64 metal 227 0.00% 101.14% 4.19 amd64 gcp 193 0.00% 91.99% 4.19 amd64 gcp 193 0.00% 202.81% 4.19 amd64 gcp 260 0.00% 51.72% 4.19 amd64 gcp 129 0.00% 629.78% 4.19 amd64 metal 227 0.00% 145.60% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29577",
    "type": "pullRequest",
    "title": "NO-ISSUE: replace hardcoded ClusterVersionCapability string in olmv1 tests",
    "body": "Value was previously hardcoded. Can be replaced now since openshift/api has been bumped and has the `configv1.ClusterVersionCapabilityOperatorLifecycleManagerV1` constant."
  },
  {
    "id": "29566",
    "type": "pullRequest",
    "title": "TRT-1575: Fail the test when an expected operator goes to degraded",
    "body": "After we collect the known exceptions, we are removing the default flake behavior to catch any new regressions."
  },
  {
    "id": "29586",
    "type": "pullRequest",
    "title": "OCPBUGS-52578: Use payload pullspec for image info test",
    "body": "`latest` tag in `quay.io/coreos/etcd` image has been removed. This PR updates the test to use `quay.io/openshift-release-dev/ocp-release:4.18.3-x86_64`."
  },
  {
    "id": "29574",
    "type": "pullRequest",
    "title": "OCPBUGS-51373: use non-fake boot image for patch",
    "body": "These tests ( failing as they use a fake disk image as part of a patch when checking GCP disk reconciliation. This is due to recent changes with disk reconciliation on GCP: We now check if the disk is UEFI compatible before trying to create the machine. This change updates the fake patch to use a real disk image."
  },
  {
    "id": "29534",
    "type": "pullRequest",
    "title": "NO-JIRA: Support known namespaces for terminationMessagePolicy tests",
    "body": "Aggregation failures for gcp-ovn-rt-upgrade( due to the namespace `openshift-infra` showing up in only 1 out of 10 runs. Sippy( shows only the one run currently Skipping the namespace unless we want to manually add it to the list when missing."
  },
  {
    "id": "29572",
    "type": "pullRequest",
    "title": "Revert \"OCPNODE-2596: Add SigstoreImageVerification e2e tests\"",
    "body": "Reverts openshift/origin29530 Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. Multiple payload failures due to periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview-serial failures To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of these jobs to confirm the fix has corrected the problem: ``` /payload-job periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview-serial ``` periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview-serial( started failing in 4.19.0-0.nightly-2025-03-01-032247( Reviewing the event timing indicate they are occurring at the time these tests are running. ``` sig-arch events should not repeat pathologically for ns/openshift-machine-config-operator { 1 events happened too frequently event happened 24 times, something is wrong: namespace/openshift-machine-config-operator hmsg/73d40b8baf machineconfigpool/master - reason/DeferringOperatorNodeUpdate Deferring update of machine config operator node ip-10-0-81-49.ec2.internal (10:53:30Z) result=reject } ```"
  },
  {
    "id": "29530",
    "type": "pullRequest",
    "title": "OCPNODE-2596: Add SigstoreImageVerification e2e tests",
    "body": "This PR adds e2e tests for Clusterimagepolicy and imagepolicy (`SigstoreImageVerification` tech preview featuregate)"
  },
  {
    "id": "29559",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`52`) added jobs and (`0`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `448` jobs increased and `632` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 aws 128 419.36% 399.07% 4.19 amd64 aws 128 402.90% 109.24% 4.19 amd64 aws 128 391.38% 128.93% 4.19 s390x libvirt 151 2590.14% 39.36% 4.19 s390x libvirt 151 2983.33% 42.35% 4.19 s390x libvirt 151 1965.93% 39.97% 4.19 s390x libvirt 151 2107.32% 36.90% 4.19 s390x libvirt 151 2850.00% 48.72% 4.19 s390x libvirt 151 2716.67% 49.46% 4.19 s390x libvirt 151 3115.69% 48.72% 4.19 amd64 metal 103 161.33% 149.58% 4.19 amd64 metal 103 96.03% 70.00% 4.19 amd64 metal 103 386.36% 204.60% 4.19 ppc64le libvirt 246 36.46% 84.33% 4.19 ppc64le libvirt 246 37.12% 57.59% 4.19 ppc64le libvirt 246 36.92% 65.05% 4.19 ppc64le libvirt 246 34.09% 64.82% 4.19 ppc64le libvirt 246 33.38% 60.28% 4.19 ppc64le libvirt 246 33.38% 61.97% 4.19 ppc64le libvirt 246 31.89% 63.33% 4.19 ppc64le libvirt 246 31.47% 64.19% 4.19 ppc64le libvirt 246 30.50% 65.05% 4.19 amd64 metal 103 65.38% 125.58% 4.19 amd64 gcp 1040 150.00% 7847.17% 4.19 amd64 gcp 693 100.00% 9110.67% 4.19 amd64 gcp 1040 100.00% 6931.52% 4.19 amd64 gcp 1040 300.00% 7847.17% 4.19 amd64 gcp 1040 100.00% 6717.43% 4.19 amd64 gcp 163 270.00% 13595.00% 4.19 amd64 gcp 693 353.33% 13714.00% 4.19 amd64 gcp 693 240.00% 15460.56% 4.19 amd64 gcp 693 120.00% 12044.18% 4.19 amd64 gcp 693 80.00% 9840.90% 4.19 amd64 gcp 338 215.00% 6089.00% 4.19 amd64 gcp 338 215.00% 5621.99% 4.19 amd64 gcp 1040 200.00% 8135.41% 4.19 amd64 gcp 338 200.00% 8139.67% 4.19 amd64 gcp 1040 200.00% 9854.70% 4.19 amd64 gcp 693 100.00% 9008.00% 4.19 amd64 gcp 693 200.00% 12808.00% 4.19 amd64 gcp 1040 100.00% 9200.00% 4.19 amd64 gcp 1040 200.00% 9476.60% 4.19 amd64 gcp 693 180.00% 17694.84% 4.18 amd64 vsphere 546 35.59% 96.89% 4.18 amd64 azure 347 100.00% 71.67% 4.18 amd64 gcp 978 50.00% 2965.73% 4.18 amd64 azure 347 100.00% 33.33% 4.18 amd64 gcp 978 100.00% 4152.88% 4.18 amd64 gcp 978 100.00% 3289.44% 4.18 amd64 azure 347 100.00% 33.33% 4.18 amd64 azure 150 100.00% 50.00% 4.19 amd64 gcp 693 100.00% 19054.00% 4.19 amd64 gcp 1040 100.00% 9511.00% 4.19 amd64 gcp 1040 100.00% 11607.33% 4.19 amd64 gcp 693 100.00% 20298.43% 4.19 amd64 azure 169 100.00% 98.00% 4.19 amd64 metal 103 90.00% 1176.00% 4.19 amd64 gcp 163 400.00% 132.98% 4.19 amd64 aws 673 40.00% 50.00% 4.18 amd64 gcp 764 54.55% 39.50% 4.18 amd64 gcp 764 0.00% 71.70% 4.18 amd64 gcp 378 0.00% 519.35% 4.18 amd64 gcp 978 0.00% 912.00% 4.18 amd64 gcp 978 0.00% 12172.87% 4.18 amd64 gcp 172 0.00% 24151.00% 4.18 amd64 vsphere 177 0.00% 58.73% 4.18 amd64 metal 257 0.00% 4044.00% 4.18 amd64 metal 115 0.00% 86.00% 4.18 amd64 gcp 172 0.00% 122.22% 4.18 amd64 gcp 764 0.00% 57.62% 4.18 amd64 aws 1038 0.00% 4254.00% 4.18 amd64 metal 337 0.00% 156.41% 4.18 amd64 gcp 172 0.00% 16624.83% 4.18 heterogeneous aws 187 0.00% 180.00% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 gcp 764 0.00% 507.40% 4.18 amd64 gcp 978 0.00% 12187.23% 4.18 amd64 gcp 978 0.00% 15300.00% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 azure 150 0.00% 50.33% 4.18 amd64 gcp 978 0.00% 2969.00% 4.18 amd64 metal 115 0.00% 86.00% 4.18 amd64 azure 347 0.00% 100.00% 4.18 amd64 gcp 764 0.00% 83.20% 4.18 amd64 gcp 978 0.00% 15300.00% 4.18 amd64 gcp 978 0.00% 11430.75% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 gcp 378 0.00% 694.38% 4.18 amd64 azure 347 0.00% 51.93% 4.18 amd64 azure 347 0.00% 50.38% 4.18 amd64 gcp 978 0.00% 15300.00% 4.18 amd64 gcp 378 0.00% 440.30% 4.18 amd64 gcp 378 0.00% 122.22% 4.18 s390x libvirt 160 0.00% 594.74% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 aws 1038 0.00% 65.73% 4.18 amd64 gcp 764 0.00% 100.00% 4.18 amd64 gcp 172 0.00% 24180.00% 4.18 amd64 gcp 978 0.00% 15300.00% 4.18 amd64 gcp 378 0.00% 4093.33% 4.18 amd64 azure 941 0.00% 89.29% 4.18 heterogeneous aws 187 0.00% 3726.09% 4.18 amd64 aws 364 0.00% 11875.00% 4.18 amd64 aws 340 0.00% 3061.00% 4.18 amd64 metal 115 0.00% 86.00% 4.18 amd64 aws 364 0.00% 316.67% 4.18 amd64 gcp 764 0.00% 111.99% 4.18 s390x libvirt 160 0.00% 55.47% 4.18 amd64 metal 115 0.00% 108.99% 4.18 amd64 gcp 378 0.00% 222.58% 4.18 amd64 azure 347 0.00% 63.64% 4.18 amd64 gcp 172 0.00% 19117.78% 4.18 amd64 metal 115 0.00% 86.00% 4.18 amd64 metal 115 0.00% 86.00% 4.18 s390x libvirt 160 0.00% 71.04% 4.18 amd64 metal 115 0.00% 86.00% 4.18 amd64 gcp 378 0.00% 1452.00% 4.18 amd64 gcp 172 0.00% 24151.00% 4.18 amd64 gcp 764 0.00% 100.00% 4.18 amd64 gcp 764 0.00% 124.67% 4.18 amd64 gcp 172 0.00% 26326.67% 4.18 amd64 metal 257 0.00% 2076.00% 4.18 amd64 azure 941 0.00% 265.52% 4.18 amd64 gcp 764 0.00% 1500.00% 4.18 amd64 metal 115 0.00% 86.00% 4.19 amd64 metal 103 0.00% 1599.33% 4.19 amd64 vsphere 508 0.00% 334.78% 4.19 amd64 azure 280 0.00% 53.85% 4.19 amd64 gcp 1040 0.00% 50.00% 4.19 amd64 aws 673 0.00% 59.91% 4.19 amd64 aws 269 0.00% 61.77% 4.19 amd64 azure 644 0.00% 38.89% 4.19 amd64 gcp 1040 0.00% 66.67% 4.19 amd64 vsphere 178 0.00% 3481.00% 4.19 amd64 gcp 338 0.00% 31.50% 4.19 amd64 aws 598 0.00% 50.00% 4.19 amd64 metal 103 0.00% 318.50% 4.19 ppc64le libvirt 246 0.00% 104.86% 4.19 amd64 aws 598 0.00% 138.69% 4.19 amd64 metal 103 0.00% 5782.00% 4.19 amd64 metal 103 0.00% 1960.00% 4.19 amd64 gcp 163 0.00% 193.33% 4.19 amd64 aws 200 0.00% 100.00% 4.19 amd64 azure 169 0.00% 60.93% 4.19 amd64 metal 103 0.00% 1764.00% 4.19 ppc64le libvirt 246 0.00% 104.44% 4.19 amd64 metal 103 0.00% 259.67% 4.19 ppc64le libvirt 246 0.00% 92.83% 4.19 amd64 metal 103 0.00% 31.33% 4.19 ppc64le libvirt 246 0.00% 106.31% 4.19 amd64 vsphere 508 0.00% 85.76% 4.19 amd64 metal 103 0.00% 2351.00% 4.19 amd64 metal 103 0.00% 1176.00% 4.19 amd64 gcp 163 0.00% 76.00% 4.19 ppc64le libvirt 246 0.00% 104.94% 4.19 amd64 gcp 1040 0.00% 573.99% 4.19 amd64 metal 103 0.00% 1666.00% 4.19 amd64 aws 269 0.00% 137.13% 4.19 amd64 aws 269 0.00% 143.79% 4.19 ppc64le libvirt 245 0.00% 447.79% 4.19 amd64 gcp 693 0.00% 3500.00% 4.19 ppc64le libvirt 246 0.00% 107.46% 4.19 amd64 metal 103 0.00% 4998.00% 4.19 amd64 aws 269 0.00% 62.93% 4.19 amd64 vsphere 508 0.00% 32.08% 4.19 amd64 aws 673 0.00% 75.44% 4.19 amd64 aws 673 0.00% 51.20% 4.19 amd64 azure 169 0.00% 100.00% 4.19 amd64 gcp 693 0.00% 108.00% 4.19 ppc64le libvirt 246 0.00% 105.27% 4.19 amd64 azure 644 0.00% 39.25% 4.19 amd64 gcp 163 0.00% 24445.00% 4.19 amd64 aws 673 0.00% 121.88% 4.19 amd64 metal 103 0.00% 1764.00% 4.19 amd64 metal 103 0.00% 833.00% 4.19 amd64 metal 103 0.00% 71.27% 4.19 amd64 metal 218 0.00% 8228.00% 4.19 amd64 metal 218 0.00% 1968.22% 4.19 ppc64le libvirt 246 0.00% 105.17% 4.19 amd64 gcp 1040 0.00% 100.00% 4.19 amd64 aws 598 0.00% 470.96% 4.19 ppc64le libvirt 246 0.00% 294.57% 4.19 amd64 aws 673 0.00% 59.24% 4.19 amd64 gcp 338 0.00% 6766.39% 4.19 ppc64le libvirt 246 0.00% 93.46% 4.19 amd64 vsphere 508 0.00% 93.00% 4.19 arm64 aws 151 0.00% 1450.00% 4.19 amd64 gcp 1040 0.00% 3361.00% 4.19 amd64 gcp 338 0.00% 8139.67% 4.19 amd64 metal 103 0.00% 5096.00% 4.19 amd64 azure 280 0.00% 100.00% 4.19 amd64 gcp 163 0.00% 12807.14% 4.19 heterogeneous aws 225 0.00% 484.62% /details alerts Information There were (`671`) added jobs and (`700`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `32` jobs increased and `325` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 arm64 aws 106 106.69% 94.73% 4.19 amd64 gcp 118 42.95% 37.07% 4.18 amd64 gcp 119 57.17% 177.76% 4.18 amd64 metal 255 0.00% 136.88% 4.18 amd64 azure 100 0.00% 2999.17% 4.18 amd64 azure 165 0.00% 112.35% 4.18 amd64 azure 100 0.00% 552.06% 4.18 amd64 azure 212 0.00% 1222.11% 4.18 amd64 azure 212 0.00% 1223.52% 4.19 amd64 aws 238 0.00% 91475.00% 4.19 amd64 azure 241 0.00% 736.99% 4.19 amd64 gcp 167 0.00% 78.27% 4.19 amd64 vsphere 212 0.00% 221.60% 4.19 amd64 azure 206 0.00% 32.83% 4.19 amd64 azure 138 0.00% 372.37% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29569",
    "type": "pullRequest",
    "title": "WRKLDS-1653: update pathological ScalingReplicaSet event exception",
    "body": "caused by the kube bump and needed to fix failing jobs in"
  },
  {
    "id": "29565",
    "type": "pullRequest",
    "title": "TRT-1874: rename master-main"
  },
  {
    "id": "29560",
    "type": "pullRequest",
    "title": "OCPBUGS-50587: Rely on unstructured for update status instead of type conversion",
    "body": "Currently, we are in a process of fixing a bug that is caused by that node-controller and installer-controller attempt to update the node statuses of static operators simultaneously. Consequently, that race results in a hot loop that eventually causes the operator fall into a degraded state in a period of time. This PR (which is inherited from adds new validations to only allow; node status can only be created (or removed) with only node name (no other fields should be set) -- node controller node status can be updated with other fields in subsequent update requests -- installer controller However, `JSONPatch` tests in this repository does indeed allow to create new node statuses with some dummy but non-nil values (e.g. `currentRevision=0`) and this test fails in openshift/api PRs ^^. This PR skips the unstructured - object conversion which eventually adds `currentRevision=0` while updating statuses. After the patch in openshift/api merges, I'll add new tests specifically covering these new rules in a followup PR (because this PR has to be backported to 4.18)."
  },
  {
    "id": "29544",
    "type": "pullRequest",
    "title": "OCPQE-28543: Check load balancer healthcheck port and path on aws",
    "body": "Add case on aws to check cluster scoped load balancer healthcheck port and path should be 10256/healthz. @JoelSpeed @huali9 @miyadav PTAL"
  },
  {
    "id": "29557",
    "type": "pullRequest",
    "title": "NO-JIRA: Allow overriding extension binary to local path",
    "body": "This makes it easier to do local development."
  },
  {
    "id": "29549",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Update to Kubernetes v1.32.2"
  },
  {
    "id": "29326",
    "type": "pullRequest",
    "title": "OCPBUGS-26601: Re-enable AWS for router HTTP/2 test",
    "body": "After local tests on an AWS cluster, I don't see the limitation for the HTTP/2 support on AWS CLB (default LB type) anymore. This PR re-introduces which was reverted by"
  },
  {
    "id": "29450",
    "type": "pullRequest",
    "title": "TRT-1286: List images from external binaries",
    "body": "I recommend to review commits sequentially. This depends on /hold"
  },
  {
    "id": "29490",
    "type": "pullRequest",
    "title": "OCPBUGS-49600: Display etcd bootstrap event on timeline",
    "body": "Update `operator_log_scraper.go` to record start/finish of etcd bootstrap member removal. This also updates other events tracked there to have a duration of 1 sec otherwise these are not being displayed on spyglass interval chart"
  },
  {
    "id": "29531",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`32`) added jobs and (`116`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `281` jobs increased and `765` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.18 amd64 metal 111 197.24% 73.96% 4.19 s390x libvirt 150 106.46% 123.94% 4.19 s390x libvirt 150 101.90% 125.35% 4.19 s390x libvirt 150 104.56% 125.15% 4.19 s390x libvirt 150 104.56% 127.40% 4.19 s390x libvirt 150 99.81% 126.09% 4.19 s390x libvirt 150 99.81% 125.69% 4.19 s390x libvirt 150 93.20% 124.90% 4.19 s390x libvirt 150 88.01% 124.23% 4.19 s390x libvirt 150 82.46% 124.51% 4.19 amd64 metal 101 44.83% 39.82% 4.18 amd64 metal 111 87.50% 88.23% 4.19 s390x libvirt 150 128.17% 35.49% 4.19 amd64 azure 166 111.54% 255.00% 4.18 amd64 metal 112 33.33% 72.93% 4.19 amd64 gcp 1022 100.00% 33.33% 4.19 amd64 gcp 1022 95.00% 50.00% 4.19 amd64 azure 271 233.33% 100.00% 4.18 amd64 metal 112 0.00% 127.08% 4.18 amd64 vsphere 538 0.00% 41.59% 4.18 heterogeneous aws 196 0.00% 228.57% 4.18 amd64 aws 354 0.00% 35.75% 4.18 amd64 azure 368 0.00% 85.19% 4.18 amd64 azure 941 0.00% 50.00% 4.18 amd64 aws 354 0.00% 147.93% 4.18 ppc64le libvirt 209 0.00% 801.82% 4.18 arm64 aws 108 0.00% 615.38% 4.18 amd64 azure 941 0.00% 2140.00% 4.18 ppc64le libvirt 209 0.00% 88.32% 4.18 arm64 aws 115 0.00% 809.09% 4.18 amd64 azure 135 0.00% 66.00% 4.18 amd64 gcp 1025 0.00% 100.20% 4.18 heterogeneous aws 196 0.00% 185.71% 4.18 arm64 aws 115 0.00% 681.82% 4.18 amd64 azure 941 0.00% 233.33% 4.18 amd64 metal 247 0.00% 2262.00% 4.18 amd64 aws 304 0.00% 182.80% 4.18 amd64 metal 325 0.00% 376.19% 4.18 amd64 gcp 730 0.00% 33.33% 4.18 amd64 metal 112 0.00% 1001.00% 4.18 amd64 azure 285 0.00% 33.90% 4.18 amd64 azure 368 0.00% 33.00% 4.18 amd64 aws 1036 0.00% 122.22% 4.18 amd64 aws 815 0.00% 1186.00% 4.18 amd64 azure 135 0.00% 66.00% 4.18 amd64 azure 135 0.00% 50.00% 4.18 amd64 gcp 1025 0.00% 745.04% 4.18 amd64 metal 281 0.00% 33.33% 4.19 amd64 azure 166 0.00% 298.23% 4.19 arm64 aws 138 0.00% 113.82% 4.19 amd64 aws 127 0.00% 55.62% 4.19 s390x libvirt 150 0.00% 2988.17% 4.19 amd64 aws 587 0.00% 33.33% 4.19 heterogeneous vsphere 133 0.00% 30.73% 4.19 amd64 aws 1101 0.00% 97.50% 4.19 amd64 aws 587 0.00% 142.00% 4.19 amd64 aws 212 0.00% 104.08% 4.19 amd64 aws 1101 0.00% 50.00% 4.19 amd64 gcp 157 0.00% 88.00% 4.19 amd64 gcp 157 0.00% 100.00% 4.19 amd64 metal 101 0.00% 199.71% 4.19 arm64 aws 138 0.00% 173.91% 4.19 amd64 aws 1101 0.00% 100.00% 4.19 amd64 vsphere 178 0.00% 1486.67% 4.19 amd64 aws 1101 0.00% 47.50% 4.19 amd64 aws 279 0.00% 70.26% 4.19 amd64 azure 271 0.00% 82.54% 4.19 heterogeneous aws 188 0.00% 1728.95% 4.19 arm64 aws 138 0.00% 334.78% 4.19 arm64 aws 138 0.00% 111.49% 4.19 heterogeneous aws 188 0.00% 1042.11% 4.19 arm64 aws 138 0.00% 67.47% 4.19 arm64 aws 138 0.00% 173.91% 4.19 s390x libvirt 150 0.00% 496.08% 4.19 ppc64le libvirt 229 0.00% 34.34% 4.19 amd64 azure 557 0.00% 33.33% 4.19 amd64 aws 587 0.00% 40.00% 4.19 amd64 aws 587 0.00% 72.41% 4.19 amd64 aws 513 0.00% 34.50% 4.19 amd64 gcp 746 0.00% 33.33% 4.19 arm64 aws 138 0.00% 173.91% 4.19 amd64 azure 271 0.00% 384.13% 4.19 amd64 aws 587 0.00% 214.00% 4.19 amd64 metal 101 0.00% 454.80% 4.19 ppc64le libvirt 230 0.00% 52.76% 4.19 amd64 azure 961 0.00% 3233.33% 4.19 heterogeneous aws 188 0.00% 813.16% 4.19 arm64 aws 138 0.00% 144.65% 4.19 heterogeneous aws 188 0.00% 1271.05% 4.19 arm64 aws 138 0.00% 334.78% 4.19 heterogeneous aws 188 0.00% 197.37% 4.19 arm64 aws 138 0.00% 173.91% 4.19 amd64 vsphere 514 0.00% 30.43% 4.19 arm64 aws 138 0.00% 608.70% 4.19 amd64 gcp 746 0.00% 6821.96% 4.19 s390x libvirt 150 0.00% 2813.24% 4.19 amd64 aws 279 0.00% 138.18% 4.19 amd64 gcp 341 0.00% 53.85% 4.19 heterogeneous aws 188 0.00% 778.95% 4.19 heterogeneous aws 188 0.00% 44.93% 4.19 arm64 aws 138 0.00% 161.86% 4.19 arm64 aws 138 0.00% 189.00% 4.19 amd64 gcp 746 0.00% 33.33% 4.19 amd64 aws 587 0.00% 153.33% 4.19 amd64 metal 128 0.00% 860.53% 4.19 amd64 aws 199 0.00% 550.00% 4.19 amd64 azure 557 0.00% 33.33% /details alerts Information There were (`7216`) added jobs and (`2106`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `97` jobs increased and `192` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 arm64 aws 121 386.25% 40.35% 4.18 amd64 gcp 115 341.16% 165.25% 4.19 amd64 aws 144 293.78% 249.23% 4.18 amd64 gcp 219 1171.43% 711.38% 4.18 amd64 gcp 115 109.86% 89.46% 4.19 amd64 gcp 265 957.14% 513.79% 4.18 amd64 aws 122 121.20% 103.44% 4.18 amd64 metal 243 133.71% 153.39% 4.18 amd64 metal 243 204.72% 37.91% 4.19 amd64 metal 268 100.00% 66.42% 4.19 amd64 gcp 128 127.17% 175.74% 4.19 amd64 gcp 128 379.91% 38.78% 4.18 amd64 gcp 115 0.00% 208.80% 4.18 amd64 gcp 219 0.00% 491.20% 4.18 amd64 metal 243 0.00% 69.72% 4.18 amd64 gcp 219 0.00% 113.82% 4.18 amd64 gcp 142 0.00% 603.49% 4.18 amd64 gcp 142 0.00% 1789.64% 4.18 amd64 aws 202 0.00% 106.90% 4.18 amd64 gcp 115 0.00% 130.70% 4.18 amd64 aws 202 0.00% 245.91% 4.18 amd64 gcp 142 0.00% 381.09% 4.18 amd64 aws 150 0.00% 288.69% 4.18 amd64 azure 198 0.00% 38.84% 4.18 amd64 aws 217 0.00% 440.02% 4.18 amd64 aws 122 0.00% 686.94% 4.19 amd64 gcp 128 0.00% 44.94% 4.19 amd64 aws 230 0.00% 82.36% 4.19 amd64 aws 258 0.00% 1364.62% 4.19 amd64 azure 113 0.00% 30.59% 4.19 amd64 aws 230 0.00% 84.18% 4.19 amd64 gcp 265 0.00% 49.87% 4.19 amd64 aws 230 0.00% 2544.45% 4.19 arm64 aws 121 0.00% 39.28% 4.19 arm64 aws 121 0.00% 232.53% 4.19 amd64 aws 200 0.00% 278.47% 4.19 amd64 metal 268 0.00% 33.67% 4.19 amd64 aws 144 0.00% 31.58% 4.19 arm64 aws 121 0.00% 2124.49% 4.19 amd64 metal 268 0.00% 262.50% 4.19 amd64 gcp 265 0.00% 38665.08% 4.19 amd64 metal 268 0.00% 854.28% 4.19 amd64 gcp 172 0.00% 5959.52% 4.19 amd64 azure 214 0.00% 85.13% 4.19 amd64 gcp 172 0.00% 1629.00% 4.19 amd64 gcp 172 0.00% 427.40% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29543",
    "type": "pullRequest",
    "title": "Revert \"NO-JIRA: use quay.io/openshift/origin-cli:latest directly\"",
    "body": "The DNF wrapper should no longer fail when it is not connected to the VPN after"
  },
  {
    "id": "29538",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Bump to latest downstream version of ginkgo",
    "body": "We missed this when bumped the o/k dependency to 1.32. /hold Until we get a good nightly with the o/k bump."
  },
  {
    "id": "29540",
    "type": "pullRequest",
    "title": "TRT-2006: Revert \"NO-JIRA: Add test case for checking EgressFirewall DNS names in caps\"",
    "body": "Reverts openshift/origin29414 Just checking if this is causing issues on Azure."
  },
  {
    "id": "29414",
    "type": "pullRequest",
    "title": "NO-JIRA: Add test case for checking EgressFirewall DNS names in caps",
    "body": "This PR adds test case for checking EgressFirewall DNS names in caps."
  },
  {
    "id": "29493",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Update to Kubernetes v1.32.1"
  },
  {
    "id": "29524",
    "type": "pullRequest",
    "title": "MULTIARCH-5318: Add tests for ImageStreamImportMode feature gate",
    "body": "Add tests to exercise these scenarios under a featuregate: - verify that the imagestream tag's import mode corresponds to the desired.Architecture field in the status reported by CV. multi = PreserveOriginal, else Legacy. - verify that setting the ImageStreamImportMode field in the image.config.io spec to Legacy, will be the import mode for any newly created imagestream tag henceforth - verify that setting the ImageStreamImportMode field in the image.config.io spec to PreserveOriginal, will be the import mode for any newly created imagestream tag henceforth"
  },
  {
    "id": "29525",
    "type": "pullRequest",
    "title": "OCPBUGS-45893: Allows for backwards compatibility with upcoming network name change",
    "body": "With the network name is going to change for UDNs. Update tests in advance."
  },
  {
    "id": "29418",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`234`) added jobs and (`32`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `363` jobs increased and `1031` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 vsphere 147 285.00% 131.67% 4.19 amd64 vsphere 147 235.00% 173.66% 4.19 amd64 vsphere 147 185.00% 236.47% 4.19 amd64 gcp 718 5900.00% 200.00% 4.19 amd64 vsphere 147 270.00% 232.36% 4.18 amd64 gcp 919 100.00% 220.50% 4.18 amd64 azure 871 50.00% 35.44% 4.19 amd64 vsphere 471 50.00% 81.11% 4.19 amd64 gcp 1020 100.00% 200.00% 4.19 amd64 gcp 1020 100.00% 200.00% 4.19 amd64 gcp 1020 100.00% 240.50% 4.19 amd64 azure 275 100.00% 50.00% 4.19 amd64 vsphere 471 50.00% 73.75% 4.19 amd64 gcp 1020 50.00% 56.20% 4.19 amd64 azure 440 100.00% 40.85% 4.19 amd64 gcp 718 100.00% 141.50% 4.19 amd64 gcp 718 100.00% 66.67% 4.19 amd64 gcp 136 122.22% 147.50% 4.18 heterogeneous aws 166 0.00% 35.00% 4.18 s390x libvirt 148 0.00% 50.65% 4.18 s390x libvirt 148 0.00% 34.64% 4.18 amd64 gcp 919 0.00% 50.00% 4.18 amd64 aws 280 0.00% 125.00% 4.18 heterogeneous aws 166 0.00% 262.90% 4.18 s390x libvirt 148 0.00% 50.16% 4.18 amd64 gcp 581 0.00% 110.00% 4.18 amd64 metal 101 0.00% 197.06% 4.18 s390x libvirt 148 0.00% 33.66% 4.18 amd64 azure 120 0.00% 206.78% 4.18 s390x libvirt 148 0.00% 35.45% 4.18 amd64 gcp 919 0.00% 423.00% 4.18 amd64 aws 306 0.00% 100.00% 4.18 amd64 gcp 129 0.00% 288.00% 4.18 amd64 metal 217 0.00% 722.45% 4.18 amd64 gcp 581 0.00% 260.00% 4.18 amd64 gcp 581 0.00% 100.00% 4.18 amd64 metal 217 0.00% 3192.00% 4.18 amd64 aws 306 0.00% 50.00% 4.18 amd64 gcp 312 0.00% 150.88% 4.18 ppc64le libvirt 202 0.00% 234.85% 4.18 amd64 gcp 919 0.00% 2600.00% 4.18 amd64 gcp 919 0.00% 33.33% 4.18 amd64 azure 871 0.00% 50.00% 4.18 amd64 gcp 312 0.00% 733.33% 4.18 amd64 gcp 581 0.00% 100.00% 4.18 amd64 gcp 919 0.00% 532.00% 4.18 amd64 metal 217 0.00% 1102.70% 4.18 amd64 gcp 129 0.00% 72.00% 4.18 s390x libvirt 148 0.00% 35.42% 4.18 amd64 aws 280 0.00% 73.67% 4.18 amd64 gcp 919 0.00% 50.00% 4.18 amd64 gcp 919 0.00% 33.33% 4.18 amd64 aws 280 0.00% 317.21% 4.18 s390x libvirt 148 0.00% 34.45% 4.18 amd64 azure 871 0.00% 331.65% 4.18 amd64 gcp 919 0.00% 100.00% 4.18 amd64 gcp 581 0.00% 184.15% 4.18 s390x libvirt 148 0.00% 50.03% 4.18 s390x libvirt 148 0.00% 35.03% 4.18 amd64 gcp 129 0.00% 288.00% 4.18 amd64 metal 217 0.00% 3108.00% 4.18 amd64 gcp 919 0.00% 266.67% 4.18 s390x libvirt 148 0.00% 54.31% 4.18 s390x libvirt 148 0.00% 34.22% 4.18 s390x libvirt 148 0.00% 34.74% 4.18 amd64 gcp 581 0.00% 400.00% 4.18 amd64 aws 713 0.00% 6156.78% 4.18 s390x libvirt 148 0.00% 36.32% 4.18 amd64 aws 713 0.00% 11567.06% 4.18 amd64 gcp 919 0.00% 100.00% 4.18 s390x libvirt 148 0.00% 49.81% 4.18 amd64 gcp 919 0.00% 132.00% 4.18 s390x libvirt 148 0.00% 1961.07% 4.18 amd64 aws 306 0.00% 50.00% 4.18 s390x libvirt 148 0.00% 55.05% 4.18 amd64 gcp 581 0.00% 200.00% 4.18 amd64 aws 280 0.00% 353.67% 4.18 amd64 gcp 129 0.00% 44.00% 4.18 s390x libvirt 148 0.00% 54.72% 4.18 amd64 gcp 919 0.00% 91.00% 4.18 amd64 gcp 581 0.00% 400.00% 4.18 amd64 azure 871 0.00% 130.00% 4.19 s390x libvirt 150 0.00% 48.56% 4.19 amd64 aws 456 0.00% 500.00% 4.19 amd64 aws 291 0.00% 44.43% 4.19 amd64 aws 409 0.00% 64.00% 4.19 amd64 aws 456 0.00% 461.80% 4.19 s390x libvirt 150 0.00% 49.83% 4.19 s390x libvirt 150 0.00% 335.32% 4.19 amd64 aws 192 0.00% 318.00% 4.19 s390x libvirt 150 0.00% 49.34% 4.19 amd64 aws 773 0.00% 7279.08% 4.19 s390x libvirt 150 0.00% 49.30% 4.19 amd64 aws 456 0.00% 111.64% 4.19 amd64 gcp 1020 0.00% 417.50% 4.19 amd64 gcp 1020 0.00% 100.00% 4.19 amd64 azure 998 0.00% 66.67% 4.19 s390x libvirt 150 0.00% 269.72% 4.19 amd64 azure 440 0.00% 50.00% 4.19 amd64 gcp 718 0.00% 296.04% 4.19 amd64 aws 203 0.00% 53.12% 4.19 amd64 azure 998 0.00% 33.33% 4.19 amd64 azure 440 0.00% 100.00% 4.19 amd64 gcp 718 0.00% 41.50% 4.19 amd64 aws 1115 0.00% 100.00% 4.19 s390x libvirt 150 0.00% 255.01% 4.19 s390x libvirt 150 0.00% 269.72% 4.19 amd64 gcp 1020 0.00% 140.50% 4.19 amd64 gcp 1020 0.00% 100.00% 4.19 amd64 aws 126 0.00% 42.54% 4.19 amd64 aws 1115 0.00% 100.00% 4.19 amd64 gcp 718 0.00% 300.00% 4.19 s390x libvirt 150 0.00% 270.87% 4.19 amd64 vsphere 471 0.00% 136.56% 4.19 amd64 gcp 718 0.00% 190.05% 4.19 amd64 gcp 1020 0.00% 140.50% 4.19 amd64 vsphere 147 0.00% 108.00% 4.19 amd64 gcp 326 0.00% 175.23% 4.19 s390x libvirt 150 0.00% 50.81% 4.19 amd64 metal 191 0.00% 130.00% 4.19 amd64 gcp 136 0.00% 2844.44% 4.19 s390x libvirt 150 0.00% 385.01% 4.19 amd64 gcp 1020 0.00% 33.33% 4.19 amd64 aws 773 0.00% 7450.00% 4.19 amd64 azure 440 0.00% 669.23% 4.19 amd64 gcp 1020 0.00% 200.00% 4.19 s390x libvirt 150 0.00% 272.28% 4.19 amd64 gcp 1020 0.00% 300.00% 4.19 amd64 aws 456 0.00% 281.67% 4.19 amd64 gcp 326 0.00% 75.00% 4.19 amd64 gcp 718 0.00% 40.80% 4.19 amd64 aws 409 0.00% 86.67% 4.19 s390x libvirt 150 0.00% 386.85% 4.19 amd64 azure 440 0.00% 40.85% 4.19 s390x libvirt 150 0.00% 48.95% 4.19 amd64 gcp 718 0.00% 200.00% 4.19 amd64 aws 192 0.00% 100.00% 4.19 s390x libvirt 150 0.00% 273.94% 4.19 amd64 gcp 326 0.00% 187.50% 4.19 amd64 aws 126 0.00% 46.36% 4.19 amd64 aws 291 0.00% 42.70% 4.19 amd64 gcp 718 0.00% 150.00% 4.19 s390x libvirt 150 0.00% 49.39% 4.19 heterogeneous aws 163 0.00% 38.00% 4.19 s390x libvirt 150 0.00% 49.83% 4.19 amd64 gcp 1020 0.00% 50.00% 4.19 amd64 aws 409 0.00% 158.06% 4.19 amd64 gcp 1020 0.00% 190.50% 4.19 amd64 gcp 136 0.00% 165.00% 4.19 amd64 aws 456 0.00% 400.00% 4.19 s390x libvirt 150 0.00% 55.01% 4.19 amd64 gcp 718 0.00% 400.00% 4.19 amd64 gcp 1020 0.00% 100.00% 4.19 amd64 gcp 1020 0.00% 200.00% 4.19 amd64 aws 409 0.00% 42.86% 4.19 amd64 gcp 718 0.00% 83.00% 4.19 amd64 gcp 718 0.00% 283.00% 4.19 amd64 gcp 136 0.00% 65.00% 4.19 amd64 gcp 326 0.00% 300.00% 4.19 amd64 aws 456 0.00% 445.00% /details alerts Information There were (`4554`) added jobs and (`2994`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `57` jobs increased and `173` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 gcp 105 77.22% 83.78% 4.18 amd64 aws 119 122.59% 134.38% 4.19 amd64 gcp 105 182.29% 117.45% 4.18 amd64 gcp 149 66.67% 59.71% 4.19 amd64 gcp 105 106.36% 37.40% 4.18 amd64 gcp 149 0.00% 77.59% 4.18 amd64 azure 127 0.00% 53.29% 4.18 amd64 vsphere 209 0.00% 32.23% 4.18 amd64 azure 127 0.00% 37.98% 4.18 amd64 aws 119 0.00% 105.09% 4.18 amd64 metal 308 0.00% 34.24% 4.18 amd64 aws 282 0.00% 234.64% 4.18 amd64 azure 250 0.00% 154.70% 4.18 amd64 aws 228 0.00% 1598.28% 4.19 amd64 vsphere 149 0.00% 860.48% 4.19 amd64 metal 205 0.00% 42.08% 4.19 amd64 aws 194 0.00% 130.15% 4.19 amd64 aws 151 0.00% 118.76% 4.19 amd64 gcp 141 0.00% 3582.76% 4.19 amd64 azure 155 0.00% 370.41% 4.19 amd64 aws 194 0.00% 158.65% 4.19 amd64 aws 194 0.00% 34.72% 4.19 amd64 gcp 292 0.00% 1769.75% 4.19 amd64 azure 264 0.00% 71.92% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29517",
    "type": "pullRequest",
    "title": "SDN-4930: Increases timeouts for live migration",
    "body": "Checking if the CR was created can take longer than 5 seconds if the cluster is loaded. Bring it inline with other tests to 60 seconds. Network ready timeout can be much longer than 5 seconds. Create a timeout just for that, and for now make it 5 minutes due to the known bug where network start up takes too long:"
  },
  {
    "id": "29333",
    "type": "pullRequest",
    "title": "OCPBUGS-45153: address malformed configmap post-test",
    "body": "- Prow( After merging we found out that the tests were failing on bare-metal, due to the absence of a configmap, and the fact that the tests were \"leaving\" a new configmap in a malformed state (without a `config.yaml` key). ``` { fail github.com/openshift/origin/test/extended/prometheus/prometheus.go:405: could not determine if Telemetry is enabled: openshift-monitoring/cluster-monitoring-config data lacks a config.yaml key: map Ginkgo exit error 1: exit with code 1} ``` - To address this, was merged that seemed to resolve( the issue on bare-metal. Note that with this patch, the configmap was deleted successfully( upon tests' completion. - Prow( Shortly after that, TRT team found out that this introduced a bug for at-least `aws-ovn-techpreview`, stemming from this snippet( owing to which the patch was reverted and merged: However, that snippet is unchanged in the (original and) revert PR, and thus hints towards it being caused due to multiple specs modifying the configmap at the same time. ``` { fail github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:180: Expected errors.StatusError ( However, post-revert, on the latest bare-metal must-gathers (for `ipv6` and `dualstack` so far), the CMO configmap collected after the tests are completed has an unpredictable `collectionProfiles` definition (I ran the tests on both 4.18 and 4.19 today, and it seems to be `minimal` and `full`, respectively). Note that earlier, an absence of this patch would have caused the same issue seen in the first point above on bare-metal, but not anymore. ``` apiVersion: v1 data: config.yaml: | prometheusK8s: collectionProfile: \"minimal\" kind: ConfigMap metadata: name: cluster-monitoring-config namespace: openshift-monitoring ``` tl;dr( - Even though the tests may pass post-revert, there's a lingering `collectionProfiles` definition may cause a reduced metrics throughput in general (if set to `minimal`) causing other tests to fail that depend on them. - Serializing these tests means slightly lesser plaforms to run them on (no bare-metal, for instance)."
  },
  {
    "id": "29509",
    "type": "pullRequest",
    "title": "SDN-4930: Bump wait for UDN CR ready timeout",
    "body": "Kube can take longer than 5 seconds to propagate events. Seen as flake in CI run: \"when using openshift ovn-kubernetes UserDefinedNetwork CRD controller should create NetworkAttachmentDefinition according to spec\" I0130 05:39:30.032220 1 controller.go:415 Added Finalizer to UserDefinedNetwork e2e-network-segmentation-e2e-8121/test-net I0130 05:39:30.196059 1 nad_controller.go:245 clustermanager-nad-controller NAD controller: finished syncing NAD e2e-network-segmentation-e2e-8121/test-net, took 118.678698ms I0130 05:39:30.196212 1 secondary_network_cluster_manager.go:62 Creating new network controller for network e2e-network-segmentation-e2e-8121.test-net of topology layer2 I0130 05:39:30.196936 1 nad_controller.go:245 clustermanager-nad-controller NAD controller: finished syncing NAD e2e-network-segmentation-e2e-8121/test-net, took 542.403\u00b5s I0130 05:39:35.497151 1 controller_helper.go:70 Created NetworkAttachmentDefinition e2e-network-segmentation-e2e-8121/test-net I0130 05:39:35.505613 1 controller.go:453 Updated status UserDefinedNetwork e2e-network-segmentation-e2e-8121/test-net"
  },
  {
    "id": "29501",
    "type": "pullRequest",
    "title": "SDN-4930: increase probe initialDelaySeconds from 1 to 5",
    "body": "a flake was seen where a test pod was restarted because the startup probe failed 3 times in 3 seconds (connection refused) with the first probe fired 1s after the pod was marked as Started. Digging through the logs, the pod did seem to come up in time and nothing egregious in the node or networking pod logs. the current theory and hope is that the test pod containers app hadn't fully been ready and listening for the probes and increasing this startup delay will be a little nicer in this case."
  },
  {
    "id": "29510",
    "type": "pullRequest",
    "title": "SDN-4930: Bump UDN pod ready timeout",
    "body": "Metal platform is slow, and we can see it take over 4 minutes sometimes for the UDN pod to become ready. Flake seen taking 4 minutes and 1 second: when using openshift ovn-kubernetes created using NetworkAttachmentDefinitions is isolated from the default network with L2 primary UDN ``` STEP: asserting the UDN pod udn-pod reaches the `Ready` state @ 01/30/25 06:35:55.176 I0130 06:39:56.485941 4237 cni.go:332 e2e-network-segmentation-e2e-7214/udn-pod c2e64986fc2baa86e2fc2aeb3728175dfbe7d5832156f14fab1782e54faedb26 network default NAD default ADD finished CNI request e2e-network-segmentation-e2e-7214/udn-pod c2e64986fc2baa86e2fc2aeb3728175dfbe7d5832156f14fab1782e54faedb26 network default NAD default, result \"{\\\"interfaces\\\":{\\\"name\\\":\\\"c2e64986fc2baa8\\\",\\\"mac\\\":\\\"ee:23:54:30:1b:f8\\\"},{\\\"name\\\":\\\"eth0\\\",\\\"mac\\\":\\\"0a:58:80:79:e8:5f\\\",\\\"sandbox\\\":\\\"/var/run/netns/7f4c689c-9a7b-48e9-a9e2-df8bd3d3ea74\\\"},{\\\"name\\\":\\\"c2e64986fc2ba_3\\\",\\\"mac\\\":\\\"6a:cf:d6:9f:c9:5c\\\"},{\\\"name\\\":\\\"ovn-udn1\\\",\\\"mac\\\":\\\"0a:58:31:10:5a:7e\\\",\\\"sandbox\\\":\\\"/var/run/netns/7f4c689c-9a7b-48e9-a9e2-df8bd3d3ea74\\\"},\\\"ips\\\":{\\\"interface\\\":1,\\\"address\\\":\\\"fd01:0:0:4:2f6/64\\\"},{\\\"interface\\\":3,\\\"address\\\":\\\"2014:100:200:5/60\\\",\\\"gateway\\\":\\\"2014:100:200:1\\\"},\\\"dns\\\":{}}\", err nil ```"
  },
  {
    "id": "29511",
    "type": "pullRequest",
    "title": "SDN-4930: Make CUDN ready timeout use constant",
    "body": "UDN ready timeout was using a constant, that is going to be changed to 60 seconds by: The CUDN ready timeout should use the same value."
  },
  {
    "id": "29485",
    "type": "pullRequest",
    "title": "TRT-1575: Add a few more exception outside of upgraded window"
  },
  {
    "id": "29395",
    "type": "pullRequest",
    "title": "OCPBUGS-44238: Add Readiness Probe to Router Status Tests",
    "body": "Previously, the router was configured without a readiness probe, resulting in racy startup conditions during router status stress tests. Routers would be marked as ready immediately upon starting, causing the waitForReadyReplicaSet function to proceed prematurely. This allowed the next step of route creation to occur before the routers had fully initialized. This often led to the first two routers to fight over the route status while the third router was still starting. As a result, the third router missed observing these early status contentions, leading to more writes to the route status than we were expecting. Adding the readiness probe also revealed that HAProxy was failing to start due to insufficient permissions. The anyuid SCC was added to the router's service account to resolve the issue."
  },
  {
    "id": "29505",
    "type": "pullRequest",
    "title": "NO-JIRA: upkeep: add err check for failed cleanup step"
  },
  {
    "id": "29464",
    "type": "pullRequest",
    "title": "TRT-1958: pass EXTENSION_ARTIFACT_DIR to binaries",
    "body": "The enhancement calls for extensions that want to produce artifacts to write them to EXTENSION_ARTIFACT_DIR, this sets the path for each extension. Current design is to provide the dir but it's up to them to `mkdir -p` it -- I could be convinced to do that for them, but figure it's helpful when browsing CI artifacts to only see directories that have contents in them."
  },
  {
    "id": "29494",
    "type": "pullRequest",
    "title": "SDN-4930: UDN: wait for moar openshift",
    "body": "Platforms like SNO can be really slow. Waiting for SCC annotations wasn't enough. We also need to wait for service account as well to prevent flakes."
  },
  {
    "id": "28590",
    "type": "pullRequest",
    "title": "OCPBUGS-48445: Ignore an error intentionally generated by a test case",
    "body": "There's a statefulset test that does: - create a pod that binds hostport 21017 - create a StatefulSet that also binds that hostport - ensure that the StatefulSet can't be deployed to the node with the pod from the first step - kill the conflicting pod - ensure that the StatefulSet now gets deployed to that node The problem is that apparently it's possible for the new StatefulSet pod to get deployed before the conflicting pod is fully cleaned up, in which case the first attempt at CreatePodSandBox will fail because it can't bind the hostport, but then the second attempt a bit later will succeed, and the e2e test doesn't even notice anything unusual happened. But openshift-tests notices the CreatePodSandBox failure and complains (eg, This fixes us to ignore that specific event. (I also added a new categorization for \"pods should successfully create sandboxes\" errors.)"
  },
  {
    "id": "29482",
    "type": "pullRequest",
    "title": "SDN-4930: Fix live migration test detecting dualstack",
    "body": "Live migration test was launching a pod to determine if cluster is dualstack. This would happen before UDN is created, so it would fail on a namespace that was enabled for UDN (network did not exist yet). The check is really not needed, since a few lines above we already determine if the cluster is dualstack or not via a service CIDR check. Leverage that."
  },
  {
    "id": "29335",
    "type": "pullRequest",
    "title": "OCPBUGS-43777: tests: extend kubeconfig tests",
    "body": "Add tests to check two more kubeconfigs: check-endpoints and control-plane-node. These kubeconfigs are not present on the node, but available in kube-apiserver container only. TODO: x Bring `oc/kubectl` in kube-apiserver container ~~or find a way to test kubeconfig validity with included tests~~"
  },
  {
    "id": "29479",
    "type": "pullRequest",
    "title": "SDN-4930: UDN tests wait for SCC annotation on namespace",
    "body": "Since we create our own namespaces for UDN, we need to wait for the cluster manager to annotate the namespace before we can try to create pods."
  },
  {
    "id": "29462",
    "type": "pullRequest",
    "title": "OCPBUGS-45924: add a monitor test to detect concurrent installer pod or static pod",
    "body": "The monitor test works as follows: - a) parse the kubelet log for SyncLoop lines (both PLEG and probe lines) - b) generate events/interval for each of these lines from `a` - c) add a monitor test that inspects the events from `b` and construct/compute new intervals: - etcd installer pod duration (derived from PLEG container start, and exit ) - static pod (etcd for now) unready interval (derived from SyncLoop probe events) This is an example, blue is installer pod duration, the red is etcd static pod unready window: !image( from: The monitor test also flakes if: - it finds two concurrent installer pods running on separate nodes - it finds two concurrent unready window for the etcd static pod on separate nodes, which could potentially lead to etcd quorum loss"
  },
  {
    "id": "29224",
    "type": "pullRequest",
    "title": "OCPBUGS-26603: e2e: Fix IPv6 handling in router tests.",
    "body": "curl requires that ipv6 addresses are in brackets. This change adds the IPUrl function to handle adding those brackets when necessary. Several tests also create router pods directly, and thus require that the environment variable ROUTER_IP_V4_V6_MODE is set. Setting it to \"v4v6\" should allow the router to work in all environments. This is part of the fix for OCPBUGS-26603."
  },
  {
    "id": "29477",
    "type": "pullRequest",
    "title": "SDN-4930: Fix live migration tests",
    "body": "Now that we create the namespace for the tests NewCLIWithoutNamespace, implicitly another function is not called: SetupProject-setupProject/setupNamespace-ChangeUser ChangeUser will generate kubeconfig for the namespace user and set CLI.configPath. However we dont setup project, so we dont have a proper user account and the other scaffolding for a project. Therefore calling oc.DynamicClient or other OC commands that would use the user CLI.configPath wont work. This would result in the \"failed to open file\" error because there was no user kubeconfig written to disk. Just use admin for now."
  },
  {
    "id": "29402",
    "type": "pullRequest",
    "title": "OCPBUGS-48053: auditLogAnalyzer: fix flake error message",
    "body": "\"users in ns/openshift-... must not produce too many applies\" test should contain correct error message when it flakes. This fixes it to change from: ``` { details in audit log} ``` to ``` {user system:serviceaccount:openshift-infra:serviceaccount-pull-secrets-controller had 43897 applies, check the audit log and operator log to figure out why user system:serviceaccount:openshift-infra:podsecurity-admission-label-syncer-controller had 1034 applies, check the audit log and operator log to figure out why details in audit log} ```"
  },
  {
    "id": "29460",
    "type": "pullRequest",
    "title": "OCPBUGS-50916: managed services: add hcp crd to unstable list",
    "body": "Signed-off-by: Brady Pratt bpratt@redhat.com"
  },
  {
    "id": "29452",
    "type": "pullRequest",
    "title": "SDN-4168: Fix for nmstate deployment related failures",
    "body": "This PR fixes recent test failures around nmstate deployment seen from CI runs. 1. sig-auth all workloads in ns/openshift-nmstate must set the 'openshift.io/required-scc' annotation 2. Wait enough to get nmstate-handler daemonset running state. ``` sig-networkFeature:IPsec when using openshift ovn-kubernetes BeforeAll check traffic apigroup:config.openshift.io Suite:openshift/network/ipsec with IPsec in full mode BeforeAll github.com/openshift/origin/test/extended/networking/ipsec.go:449 It github.com/openshift/origin/test/extended/networking/ipsec.go:628 FAILED Unexpected error: errors.errorString at: github.com/openshift/origin/test/extended/networking/ipsec.go:464 @ 01/16/25 11:12:58.598 ```"
  },
  {
    "id": "29397",
    "type": "pullRequest",
    "title": "OCPBUGS-48126: kubeapiserver auditloganalyzer: show resources updated too often",
    "body": "Along with users issuing too many updates its useful to list resources being updated often. Several users may update a single resource, so they may not show up in existing tests. This PR adds another set of flaking tests `resource group.resource/name -n namespace has been updated too often` with error message similar to `resource group.resource/name -n namespace had n applies, check the audit log and operator log to figure out why details in audit log`"
  },
  {
    "id": "29435",
    "type": "pullRequest",
    "title": "OCPBUGS-48340: skip OperatorHubSourceError metric checking when disableAllDefaultSources is true",
    "body": "When disableAllDefaultSources is true, all default catalogSource are disabled, so there is no metric. ```console { \"metric\": { \"__name__\": \"ALERTS\", \"alertname\": \"OperatorHubSourceError\", \"alertstate\": \"firing\", \"container\": \"catalog-operator\", \"endpoint\": \"https-metrics\", \"exported_namespace\": \"openshift-marketplace\", \"instance\": \"fd01:0:0:1:1a:8443\", \"job\": \"catalog-operator-metrics\", \"name\": \"community-operators\", \"namespace\": \"openshift-operator-lifecycle-manager\", \"pod\": \"catalog-operator-6c446dcbbb-sxvjz\", \"prometheus\": \"openshift-monitoring/k8s\", \"service\": \"catalog-operator-metrics\", \"severity\": \"warning\" }, \"value\": 1736751753.045, \"1\" } ```"
  },
  {
    "id": "29401",
    "type": "pullRequest",
    "title": "Revert \"Revert \"TRT-1803: Wait for operators to become stable before test\"\"",
    "body": "Reverts openshift/origin29399 /hold for testing"
  },
  {
    "id": "29466",
    "type": "pullRequest",
    "title": "NO-JIRA: use quay.io/openshift/origin-cli:latest directly",
    "body": "we have the following e2e test failing constantly: ``` Image signature workflow can push a signed image to openshift registry and verify it ``` this e2e is failing when attempting to build an image. the reported build failure is as follow: ``` error: build error: building at STEP \"RUN source /etc/os-release && rhel_major=${VERSION_ID%!(BADPREC)%!}(MISSING) && yum config-manager --add-repo \" --add-repo \" while running runtime: exit status 6 ``` this error seems to be related to the yum wrapper that has been added to the image. this pr makes the e2e to use the image directly from the upstream repository (quay), that image does not contain the yum wrapper."
  },
  {
    "id": "29468",
    "type": "pullRequest",
    "title": "SDN-4930: Network segmentation add missing eventually",
    "body": "Some of the network_segmentation tests are missing the Eventually when checking connectivity between same network, this change address that. Depends on: -"
  },
  {
    "id": "29469",
    "type": "pullRequest",
    "title": "OCPBUGS-48320,SDN-4930: Bump KAPI server timeout to be 5seconds",
    "body": "We have seen in OCP CI that it can take two seconds or maybe more for a single curl to succeed. Example: ``` I0120 00:38:42.320808 70120 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/kubeconfig-1734723086 --namespace=e2e-test-network-segmentation-e2e-kzdw7 exec udn-pod -- curl --connect-timeout 2 --insecure I0120 00:38:44.108334 70120 builder.go:146 stderr: \" % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 100 2 100 2 0 0 9 0 --:--:-- --:--:-- --:--:-- 9 100 2 100 2 0 0 9 0 --:--:-- --:--:-- --:--:-- 9 \" I0120 00:38:44.108415 70120 builder.go:147 stdout: \"ok\" -- 2 seconds later I0120 00:38:45.109237 70120 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/kubeconfig-1734723086 --namespace=e2e-test-network-segmentation-e2e-kzdw7 exec udn-pod -- curl --connect-timeout 2 --insecure I0120 00:38:48.460089 70120 builder.go:135 rc: 28 ``` around the same time we have observed OVS issues like: ``` Jan 20 00:38:45.329999 ci-op-bkg2qwwq-4edbf-xv8kb-worker-b-flqxd ovs-vswitchd1094: ovs: ovstimevalUnreasonably long 1730ms poll interval (32ms user, 903ms system) ``` which might need more investigation. Bumping the timeout to 5seconds can help with this but we need to figure out what exactly is causing random timeouts in CI when trying to reach kapi-server sometimes we have also seen more than 2seconds being taken for the timeout which also needs to be investigated: ``` I0118 13:35:50.419638 87083 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/secret/kubeconfig --namespace=e2e-test-network-segmentation-e2e-d4fzk exec udn-pod -- curl --connect-timeout 2 --insecure I0118 13:35:54.093268 87083 builder.go:135 rc: 28 -- takes close to 4seconds? ``` Sample failures: 1. 2."
  },
  {
    "id": "29458",
    "type": "pullRequest",
    "title": "OCPBUGS-48320,SDN-4930: Increase probe timeouts on UDN pod",
    "body": "This PR increases the liveness and readiness probe failure threshold to 3 and also increases each probe's timeout to 3seconds instead of the default value 1 for both which is pretty aggressive. We have seen failures of the following pattern: ``` Pod event: Type=Warning Reason=Unhealthy Message=Liveness probe failed: Get \" context deadline exceeded (Client.Timeout exceeded while awaiting headers) LastTimestamp=2025-01-21 15:16:43 +0000 UTC Count=1 Pod event: Type=Normal Reason=Killing Message=Container agnhost-container failed liveness probe, will be restarted LastTimestamp=2025-01-21 15:16:43 +0000 UTC Count=1 Pod event: Type=Warning Reason=Unhealthy Message=Readiness probe failed: Get \" context deadline exceeded (Client.Timeout exceeded while awaiting headers) LastTimestamp=2025-01-21 15:16:43 +0000 UTC Count=1 Pod event: Type=Warning Reason=Unhealthy Message=Readiness probe failed: Get \" read tcp fd01:0:0:5:2:33400-fd01:0:0:5:2ed:9000: read: connection reset by peer LastTimestamp=2025-01-21 15:16:43 +0000 UTC Count=1 ``` where randomly after 15 or 30 seconds the liveness probe timeones out waiting for headers - so at least we know the TCP conn was established and kubelet unfortunately didn't receive the headers within the 1sec? Hard to tell why that's the case. But this PR when increasing it to 3 seconds so far in the CI has not hit this flake even once. We think increasing the failure threshold to 3 is safer on ocp just like we have for startup probes. 1. 2. 3."
  },
  {
    "id": "29457",
    "type": "pullRequest",
    "title": "OCPBUGS-48629: Use max time for netpol pods curl requests",
    "body": "The curl request is seen as waiting indefinitely though connect time set to 1s, so using max time for connect reestablishment to happen upon a failure. Flaky job link:"
  },
  {
    "id": "29459",
    "type": "pullRequest",
    "title": "OCPBUGS-48629: move initialization of OC to test instead of package level",
    "body": "I think having the OC command being initialized at the global package level is causing some unwanted behavior since a `NewCLI` will instantiate a `BeforeEach`. We noticed flakes with `\"Write to database call failed\" len:164,err:users.user.openshift.io \"e2e-test-monitoring-collection-profiles-pj9k5-user\" already exists ` on TechPreview runs, which is a user created by this function seems to be executed multiple times. /hold Holding for validation on Ginkgo lifecycle"
  },
  {
    "id": "29415",
    "type": "pullRequest",
    "title": "OCPBUGS-45607: network, net-seg use different http port per network",
    "body": "Originally the network primary UDN test that check isolation between overlapping subnets was creating a pair of namespaces with same subnet and then removing all the pods except one in one of them after that connectivitity was tested between that pod and the other network, problem arise at timing between deleting the pods and doing http request and sometimes traffic was success. To overcome this this change just introduces different http ports per network so isolation can be tested between the two networks with overlapping ips and without deleting the pods."
  },
  {
    "id": "29463",
    "type": "pullRequest",
    "title": "SDN-4930: E2Es for net seg: increase server connect timeout to reduce flakes",
    "body": "We are setting a pods annotations and ovnkube is supposed to react and remove the ACLs opening a specific port however DNC takes a long time to receive the event and perform said activities. Unknown why. Reduce flakes in the meantime until issue is understood."
  },
  {
    "id": "29417",
    "type": "pullRequest",
    "title": "OCPBUGS-42609: Updates UDN tests with required NS label",
    "body": "This label will be required for namespaces that wish to use a primary UDN. Upstream test changes:"
  },
  {
    "id": "29429",
    "type": "pullRequest",
    "title": "SDN-4930: virt, udn: read the primary UDN interface IPs from the vmi status (in an eventually block)"
  },
  {
    "id": "29454",
    "type": "pullRequest",
    "title": "SDN-4930: Refactor and fix UDN/CUDN readiness checks",
    "body": "Upstream PR:"
  },
  {
    "id": "29451",
    "type": "pullRequest",
    "title": "SDN-4930: Fix CUDN manifest to account for IPV6 singlestack",
    "body": "Upstream this was fixed in: Without this fix, tests are hanging with: ``` sig-networkOCPFeatureGate:NetworkSegmentationFeature:UserDefinedPrimaryNetworks when using openshift ovn-kubernetes when primary network exist, ClusterUserDefinedNetwork status should report not-ready Suite:openshift/conformance/parallel github.com/openshift/origin/test/extended/networking/network_segmentation.go:972 STEP: Creating a kubernetes client @ 01/19/25 15:42:53.369 I0119 15:42:53.371599 105456 discovery.go:214 Invalidating discovery information I0119 15:42:53.899935 105456 client.go:276 configPath is now \"/tmp/configfile725811412\" I0119 15:42:53.899966 105456 client.go:325 The user is now \"e2e-test-monitoring-collection-profiles-ngcrt-user\" I0119 15:42:53.899978 105456 client.go:327 Creating project \"e2e-test-monitoring-collection-profiles-ngcrt\" I0119 15:42:54.133225 105456 client.go:335 Waiting on permissions in project \"e2e-test-monitoring-collection-profiles-ngcrt\" ... I0119 15:42:54.312477 105456 client.go:364 DeploymentConfig capability is enabled, adding 'deployer' SA to the list of default SAs I0119 15:42:54.367545 105456 client.go:379 Waiting for ServiceAccount \"default\" to be provisioned... I0119 15:42:54.534539 105456 client.go:379 Waiting for ServiceAccount \"builder\" to be provisioned... I0119 15:42:54.710907 105456 client.go:379 Waiting for ServiceAccount \"deployer\" to be provisioned... I0119 15:42:54.887230 105456 client.go:389 Waiting for RoleBinding \"system:image-pullers\" to be provisioned... I0119 15:42:54.887384 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.887403 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.901304 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.914293 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.914334 105456 client.go:389 Waiting for RoleBinding \"system:image-builders\" to be provisioned... I0119 15:42:54.914463 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.914481 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.927791 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.941173 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.941206 105456 client.go:389 Waiting for RoleBinding \"system:deployers\" to be provisioned... I0119 15:42:54.941343 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.941358 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.956596 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:54.970012 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:55.238924 105456 client.go:422 Project \"e2e-test-monitoring-collection-profiles-ngcrt\" has been fully provisioned. STEP: Creating a kubernetes client @ 01/19/25 15:42:55.239 I0119 15:42:55.241149 105456 discovery.go:214 Invalidating discovery information I0119 15:42:55.715884 105456 client.go:276 configPath is now \"/tmp/configfile550726307\" I0119 15:42:55.715917 105456 client.go:325 The user is now \"e2e-test-network-segmentation-e2e-z4jmf-user\" I0119 15:42:55.715926 105456 client.go:327 Creating project \"e2e-test-network-segmentation-e2e-z4jmf\" I0119 15:42:55.854250 105456 client.go:335 Waiting on permissions in project \"e2e-test-network-segmentation-e2e-z4jmf\" ... I0119 15:42:56.052245 105456 client.go:364 DeploymentConfig capability is enabled, adding 'deployer' SA to the list of default SAs I0119 15:42:56.105716 105456 client.go:379 Waiting for ServiceAccount \"default\" to be provisioned... I0119 15:42:56.274948 105456 client.go:379 Waiting for ServiceAccount \"builder\" to be provisioned... I0119 15:42:56.443351 105456 client.go:379 Waiting for ServiceAccount \"deployer\" to be provisioned... I0119 15:42:56.615527 105456 client.go:389 Waiting for RoleBinding \"system:image-pullers\" to be provisioned... I0119 15:42:56.615687 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.615716 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.629011 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.642059 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.642112 105456 client.go:389 Waiting for RoleBinding \"system:image-builders\" to be provisioned... I0119 15:42:56.642195 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.642212 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.654780 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.667552 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.667618 105456 client.go:389 Waiting for RoleBinding \"system:deployers\" to be provisioned... I0119 15:42:56.667689 105456 reflector.go:305 Starting reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.667703 105456 reflector.go:341 Listing and watching v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.680687 105456 reflector.go:368 Caches populated for v1.RoleBinding from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.694169 105456 reflector.go:311 Stopping reflector v1.RoleBinding (0s) from k8s.io/client-go@v0.31.1/tools/cache/reflector.go:243 I0119 15:42:56.960385 105456 client.go:422 Project \"e2e-test-network-segmentation-e2e-z4jmf\" has been fully provisioned. STEP: Creating test tenants namespaces @ 01/19/25 15:42:57.16 STEP: create primary network NAD in one of the tenant namespaces @ 01/19/25 15:42:57.318 STEP: create primary Cluster UDN CR @ 01/19/25 15:42:57.454 I0119 15:42:57.454647 105456 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/secret/kubeconfig --namespace=e2e-test-network-segmentation-e2e-z4jmf create -f /tmp/udn-test4032294074/test-ovn-k-udn-drfkb.yaml' I0119 15:42:57.745675 105456 builder.go:146 stderr: \"\" I0119 15:42:57.745726 105456 builder.go:147 stdout: \"clusteruserdefinednetwork.k8s.ovn.org/test-net-2r26r created \" I0119 15:42:57.745890 105456 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/secret/kubeconfig --namespace=e2e-test-network-segmentation-e2e-z4jmf get clusteruserdefinednetwork test-net-2r26r -o jsonpath={.status.conditions}' I0119 15:42:57.948636 105456 builder.go:146 stderr: \"\" I0119 15:42:57.948705 105456 builder.go:147 stdout: \"{\\\"lastTransitionTime\\\":\\\"2025-01-19T15:42:57Z\\\",\\\"message\\\":\\\"failed to generate NetworkAttachmentDefinition: failed to render CNI network config: invalid subnet configuration: error while parsing subnets: network cluster.udn.test-net-2r26r is attempting to use ipv4 subnets but the cluster does not support ipv4\\ failed to generate NetworkAttachmentDefinition: failed to render CNI network config: invalid subnet configuration: error while parsing subnets: network cluster.udn.test-net-2r26r is attempting to use ipv4 subnets but the cluster does not support ipv4\\\",\\\"reason\\\":\\\"NetworkAttachmentDefinitionSyncError\\\",\\\"status\\\":\\\"False\\\",\\\"type\\\":\\\"NetworkReady\\\"}\" I0119 15:42:58.949907 105456 builder.go:121 Running '/usr/bin/kubectl --server= --kubeconfig=/tmp/secret/kubeconfig --namespace=e2e-test-network-segmentation-e2e-z4jmf get clusteruserdefinednetwork test-net-2r26r -o jsonpath={.status.conditions}' I0119 15:42:59.161399 105456 builder.go:146 stderr: \"\" ```"
  },
  {
    "id": "29446",
    "type": "pullRequest",
    "title": "SDN-4930: Make UserDefinedNetwork status backwards compatible",
    "body": "Modified the network condition. This commit makes it backwards compatible so that downstream merge will not be blocked. /cc @trozet @ormergi @tssurya"
  },
  {
    "id": "29445",
    "type": "pullRequest",
    "title": "OCPBUGS-48569,SDN-4930: ovn-k,net-seg: Use the right IP family according to env",
    "body": "This PR should fix flakes related to using work IP family CIDR in IPv6 lanes for the following tests: ``` sig-networkOCPFeatureGate:NetworkSegmentationFeature:UserDefinedPrimaryNetworks when using openshift ovn-kubernetes when primary network exist, ClusterUserDefinedNetwork status should report not-ready Suite:openshift/conformance/parallel sig-networkOCPFeatureGate:NetworkSegmentationFeature:UserDefinedPrimaryNetworks when using openshift ovn-kubernetes when primary network exist, UserDefinedNetwork status should report not-ready Suite:openshift/conformance/parallel ```"
  },
  {
    "id": "29448",
    "type": "pullRequest",
    "title": "SDN-4930: Fix pods cleanup in ClusterUserDefinedNetwork test",
    "body": "`netConfig` pointer was being modified in a loop so pods were removed from only one namespace. Upstream PR: /cc @ormergi @tssurya"
  },
  {
    "id": "29436",
    "type": "pullRequest",
    "title": "OCPBUGS-48569,SDN-4930: e2e,ovn-k,net-seg: Wait for UDN condition populate",
    "body": "The test \"Network Segmentation when primary network exist, UserDefinedNetwork status should report not-ready\" may flake in case the tested UserDefinedNetwork instance conditions are not populated on the expected time. This PR stabilize the test by wrapping the failing assertion with Eventually, so that the test wait for conditions to populate. Note to reviewer: This PR port the changes introduced on U/S - The test asserts for one of NetworkReady/Created conditions since the relevant bits has not been reached D/S yet."
  },
  {
    "id": "29428",
    "type": "pullRequest",
    "title": "OCPBUGS-48238,OCPBUGS-48449,OCPBUGS-48450: Set the poll timeout and poll interval in eventually directly for the tests",
    "body": "See and for details More details are present in the individual commits"
  },
  {
    "id": "29274",
    "type": "pullRequest",
    "title": "SDN-5473: OVN-K: Port e2e tests for CUDN functionality, connectivity and isolation",
    "body": "This PR adds e2e tests for OVN-Kuberentes CluserUserDefinedNetwork CRD, introduced by Note to reviewer: - Tests has been added as is from U/S repo, no logical changes has been done (1st & 2nd commits) Any change required on those bits, require introducing the change on U/S and replicating these changes to D/S, after this PR is merged. In order to avoid diverging from U/S code. - Due to flakes surfaced on OCP CI the some changes has been done on U/S this PR changes were replicated to this PR as is (3-5 commits). Any change required on those bits, require introducing the change on the PR on U/S and replicating these changes to this PR. In order to avoid diverging from U/S code. The changes has been done: - Add missing wait for CUDN status to populate. - Since tests runs in parallel on TP lane, wait for CUDN objects to be gone when deleted. - Prevent flakes when CUDN realted tests run in parallel by using random metadata.name for CUDN objects. - In tests that create namespaces and pods, set the pods with PSA that meet the cluster. - Following incoming changes related to condition renaming ( the new CUDN tests were adjusted (last commit), similar to what we did at - ~~This PR depends on having the CRD deployed by CNO"
  },
  {
    "id": "29339",
    "type": "pullRequest",
    "title": "OCPBUGS-43777: apiserver: add tests to verify kube-apiserver is accessible via different endpoints",
    "body": "Add tests which check that kube-apiserver is reachable via service network, external and internal api endpoints. In standarf e2e test flow this is being verified by monitor test, but cert rotation tests are disruptive and can't observe the cluster when time is being skewed to emulate age. As a result, these tests need to be oneshot verification tests"
  },
  {
    "id": "29407",
    "type": "pullRequest",
    "title": "OCPBUGS-49742, SDN-5579: virt, feat gates: the UDN CRD depends on the NetSeg feat gate",
    "body": "As seen in 0, and 1 the UserDefinedNetwork CRD is only installed if the `NetworkSegmentation` feature gate is installed - hence, we need to mark the UDN based tests with the `NetworkSegmentation` feature gate. 0 - 1 -"
  },
  {
    "id": "29253",
    "type": "pullRequest",
    "title": "SDN-4930: Verify that a UDN pod can reach the kapi service in the default network",
    "body": "Ported from: Depends on: - in downstream. -"
  },
  {
    "id": "29381",
    "type": "pullRequest",
    "title": "SDN-4930: networksegmentation, udn: Wait for NetworkCreated or NetworkReady condition",
    "body": "Following the incoming changes of UserDefinedNetwork CRD condition type 1, tests that assert on the NetworkReady condition type should take in account the renamed type NetworkCreated to avoid CI breakage in the following scenarios: - Production code changes reached D/S before tests code changes: Having the UDN CRD produce the new condition type (NetworkCreated), while e2e tests assert on the old condition type (NetworkReady). - Tests code changes reached D/S before production code changes: Having the UDN CRD produce the old condition type (NetworkReady), while tests assert on the new condition type (NetworkCreated). Change assertions on UDN condition type NetworkReady, expect condition type NetworkReady or NetworkCreated. 1"
  },
  {
    "id": "29394",
    "type": "pullRequest",
    "title": "SDN-5017: Fix subnet check for assigned pod IPs",
    "body": "The NetPol test checks assigned pod IP only against IPv4 subnet which would fail on IPv6 only cluster. This PR fixes it by checking on all valid CIDRs."
  },
  {
    "id": "29384",
    "type": "pullRequest",
    "title": "OCPBUGS-47529: Add team members to the OWNERS file for PR approvals",
    "body": "This PR updates the OWNERS file to include two additional members who can approve pull requests."
  },
  {
    "id": "29315",
    "type": "pullRequest",
    "title": "OCPBUGS-43478: generalize the RHEL8 and RHEL9 subscription_content.go test"
  },
  {
    "id": "29093",
    "type": "pullRequest",
    "title": "OCPBUGS-39315: remove ingress operator exclusion",
    "body": "cc @candita"
  },
  {
    "id": "29396",
    "type": "pullRequest",
    "title": "OCPBUGS-48076: external binary: in-line registry auth file fetching",
    "body": "I had extracted this code, but I broke the case where we're getting the pull secret from the cluster -- because it was immediately getting deleted on return. In-line the code instead to prevent that, so it gets deleted when we're done using it. The error you get when this happens looks like: ``` error running options: could not create external binary provider: couldn't extract release payload image stream: failed extracting image-references from \"quay.io/openshift-release-dev/ocp-release-nightly@sha256:856d044a4f97813fb31bc4edda39b05b2b7c02de1327b9b297bdf93edc08fa95\": error during image extract: exit status 1 (error: unable to load --registry-config: stat /tmp/external-binary2166428580/.dockerconfigjson: no such file or directory ```"
  },
  {
    "id": "29392",
    "type": "pullRequest",
    "title": "OCPBUGS-47700: images: Fix layers test to work with manifestlisted imagestreams",
    "body": "Look at the layers in the submanifest rather than the top level manifest if the imagestream is manifestlisted. Refer to the bug for details. This fixes techpreview jobs for clusters installed with the multi-payload. Example of a failure:"
  },
  {
    "id": "29398",
    "type": "pullRequest",
    "title": "OCPBUGS-47796: fix year for string compare",
    "body": "For the machine monior tests we compare directly against the error message. The year is included there so we will inject 2024 for those tests. This way the tests won't fail in 2025. For the lease tests we don't actually use the year so we can use the current year without any issue. Note: I am not sure if this is also failing for 4.17.."
  },
  {
    "id": "29332",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`324`) added jobs and (`772`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `420` jobs increased and `611` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 s390x libvirt 125 2651.52% 5102.07% 4.19 s390x libvirt 125 2651.52% 5166.32% 4.19 s390x libvirt 125 1269.70% 2533.16% 4.19 s390x libvirt 125 1263.64% 2500.00% 4.19 s390x libvirt 125 1257.58% 2500.00% 4.19 s390x libvirt 125 1127.40% 2453.69% 4.19 s390x libvirt 125 1127.40% 2376.34% 4.19 s390x libvirt 125 804.00% 1937.60% 4.19 s390x libvirt 125 863.44% 1935.70% 4.19 amd64 aws 291 700.00% 1355.86% 4.19 amd64 aws 301 49.17% 98.18% 4.19 amd64 aws 301 62.79% 1320.00% 4.18 amd64 vsphere 493 100.00% 41.98% 4.18 amd64 vsphere 493 100.00% 84.67% 4.19 amd64 vsphere 415 1900.00% 82.37% 4.18 amd64 vsphere 493 70.00% 50.00% 4.18 amd64 vsphere 493 46.67% 52.67% 4.19 amd64 vsphere 415 100.00% 84.75% 4.19 amd64 azure 914 50.00% 85.68% 4.19 amd64 azure 914 100.00% 100.00% 4.19 amd64 azure 914 50.00% 89.19% 4.19 s390x libvirt 125 100.00% 2576.00% 4.19 amd64 azure 288 100.00% 41.51% 4.19 amd64 vsphere 415 81.82% 91.52% 4.19 s390x libvirt 125 80.00% 3384.00% 4.19 s390x libvirt 125 53.85% 1515.05% 4.19 amd64 aws 312 53.85% 98.78% 4.18 ppc64le libvirt 243 0.00% 135.73% 4.18 amd64 aws 333 0.00% 86.14% 4.18 ppc64le libvirt 243 0.00% 147.56% 4.18 amd64 azure 337 0.00% 64.00% 4.18 amd64 azure 260 0.00% 66.67% 4.18 amd64 metal 253 0.00% 2924.00% 4.18 amd64 metal 253 0.00% 3054.05% 4.18 amd64 gcp 518 0.00% 100.00% 4.18 amd64 aws 333 0.00% 86.14% 4.18 ppc64le libvirt 243 0.00% 147.02% 4.18 s390x libvirt 120 0.00% 1817.07% 4.18 amd64 aws 333 0.00% 86.14% 4.18 ppc64le libvirt 243 0.00% 128.57% 4.18 amd64 azure 862 0.00% 1900.00% 4.18 arm64 aws 323 0.00% 1287.16% 4.18 amd64 gcp 518 0.00% 33.33% 4.18 ppc64le libvirt 243 0.00% 148.38% 4.18 amd64 aws 681 0.00% 260.00% 4.18 amd64 vsphere 493 0.00% 46.29% 4.18 ppc64le libvirt 243 0.00% 198.53% 4.18 amd64 aws 268 0.00% 132.56% 4.18 amd64 metal 253 0.00% 200.31% 4.18 amd64 aws 333 0.00% 86.14% 4.18 amd64 azure 342 0.00% 116.27% 4.18 amd64 gcp 518 0.00% 83.00% 4.18 ppc64le libvirt 243 0.00% 147.87% 4.18 amd64 gcp 518 0.00% 83.00% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 amd64 aws 333 0.00% 86.71% 4.18 amd64 metal 285 0.00% 122.22% 4.18 amd64 aws 333 0.00% 86.71% 4.18 amd64 gcp 389 0.00% 328.00% 4.18 ppc64le libvirt 243 0.00% 149.47% 4.18 ppc64le libvirt 243 0.00% 162.89% 4.18 ppc64le libvirt 243 0.00% 130.87% 4.18 ppc64le libvirt 243 0.00% 128.18% 4.18 ppc64le libvirt 243 0.00% 129.63% 4.18 amd64 gcp 889 0.00% 200.00% 4.18 ppc64le libvirt 243 0.00% 133.58% 4.18 amd64 aws 681 0.00% 88.89% 4.18 amd64 azure 342 0.00% 100.00% 4.18 amd64 aws 333 0.00% 86.71% 4.18 amd64 aws 333 0.00% 86.71% 4.18 amd64 aws 333 0.00% 86.14% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 ppc64le libvirt 243 0.00% 148.74% 4.18 amd64 metal 253 0.00% 48.00% 4.18 amd64 gcp 518 0.00% 100.00% 4.18 amd64 aws 333 0.00% 86.14% 4.18 ppc64le libvirt 243 0.00% 148.01% 4.18 amd64 vsphere 493 0.00% 52.67% 4.18 ppc64le libvirt 243 0.00% 128.78% 4.18 amd64 aws 333 0.00% 86.71% 4.18 ppc64le libvirt 243 0.00% 146.26% 4.18 amd64 gcp 389 0.00% 149.72% 4.18 ppc64le libvirt 243 0.00% 146.44% 4.18 amd64 metal 224 0.00% 122.22% 4.18 amd64 aws 333 0.00% 292.61% 4.18 heterogeneous aws 139 0.00% 62.00% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 amd64 metal 224 0.00% 122.22% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 ppc64le libvirt 243 0.00% 146.93% 4.18 amd64 aws 333 0.00% 86.71% 4.18 amd64 gcp 518 0.00% 100.00% 4.18 amd64 metal 158 0.00% 6077.00% 4.18 amd64 gcp 889 0.00% 100.00% 4.18 amd64 gcp 518 0.00% 100.00% 4.19 amd64 gcp 987 0.00% 45692.00% 4.19 arm64 aws 326 0.00% 2787.93% 4.19 amd64 gcp 343 0.00% 38804.00% 4.19 amd64 gcp 987 0.00% 100.00% 4.19 amd64 gcp 987 0.00% 640.74% 4.19 amd64 gcp 500 0.00% 102.02% 4.19 amd64 azure 288 0.00% 78.57% 4.19 amd64 aws 301 0.00% 64.81% 4.19 amd64 aws 312 0.00% 93.48% 4.19 amd64 metal 172 0.00% 31.58% 4.19 amd64 gcp 500 0.00% 100.00% 4.19 amd64 azure 288 0.00% 78.57% 4.19 amd64 gcp 500 0.00% 38218.00% 4.19 amd64 gcp 987 0.00% 41.24% 4.19 amd64 azure 311 0.00% 38.89% 4.19 amd64 aws 312 0.00% 117.39% 4.19 amd64 gcp 987 0.00% 100.00% 4.19 s390x libvirt 125 0.00% 1692.75% 4.19 amd64 azure 311 0.00% 11325.93% 4.19 amd64 aws 301 0.00% 64.81% 4.19 amd64 azure 914 0.00% 167.14% 4.19 s390x libvirt 125 0.00% 1705.18% 4.19 amd64 aws 312 0.00% 60069.57% 4.19 amd64 metal 217 0.00% 158.03% 4.19 s390x libvirt 125 0.00% 1089.08% 4.19 amd64 azure 311 0.00% 50.00% 4.19 amd64 gcp 987 0.00% 270.37% 4.19 amd64 gcp 500 0.00% 100.00% 4.19 amd64 aws 301 0.00% 70.37% 4.19 amd64 aws 312 0.00% 173.97% 4.19 amd64 azure 311 0.00% 34177.78% 4.19 amd64 gcp 392 0.00% 222.58% 4.19 amd64 gcp 500 0.00% 100.00% 4.19 amd64 aws 1010 0.00% 544.00% 4.19 amd64 aws 301 0.00% 68.52% 4.19 amd64 aws 1010 0.00% 23748.00% 4.19 amd64 gcp 343 0.00% 61.29% 4.19 amd64 aws 291 0.00% 1900.00% 4.19 amd64 aws 301 0.00% 72.22% 4.19 amd64 aws 312 0.00% 144.50% 4.19 amd64 azure 311 0.00% 8465.97% 4.19 s390x libvirt 125 0.00% 1286.53% 4.19 amd64 vsphere 415 0.00% 45.16% 4.19 arm64 aws 281 0.00% 100.00% 4.19 amd64 azure 288 0.00% 36.54% 4.19 amd64 azure 311 0.00% 100.00% 4.19 amd64 aws 312 0.00% 100.00% 4.19 amd64 azure 311 0.00% 100.00% 4.19 amd64 metal 217 0.00% 8452.63% 4.19 amd64 aws 301 0.00% 2259.31% 4.19 amd64 gcp 987 0.00% 640.74% 4.19 amd64 aws 301 0.00% 72.22% 4.19 amd64 gcp 392 0.00% 222.58% 4.19 amd64 gcp 500 0.00% 101.00% 4.19 amd64 gcp 987 0.00% 640.74% 4.19 amd64 azure 914 0.00% 500.00% 4.19 amd64 metal 213 0.00% 31.58% 4.19 arm64 aws 326 0.00% 575.00% 4.19 amd64 vsphere 415 0.00% 121.29% 4.19 amd64 gcp 500 0.00% 100.00% 4.19 amd64 metal 217 0.00% 686.69% 4.19 amd64 azure 914 0.00% 63452.86% 4.19 amd64 gcp 987 0.00% 640.74% 4.19 amd64 gcp 392 0.00% 61.29% 4.19 amd64 metal 172 0.00% 31.58% 4.19 amd64 gcp 987 0.00% 76.21% 4.19 amd64 gcp 987 0.00% 33.33% 4.19 amd64 aws 301 0.00% 62.96% 4.19 amd64 aws 301 0.00% 2497.40% 4.19 arm64 aws 324 0.00% 72.41% 4.19 amd64 aws 651 0.00% 270.37% 4.19 amd64 aws 312 0.00% 100.00% 4.19 amd64 aws 301 0.00% 62.96% 4.19 amd64 vsphere 415 0.00% 33.93% 4.19 amd64 gcp 987 0.00% 100.00% /details alerts Information There were (`7316`) added jobs and (`1436`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `49` jobs increased and `239` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.19 amd64 aws 161 263.58% 43.50% 4.19 amd64 aws 130 55.13% 143.27% 4.18 amd64 azure 108 547.71% 457.75% 4.18 amd64 metal 137 0.00% 101.14% 4.18 amd64 azure 108 0.00% 48.56% 4.18 amd64 azure 108 0.00% 224.31% 4.18 amd64 metal 137 0.00% 73.40% 4.18 amd64 metal 137 0.00% 73.49% 4.18 amd64 azure 108 0.00% 89.80% 4.18 amd64 gcp 121 0.00% 1048.65% 4.18 amd64 metal 137 0.00% 47.53% 4.19 amd64 metal 158 0.00% 615.34% 4.19 amd64 azure 248 0.00% 198.86% 4.19 amd64 gcp 104 0.00% 334.78% 4.19 amd64 gcp 104 0.00% 254.64% 4.19 amd64 azure 248 0.00% 371.55% 4.19 amd64 aws 108 0.00% 94.27% 4.19 amd64 azure 248 0.00% 25100.00% 4.19 amd64 aws 267 0.00% 4930.19% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29399",
    "type": "pullRequest",
    "title": "Revert \"TRT-1803: Wait for operators to become stable before test\"",
    "body": "Reverts openshift/origin29367"
  },
  {
    "id": "29355",
    "type": "pullRequest",
    "title": "OCPBUGS-44257: Fixing build s2i ruby test data inline with latest ruby version(=3.0)",
    "body": "OCPBUGS-44257:fixing build s2i ruby test data inline with latest ruby version(=3.0) The test data for s2i image creation with source type as binary has issues post base image upgrade to ruby 3.0 (test/extended/testdata/builds/test-env-build.json) This is because webrick server is removed from default ruby libraries from 3.0 version,hence a webserver should be installed externally.The test data is missing this causing permanant failure post ruby 3.0 upgrade. This fix is updating the test data with required dependencies to create a stable app to fulfill the testcase criteria. signed-off by : moebasim(mbasim@redhat.com)"
  },
  {
    "id": "29346",
    "type": "pullRequest",
    "title": "SDN-5031: e2e,networking: add UDN open-default-ports annotation test.",
    "body": "A copy of e2e from ``` passed: (1m21s) 2024-12-05T18:24:51 \"sig-networkOCPFeatureGate:NetworkSegmentationFeature:UserDefinedPrimaryNetworks when using openshift ovn-kubernetes UDN Pod should react to k8s.ovn.org/open-default-ports annotations changes Suite:openshift/conformance/parallel\" ``` from"
  },
  {
    "id": "28797",
    "type": "pullRequest",
    "title": "SDN-4168: Optimize timing for IPsec tests",
    "body": "The ipsec test suite takes about 5-6 hours to finish running the tests, This PR optimizes ipsec tests such that it reboots only worker nodes for cert installation and tests execution time can be greatly reduced to 2-3 hrs."
  },
  {
    "id": "29375",
    "type": "pullRequest",
    "title": "SDN-5567: virt: add GA placeholder test"
  },
  {
    "id": "29374",
    "type": "pullRequest",
    "title": "SDN-5566: virt, udn: primary UDN requires the net seg FG",
    "body": "Mark the primary UDN tests as requiring the network segmentation FG."
  },
  {
    "id": "29367",
    "type": "pullRequest",
    "title": "TRT-1803: Wait for operators to become stable before test"
  },
  {
    "id": "29354",
    "type": "pullRequest",
    "title": "TRT-1575: Use catchall card for operator degraded exceptions for major operators"
  },
  {
    "id": "29349",
    "type": "pullRequest",
    "title": "OCPBUGS-45756: Updating openshift-enterprise-tests-container image to be consistent with ART for 4.19",
    "body": "Updating openshift-enterprise-tests-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: openshift-enterprise-tests.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "29348",
    "type": "pullRequest",
    "title": "SDN-5568: only provision workloads when network creation has started"
  },
  {
    "id": "29195",
    "type": "pullRequest",
    "title": "SDN-5017: Add UDN Network Policy e2e tests"
  },
  {
    "id": "29383",
    "type": "pullRequest",
    "title": "STOR-2136: Remove CSI snapshot webhook tests",
    "body": "- We don't need these CSI snapshot webhook tests any more, because we are no longer deploying snapshot webhook stuff in OCP. Ref -"
  },
  {
    "id": "29376",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Update etcd test data for 1.32 release",
    "body": "This is intended to fix: ``` sig-api-machinery API data in etcd should be stored at the correct location and version for all resources Serial Suite:openshift/conformance/serial expand_less 15s { fail github.com/openshift/origin/test/extended/etcd/etcd_storage_path.go:482: test failed: no test data for resource.k8s.io/v1beta1, Kind=DeviceClass. Please add a test for your new type to etcdStorageData. no test data for resource.k8s.io/v1beta1, Kind=ResourceClaim. Please add a test for your new type to etcdStorageData. no test data for resource.k8s.io/v1beta1, Kind=ResourceClaimTemplate. Please add a test for your new type to etcdStorageData. no test data for resource.k8s.io/v1beta1, Kind=ResourceSlice. Please add a test for your new type to etcdStorageData. GVK for resource.k8s.io/v1alpha3, Kind=DeviceClass does not match, expected resource.k8s.io/v1alpha3, Kind=DeviceClass got resource.k8s.io/v1beta1, Kind=DeviceClass GVK for resource.k8s.io/v1alpha3, Kind=ResourceClaim does not match, expected resource.k8s.io/v1alpha3, Kind=ResourceClaim got resource.k8s.io/v1beta1, Kind=ResourceClaim GVK for resource.k8s.io/v1alpha3, Kind=ResourceClaimTemplate does not match, expected resource.k8s.io/v1alpha3, Kind=ResourceClaimTemplate got resource.k8s.io/v1beta1, Kind=ResourceClaimTemplate GVK for resource.k8s.io/v1alpha3, Kind=ResourceSlice does not match, expected resource.k8s.io/v1alpha3, Kind=ResourceSlice got resource.k8s.io/v1beta1, Kind=ResourceSlice etcd data does not match the types we saw: seen but not in etcd data: resource.k8s.io/v1beta1, Resource=resourceslices resource.k8s.io/v1beta1, Resource=resourceclaims resource.k8s.io/v1beta1, Resource=resourceclaimtemplates resource.k8s.io/v1beta1, Resource=deviceclasses Ginkgo exit error 1: exit with code 1} ``` /assign @dusk125"
  },
  {
    "id": "29365",
    "type": "pullRequest",
    "title": "STOR-2136: Remove CSI snapshot webhook conditions checks",
    "body": "We don't need these conditions, because we are no longer deploying snapshot webhook stuff in OCP. See -"
  },
  {
    "id": "29362",
    "type": "pullRequest",
    "title": "CNTRLPLANE-1: Add incoming images k8s 1.32",
    "body": "/assign @dusk125"
  },
  {
    "id": "29369",
    "type": "pullRequest",
    "title": "NO-JIRA: managed services: bump series limit",
    "body": "it was 807 in the latest GCP run Signed-off-by: Brady Pratt bpratt@redhat.com"
  },
  {
    "id": "29368",
    "type": "pullRequest",
    "title": "NO-ISSUE: Remove m1kola from owners"
  },
  {
    "id": "29320",
    "type": "pullRequest",
    "title": "trt-1892: check for pod security audit violations"
  },
  {
    "id": "29247",
    "type": "pullRequest",
    "title": "NE-1870: Fix the Network Ingress & DNS OWNERS files and add aliases to OWNERS_ALIASES",
    "body": "Fix the Network Ingress & DNS OWNERS files and add aliases to OWNERS_ALIASES. modified: OWNERS_ALIASES new file: test/extended/dns/OWNERS modified: test/extended/router/OWNERS"
  },
  {
    "id": "29357",
    "type": "pullRequest",
    "title": "OCPBUGS-45994: managed services: allow KubeDaemonSetMisScheduled alert",
    "body": "OSD-26887( managed services taints several nodes as infrastructure. This taint appears to be applied after some of the platform DS are scheduled there, causing this alert to fire. Managed services rebalances the DS after the taint is added, and the alert clears, but origin fails this test. Allowing this alert to fire while we investigate why the taint is not added at node birth."
  },
  {
    "id": "29356",
    "type": "pullRequest",
    "title": "OCPBUGS-45838: managed services: add more missing namespaces",
    "body": "I missed a couple."
  },
  {
    "id": "29176",
    "type": "pullRequest",
    "title": "OCPBUGS-42618: Replace RunHostCmd with Exec function to censor bearer token being ex...",
    "body": "RunHostCmd( function from getBearerTokenURLViaPod function was invoking the kubectl exec to execute a command from within a pod which eventually led to printing this line( containing the bearer token. As a result the CI logs was removed as it contained sensitive information exposure. Since it was difficult to make the changes upstream to avoid printing the token, replaced the RunHostCmd function with the oc exec command and redacted the token thats printed. Redacted output will be as shown below `I1209 01:20:21.410430 3464561 client.go:936 Running 'oc --namespace=e2e-test-router-metrics-n8qsz --kubeconfig=/home/shilpa/libvirt-config/upi-install/upi/auth/kubeconfig exec execpod -- curl -s -k -H Authorization: Bearer redacted"
  },
  {
    "id": "29311",
    "type": "pullRequest",
    "title": "OCPBUGS-42610: filter out pod events during vsphere snapshot options",
    "body": "This is a fixup for previous patch which does not seem to work well: cc @openshift/storage"
  },
  {
    "id": "29351",
    "type": "pullRequest",
    "title": "OCPBUGS-45838: managed services: add missing namespaces to list",
    "body": "The helper doesn't have all the namespaces in it, and we're getting some flakes in CI like this: ``` batch/v1/Job/openshift-backplane-managed-scripts/batch_job/container/osd-delete-backplane-script-resources does not have a cpu request (rule: \"batch/v1/Job/openshift-backplane-managed-scripts/batch_job/container/osd-delete-backplane-script-resources/requestcpu\") ```"
  },
  {
    "id": "29329",
    "type": "pullRequest",
    "title": "OCPBUGS-44970: Excluding loki prod-bearer-token container from excessive restarts test in SNO",
    "body": "This container is deployed by and is sensitive to resolving sso.redhat.com. During an SNO upgrade, there is a brief period of time where dns is unavailable because the only instance of the pod has been killed and the new pod is starting up. The goal of this change is to exclude this container from the excessive restart checks since, depending on the exact timing, it can restart enough times to trigger a failed test."
  },
  {
    "id": "29328",
    "type": "pullRequest",
    "title": "OCPBUGS-44808: reenable OLMv1 test for maxOpenShiftversion"
  },
  {
    "id": "29340",
    "type": "pullRequest",
    "title": "OCPBUGS-45363: Parse node logs also when encountered with standard html header",
    "body": "This PR is complementary of"
  },
  {
    "id": "29336",
    "type": "pullRequest",
    "title": "OCPBUGS-50928: managed services: add known image check for gcp",
    "body": "this was added for rosa in 12ab194e2ef15737f8cae7793b7eb6294f36ef31 Signed-off-by: Brady Pratt bpratt@redhat.com"
  },
  {
    "id": "29300",
    "type": "pullRequest",
    "title": "TRT-1895: External binary caching and code clean-up",
    "body": "Adds a caching layer for external binary extraction so it's easier to re-run openshift-tests locally. There's a README with additional info in `pkg/test/externalbinary/README.md`. This also reduces the complexity of cmd_runsuite, and encapsulates all image extraction code, so it can be used elsewhere more easily. It does not yet move to the new interface with openshift-tests-extension, but makes it easier to do that later. This PR was already large enough by itself."
  },
  {
    "id": "29323",
    "type": "pullRequest",
    "title": "OCPBUGS-44961: Fix \"Enforce the required-scc monitor test and validate usage of non-standard OCP SCCs\"",
    "body": "Enforced required-scc monitor test for fixed namespaces. Extended the required-scc monitor test to validate non-standard SCCs and ensure they are only used in allowed namespaces. Fixed the issue from revert 29321 Added system namespaces such as `default`, `kube-system`, `kube-public`, `openshift-node`, `openshift-infra`, and `openshift` to ensure they are treated as flaking namespaces."
  },
  {
    "id": "29330",
    "type": "pullRequest",
    "title": "TRT-1898: Revert \"NO-JIRA: address malformed CMO configmap post-test\"",
    "body": "Reverts openshift/origin29309; tracked by Per OpenShift policy( we are reverting this breaking change to get CI and/or nightly payloads flowing again. This PR has causd the nightly failures for many techpreview jobs. Here is one example: Test is stuck with this error: I1127 09:11:20.327512 62130 client.go:421 Project \"e2e-test-monitoring-collection-profiles-mqvzf\" has been fully provisioned. STEP: restoring the original configuration for the operator @ 11/27/24 09:11:21.232 INTERRUPTED in AfterAll - github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:99 @ 11/27/24 09:26:06.355 ------------------------------ Interrupted by User First interrupt received; Ginkgo will run any cleanup and reporting nodes but will skip all remaining specs. Interrupt again to skip cleanup. Here's a current progress report: sig-instrumentationOCPFeatureGate:MetricsCollectionProfiles The collection profiles feature-set initially, in a homogeneous default environment, should expose default metrics Suite:openshift/conformance/parallel (Spec Runtime: 14m49.846s) github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:140 In AfterAll (Node Runtime: 14m45.187s) github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:99 At By Step restoring the original configuration for the operator (Step Runtime: 14m45.123s) github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:104 Spec Goroutine goroutine 236 select github.com/onsi/gomega/internal.(AsyncAssertion).match(0xc000fa2070, {0x7e574e8, 0xc23fb80}, 0x1, {0x0, 0x0, 0x0}) github.com/onsi/gomega@v1.34.2/internal/async_assertion.go:538 github.com/onsi/gomega/internal.(AsyncAssertion).Should(0xc000fa2070, {0x7e574e8, 0xc23fb80}, {0x0, 0x0, 0x0}) github.com/onsi/gomega@v1.34.2/internal/async_assertion.go:145 github.com/openshift/origin/test/extended/prometheus.init.func1.2() github.com/openshift/origin/test/extended/prometheus/collection_profiles.go:118 github.com/onsi/ginkgo/v2/internal.extractBodyFunction.func3({0xc006c77b00?, 0xc006c5fe00?}) github.com/onsi/ginkgo/v2@v2.20.2/internal/node.go:472 github.com/onsi/ginkgo/v2/internal.(Suite).runNode.func3() github.com/onsi/ginkgo/v2@v2.20.2/internal/suite.go:901 github.com/onsi/ginkgo/v2/internal.(Suite).runNode in goroutine 1 github.com/onsi/ginkgo/v2@v2.20.2/internal/suite.go:888 ------------------------------ To unrevert this, revert this PR, and layer an additional separate commit on top that addresses the problem. Before merging the unrevert, please run these jobs on the PR and check the result of (job/X or job/X, test/Y tuple) to confirm the fix has corrected the problem: /payload-job periodic-ci-openshift-release-master-ci-4.19-e2e-aws-ovn-techpreview CC: @rexagod"
  },
  {
    "id": "29325",
    "type": "pullRequest",
    "title": "NO-JIRA: add additional managed namespaces",
    "body": "these are deployed to non-sts and gcp clusters Signed-off-by: Brady Pratt bpratt@redhat.com"
  },
  {
    "id": "29308",
    "type": "pullRequest",
    "title": "NO-JIRA: watch CRDs",
    "body": "This is useful to follow api changes rollouts. /assign @deads2k"
  },
  {
    "id": "29318",
    "type": "pullRequest",
    "title": "TRT-1761: Allow the test for kubelet DiskPressure to fail job runs",
    "body": "Only metal jobs were showing up, rarely at that, and a fix just went in."
  },
  {
    "id": "29309",
    "type": "pullRequest",
    "title": "NO-JIRA: address malformed CMO configmap post-test"
  },
  {
    "id": "29317",
    "type": "pullRequest",
    "title": "NO-ISSUE: Automated - Update synthetic test data",
    "body": "disruptions Information There were (`1814`) added jobs and (`0`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, disruptions had `137` jobs increased and `254` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.18 amd64 metal 364 500.00% 84.60% 4.18 s390x libvirt 160 0.00% 88.26% 4.18 ppc64le libvirt 333 0.00% 100.00% 4.18 arm64 aws 492 0.00% 774.00% 4.18 s390x libvirt 160 0.00% 89.07% 4.18 s390x libvirt 160 0.00% 84.83% 4.18 s390x libvirt 160 0.00% 88.21% 4.18 heterogeneous aws 191 0.00% 90.00% 4.18 heterogeneous aws 191 0.00% 90.00% 4.18 s390x libvirt 160 0.00% 85.02% 4.18 amd64 azure 435 0.00% 90.86% 4.18 s390x libvirt 159 0.00% 162.50% 4.18 amd64 metal 353 0.00% 80.18% 4.18 s390x libvirt 160 0.00% 113.48% 4.18 s390x libvirt 160 0.00% 84.93% 4.18 amd64 azure 435 0.00% 94.12% 4.18 s390x libvirt 160 0.00% 114.26% 4.18 amd64 gcp 519 0.00% 310.00% 4.18 amd64 metal 353 0.00% 469.23% 4.18 s390x libvirt 160 0.00% 85.05% 4.18 amd64 azure 567 0.00% 100.00% 4.18 s390x libvirt 160 0.00% 88.97% 4.18 s390x libvirt 160 0.00% 173.33% 4.18 s390x libvirt 160 0.00% 89.25% 4.18 amd64 azure 435 0.00% 50.00% 4.18 amd64 gcp 517 0.00% 48.39% 4.18 s390x libvirt 160 0.00% 85.05% 4.18 s390x libvirt 160 0.00% 112.11% 4.18 heterogeneous aws 191 0.00% 90.00% 4.18 s390x libvirt 160 0.00% 88.15% 4.18 amd64 aws 658 0.00% 66.67% 4.18 amd64 azure 896 0.00% 3233.33% 4.18 s390x libvirt 160 0.00% 85.38% 4.18 s390x libvirt 160 0.00% 85.13% 4.18 amd64 azure 429 0.00% 150.00% 4.18 heterogeneous aws 191 0.00% 100.00% 4.18 amd64 azure 567 0.00% 34.00% 4.18 s390x libvirt 160 0.00% 85.33% 4.18 amd64 azure 567 0.00% 33.33% 4.18 amd64 gcp 520 0.00% 426.32% 4.18 amd64 gcp 862 0.00% 100.00% 4.18 amd64 gcp 862 0.00% 222.58% 4.18 amd64 gcp 975 0.00% 257.14% 4.18 s390x libvirt 160 0.00% 84.77% 4.18 amd64 gcp 862 0.00% 222.58% /details alerts Information There were (`5169`) added jobs and (`3948`) were removed. Comparisons were above allowed leeway of `30.00%` Note: For P99, alerts had `25` jobs increased and `95` jobs decreased. details summaryClick To Show Table/summary Release Arch Platform Job Results P95 % Increase P99 % Increase ---- ---- ------- --------- --- --- 4.18 arm64 aws 108 137.10% 244.41% 4.18 amd64 aws 286 0.00% 419.07% 4.18 amd64 metal 272 0.00% 199.31% 4.18 amd64 aws 286 0.00% 33.06% 4.18 arm64 aws 108 0.00% 156.00% 4.18 amd64 metal 272 0.00% 26642.51% 4.18 amd64 gcp 129 0.00% 58.80% 4.18 amd64 metal 272 0.00% 60.24% 4.18 amd64 gcp 129 0.00% 32.11% 4.18 amd64 gcp 129 0.00% 347.59% 4.18 amd64 gcp 129 0.00% 74.01% /details /cc @dgoodwin, @neisw, @DennisPeriquet"
  },
  {
    "id": "29321",
    "type": "pullRequest",
    "title": "OCPBUGS-44966: Revert \"Enforce the required-scc monitor test and validate usage of non-standard OCP SCCs",
    "body": "Reverts openshift/origin29135 Observing permafailures in 4.19 Nightly payloads (haven't had a 4.18 recently) for hypershift starting with 4.19.0-0.nightly-2024-11-23-092733( Due to: ``` : sig-auth all workloads in ns/kube-system must set the 'openshift.io/required-scc' annotation expand_less 0s { annotation missing from pod 'konnectivity-agent-6rwjl' (owners: daemonset/konnectivity-agent); cannot suggest required-scc, no validated SCC on pod annotation missing from pod 'konnectivity-agent-88sdg' (owners: daemonset/konnectivity-agent); cannot suggest required-scc, no validated SCC on pod annotation missing from pod 'konnectivity-agent-ktcw5' (owners: daemonset/konnectivity-agent); cannot suggest required-scc, no validated SCC on pod annotation missing from pod 'kube-apiserver-proxy-ip-10-0-128-121.ec2.internal' (owners: node/ip-10-0-128-121.ec2.internal); cannot suggest required-scc, no validated SCC on pod annotation missing from pod 'kube-apiserver-proxy-ip-10-0-132-203.ec2.internal' (owners: node/ip-10-0-132-203.ec2.internal); cannot suggest required-scc, no validated SCC on pod annotation missing from pod 'kube-apiserver-proxy-ip-10-0-141-250.ec2.internal' (owners: node/ip-10-0-141-250.ec2.internal); cannot suggest required-scc, no validated SCC on pod} ``` Starting the revert to validate via `/payload-job periodic-ci-openshift-hypershift-release-4.19-periodics-e2e-aws-ovn-conformance`"
  },
  {
    "id": "158",
    "type": "pullRequest",
    "title": "MON-4139: feat: replace github.com/prometheus/prometheu dep with one having an xtra check in the parser to help identify le/quantile selectors misuses in Prometheus v3",
    "body": "!-- Keep PR title verbose enough and add prefix telling about what components it touches e.g \"query:\" or \".:\" -- !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Don't forget about CHANGELOG! Changelog entry format: - PR-id(PR-URL) Thanos Component ... PR-id Id of your pull request. PR-URL URL of your PR such as Component Component affected by your changes such as Query, Store, Receive. -- I added CHANGELOG entry for this change. Change is not relevant to the end user. Changes !-- Enumerate changes you made -- Verification !-- How you tested it? How do you know it works? --"
  },
  {
    "id": "156",
    "type": "pullRequest",
    "title": "OCPBUGS-48730: Update golang.org/x/net to v0.33",
    "body": "!-- Keep PR title verbose enough and add prefix telling about what components it touches e.g \"query:\" or \".:\" -- !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Don't forget about CHANGELOG! Changelog entry format: - PR-id(PR-URL) Thanos Component ... PR-id Id of your pull request. PR-URL URL of your PR such as Component Component affected by your changes such as Query, Store, Receive. -- I added CHANGELOG entry for this change. Change is not relevant to the end user. Changes !-- Enumerate changes you made -- Verification !-- How you tested it? How do you know it works? --"
  },
  {
    "id": "154",
    "type": "pullRequest",
    "title": "MON-4117: Bump to v0.37.2 and use go1.23",
    "body": "This also updates the image to be consistent with ART for 4.19, see my commits on top of the rebase. Also some other tweaks were needed. e.g. that hasn't been merged upstream yet. supersedes and as both should be done in the same PR !-- Keep PR title verbose enough and add prefix telling about what components it touches e.g \"query:\" or \".:\" -- !-- OpenShift: Don't forget to run `./scripts/rh-manifest.sh` from the repository root, and check-in the updated `rh-manifest.txt` file if necessary. -- !-- Don't forget about CHANGELOG! Changelog entry format: - PR-id(PR-URL) Thanos Component ... PR-id Id of your pull request. PR-URL URL of your PR such as Component Component affected by your changes such as Query, Store, Receive. -- I added CHANGELOG entry for this change. Change is not relevant to the end user. Changes !-- Enumerate changes you made -- Verification !-- How you tested it? How do you know it works? --"
  },
  {
    "id": "75",
    "type": "pullRequest",
    "title": "OCPCLOUD-2838: Merge (ed2b673) into master"
  },
  {
    "id": "81",
    "type": "pullRequest",
    "title": "OCPBUGS-45406: Updating ose-vsphere-cloud-controller-manager-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vsphere-cloud-controller-manager-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-vsphere-cloud-controller-manager.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "54",
    "type": "pullRequest",
    "title": "NO-JIRA: Update manifests generator tooling",
    "body": "Adds make target that updates the manifest generation tool to latest version. This make target will be run by lifecycle hook to ensure the tool is always up-to-date. It removes the downstream vendored version of kustomize. This was version was made redundant when we started running manifests-gen that uses its kustomize as a library. Keeping it around was only breaking things when features are deprecated. Always running the latest version of manifest-gen will allow us to be ahead of the deprecations made to kustomize. When one repository uses kustomize feature that manifest-gen does not have yet. We only need to update manifest-gen in cluster-capi-operator and the rebases will pick it up."
  },
  {
    "id": "53",
    "type": "pullRequest",
    "title": "OCPCLOUD-2853: Merge (8c1c84c) into master"
  },
  {
    "id": "52",
    "type": "pullRequest",
    "title": "OCPBUGS-45478: Updating ose-vsphere-cluster-api-controllers-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vsphere-cluster-api-controllers-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-vsphere-cluster-api-controllers.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "143",
    "type": "pullRequest",
    "title": "release-4.19 OCPBUGS-55700: UPSTREAM: 3262: Fix panic on DeletedFinalStateUnknown",
    "body": "This is an automated cherry-pick of 142 /assign jsafrane"
  },
  {
    "id": "141",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "140",
    "type": "pullRequest",
    "title": "OCPBUGS-51973, OCPBUGS-52808: CVE-2025-22869: bump golang.org/x/crypto to v0.35.0",
    "body": "golang.org/x/crypto needed to be updated to v0.35.0 for fixing CVE-2025-2286 which also requires go 1.23.0 which is automatically updated."
  },
  {
    "id": "138",
    "type": "pullRequest",
    "title": "OCPBUGS-47367, OCPBUGS-47437, OCPBUGS-46317, OCPBUGS-46331: bump golang.org/x/net to v0.33.0",
    "body": "This bumps golang.org/x/net to v0.33.0 and golang.org/x/crypto to v0.31.0 /hold for upstream"
  },
  {
    "id": "136",
    "type": "pullRequest",
    "title": "OCPBUGS-45413: Updating vmware-vsphere-syncer-container image to be consistent with ART for 4.19",
    "body": "Updating vmware-vsphere-syncer-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: vmware-vsphere-syncer.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "135",
    "type": "pullRequest",
    "title": "OCPBUGS-45402: Updating ose-vmware-vsphere-csi-driver-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vmware-vsphere-csi-driver-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-vmware-vsphere-csi-driver.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "304",
    "type": "pullRequest",
    "title": "OCPBUGS-53059: Fix panic issues when LegacyConfig is nil",
    "body": "If legacy config is set incorrectly it could cause panic. This PR changes the code so it checks if legacy config is not nil before trying to access it."
  },
  {
    "id": "300",
    "type": "pullRequest",
    "title": "SPLAT-2072: Removed VSphereMultiVCenters feature gate",
    "body": "SPLAT-2072( Changes - Removed usage of VSphereMultiVCenters feature gate - Migrated multivcenterstorageclasscontroller into the default controller Notes After a feature gate has been GA in an OCP release, we are supposed to clean up feature gate usage in the next release. VSphere multi vCenter support GA'd in 4.18, so the intention is to remove the feature gate as part of 4.19."
  },
  {
    "id": "287",
    "type": "pullRequest",
    "title": "STOR-2141: add support for maxAllowedBlockVolumesPerNode",
    "body": "Depends on - openshift/api: - openshift/client-go: Manual verification Test value limits for `maxAllowedBlockVolumesPerNode` field: ``` oc patch clustercsidriver/csi.vsphere.vmware.com --type=merge -p '{\"spec\":{\"driverConfig\":{\"vSphere\":{\"maxAllowedBlockVolumesPerNode\":-1}}}}' The ClusterCSIDriver \"csi.vsphere.vmware.com\" is invalid: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode: Invalid value: -1: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode in body should be greater than or equal to 1 $ oc patch clustercsidriver/csi.vsphere.vmware.com --type=merge -p '{\"spec\":{\"driverConfig\":{\"vSphere\":{\"maxAllowedBlockVolumesPerNode\":0}}}}' The ClusterCSIDriver \"csi.vsphere.vmware.com\" is invalid: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode: Invalid value: 0: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode in body should be greater than or equal to 1 $ oc patch clustercsidriver/csi.vsphere.vmware.com --type=merge -p '{\"spec\":{\"driverConfig\":{\"vSphere\":{\"maxAllowedBlockVolumesPerNode\":256}}}}' The ClusterCSIDriver \"csi.vsphere.vmware.com\" is invalid: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode: Invalid value: 256: spec.driverConfig.vSphere.maxAllowedBlockVolumesPerNode in body should be less than or equal to 255 ``` Validate `maxAllowedBlockVolumesPerNode` value propagation to driver deployment as `MAX_VOLUMES_PER_NODE`: ``` $ oc patch clustercsidriver/csi.vsphere.vmware.com --type=merge -p '{\"spec\":{\"driverConfig\":{\"vSphere\":{\"maxAllowedBlockVolumesPerNode\":60}}}}' clustercsidriver.operator.openshift.io/csi.vsphere.vmware.com patched $ oc -n openshift-cluster-csi-drivers get deployment.apps/vmware-vsphere-csi-driver-controller -o jsonpath='{.spec.template.spec.containers0.env}' {\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///var/lib/csi/sockets/pluginproxy/csi.sock\"},{\"name\":\"X_CSI_MODE\",\"value\":\"controller\"},{\"name\":\"VSPHERE_CSI_CONFIG\",\"value\":\"/etc/kubernetes/vsphere-csi-config/cloud.conf\"},{\"name\":\"INCLUSTER_CLIENT_QPS\",\"value\":\"100\"},{\"name\":\"INCLUSTER_CLIENT_BURST\",\"value\":\"100\"},{\"name\":\"CSI_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"X_CSI_SERIAL_VOL_ACCESS_TIMEOUT\",\"value\":\"3m\"},{\"name\":\"X_CSI_SPEC_DISABLE_LEN_CHECK\",\"value\":\"true\"},{\"name\":\"MAX_VOLUMES_PER_NODE\",\"value\":\"60\"} $ oc -n openshift-cluster-csi-drivers get daemonset.apps/vmware-vsphere-csi-driver-node -o jsonpath='{.spec.template.spec.containers0.env}' {\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"X_CSI_MODE\",\"value\":\"node\"},{\"name\":\"X_CSI_SPEC_DISABLE_LEN_CHECK\",\"value\":\"true\"},{\"name\":\"CSI_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"MAX_VOLUMES_PER_NODE\",\"value\":\"60\"} ``` Validate propagation to CSINode as allocatable count: ``` $ oc get csinode/ci-ln-k30mn5t-c1627-2tk2k-worker-0-72mfn -o jsonpath='{.spec.drivers0.allocatable.count}' 60 ``` If `maxAllowedBlockVolumesPerNode` is unset (for example after cluster upgrade) we must use default value (never zero): ``` $ oc get clustercsidriver/csi.vsphere.vmware.com -o jsonpath='{.spec.driverConfig}' {\"driverType\":\"\"} $ oc -n openshift-cluster-csi-drivers get deployment.apps/vmware-vsphere-csi-driver-controller -o jsonpath='{.spec.template.spec.containers0.env?(@.name==\"MAX_VOLUMES_PER_NODE\")}' {\"name\":\"MAX_VOLUMES_PER_NODE\",\"value\":\"59\"} ```"
  },
  {
    "id": "302",
    "type": "pullRequest",
    "title": "STOR-2245: add manifest-topology.yaml for topology related feature and test",
    "body": "When adding the multi-zone/multi-vcenter CI, some cases will check if there are at least 2 nodes in the same zone and need the topology Capability. The other profile that doesn't have the zonal configuration will still need the previous manifest. (The topology key is null)"
  },
  {
    "id": "301",
    "type": "pullRequest",
    "title": "OCPBUGS-44374: Bump library-go"
  },
  {
    "id": "298",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "296",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 cc @openshift/storage"
  },
  {
    "id": "283",
    "type": "pullRequest",
    "title": "OCPBUGS-43273: fix panic when vcenter address is incorrect",
    "body": "When address of vcenter was set incorrectly, the code would throw runtime error, this PR fixes it. cc @openshift/storage"
  },
  {
    "id": "286",
    "type": "pullRequest",
    "title": "STOR-2319: Remove code for CNS migration tool"
  },
  {
    "id": "281",
    "type": "pullRequest",
    "title": "OCPBUGS-48103: Update master to main",
    "body": "Update master to main. /hold"
  },
  {
    "id": "284",
    "type": "pullRequest",
    "title": "OCPBUGS-49406: Set reconcile-sync to 10 minute for ListVolume",
    "body": "Cherry-pick upstream PR3015( for cc @openshift/storage"
  },
  {
    "id": "279",
    "type": "pullRequest",
    "title": "OCPBUGS-46574: Escape backslash in vCenter username",
    "body": "VMWare/Broadcom docs requre double backslash in the username: You must specify the username along with the domain name. For example, user = \"userName@domainName\" or user = \"domainName\\\\\\\\username\". ("
  },
  {
    "id": "278",
    "type": "pullRequest",
    "title": "OCPBUGS-46089: List only linux nodes",
    "body": "The operaor needs to check only linux nodes. The customer reported that checks for Windows nodes fail because vspherecontroller unable to find VM by UUID."
  },
  {
    "id": "275",
    "type": "pullRequest",
    "title": "OCPBUGS-45563: Updating ose-vmware-vsphere-csi-driver-operator-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vmware-vsphere-csi-driver-operator-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: ose-vmware-vsphere-csi-driver-operator.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  },
  {
    "id": "276",
    "type": "pullRequest",
    "title": "OCPBUGS-45563: Move SyncRemove to AbstractStorageClass",
    "body": "The patch fixes e2e-vsphere-operator-test. It failed before because vmware-vsphere-csi-driver-operator attempted to call non-existent SyncRemove method of MultiVCenterStorageClassController: ``` W1210 21:52:45.753900 1 vspherecontroller.go:183 VMwareVSphereController: ManagementState is Removed, skipping runtime: goroutine stack exceeds 1000000000-byte limit runtime: sp=0xc021d18378 stack=0xc021d18000, 0xc041d18000 fatal error: stack overflow ... github.com/openshift/vmware-vsphere-csi-driver-operator/pkg/operator/storageclasscontroller.(MultiVCenterStorageClassController).SyncRemove(0xc000cc65a0?, {0x3d138c8?, 0xc000af5e50?}) ``` (see full logs here("
  },
  {
    "id": "181",
    "type": "pullRequest",
    "title": "OCPBUGS-52964: improve datastore check messages",
    "body": "Improve log messages so that they're not perceived as errors by users and engineers: - do not log misleading messages (saying we check permissions when we do other stuff and log it) - if there's datacenter that can not be reached and is not related to OCP it is expected and log messages should make that clear"
  },
  {
    "id": "175",
    "type": "pullRequest",
    "title": "SPLAT-1801: Add support for host groups",
    "body": "Summary - Add checks for host groups - Eliminate test mask in preference for SimulatorActions"
  },
  {
    "id": "178",
    "type": "pullRequest",
    "title": "No-JIRA: Update owners"
  },
  {
    "id": "177",
    "type": "pullRequest",
    "title": "STOR-2252: Bump all deps",
    "body": "Bump all deps for 4.19 Notes: - added implementation of new methods - updated function parameters cc @openshift/storage"
  },
  {
    "id": "179",
    "type": "pullRequest",
    "title": "NO-JIRA: NO-JIRA: Remove bertinatto from OWNERS"
  },
  {
    "id": "174",
    "type": "pullRequest",
    "title": "Updating ose-vsphere-problem-detector-container image to be consistent with ART for 4.19",
    "body": "Updating ose-vsphere-problem-detector-container image to be consistent with ART for 4.19 __TLDR__: Product builds by ART can be configured for different base and builder images than corresponding CI builds. This automated PR requests a change to CI configuration to align with ART's configuration; please take steps to merge it quickly or contact ART to coordinate changes. The configuration in the following ART component metadata is driving this alignment request: vsphere-problem-detector.yml( __Detail__: This repository is out of sync with the downstream product builds for this component. The CI configuration for at least one image differs from ART's expected product configuration. This should be addressed to ensure that the component's CI testing accurate reflects what customers will experience. Most of these PRs are opened as an ART-driven proposal to migrate base image or builder(s) to a different version, usually prior to GA. The intent is to effect changes in both configurations simultaneously without breaking either CI or ART builds, so usually ART builds are configured to consider CI as canonical and attempt to match CI config until the PR merges to align both. ART may also configure changes in GA releases with CI remaining canonical for a brief grace period to enable CI to succeed and the alignment PR to merge. In either case, ART configuration will be made canonical at some point (typically at branch-cut before GA or release dev-cut after GA), so it is important to align CI configuration as soon as possible. PRs are also triggered when CI configuration changes without ART coordination, for instance to change the number of builder images or to use a different golang version. These changes should be coordinated with ART; whether ART configuration is canonical or not, preferably it would be updated first to enable the changes to occur simultaneously in both CI and ART at the same time. This also gives ART a chance to validate the intended changes first. For instance, ART compiles most components with the Golang version being used by the control plane for a given OpenShift release. Exceptions to this convention (i.e. you believe your component must be compiled with a Golang version independent from the control plane) must be granted by the OpenShift staff engineers and communicated to the ART team. __Roles & Responsibilities__: - Component owners are responsible for ensuring these alignment PRs merge with passing tests OR that necessary metadata changes are reported to the ART team: `@release-artists` in `forum-ocp-art` on Slack. If necessary, the changes required by this pull request can be introduced with a separate PR opened by the component team. Once the repository is aligned, this PR will be closed automatically. - In particular, it could be that a job like `verify-deps` is complaining. In that case, please open a new PR with the dependency issues addressed (and base images bumped). ART-9595( for reference. - Patch-manager or those with sufficient privileges within this repository may add any required labels to ensure the PR merges once tests are passing. In cases where ART config is canonical, downstream builds are already being built with these changes, and merging this PR only improves the fidelity of our CI. In cases where ART config is not canonical, this provides a grace period for the component team to align their CI with ART's configuration before it becomes canonical in product builds. ART has been configured to reconcile your CI build root image (see In order for your upstream .ci-operator.yaml configuration to be honored, you must set the following in your openshift/release ci-operator configuration file: ``` build_root: from_repository: true ``` __Change behavior of future PRs__: In case you just want to follow the base images that ART suggests, you can configure additional labels to be set up automatically. This means that such a PR would merge without human intervention (and awareness!) in the future. To do so, open a PR to set the `auto_label` attribute in the image configuration. Example( You can set a commit prefix, like `UPSTREAM: carry: `. An example( If you have any questions about this pull request, please reach out to `@release-artists` in the `forum-ocp-art` coreos slack channel."
  }
]